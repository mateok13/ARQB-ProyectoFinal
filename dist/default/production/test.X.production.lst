

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sun Dec 13 21:28:32 2020

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=3
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1
    45                           	psect	text33,global,reloc=2,class=CODE,delta=1
    46                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    47                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    48                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    49                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    50  0000                     
    51                           ; Version 2.20
    52                           ; Generated 12/02/2020 GMT
    53                           ; 
    54                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    55                           ; All rights reserved.
    56                           ; 
    57                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    58                           ; 
    59                           ; Redistribution and use in source and binary forms, with or without modification, are
    60                           ; permitted provided that the following conditions are met:
    61                           ; 
    62                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    63                           ;        conditions and the following disclaimer.
    64                           ; 
    65                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    66                           ;        of conditions and the following disclaimer in the documentation and/or other
    67                           ;        materials provided with the distribution.
    68                           ; 
    69                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    70                           ;        software without specific prior written permission.
    71                           ; 
    72                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    73                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    74                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    75                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    76                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    77                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    78                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    79                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    80                           ; 
    81                           ; 
    82                           ; Code-generator required, PIC18F4550 Definitions
    83                           ; 
    84                           ; SFR Addresses
    85  0000                     
    86                           	psect	idataBANK0
    87  002782                     __pidataBANK0:
    88                           	callstack 0
    89                           
    90                           ;initializer for _buffer_TX2
    91  002782  74                 	db	116
    92  002783  65                 	db	101
    93  002784  6D                 	db	109
    94  002785  70                 	db	112
    95  002786  65                 	db	101
    96  002787  72                 	db	114
    97  002788  61                 	db	97
    98  002789  74                 	db	116
    99  00278A  75                 	db	117
   100  00278B  72                 	db	114
   101  00278C  61                 	db	97
   102  00278D  20                 	db	32
   103  00278E  72                 	db	114
   104  00278F  65                 	db	101
   105  002790  67                 	db	103
   106  002791  75                 	db	117
   107  002792  6C                 	db	108
   108  002793  61                 	db	97
   109  002794  72                 	db	114
   110  002795  0D                 	db	13
   111  002796  00                 	db	0
   112                           
   113                           ;initializer for _buffer_TX
   114  002797  74                 	db	116
   115  002798  65                 	db	101
   116  002799  6D                 	db	109
   117  00279A  70                 	db	112
   118  00279B  65                 	db	101
   119  00279C  72                 	db	114
   120  00279D  61                 	db	97
   121  00279E  74                 	db	116
   122  00279F  75                 	db	117
   123  0027A0  72                 	db	114
   124  0027A1  61                 	db	97
   125  0027A2  20                 	db	32
   126  0027A3  61                 	db	97
   127  0027A4  6C                 	db	108
   128  0027A5  74                 	db	116
   129  0027A6  61                 	db	97
   130  0027A7  0D                 	db	13
   131  0027A8  00                 	db	0
   132                           
   133                           ;initializer for _contrasenia
   134  0027A9  32                 	db	50
   135  0027AA  30                 	db	48
   136  0027AB  32                 	db	50
   137  0027AC  30                 	db	48
   138                           
   139                           ;initializer for _retardo
   140  0027AD  0064               	dw	100
   141                           
   142                           ;initializer for _estado_dia
   143  0027AF  4E                 	db	78
   144                           
   145                           	psect	smallconst
   146  000800                     __psmallconst:
   147                           	callstack 0
   148  000800  00                 	db	0
   149  000801                     Keypad_Key_Press@F3774:
   150                           	callstack 0
   151  000801  37                 	db	55
   152  000802  38                 	db	56
   153  000803  39                 	db	57
   154  000804  2F                 	db	47
   155  000805  34                 	db	52
   156  000806  35                 	db	53
   157  000807  36                 	db	54
   158  000808  2A                 	db	42
   159  000809  31                 	db	49
   160  00080A  32                 	db	50
   161  00080B  33                 	db	51
   162  00080C  2D                 	db	45
   163  00080D  0D                 	db	13
   164  00080E  30                 	db	48
   165  00080F  3D                 	db	61
   166  000810  2B                 	db	43
   167  000811  00                 	db	0
   168  000812                     __end_ofKeypad_Key_Press@F3774:
   169                           	callstack 0
   170  0000                     _TRISB	set	3987
   171  0000                     _TXREG	set	4013
   172  0000                     _SPBRG	set	4015
   173  0000                     _RCSTAbits	set	4011
   174  0000                     _BAUDCONbits	set	4024
   175  0000                     _TXSTAbits	set	4012
   176  0000                     _TRISCbits	set	3988
   177  0000                     _PORTAbits	set	3968
   178  0000                     _TRISA	set	3986
   179  0000                     _PORTD	set	3971
   180  0000                     _PORTDbits	set	3971
   181  0000                     _LATD	set	3980
   182  0000                     _TRISD	set	3989
   183  0000                     _ADRESH	set	4036
   184  0000                     _ADCON2	set	4032
   185  0000                     _ADCON0	set	4034
   186  0000                     _ADCON1	set	4033
   187  0000                     _PORTBbits	set	3969
   188  0000                     _GO_DONE	set	32273
   189  0000                     _ADON	set	32272
   190  000812                     STR_1:
   191  000812  20                 	db	32
   192  000813  20                 	db	32
   193  000814  20                 	db	32
   194  000815  20                 	db	32
   195  000816  20                 	db	32
   196  000817  20                 	db	32
   197  000818  20                 	db	32
   198  000819  20                 	db	32
   199  00081A  20                 	db	32
   200  00081B  20                 	db	32
   201  00081C  20                 	db	32
   202  00081D  20                 	db	32
   203  00081E  20                 	db	32
   204  00081F  20                 	db	32
   205  000820  20                 	db	32
   206  000821  20                 	db	32
   207  000822  20                 	db	32
   208  000823  20                 	db	32
   209  000824  20                 	db	32
   210  000825  20                 	db	32
   211  000826  00                 	db	0
   212  000827                     STR_6:
   213  000827  63                 	db	99	;'c'
   214  000828  6F                 	db	111	;'o'
   215  000829  6E                 	db	110	;'n'
   216  00082A  74                 	db	116	;'t'
   217  00082B  72                 	db	114	;'r'
   218  00082C  61                 	db	97	;'a'
   219  00082D  73                 	db	115	;'s'
   220  00082E  65                 	db	101	;'e'
   221  00082F  F1                 	db	-15
   222  000830  61                 	db	97	;'a'
   223  000831  20                 	db	32
   224  000832  69                 	db	105	;'i'
   225  000833  6E                 	db	110	;'n'
   226  000834  76                 	db	118	;'v'
   227  000835  61                 	db	97	;'a'
   228  000836  6C                 	db	108	;'l'
   229  000837  69                 	db	105	;'i'
   230  000838  64                 	db	100	;'d'
   231  000839  61                 	db	97	;'a'
   232  00083A  00                 	db	0
   233  00083B                     STR_3:
   234  00083B  63                 	db	99	;'c'
   235  00083C  6F                 	db	111	;'o'
   236  00083D  6E                 	db	110	;'n'
   237  00083E  74                 	db	116	;'t'
   238  00083F  72                 	db	114	;'r'
   239  000840  61                 	db	97	;'a'
   240  000841  73                 	db	115	;'s'
   241  000842  65                 	db	101	;'e'
   242  000843  F1                 	db	-15
   243  000844  61                 	db	97	;'a'
   244  000845  20                 	db	32
   245  000846  63                 	db	99	;'c'
   246  000847  6F                 	db	111	;'o'
   247  000848  72                 	db	114	;'r'
   248  000849  72                 	db	114	;'r'
   249  00084A  65                 	db	101	;'e'
   250  00084B  63                 	db	99	;'c'
   251  00084C  74                 	db	116	;'t'
   252  00084D  61                 	db	97	;'a'
   253  00084E  00                 	db	0
   254  00084F                     STR_4:
   255  00084F  54                 	db	84	;'T'
   256  000850  45                 	db	69	;'E'
   257  000851  4D                 	db	77	;'M'
   258  000852  50                 	db	80	;'P'
   259  000853  45                 	db	69	;'E'
   260  000854  52                 	db	82	;'R'
   261  000855  41                 	db	65	;'A'
   262  000856  54                 	db	84	;'T'
   263  000857  55                 	db	85	;'U'
   264  000858  52                 	db	82	;'R'
   265  000859  41                 	db	65	;'A'
   266  00085A  00                 	db	0
   267  00085B                     STR_7:
   268  00085B  54                 	db	84	;'T'
   269  00085C  45                 	db	69	;'E'
   270  00085D  43                 	db	67	;'C'
   271  00085E  4C                 	db	76	;'L'
   272  00085F  41                 	db	65	;'A'
   273  000860  44                 	db	68	;'D'
   274  000861  4F                 	db	79	;'O'
   275  000862  00                 	db	0
   276  000863                     STR_5:
   277  000863  25                 	db	37
   278  000864  64                 	db	100	;'d'
   279  000865  25                 	db	37
   280  000866  63                 	db	99	;'c'
   281  000867  43                 	db	67	;'C'
   282  000868  00                 	db	0
   283  000869  00                 	db	0	; dummy byte at the end
   284  0000                     
   285                           ; #config settings
   286                           
   287                           	psect	cinit
   288  002716                     __pcinit:
   289                           	callstack 0
   290  002716                     start_initialization:
   291                           	callstack 0
   292  002716                     __initialization:
   293                           	callstack 0
   294                           
   295                           ; Initialize objects allocated to BANK0 (46 bytes)
   296                           ; load TBLPTR registers with __pidataBANK0
   297  002716  0E82               	movlw	low __pidataBANK0
   298  002718  6EF6               	movwf	tblptrl,c
   299  00271A  0E27               	movlw	high __pidataBANK0
   300  00271C  6EF7               	movwf	tblptrh,c
   301  00271E  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   302  002720  6EF8               	movwf	tblptru,c
   303  002722  EE00  F0C0         	lfsr	0,__pdataBANK0
   304  002726  EE10 F02E          	lfsr	1,46
   305  00272A                     copy_data0:
   306  00272A  0009               	tblrd		*+
   307  00272C  CFF5 FFEE          	movff	tablat,postinc0
   308  002730  50E5               	movf	postdec1,w,c
   309  002732  50E1               	movf	fsr1l,w,c
   310  002734  E1FA               	bnz	copy_data0
   311                           
   312                           ; Clear objects allocated to BANK0 (48 bytes)
   313  002736  EE00  F060         	lfsr	0,__pbssBANK0
   314  00273A  0E30               	movlw	48
   315  00273C                     clear_0:
   316  00273C  6AEE               	clrf	postinc0,c
   317  00273E  06E8               	decf	wreg,f,c
   318  002740  E1FD               	bnz	clear_0
   319  002742                     end_of_initialization:
   320                           	callstack 0
   321  002742                     __end_of__initialization:
   322                           	callstack 0
   323  002742  0E00               	movlw	low (__Lmediumconst shr (0+16))
   324  002744  6EF8               	movwf	tblptru,c
   325  002746  0100               	movlb	0
   326  002748  EF18  F013         	goto	_main	;jump to C main() function
   327                           
   328                           	psect	bssBANK0
   329  000060                     __pbssBANK0:
   330                           	callstack 0
   331  000060                     _nout:
   332                           	callstack 0
   333  000060                     	ds	2
   334  000062                     _width:
   335                           	callstack 0
   336  000062                     	ds	2
   337  000064                     _prec:
   338                           	callstack 0
   339  000064                     	ds	2
   340  000066                     _flags:
   341                           	callstack 0
   342  000066                     	ds	2
   343  000068                     _contador:
   344                           	callstack 0
   345  000068                     	ds	2
   346  00006A                     _estado_teclado:
   347                           	callstack 0
   348  00006A                     	ds	1
   349  00006B                     _tecla:
   350                           	callstack 0
   351  00006B                     	ds	1
   352  00006C                     _dbuf:
   353                           	callstack 0
   354  00006C                     	ds	32
   355  00008C                     _aux_contrasenia:
   356                           	callstack 0
   357  00008C                     	ds	4
   358                           
   359                           	psect	dataBANK0
   360  0000C0                     __pdataBANK0:
   361                           	callstack 0
   362  0000C0                     _buffer_TX2:
   363                           	callstack 0
   364  0000C0                     	ds	21
   365  0000D5                     _buffer_TX:
   366                           	callstack 0
   367  0000D5                     	ds	18
   368  0000E7                     _contrasenia:
   369                           	callstack 0
   370  0000E7                     	ds	4
   371  0000EB                     _retardo:
   372                           	callstack 0
   373  0000EB                     	ds	2
   374  0000ED                     _estado_dia:
   375                           	callstack 0
   376  0000ED                     	ds	1
   377                           
   378                           	psect	cstackBANK0
   379  000090                     __pcstackBANK0:
   380                           	callstack 0
   381  000090                     	ds	2
   382  000092                     sprintf@ap:
   383                           	callstack 0
   384                           
   385                           ; 2 bytes @ 0x2
   386  000092                     	ds	2
   387  000094                     sprintf@f:
   388                           	callstack 0
   389                           
   390                           ; 6 bytes @ 0x4
   391  000094                     	ds	6
   392  00009A                     ??_activar_seguridad:
   393                           
   394                           ; 1 bytes @ 0xA
   395  00009A                     	ds	4
   396  00009E                     activar_seguridad@Temperatura:
   397                           	callstack 0
   398                           
   399                           ; 10 bytes @ 0xE
   400  00009E                     	ds	10
   401  0000A8                     _activar_seguridad$1345:
   402                           	callstack 0
   403                           
   404                           ; 4 bytes @ 0x18
   405  0000A8                     	ds	4
   406  0000AC                     _activar_seguridad$468:
   407                           	callstack 0
   408                           
   409                           ; 2 bytes @ 0x1C
   410  0000AC                     	ds	2
   411  0000AE                     _activar_seguridad$472:
   412                           	callstack 0
   413                           
   414                           ; 2 bytes @ 0x1E
   415  0000AE                     	ds	2
   416  0000B0                     _activar_seguridad$473:
   417                           	callstack 0
   418                           
   419                           ; 2 bytes @ 0x20
   420  0000B0                     	ds	2
   421  0000B2                     _activar_seguridad$474:
   422                           	callstack 0
   423                           
   424                           ; 2 bytes @ 0x22
   425  0000B2                     	ds	2
   426  0000B4                     activar_seguridad@temperatura:
   427                           	callstack 0
   428                           
   429                           ; 4 bytes @ 0x24
   430  0000B4                     	ds	4
   431  0000B8                     activar_seguridad@i_514:
   432                           	callstack 0
   433                           
   434                           ; 2 bytes @ 0x28
   435  0000B8                     	ds	2
   436  0000BA                     activar_seguridad@i_515:
   437                           	callstack 0
   438                           
   439                           ; 2 bytes @ 0x2A
   440  0000BA                     	ds	2
   441  0000BC                     activar_seguridad@i:
   442                           	callstack 0
   443                           
   444                           ; 2 bytes @ 0x2C
   445  0000BC                     	ds	2
   446  0000BE                     securityHouse@valor:
   447                           	callstack 0
   448                           
   449                           ; 2 bytes @ 0x2E
   450  0000BE                     	ds	2
   451                           
   452                           	psect	cstackCOMRAM
   453  000001                     __pcstackCOMRAM:
   454                           	callstack 0
   455  000001                     ?_isdigit:
   456                           	callstack 0
   457  000001                     ?_isspace:
   458                           	callstack 0
   459  000001                     ?_strlen:
   460                           	callstack 0
   461  000001                     ?_getCad:
   462                           	callstack 0
   463  000001                     ?___wmul:
   464                           	callstack 0
   465  000001                     ?___fltol:
   466                           	callstack 0
   467  000001                     ?___aodiv:
   468                           	callstack 0
   469  000001                     ?___aomod:
   470                           	callstack 0
   471  000001                     Lcd_Port@a:
   472                           	callstack 0
   473  000001                     ___wmul@multiplier:
   474                           	callstack 0
   475  000001                     isdigit@c:
   476                           	callstack 0
   477  000001                     isspace@c:
   478                           	callstack 0
   479  000001                     fputc@c:
   480                           	callstack 0
   481  000001                     strlen@s:
   482                           	callstack 0
   483  000001                     ___flge@ff1:
   484                           	callstack 0
   485  000001                     ___fltol@f1:
   486                           	callstack 0
   487  000001                     ___aodiv@dividend:
   488                           	callstack 0
   489  000001                     ___aomod@dividend:
   490                           	callstack 0
   491  000001                     Keypad_Key_Press@keypad_deco:
   492                           	callstack 0
   493                           
   494                           ; 17 bytes @ 0x0
   495  000001                     	ds	1
   496  000002                     ??_Lcd_Cmd:
   497  000002                     Lcd_Write_Char@temp:
   498                           	callstack 0
   499                           
   500                           ; 1 bytes @ 0x1
   501  000002                     	ds	1
   502  000003                     ??_isdigit:
   503  000003                     ??_isspace:
   504  000003                     ??_getCad:
   505  000003                     Lcd_Cmd@a:
   506                           	callstack 0
   507  000003                     Lcd_Write_Char@y:
   508                           	callstack 0
   509  000003                     ___wmul@multiplicand:
   510                           	callstack 0
   511  000003                     fputc@fp:
   512                           	callstack 0
   513  000003                     strlen@a:
   514                           	callstack 0
   515                           
   516                           ; 2 bytes @ 0x2
   517  000003                     	ds	1
   518  000004                     ??_Lcd_Init:
   519  000004                     Lcd_Set_Cursor@b:
   520                           	callstack 0
   521  000004                     Lcd_Write_Char@a:
   522                           	callstack 0
   523                           
   524                           ; 1 bytes @ 0x3
   525  000004                     	ds	1
   526  000005                     ??_fputc:
   527  000005                     ??___fltol:
   528  000005                     Lcd_Set_Cursor@a:
   529                           	callstack 0
   530  000005                     getCad@canal:
   531                           	callstack 0
   532  000005                     Lcd_Write_String@a:
   533                           	callstack 0
   534  000005                     ___wmul@product:
   535                           	callstack 0
   536  000005                     ___flge@ff2:
   537                           	callstack 0
   538                           
   539                           ; 4 bytes @ 0x4
   540  000005                     	ds	1
   541  000006                     ?___xxtofl:
   542                           	callstack 0
   543  000006                     Lcd_Set_Cursor@z:
   544                           	callstack 0
   545  000006                     ___xxtofl@val:
   546                           	callstack 0
   547                           
   548                           ; 4 bytes @ 0x5
   549  000006                     	ds	1
   550  000007                     ??_Lcd_Write_String:
   551  000007                     Lcd_Set_Cursor@y:
   552                           	callstack 0
   553  000007                     _isspace$994:
   554                           	callstack 0
   555                           
   556                           ; 1 bytes @ 0x6
   557  000007                     	ds	1
   558  000008                     ?_atoi:
   559                           	callstack 0
   560  000008                     Lcd_Set_Cursor@temp:
   561                           	callstack 0
   562  000008                     atoi@s:
   563                           	callstack 0
   564                           
   565                           ; 2 bytes @ 0x7
   566  000008                     	ds	1
   567  000009                     ??___flge:
   568  000009                     ___fltol@sign1:
   569                           	callstack 0
   570  000009                     Lcd_Write_String@i:
   571                           	callstack 0
   572  000009                     ___aodiv@divisor:
   573                           	callstack 0
   574  000009                     ___aomod@divisor:
   575                           	callstack 0
   576                           
   577                           ; 8 bytes @ 0x8
   578  000009                     	ds	1
   579  00000A                     ??_atoi:
   580  00000A                     ??___xxtofl:
   581  00000A                     ?_ctoa:
   582                           	callstack 0
   583  00000A                     ___fltol@exp1:
   584                           	callstack 0
   585  00000A                     ctoa@fp:
   586                           	callstack 0
   587  00000A                     fputs@s:
   588                           	callstack 0
   589                           
   590                           ; 2 bytes @ 0x9
   591  00000A                     	ds	2
   592  00000C                     ctoa@c:
   593                           	callstack 0
   594  00000C                     fputs@fp:
   595                           	callstack 0
   596                           
   597                           ; 2 bytes @ 0xB
   598  00000C                     	ds	1
   599  00000D                     ??_ctoa:
   600                           
   601                           ; 1 bytes @ 0xC
   602  00000D                     	ds	1
   603  00000E                     ___xxtofl@sign:
   604                           	callstack 0
   605  00000E                     fputs@c:
   606                           	callstack 0
   607  00000E                     atoi@neg:
   608                           	callstack 0
   609  00000E                     ctoa@l:
   610                           	callstack 0
   611                           
   612                           ; 2 bytes @ 0xD
   613  00000E                     	ds	1
   614  00000F                     ___xxtofl@exp:
   615                           	callstack 0
   616  00000F                     fputs@i:
   617                           	callstack 0
   618                           
   619                           ; 2 bytes @ 0xE
   620  00000F                     	ds	1
   621  000010                     _atoi$976:
   622                           	callstack 0
   623  000010                     ctoa@w:
   624                           	callstack 0
   625  000010                     ___xxtofl@arg:
   626                           	callstack 0
   627                           
   628                           ; 4 bytes @ 0xF
   629  000010                     	ds	1
   630  000011                     ?_pad:
   631                           	callstack 0
   632  000011                     ___aodiv@counter:
   633                           	callstack 0
   634  000011                     ___aomod@counter:
   635                           	callstack 0
   636  000011                     pad@fp:
   637                           	callstack 0
   638                           
   639                           ; 2 bytes @ 0x10
   640  000011                     	ds	1
   641  000012                     ___aodiv@sign:
   642                           	callstack 0
   643  000012                     ___aomod@sign:
   644                           	callstack 0
   645  000012                     Keypad_Key_Press@tec:
   646                           	callstack 0
   647  000012                     _atoi$978:
   648                           	callstack 0
   649                           
   650                           ; 2 bytes @ 0x11
   651  000012                     	ds	1
   652  000013                     ?_abs:
   653                           	callstack 0
   654  000013                     pad@buf:
   655                           	callstack 0
   656  000013                     abs@a:
   657                           	callstack 0
   658  000013                     ___aodiv@quotient:
   659                           	callstack 0
   660                           
   661                           ; 8 bytes @ 0x12
   662  000013                     	ds	1
   663  000014                     ?___flmul:
   664                           	callstack 0
   665  000014                     _atoi$977:
   666                           	callstack 0
   667  000014                     Keypad_Key_Press@fila:
   668                           	callstack 0
   669  000014                     ___flmul@b:
   670                           	callstack 0
   671                           
   672                           ; 4 bytes @ 0x13
   673  000014                     	ds	1
   674  000015                     ??_abs:
   675  000015                     atoi@n:
   676                           	callstack 0
   677  000015                     pad@p:
   678                           	callstack 0
   679                           
   680                           ; 2 bytes @ 0x14
   681  000015                     	ds	2
   682  000017                     ??_pad:
   683                           
   684                           ; 1 bytes @ 0x16
   685  000017                     	ds	1
   686  000018                     pad@i:
   687                           	callstack 0
   688  000018                     ___flmul@a:
   689                           	callstack 0
   690                           
   691                           ; 4 bytes @ 0x17
   692  000018                     	ds	2
   693  00001A                     pad@w:
   694                           	callstack 0
   695                           
   696                           ; 2 bytes @ 0x19
   697  00001A                     	ds	2
   698  00001C                     ??___flmul:
   699  00001C                     ?_dtoa:
   700                           	callstack 0
   701  00001C                     dtoa@fp:
   702                           	callstack 0
   703                           
   704                           ; 2 bytes @ 0x1B
   705  00001C                     	ds	2
   706  00001E                     dtoa@d:
   707                           	callstack 0
   708                           
   709                           ; 8 bytes @ 0x1D
   710  00001E                     	ds	2
   711  000020                     ___flmul@sign:
   712                           	callstack 0
   713                           
   714                           ; 1 bytes @ 0x1F
   715  000020                     	ds	1
   716  000021                     ___flmul@grs:
   717                           	callstack 0
   718                           
   719                           ; 4 bytes @ 0x20
   720  000021                     	ds	4
   721  000025                     ___flmul@aexp:
   722                           	callstack 0
   723                           
   724                           ; 1 bytes @ 0x24
   725  000025                     	ds	1
   726  000026                     ??_dtoa:
   727  000026                     ___flmul@bexp:
   728                           	callstack 0
   729                           
   730                           ; 1 bytes @ 0x25
   731  000026                     	ds	1
   732  000027                     ___flmul@prod:
   733                           	callstack 0
   734                           
   735                           ; 4 bytes @ 0x26
   736  000027                     	ds	4
   737  00002B                     ___flmul@temp:
   738                           	callstack 0
   739                           
   740                           ; 2 bytes @ 0x2A
   741  00002B                     	ds	3
   742  00002E                     _dtoa$1076:
   743                           	callstack 0
   744                           
   745                           ; 2 bytes @ 0x2D
   746  00002E                     	ds	2
   747  000030                     dtoa@p:
   748                           	callstack 0
   749                           
   750                           ; 2 bytes @ 0x2F
   751  000030                     	ds	2
   752  000032                     dtoa@w:
   753                           	callstack 0
   754                           
   755                           ; 2 bytes @ 0x31
   756  000032                     	ds	2
   757  000034                     dtoa@s:
   758                           	callstack 0
   759                           
   760                           ; 2 bytes @ 0x33
   761  000034                     	ds	2
   762  000036                     dtoa@n:
   763                           	callstack 0
   764                           
   765                           ; 8 bytes @ 0x35
   766  000036                     	ds	8
   767  00003E                     dtoa@i:
   768                           	callstack 0
   769                           
   770                           ; 2 bytes @ 0x3D
   771  00003E                     	ds	2
   772  000040                     ?_vfpfcnvrt:
   773                           	callstack 0
   774  000040                     vfpfcnvrt@fp:
   775                           	callstack 0
   776                           
   777                           ; 2 bytes @ 0x3F
   778  000040                     	ds	2
   779  000042                     vfpfcnvrt@fmt:
   780                           	callstack 0
   781                           
   782                           ; 2 bytes @ 0x41
   783  000042                     	ds	2
   784  000044                     vfpfcnvrt@ap:
   785                           	callstack 0
   786                           
   787                           ; 2 bytes @ 0x43
   788  000044                     	ds	2
   789  000046                     ??_vfpfcnvrt:
   790                           
   791                           ; 1 bytes @ 0x45
   792  000046                     	ds	2
   793  000048                     vfpfcnvrt@ll:
   794                           	callstack 0
   795                           
   796                           ; 8 bytes @ 0x47
   797  000048                     	ds	8
   798  000050                     vfpfcnvrt@c:
   799                           	callstack 0
   800                           
   801                           ; 1 bytes @ 0x4F
   802  000050                     	ds	1
   803  000051                     ?_vfprintf:
   804                           	callstack 0
   805  000051                     vfprintf@fp:
   806                           	callstack 0
   807                           
   808                           ; 2 bytes @ 0x50
   809  000051                     	ds	2
   810  000053                     vfprintf@fmt:
   811                           	callstack 0
   812                           
   813                           ; 2 bytes @ 0x52
   814  000053                     	ds	2
   815  000055                     vfprintf@ap:
   816                           	callstack 0
   817                           
   818                           ; 2 bytes @ 0x54
   819  000055                     	ds	2
   820  000057                     vfprintf@cfmt:
   821                           	callstack 0
   822                           
   823                           ; 2 bytes @ 0x56
   824  000057                     	ds	2
   825  000059                     ?_sprintf:
   826                           	callstack 0
   827  000059                     sprintf@s:
   828                           	callstack 0
   829                           
   830                           ; 2 bytes @ 0x58
   831  000059                     	ds	2
   832  00005B                     sprintf@fmt:
   833                           	callstack 0
   834                           
   835                           ; 2 bytes @ 0x5A
   836  00005B                     	ds	4
   837  00005F                     
   838                           ; 1 bytes @ 0x5E
   839 ;;
   840 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   841 ;;
   842 ;; *************** function _main *****************
   843 ;; Defined at:
   844 ;;		line 240 in file "newmain.c"
   845 ;; Parameters:    Size  Location     Type
   846 ;;		None
   847 ;; Auto vars:     Size  Location     Type
   848 ;;		None
   849 ;; Return value:  Size  Location     Type
   850 ;;                  1    wreg      void 
   851 ;; Registers used:
   852 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   853 ;; Tracked objects:
   854 ;;		On entry : 0/0
   855 ;;		On exit  : 0/0
   856 ;;		Unchanged: 0/0
   857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   858 ;;      Params:         0       0       0       0       0       0       0       0       0
   859 ;;      Locals:         0       0       0       0       0       0       0       0       0
   860 ;;      Temps:          0       0       0       0       0       0       0       0       0
   861 ;;      Totals:         0       0       0       0       0       0       0       0       0
   862 ;;Total ram usage:        0 bytes
   863 ;; Hardware stack levels required when called:   10
   864 ;; This function calls:
   865 ;;		_Keypad_Init
   866 ;;		_Lcd_Clear
   867 ;;		_Lcd_Init
   868 ;;		_Lcd_Set_Cursor
   869 ;;		_Lcd_Write_String
   870 ;;		_securityHouse
   871 ;; This function is called by:
   872 ;;		Startup code after reset
   873 ;; This function uses a non-reentrant model
   874 ;;
   875                           
   876                           	psect	text0
   877  002630                     __ptext0:
   878                           	callstack 0
   879  002630                     _main:
   880                           	callstack 21
   881  002630                     
   882                           ;newmain.c: 241:     TRISB = 0;
   883  002630  0E00               	movlw	0
   884  002632  6E93               	movwf	147,c	;volatile
   885                           
   886                           ;newmain.c: 242:     ADCON1 = 0b00001111;
   887  002634  0E0F               	movlw	15
   888  002636  6EC1               	movwf	193,c	;volatile
   889  002638                     
   890                           ;newmain.c: 243:     Keypad_Init();
   891  002638  EC02  F014         	call	_Keypad_Init	;wreg free
   892  00263C                     
   893                           ;newmain.c: 244:     Lcd_Init();
   894  00263C  EC98  F011         	call	_Lcd_Init	;wreg free
   895  002640                     
   896                           ;newmain.c: 245:     Lcd_Clear();
   897  002640  ECFB  F013         	call	_Lcd_Clear	;wreg free
   898  002644                     
   899                           ;newmain.c: 246:     Lcd_Set_Cursor(1, 6);
   900  002644  0E06               	movlw	6
   901  002646  6E04               	movwf	Lcd_Set_Cursor@b^0,c
   902  002648  0E01               	movlw	1
   903  00264A  ECD0  F011         	call	_Lcd_Set_Cursor
   904  00264E                     
   905                           ;newmain.c: 247:     Lcd_Write_String("TECLADO");
   906  00264E  0E5B               	movlw	low STR_7
   907  002650  6E05               	movwf	Lcd_Write_String@a^0,c
   908  002652  0E08               	movlw	high STR_7
   909  002654  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
   910  002656  EC59  F011         	call	_Lcd_Write_String	;wreg free
   911  00265A                     l3152:
   912                           
   913                           ;newmain.c: 249:         securityHouse(retardo);
   914  00265A  C0EB  F0BE         	movff	_retardo,securityHouse@valor
   915  00265E  C0EC  F0BF         	movff	_retardo+1,securityHouse@valor+1
   916  002662  EC37  F013         	call	_securityHouse	;wreg free
   917  002666  EF2D  F013         	goto	l3152
   918  00266A  EF00  F000         	goto	start
   919  00266E                     __end_of_main:
   920                           	callstack 0
   921                           
   922 ;; *************** function _securityHouse *****************
   923 ;; Defined at:
   924 ;;		line 232 in file "newmain.c"
   925 ;; Parameters:    Size  Location     Type
   926 ;;  valor           2   46[BANK0 ] int 
   927 ;; Auto vars:     Size  Location     Type
   928 ;;		None
   929 ;; Return value:  Size  Location     Type
   930 ;;                  1    wreg      void 
   931 ;; Registers used:
   932 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   933 ;; Tracked objects:
   934 ;;		On entry : 0/0
   935 ;;		On exit  : 0/0
   936 ;;		Unchanged: 0/0
   937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   938 ;;      Params:         0       2       0       0       0       0       0       0       0
   939 ;;      Locals:         0       0       0       0       0       0       0       0       0
   940 ;;      Temps:          0       0       0       0       0       0       0       0       0
   941 ;;      Totals:         0       2       0       0       0       0       0       0       0
   942 ;;Total ram usage:        2 bytes
   943 ;; Hardware stack levels used:    1
   944 ;; Hardware stack levels required when called:    9
   945 ;; This function calls:
   946 ;;		_activar_seguridad
   947 ;; This function is called by:
   948 ;;		_main
   949 ;; This function uses a non-reentrant model
   950 ;;
   951                           
   952                           	psect	text1
   953  00266E                     __ptext1:
   954                           	callstack 0
   955  00266E                     _securityHouse:
   956                           	callstack 21
   957  00266E                     
   958                           ;newmain.c: 233:     while (valor > 0) {
   959  00266E  EF44  F013         	goto	l3134
   960  002672                     l3128:
   961                           
   962                           ; BSR set to: 0
   963                           ;newmain.c: 234:         _delay((unsigned long)((700)*(8000000/4000000.0)));
   964  002672  0EC8               	movlw	200
   965  002674                     u2977:
   966  002674  D000               	nop2	
   967  002676  D000               	nop2	
   968  002678  2EE8               	decfsz	wreg,f,c
   969  00267A  D7FC               	bra	u2977
   970  00267C                     
   971                           ;newmain.c: 235:         activar_seguridad();
   972  00267C  EC35  F004         	call	_activar_seguridad	;wreg free
   973  002680                     
   974                           ;newmain.c: 236:         valor--;
   975  002680  0100               	movlb	0	; () banked
   976  002682  07BE               	decf	securityHouse@valor& (0+255),f,b
   977  002684  A0D8               	btfss	status,0,c
   978  002686  07BF               	decf	(securityHouse@valor+1)& (0+255),f,b
   979  002688                     l3134:
   980                           
   981                           ;newmain.c: 233:     while (valor > 0) {
   982  002688  0100               	movlb	0	; () banked
   983  00268A  BFBF               	btfsc	(securityHouse@valor+1)& (0+255),7,b
   984  00268C  EF52  F013         	goto	u2960
   985  002690  51BF               	movf	(securityHouse@valor+1)& (0+255),w,b
   986  002692  E106               	bnz	u2961
   987  002694  05BE               	decf	securityHouse@valor& (0+255),w,b
   988  002696  B0D8               	btfsc	status,0,c
   989  002698  EF50  F013         	goto	u2961
   990  00269C  EF52  F013         	goto	u2960
   991  0026A0                     u2961:
   992  0026A0  EF39  F013         	goto	l3128
   993  0026A4                     u2960:
   994  0026A4                     
   995                           ; BSR set to: 0
   996  0026A4  0012               	return		;funcret
   997  0026A6                     __end_of_securityHouse:
   998                           	callstack 0
   999                           
  1000 ;; *************** function _activar_seguridad *****************
  1001 ;; Defined at:
  1002 ;;		line 82 in file "newmain.c"
  1003 ;; Parameters:    Size  Location     Type
  1004 ;;		None
  1005 ;; Auto vars:     Size  Location     Type
  1006 ;;  i               2   42[BANK0 ] int 
  1007 ;;  i               2   40[BANK0 ] int 
  1008 ;;  Temperatura    10   14[BANK0 ] unsigned char [10]
  1009 ;;  temperatura     4   36[BANK0 ] float 
  1010 ;;  i               2   44[BANK0 ] int 
  1011 ;; Return value:  Size  Location     Type
  1012 ;;                  1    wreg      void 
  1013 ;; Registers used:
  1014 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1015 ;; Tracked objects:
  1016 ;;		On entry : 0/0
  1017 ;;		On exit  : 0/0
  1018 ;;		Unchanged: 0/0
  1019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1020 ;;      Params:         0       0       0       0       0       0       0       0       0
  1021 ;;      Locals:         0      32       0       0       0       0       0       0       0
  1022 ;;      Temps:          0       4       0       0       0       0       0       0       0
  1023 ;;      Totals:         0      36       0       0       0       0       0       0       0
  1024 ;;Total ram usage:       36 bytes
  1025 ;; Hardware stack levels used:    1
  1026 ;; Hardware stack levels required when called:    8
  1027 ;; This function calls:
  1028 ;;		_Keypad_Key_Press
  1029 ;;		_Lcd_Clear
  1030 ;;		_Lcd_Set_Cursor
  1031 ;;		_Lcd_Write_Char
  1032 ;;		_Lcd_Write_String
  1033 ;;		___flge
  1034 ;;		___flmul
  1035 ;;		___fltol
  1036 ;;		___xxtofl
  1037 ;;		_atoi
  1038 ;;		_getCad
  1039 ;;		_isdigit
  1040 ;;		_sprintf
  1041 ;; This function is called by:
  1042 ;;		_securityHouse
  1043 ;; This function uses a non-reentrant model
  1044 ;;
  1045                           
  1046                           	psect	text2
  1047  00086A                     __ptext2:
  1048                           	callstack 0
  1049  00086A                     _activar_seguridad:
  1050                           	callstack 21
  1051  00086A                     
  1052                           ;newmain.c: 83:     tecla = Keypad_Key_Press();
  1053  00086A  ECFE  F010         	call	_Keypad_Key_Press	;wreg free
  1054  00086E  0100               	movlb	0	; () banked
  1055  000870  6F6B               	movwf	_tecla& (0+255),b
  1056  000872                     
  1057                           ; BSR set to: 0
  1058                           ;newmain.c: 85:     TRISA = 0b00000001;
  1059  000872  0E01               	movlw	1
  1060  000874  6E92               	movwf	146,c	;volatile
  1061  000876                     
  1062                           ; BSR set to: 0
  1063                           ;newmain.c: 87:     PORTAbits.RA3 = 0;
  1064  000876  9680               	bcf	128,3,c	;volatile
  1065  000878                     
  1066                           ; BSR set to: 0
  1067                           ;newmain.c: 88:     PORTAbits.RA5 = 0;
  1068  000878  9A80               	bcf	128,5,c	;volatile
  1069  00087A                     
  1070                           ; BSR set to: 0
  1071                           ;newmain.c: 89:     PORTAbits.RA4 = 1;
  1072  00087A  8880               	bsf	128,4,c	;volatile
  1073                           
  1074                           ;newmain.c: 90:     switch (estado_teclado) {
  1075  00087C  EFF5  F006         	goto	l3090
  1076  000880                     l2884:
  1077                           
  1078                           ; BSR set to: 0
  1079                           ;newmain.c: 92:             if ((tecla != 0) && ((0 ? isdigit(tecla) : ((unsigned)(tecla
      +                          )-'0') < 10))) {
  1080  000880  516B               	movf	_tecla& (0+255),w,b
  1081  000882  B4D8               	btfsc	status,2,c
  1082  000884  EF46  F004         	goto	u2661
  1083  000888  EF48  F004         	goto	u2660
  1084  00088C                     u2661:
  1085  00088C  EF16  F007         	goto	l183
  1086  000890                     u2660:
  1087  000890                     
  1088                           ; BSR set to: 0
  1089  000890  0ED0               	movlw	208
  1090  000892  6F9A               	movwf	??_activar_seguridad& (0+255),b
  1091  000894  0EFF               	movlw	255
  1092  000896  6F9B               	movwf	(??_activar_seguridad+1)& (0+255),b
  1093  000898  516B               	movf	_tecla& (0+255),w,b
  1094  00089A  6F9C               	movwf	(??_activar_seguridad+2)& (0+255),b
  1095  00089C  6B9D               	clrf	(??_activar_seguridad+3)& (0+255),b
  1096  00089E  519A               	movf	??_activar_seguridad& (0+255),w,b
  1097  0008A0  279C               	addwf	(??_activar_seguridad+2)& (0+255),f,b
  1098  0008A2  519B               	movf	(??_activar_seguridad+1)& (0+255),w,b
  1099  0008A4  239D               	addwfc	(??_activar_seguridad+3)& (0+255),f,b
  1100  0008A6  519D               	movf	(??_activar_seguridad+3)& (0+255),w,b
  1101  0008A8  E10A               	bnz	u2670
  1102  0008AA  0E0A               	movlw	10
  1103  0008AC  5D9C               	subwf	(??_activar_seguridad+2)& (0+255),w,b
  1104  0008AE  A0D8               	btfss	status,0,c
  1105  0008B0  EF5C  F004         	goto	u2671
  1106  0008B4  EF5F  F004         	goto	u2670
  1107  0008B8                     u2671:
  1108  0008B8  0E01               	movlw	1
  1109  0008BA  EF60  F004         	goto	u2680
  1110  0008BE                     u2670:
  1111  0008BE  0E00               	movlw	0
  1112  0008C0                     u2680:
  1113  0008C0  6FAC               	movwf	_activar_seguridad$468& (0+255),b
  1114  0008C2  6BAD               	clrf	(_activar_seguridad$468+1)& (0+255),b
  1115  0008C4                     
  1116                           ; BSR set to: 0
  1117  0008C4  51AC               	movf	_activar_seguridad$468& (0+255),w,b
  1118  0008C6  11AD               	iorwf	(_activar_seguridad$468+1)& (0+255),w,b
  1119  0008C8  B4D8               	btfsc	status,2,c
  1120  0008CA  EF69  F004         	goto	u2691
  1121  0008CE  EF6B  F004         	goto	u2690
  1122  0008D2                     u2691:
  1123  0008D2  EF16  F007         	goto	l183
  1124  0008D6                     u2690:
  1125  0008D6                     
  1126                           ; BSR set to: 0
  1127                           ;newmain.c: 93:                 aux_contrasenia[0] = tecla;
  1128  0008D6  C06B  F08C         	movff	_tecla,_aux_contrasenia
  1129  0008DA                     
  1130                           ; BSR set to: 0
  1131                           ;newmain.c: 94:                 estado_teclado = n2;
  1132  0008DA  0E01               	movlw	1
  1133  0008DC  6F6A               	movwf	_estado_teclado& (0+255),b
  1134  0008DE                     
  1135                           ; BSR set to: 0
  1136                           ;newmain.c: 95:                 Lcd_Set_Cursor(2, 1);
  1137  0008DE  0E01               	movlw	1
  1138  0008E0  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  1139  0008E2  0E02               	movlw	2
  1140  0008E4  ECD0  F011         	call	_Lcd_Set_Cursor
  1141  0008E8                     
  1142                           ;newmain.c: 96:                 Lcd_Write_String("                    ");
  1143  0008E8  0E12               	movlw	low STR_1
  1144  0008EA  6E05               	movwf	Lcd_Write_String@a^0,c
  1145  0008EC  0E08               	movlw	high STR_1
  1146  0008EE  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  1147  0008F0  EC59  F011         	call	_Lcd_Write_String	;wreg free
  1148  0008F4                     
  1149                           ;newmain.c: 97:                 Lcd_Set_Cursor(2, 8);
  1150  0008F4  0E08               	movlw	8
  1151  0008F6  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  1152  0008F8  0E02               	movlw	2
  1153  0008FA  ECD0  F011         	call	_Lcd_Set_Cursor
  1154  0008FE                     
  1155                           ;newmain.c: 98:                 Lcd_Write_Char('*');
  1156  0008FE  0E2A               	movlw	42
  1157  000900  EC6F  F013         	call	_Lcd_Write_Char
  1158  000904                     l2904:
  1159                           
  1160                           ;newmain.c: 99:                 _delay((unsigned long)((400)*(8000000/4000.0)));
  1161  000904  0E05               	movlw	5
  1162  000906  0100               	movlb	0	; () banked
  1163  000908  6F9B               	movwf	(??_activar_seguridad+1)& (0+255),b
  1164  00090A  0E0F               	movlw	15
  1165  00090C  6F9A               	movwf	??_activar_seguridad& (0+255),b
  1166  00090E  0EF1               	movlw	241
  1167  000910                     u2987:
  1168  000910  2EE8               	decfsz	wreg,f,c
  1169  000912  D7FE               	bra	u2987
  1170  000914  2F9A               	decfsz	??_activar_seguridad& (0+255),f,b
  1171  000916  D7FC               	bra	u2987
  1172  000918  2F9B               	decfsz	(??_activar_seguridad+1)& (0+255),f,b
  1173  00091A  D7FA               	bra	u2987
  1174  00091C  EF16  F007         	goto	l183
  1175  000920                     l2906:
  1176                           
  1177                           ; BSR set to: 0
  1178                           ;newmain.c: 104:             if ((tecla != 0) && ((0 ? isdigit(tecla) : ((unsigned)(tecl
      +                          a)-'0') < 10)))
  1179  000920  516B               	movf	_tecla& (0+255),w,b
  1180  000922  B4D8               	btfsc	status,2,c
  1181  000924  EF96  F004         	goto	u2701
  1182  000928  EF98  F004         	goto	u2700
  1183  00092C                     u2701:
  1184  00092C  EF16  F007         	goto	l183
  1185  000930                     u2700:
  1186  000930                     
  1187                           ; BSR set to: 0
  1188  000930  0ED0               	movlw	208
  1189  000932  6F9A               	movwf	??_activar_seguridad& (0+255),b
  1190  000934  0EFF               	movlw	255
  1191  000936  6F9B               	movwf	(??_activar_seguridad+1)& (0+255),b
  1192  000938  516B               	movf	_tecla& (0+255),w,b
  1193  00093A  6F9C               	movwf	(??_activar_seguridad+2)& (0+255),b
  1194  00093C  6B9D               	clrf	(??_activar_seguridad+3)& (0+255),b
  1195  00093E  519A               	movf	??_activar_seguridad& (0+255),w,b
  1196  000940  279C               	addwf	(??_activar_seguridad+2)& (0+255),f,b
  1197  000942  519B               	movf	(??_activar_seguridad+1)& (0+255),w,b
  1198  000944  239D               	addwfc	(??_activar_seguridad+3)& (0+255),f,b
  1199  000946  519D               	movf	(??_activar_seguridad+3)& (0+255),w,b
  1200  000948  E10A               	bnz	u2710
  1201  00094A  0E0A               	movlw	10
  1202  00094C  5D9C               	subwf	(??_activar_seguridad+2)& (0+255),w,b
  1203  00094E  A0D8               	btfss	status,0,c
  1204  000950  EFAC  F004         	goto	u2711
  1205  000954  EFAF  F004         	goto	u2710
  1206  000958                     u2711:
  1207  000958  0E01               	movlw	1
  1208  00095A  EFB0  F004         	goto	u2720
  1209  00095E                     u2710:
  1210  00095E  0E00               	movlw	0
  1211  000960                     u2720:
  1212  000960  6FAE               	movwf	_activar_seguridad$472& (0+255),b
  1213  000962  6BAF               	clrf	(_activar_seguridad$472+1)& (0+255),b
  1214  000964                     
  1215                           ; BSR set to: 0
  1216  000964  51AE               	movf	_activar_seguridad$472& (0+255),w,b
  1217  000966  11AF               	iorwf	(_activar_seguridad$472+1)& (0+255),w,b
  1218  000968  B4D8               	btfsc	status,2,c
  1219  00096A  EFB9  F004         	goto	u2731
  1220  00096E  EFBB  F004         	goto	u2730
  1221  000972                     u2731:
  1222  000972  EF16  F007         	goto	l183
  1223  000976                     u2730:
  1224  000976                     
  1225                           ; BSR set to: 0
  1226                           ;newmain.c: 105:             {;newmain.c: 106:                 aux_contrasenia[1] = tecl
      +                          a;
  1227  000976  C06B  F08D         	movff	_tecla,_aux_contrasenia+1
  1228  00097A                     
  1229                           ; BSR set to: 0
  1230                           ;newmain.c: 107:                 estado_teclado = n3;
  1231  00097A  0E02               	movlw	2
  1232  00097C  6F6A               	movwf	_estado_teclado& (0+255),b
  1233  00097E                     
  1234                           ; BSR set to: 0
  1235                           ;newmain.c: 108:                 Lcd_Set_Cursor(2, 9);
  1236  00097E  0E09               	movlw	9
  1237  000980  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  1238  000982  0E02               	movlw	2
  1239  000984  ECD0  F011         	call	_Lcd_Set_Cursor
  1240  000988                     
  1241                           ;newmain.c: 109:                 Lcd_Write_Char('*');
  1242  000988  0E2A               	movlw	42
  1243  00098A  EC6F  F013         	call	_Lcd_Write_Char
  1244  00098E  EF82  F004         	goto	l2904
  1245  000992                     l2924:
  1246                           
  1247                           ; BSR set to: 0
  1248                           ;newmain.c: 116:             if ((tecla != 0) && ((0 ? isdigit(tecla) : ((unsigned)(tecl
      +                          a)-'0') < 10))) {
  1249  000992  516B               	movf	_tecla& (0+255),w,b
  1250  000994  B4D8               	btfsc	status,2,c
  1251  000996  EFCF  F004         	goto	u2741
  1252  00099A  EFD1  F004         	goto	u2740
  1253  00099E                     u2741:
  1254  00099E  EF16  F007         	goto	l183
  1255  0009A2                     u2740:
  1256  0009A2                     
  1257                           ; BSR set to: 0
  1258  0009A2  0ED0               	movlw	208
  1259  0009A4  6F9A               	movwf	??_activar_seguridad& (0+255),b
  1260  0009A6  0EFF               	movlw	255
  1261  0009A8  6F9B               	movwf	(??_activar_seguridad+1)& (0+255),b
  1262  0009AA  516B               	movf	_tecla& (0+255),w,b
  1263  0009AC  6F9C               	movwf	(??_activar_seguridad+2)& (0+255),b
  1264  0009AE  6B9D               	clrf	(??_activar_seguridad+3)& (0+255),b
  1265  0009B0  519A               	movf	??_activar_seguridad& (0+255),w,b
  1266  0009B2  279C               	addwf	(??_activar_seguridad+2)& (0+255),f,b
  1267  0009B4  519B               	movf	(??_activar_seguridad+1)& (0+255),w,b
  1268  0009B6  239D               	addwfc	(??_activar_seguridad+3)& (0+255),f,b
  1269  0009B8  519D               	movf	(??_activar_seguridad+3)& (0+255),w,b
  1270  0009BA  E10A               	bnz	u2750
  1271  0009BC  0E0A               	movlw	10
  1272  0009BE  5D9C               	subwf	(??_activar_seguridad+2)& (0+255),w,b
  1273  0009C0  A0D8               	btfss	status,0,c
  1274  0009C2  EFE5  F004         	goto	u2751
  1275  0009C6  EFE8  F004         	goto	u2750
  1276  0009CA                     u2751:
  1277  0009CA  0E01               	movlw	1
  1278  0009CC  EFE9  F004         	goto	u2760
  1279  0009D0                     u2750:
  1280  0009D0  0E00               	movlw	0
  1281  0009D2                     u2760:
  1282  0009D2  6FB0               	movwf	_activar_seguridad$473& (0+255),b
  1283  0009D4  6BB1               	clrf	(_activar_seguridad$473+1)& (0+255),b
  1284  0009D6                     
  1285                           ; BSR set to: 0
  1286  0009D6  51B0               	movf	_activar_seguridad$473& (0+255),w,b
  1287  0009D8  11B1               	iorwf	(_activar_seguridad$473+1)& (0+255),w,b
  1288  0009DA  B4D8               	btfsc	status,2,c
  1289  0009DC  EFF2  F004         	goto	u2771
  1290  0009E0  EFF4  F004         	goto	u2770
  1291  0009E4                     u2771:
  1292  0009E4  EF16  F007         	goto	l183
  1293  0009E8                     u2770:
  1294  0009E8                     
  1295                           ; BSR set to: 0
  1296                           ;newmain.c: 117:                 aux_contrasenia[2] = tecla;
  1297  0009E8  C06B  F08E         	movff	_tecla,_aux_contrasenia+2
  1298  0009EC                     
  1299                           ; BSR set to: 0
  1300                           ;newmain.c: 118:                 estado_teclado = n4;
  1301  0009EC  0E03               	movlw	3
  1302  0009EE  6F6A               	movwf	_estado_teclado& (0+255),b
  1303  0009F0                     
  1304                           ; BSR set to: 0
  1305                           ;newmain.c: 119:                 Lcd_Set_Cursor(2, 10);
  1306  0009F0  0E0A               	movlw	10
  1307  0009F2  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  1308  0009F4  0E02               	movlw	2
  1309  0009F6  ECD0  F011         	call	_Lcd_Set_Cursor
  1310  0009FA                     
  1311                           ;newmain.c: 120:                 Lcd_Write_Char('*');
  1312  0009FA  0E2A               	movlw	42
  1313  0009FC  EC6F  F013         	call	_Lcd_Write_Char
  1314  000A00  EF82  F004         	goto	l2904
  1315  000A04                     l2942:
  1316                           
  1317                           ; BSR set to: 0
  1318                           ;newmain.c: 126:             if ((tecla != 0) && ((0 ? isdigit(tecla) : ((unsigned)(tecl
      +                          a)-'0') < 10))) {
  1319  000A04  516B               	movf	_tecla& (0+255),w,b
  1320  000A06  B4D8               	btfsc	status,2,c
  1321  000A08  EF08  F005         	goto	u2781
  1322  000A0C  EF0A  F005         	goto	u2780
  1323  000A10                     u2781:
  1324  000A10  EF16  F007         	goto	l183
  1325  000A14                     u2780:
  1326  000A14                     
  1327                           ; BSR set to: 0
  1328  000A14  0ED0               	movlw	208
  1329  000A16  6F9A               	movwf	??_activar_seguridad& (0+255),b
  1330  000A18  0EFF               	movlw	255
  1331  000A1A  6F9B               	movwf	(??_activar_seguridad+1)& (0+255),b
  1332  000A1C  516B               	movf	_tecla& (0+255),w,b
  1333  000A1E  6F9C               	movwf	(??_activar_seguridad+2)& (0+255),b
  1334  000A20  6B9D               	clrf	(??_activar_seguridad+3)& (0+255),b
  1335  000A22  519A               	movf	??_activar_seguridad& (0+255),w,b
  1336  000A24  279C               	addwf	(??_activar_seguridad+2)& (0+255),f,b
  1337  000A26  519B               	movf	(??_activar_seguridad+1)& (0+255),w,b
  1338  000A28  239D               	addwfc	(??_activar_seguridad+3)& (0+255),f,b
  1339  000A2A  519D               	movf	(??_activar_seguridad+3)& (0+255),w,b
  1340  000A2C  E10A               	bnz	u2790
  1341  000A2E  0E0A               	movlw	10
  1342  000A30  5D9C               	subwf	(??_activar_seguridad+2)& (0+255),w,b
  1343  000A32  A0D8               	btfss	status,0,c
  1344  000A34  EF1E  F005         	goto	u2791
  1345  000A38  EF21  F005         	goto	u2790
  1346  000A3C                     u2791:
  1347  000A3C  0E01               	movlw	1
  1348  000A3E  EF22  F005         	goto	u2800
  1349  000A42                     u2790:
  1350  000A42  0E00               	movlw	0
  1351  000A44                     u2800:
  1352  000A44  6FB2               	movwf	_activar_seguridad$474& (0+255),b
  1353  000A46  6BB3               	clrf	(_activar_seguridad$474+1)& (0+255),b
  1354  000A48                     
  1355                           ; BSR set to: 0
  1356  000A48  51B2               	movf	_activar_seguridad$474& (0+255),w,b
  1357  000A4A  11B3               	iorwf	(_activar_seguridad$474+1)& (0+255),w,b
  1358  000A4C  B4D8               	btfsc	status,2,c
  1359  000A4E  EF2B  F005         	goto	u2811
  1360  000A52  EF2D  F005         	goto	u2810
  1361  000A56                     u2811:
  1362  000A56  EF16  F007         	goto	l183
  1363  000A5A                     u2810:
  1364  000A5A                     
  1365                           ; BSR set to: 0
  1366                           ;newmain.c: 127:                 aux_contrasenia[3] = tecla;
  1367  000A5A  C06B  F08F         	movff	_tecla,_aux_contrasenia+3
  1368  000A5E                     
  1369                           ; BSR set to: 0
  1370                           ;newmain.c: 128:                 estado_teclado = en;
  1371  000A5E  0E04               	movlw	4
  1372  000A60  6F6A               	movwf	_estado_teclado& (0+255),b
  1373  000A62                     
  1374                           ; BSR set to: 0
  1375                           ;newmain.c: 129:                 Lcd_Set_Cursor(2, 11);
  1376  000A62  0E0B               	movlw	11
  1377  000A64  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  1378  000A66  0E02               	movlw	2
  1379  000A68  ECD0  F011         	call	_Lcd_Set_Cursor
  1380  000A6C                     
  1381                           ;newmain.c: 130:                 Lcd_Write_Char('*');
  1382  000A6C  0E2A               	movlw	42
  1383  000A6E  EC6F  F013         	call	_Lcd_Write_Char
  1384  000A72  EF82  F004         	goto	l2904
  1385  000A76                     l2960:
  1386                           
  1387                           ; BSR set to: 0
  1388                           ;newmain.c: 137:             if ((tecla != 0) && (tecla != '='))
  1389  000A76  516B               	movf	_tecla& (0+255),w,b
  1390  000A78  B4D8               	btfsc	status,2,c
  1391  000A7A  EF41  F005         	goto	u2821
  1392  000A7E  EF43  F005         	goto	u2820
  1393  000A82                     u2821:
  1394  000A82  EF68  F005         	goto	l2972
  1395  000A86                     u2820:
  1396  000A86                     
  1397                           ; BSR set to: 0
  1398  000A86  0E3D               	movlw	61
  1399  000A88  196B               	xorwf	_tecla& (0+255),w,b
  1400  000A8A  B4D8               	btfsc	status,2,c
  1401  000A8C  EF4A  F005         	goto	u2831
  1402  000A90  EF4C  F005         	goto	u2830
  1403  000A94                     u2831:
  1404  000A94  EF68  F005         	goto	l2972
  1405  000A98                     u2830:
  1406  000A98                     
  1407                           ; BSR set to: 0
  1408                           ;newmain.c: 138:             {;newmain.c: 139:                 estado_teclado = n1;
  1409  000A98  0E00               	movlw	0
  1410  000A9A  6F6A               	movwf	_estado_teclado& (0+255),b
  1411  000A9C                     
  1412                           ; BSR set to: 0
  1413                           ;newmain.c: 140:                 Lcd_Set_Cursor(2, 8);
  1414  000A9C  0E08               	movlw	8
  1415  000A9E  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  1416  000AA0  0E02               	movlw	2
  1417  000AA2  ECD0  F011         	call	_Lcd_Set_Cursor
  1418  000AA6                     
  1419                           ;newmain.c: 141:                 Lcd_Write_String("      ");
  1420  000AA6  0E20               	movlw	low (STR_1+14)
  1421  000AA8  6E05               	movwf	Lcd_Write_String@a^0,c
  1422  000AAA  0E08               	movlw	high (STR_1+14)
  1423  000AAC  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  1424  000AAE  EC59  F011         	call	_Lcd_Write_String	;wreg free
  1425  000AB2                     l2970:
  1426                           
  1427                           ;newmain.c: 142:                 _delay((unsigned long)((600)*(8000000/4000.0)));
  1428  000AB2  0E07               	movlw	7
  1429  000AB4  0100               	movlb	0	; () banked
  1430  000AB6  6F9B               	movwf	(??_activar_seguridad+1)& (0+255),b
  1431  000AB8  0E17               	movlw	23
  1432  000ABA  6F9A               	movwf	??_activar_seguridad& (0+255),b
  1433  000ABC  0E6A               	movlw	106
  1434  000ABE                     u2997:
  1435  000ABE  2EE8               	decfsz	wreg,f,c
  1436  000AC0  D7FE               	bra	u2997
  1437  000AC2  2F9A               	decfsz	??_activar_seguridad& (0+255),f,b
  1438  000AC4  D7FC               	bra	u2997
  1439  000AC6  2F9B               	decfsz	(??_activar_seguridad+1)& (0+255),f,b
  1440  000AC8  D7FA               	bra	u2997
  1441  000ACA  F000               	nop	
  1442                           
  1443                           ;newmain.c: 143:             }
  1444  000ACC  EF16  F007         	goto	l183
  1445  000AD0                     l2972:
  1446                           
  1447                           ; BSR set to: 0
  1448  000AD0  516B               	movf	_tecla& (0+255),w,b
  1449  000AD2  B4D8               	btfsc	status,2,c
  1450  000AD4  EF6E  F005         	goto	u2841
  1451  000AD8  EF70  F005         	goto	u2840
  1452  000ADC                     u2841:
  1453  000ADC  EF16  F007         	goto	l183
  1454  000AE0                     u2840:
  1455  000AE0                     
  1456                           ; BSR set to: 0
  1457  000AE0  0E3D               	movlw	61
  1458  000AE2  196B               	xorwf	_tecla& (0+255),w,b
  1459  000AE4  A4D8               	btfss	status,2,c
  1460  000AE6  EF77  F005         	goto	u2851
  1461  000AEA  EF79  F005         	goto	u2850
  1462  000AEE                     u2851:
  1463  000AEE  EF16  F007         	goto	l183
  1464  000AF2                     u2850:
  1465  000AF2                     
  1466                           ; BSR set to: 0
  1467                           ;newmain.c: 145:             {;newmain.c: 147:                 for (int i = 0; i <= 3; i
      +                          ++) {
  1468  000AF2  0E00               	movlw	0
  1469  000AF4  6FBD               	movwf	(activar_seguridad@i+1)& (0+255),b
  1470  000AF6  0E00               	movlw	0
  1471  000AF8  6FBC               	movwf	activar_seguridad@i& (0+255),b
  1472  000AFA                     l2982:
  1473                           
  1474                           ; BSR set to: 0
  1475                           ;newmain.c: 149:                     if (contrasenia[i] == aux_contrasenia[i]) {
  1476  000AFA  0E8C               	movlw	low _aux_contrasenia
  1477  000AFC  25BC               	addwf	activar_seguridad@i& (0+255),w,b
  1478  000AFE  6ED9               	movwf	fsr2l,c
  1479  000B00  0E00               	movlw	high _aux_contrasenia
  1480  000B02  21BD               	addwfc	(activar_seguridad@i+1)& (0+255),w,b
  1481  000B04  6EDA               	movwf	fsr2h,c
  1482  000B06  0EE7               	movlw	low _contrasenia
  1483  000B08  25BC               	addwf	activar_seguridad@i& (0+255),w,b
  1484  000B0A  6EE1               	movwf	fsr1l,c
  1485  000B0C  0E00               	movlw	high _contrasenia
  1486  000B0E  21BD               	addwfc	(activar_seguridad@i+1)& (0+255),w,b
  1487  000B10  6EE2               	movwf	fsr1h,c
  1488  000B12  50DE               	movf	postinc2,w,c
  1489  000B14  18E6               	xorwf	postinc1,w,c
  1490  000B16  A4D8               	btfss	status,2,c
  1491  000B18  EF90  F005         	goto	u2861
  1492  000B1C  EF92  F005         	goto	u2860
  1493  000B20                     u2861:
  1494  000B20  EF94  F005         	goto	l162
  1495  000B24                     u2860:
  1496  000B24                     
  1497                           ; BSR set to: 0
  1498                           ;newmain.c: 151:                         contador++;
  1499  000B24  4B68               	infsnz	_contador& (0+255),f,b
  1500  000B26  2B69               	incf	(_contador+1)& (0+255),f,b
  1501  000B28                     l162:
  1502                           
  1503                           ; BSR set to: 0
  1504                           ;newmain.c: 153:                 }
  1505  000B28  4BBC               	infsnz	activar_seguridad@i& (0+255),f,b
  1506  000B2A  2BBD               	incf	(activar_seguridad@i+1)& (0+255),f,b
  1507  000B2C                     
  1508                           ; BSR set to: 0
  1509  000B2C  BFBD               	btfsc	(activar_seguridad@i+1)& (0+255),7,b
  1510  000B2E  EFA2  F005         	goto	u2871
  1511  000B32  51BD               	movf	(activar_seguridad@i+1)& (0+255),w,b
  1512  000B34  E109               	bnz	u2870
  1513  000B36  0E04               	movlw	4
  1514  000B38  5DBC               	subwf	activar_seguridad@i& (0+255),w,b
  1515  000B3A  A0D8               	btfss	status,0,c
  1516  000B3C  EFA2  F005         	goto	u2871
  1517  000B40  EFA4  F005         	goto	u2870
  1518  000B44                     u2871:
  1519  000B44  EF7D  F005         	goto	l2982
  1520  000B48                     u2870:
  1521  000B48                     
  1522                           ; BSR set to: 0
  1523                           ;newmain.c: 155:                 if (contador == 4) {
  1524  000B48  0E04               	movlw	4
  1525  000B4A  1968               	xorwf	_contador& (0+255),w,b
  1526  000B4C  1169               	iorwf	(_contador+1)& (0+255),w,b
  1527  000B4E  A4D8               	btfss	status,2,c
  1528  000B50  EFAC  F005         	goto	u2881
  1529  000B54  EFAE  F005         	goto	u2880
  1530  000B58                     u2881:
  1531  000B58  EFD9  F006         	goto	l3076
  1532  000B5C                     u2880:
  1533  000B5C                     
  1534                           ; BSR set to: 0
  1535                           ;newmain.c: 156:                     Lcd_Set_Cursor(2, 1);
  1536  000B5C  0E01               	movlw	1
  1537  000B5E  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  1538  000B60  0E02               	movlw	2
  1539  000B62  ECD0  F011         	call	_Lcd_Set_Cursor
  1540  000B66                     
  1541                           ;newmain.c: 157:                     Lcd_Write_String("contraseña correcta");
  1542  000B66  0E3B               	movlw	low STR_3
  1543  000B68  6E05               	movwf	Lcd_Write_String@a^0,c
  1544  000B6A  0E08               	movlw	high STR_3
  1545  000B6C  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  1546  000B6E  EC59  F011         	call	_Lcd_Write_String	;wreg free
  1547  000B72                     
  1548                           ;newmain.c: 158:                     _delay((unsigned long)((600)*(8000000/4000.0)));
  1549  000B72  0E07               	movlw	7
  1550  000B74  0100               	movlb	0	; () banked
  1551  000B76  6F9B               	movwf	(??_activar_seguridad+1)& (0+255),b
  1552  000B78  0E17               	movlw	23
  1553  000B7A  6F9A               	movwf	??_activar_seguridad& (0+255),b
  1554  000B7C  0E6A               	movlw	106
  1555  000B7E                     u3007:
  1556  000B7E  2EE8               	decfsz	wreg,f,c
  1557  000B80  D7FE               	bra	u3007
  1558  000B82  2F9A               	decfsz	??_activar_seguridad& (0+255),f,b
  1559  000B84  D7FC               	bra	u3007
  1560  000B86  2F9B               	decfsz	(??_activar_seguridad+1)& (0+255),f,b
  1561  000B88  D7FA               	bra	u3007
  1562  000B8A  F000               	nop	
  1563  000B8C                     
  1564                           ;newmain.c: 160:                     PORTBbits.RB4 = 0;
  1565  000B8C  9881               	bcf	129,4,c	;volatile
  1566  000B8E                     
  1567                           ;newmain.c: 161:                     PORTBbits.RB5 = 0;
  1568  000B8E  9A81               	bcf	129,5,c	;volatile
  1569  000B90                     
  1570                           ;newmain.c: 162:                     PORTBbits.RB6 = 0;
  1571  000B90  9C81               	bcf	129,6,c	;volatile
  1572  000B92                     
  1573                           ;newmain.c: 163:                     PORTBbits.RB7 = 0;
  1574  000B92  9E81               	bcf	129,7,c	;volatile
  1575  000B94                     
  1576                           ;newmain.c: 165:                     ADCON1 = 0b00001111;
  1577  000B94  0E0F               	movlw	15
  1578  000B96  6EC1               	movwf	193,c	;volatile
  1579  000B98                     
  1580                           ;newmain.c: 167:                     float temperatura;;newmain.c: 168:                 
      +                              char Temperatura[10];;newmain.c: 169:                     Lcd_Clear();
  1581  000B98  ECFB  F013         	call	_Lcd_Clear	;wreg free
  1582  000B9C                     
  1583                           ;newmain.c: 170:                     TRISA = 0b00000001;
  1584  000B9C  0E01               	movlw	1
  1585  000B9E  6E92               	movwf	146,c	;volatile
  1586  000BA0                     
  1587                           ;newmain.c: 171:                     Lcd_Set_Cursor(1, 6);
  1588  000BA0  0E06               	movlw	6
  1589  000BA2  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  1590  000BA4  0E01               	movlw	1
  1591  000BA6  ECD0  F011         	call	_Lcd_Set_Cursor
  1592  000BAA                     
  1593                           ;newmain.c: 172:                     Lcd_Write_String("TEMPERATURA");
  1594  000BAA  0E4F               	movlw	low STR_4
  1595  000BAC  6E05               	movwf	Lcd_Write_String@a^0,c
  1596  000BAE  0E08               	movlw	high STR_4
  1597  000BB0  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  1598  000BB2  EC59  F011         	call	_Lcd_Write_String	;wreg free
  1599  000BB6                     
  1600                           ;newmain.c: 173:                     PORTAbits.RA5 = 1;
  1601  000BB6  8A80               	bsf	128,5,c	;volatile
  1602  000BB8                     
  1603                           ;newmain.c: 174:                     PORTAbits.RA4 = 0;
  1604  000BB8  9880               	bcf	128,4,c	;volatile
  1605  000BBA                     
  1606                           ;newmain.c: 176:                     TRISCbits.RC6 = 0;
  1607  000BBA  9C94               	bcf	148,6,c	;volatile
  1608  000BBC                     
  1609                           ;newmain.c: 177:                     TXSTAbits.TX9 = 0;
  1610  000BBC  9CAC               	bcf	172,6,c	;volatile
  1611  000BBE                     
  1612                           ;newmain.c: 178:                     TXSTAbits.TXEN = 1;
  1613  000BBE  8AAC               	bsf	172,5,c	;volatile
  1614  000BC0                     
  1615                           ;newmain.c: 179:                     TXSTAbits.SYNC = 0;
  1616  000BC0  98AC               	bcf	172,4,c	;volatile
  1617  000BC2                     
  1618                           ;newmain.c: 180:                     TXSTAbits.BRGH = 0;
  1619  000BC2  94AC               	bcf	172,2,c	;volatile
  1620  000BC4                     
  1621                           ;newmain.c: 181:                     BAUDCONbits.BRG16 = 0;
  1622  000BC4  96B8               	bcf	184,3,c	;volatile
  1623  000BC6                     
  1624                           ;newmain.c: 182:                     RCSTAbits.SPEN = 1;
  1625  000BC6  8EAB               	bsf	171,7,c	;volatile
  1626  000BC8                     
  1627                           ;newmain.c: 183:                     SPBRG = (unsigned char) (((8000000 / 9600) / 64) - 
      +                          1);
  1628  000BC8  0E0C               	movlw	12
  1629  000BCA  6EAF               	movwf	175,c	;volatile
  1630                           
  1631                           ;newmain.c: 185:                     while (contador == 4) {
  1632  000BCC  EFCC  F006         	goto	l3074
  1633  000BD0                     l3034:
  1634                           
  1635                           ; BSR set to: 0
  1636                           ;newmain.c: 186:                         temperatura = (getCad(0)*0.02 * 100);
  1637  000BD0  0E0A               	movlw	10
  1638  000BD2  6E18               	movwf	___flmul@a^0,c
  1639  000BD4  0ED7               	movlw	215
  1640  000BD6  6E19               	movwf	(___flmul@a+1)^0,c
  1641  000BD8  0EA3               	movlw	163
  1642  000BDA  6E1A               	movwf	(___flmul@a+2)^0,c
  1643  000BDC  0E3C               	movlw	60
  1644  000BDE  6E1B               	movwf	(___flmul@a+3)^0,c
  1645  000BE0  0E00               	movlw	0
  1646  000BE2  ECD6  F012         	call	_getCad
  1647  000BE6  C001  F006         	movff	?_getCad,___xxtofl@val
  1648  000BEA  C002  F007         	movff	?_getCad+1,___xxtofl@val+1
  1649  000BEE  0E00               	movlw	0
  1650  000BF0  BE07               	btfsc	(___xxtofl@val+1)^0,7,c
  1651  000BF2  0EFF               	movlw	-1
  1652  000BF4  6E08               	movwf	(___xxtofl@val+2)^0,c
  1653  000BF6  6E09               	movwf	(___xxtofl@val+3)^0,c
  1654  000BF8  0E01               	movlw	1
  1655  000BFA  ECB0  F00B         	call	___xxtofl
  1656  000BFE  C006  F014         	movff	?___xxtofl,___flmul@b
  1657  000C02  C007  F015         	movff	?___xxtofl+1,___flmul@b+1
  1658  000C06  C008  F016         	movff	?___xxtofl+2,___flmul@b+2
  1659  000C0A  C009  F017         	movff	?___xxtofl+3,___flmul@b+3
  1660  000C0E  EC17  F007         	call	___flmul	;wreg free
  1661  000C12  C014  F0A8         	movff	?___flmul,_activar_seguridad$1345
  1662  000C16  C015  F0A9         	movff	?___flmul+1,_activar_seguridad$1345+1
  1663  000C1A  C016  F0AA         	movff	?___flmul+2,_activar_seguridad$1345+2
  1664  000C1E  C017  F0AB         	movff	?___flmul+3,_activar_seguridad$1345+3
  1665                           
  1666                           ;newmain.c: 186:                         temperatura = (getCad(0)*0.02 * 100);
  1667  000C22  C0A8  F014         	movff	_activar_seguridad$1345,___flmul@b
  1668  000C26  C0A9  F015         	movff	_activar_seguridad$1345+1,___flmul@b+1
  1669  000C2A  C0AA  F016         	movff	_activar_seguridad$1345+2,___flmul@b+2
  1670  000C2E  C0AB  F017         	movff	_activar_seguridad$1345+3,___flmul@b+3
  1671  000C32  0E00               	movlw	0
  1672  000C34  6E18               	movwf	___flmul@a^0,c
  1673  000C36  0E00               	movlw	0
  1674  000C38  6E19               	movwf	(___flmul@a+1)^0,c
  1675  000C3A  0EC8               	movlw	200
  1676  000C3C  6E1A               	movwf	(___flmul@a+2)^0,c
  1677  000C3E  0E42               	movlw	66
  1678  000C40  6E1B               	movwf	(___flmul@a+3)^0,c
  1679  000C42  EC17  F007         	call	___flmul	;wreg free
  1680  000C46  C014  F0B4         	movff	?___flmul,activar_seguridad@temperatura
  1681  000C4A  C015  F0B5         	movff	?___flmul+1,activar_seguridad@temperatura+1
  1682  000C4E  C016  F0B6         	movff	?___flmul+2,activar_seguridad@temperatura+2
  1683  000C52  C017  F0B7         	movff	?___flmul+3,activar_seguridad@temperatura+3
  1684  000C56                     
  1685                           ;newmain.c: 187:                         sprintf(Temperatura, "%d%cC", (int) temperatura
      +                          );
  1686  000C56  0E9E               	movlw	low activar_seguridad@Temperatura
  1687  000C58  6E59               	movwf	sprintf@s^0,c
  1688  000C5A  0E00               	movlw	high activar_seguridad@Temperatura
  1689  000C5C  6E5A               	movwf	(sprintf@s+1)^0,c
  1690  000C5E  0E63               	movlw	low STR_5
  1691  000C60  6E5B               	movwf	sprintf@fmt^0,c
  1692  000C62  0E08               	movlw	high STR_5
  1693  000C64  6E5C               	movwf	(sprintf@fmt+1)^0,c
  1694  000C66  C0B4  F001         	movff	activar_seguridad@temperatura,___fltol@f1
  1695  000C6A  C0B5  F002         	movff	activar_seguridad@temperatura+1,___fltol@f1+1
  1696  000C6E  C0B6  F003         	movff	activar_seguridad@temperatura+2,___fltol@f1+2
  1697  000C72  C0B7  F004         	movff	activar_seguridad@temperatura+3,___fltol@f1+3
  1698  000C76  ECC5  F00E         	call	___fltol	;wreg free
  1699  000C7A  C001  F05D         	movff	?___fltol,?_sprintf+4
  1700  000C7E  C002  F05E         	movff	?___fltol+1,?_sprintf+5
  1701  000C82  EC62  F012         	call	_sprintf	;wreg free
  1702  000C86                     
  1703                           ;newmain.c: 188:                         Lcd_Set_Cursor(2, 6);
  1704  000C86  0E06               	movlw	6
  1705  000C88  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  1706  000C8A  0E02               	movlw	2
  1707  000C8C  ECD0  F011         	call	_Lcd_Set_Cursor
  1708  000C90                     
  1709                           ;newmain.c: 189:                         Lcd_Write_String(Temperatura);
  1710  000C90  0E9E               	movlw	low activar_seguridad@Temperatura
  1711  000C92  6E05               	movwf	Lcd_Write_String@a^0,c
  1712  000C94  0E00               	movlw	high activar_seguridad@Temperatura
  1713  000C96  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  1714  000C98  EC59  F011         	call	_Lcd_Write_String	;wreg free
  1715  000C9C                     
  1716                           ;newmain.c: 191:                         if (temperatura > 30) {
  1717  000C9C  0E00               	movlw	0
  1718  000C9E  6E01               	movwf	___flge@ff1^0,c
  1719  000CA0  0E00               	movlw	0
  1720  000CA2  6E02               	movwf	(___flge@ff1+1)^0,c
  1721  000CA4  0EF0               	movlw	240
  1722  000CA6  6E03               	movwf	(___flge@ff1+2)^0,c
  1723  000CA8  0E41               	movlw	65
  1724  000CAA  6E04               	movwf	(___flge@ff1+3)^0,c
  1725  000CAC  C0B4  F005         	movff	activar_seguridad@temperatura,___flge@ff2
  1726  000CB0  C0B5  F006         	movff	activar_seguridad@temperatura+1,___flge@ff2+1
  1727  000CB4  C0B6  F007         	movff	activar_seguridad@temperatura+2,___flge@ff2+2
  1728  000CB8  C0B7  F008         	movff	activar_seguridad@temperatura+3,___flge@ff2+3
  1729  000CBC  EC48  F00F         	call	___flge	;wreg free
  1730  000CC0  B0D8               	btfsc	status,0,c
  1731  000CC2  EF65  F006         	goto	u2891
  1732  000CC6  EF67  F006         	goto	u2890
  1733  000CCA                     u2891:
  1734  000CCA  EFA2  F006         	goto	l3062
  1735  000CCE                     u2890:
  1736  000CCE                     
  1737                           ;newmain.c: 193:                             if (estado_dia == 'D') {
  1738  000CCE  0E44               	movlw	68
  1739  000CD0  0100               	movlb	0	; () banked
  1740  000CD2  19ED               	xorwf	_estado_dia& (0+255),w,b
  1741  000CD4  A4D8               	btfss	status,2,c
  1742  000CD6  EF6F  F006         	goto	u2901
  1743  000CDA  EF71  F006         	goto	u2900
  1744  000CDE                     u2901:
  1745  000CDE  EF74  F006         	goto	l3048
  1746  000CE2                     u2900:
  1747  000CE2                     
  1748                           ; BSR set to: 0
  1749                           ;newmain.c: 194:                                 PORTAbits.RA2 = 0;
  1750  000CE2  9480               	bcf	128,2,c	;volatile
  1751                           
  1752                           ;newmain.c: 195:                             } else if (estado_dia = 'N') {
  1753  000CE4  EF77  F006         	goto	l168
  1754  000CE8                     l3048:
  1755                           
  1756                           ; BSR set to: 0
  1757  000CE8  0E4E               	movlw	78
  1758  000CEA  6FED               	movwf	_estado_dia& (0+255),b
  1759  000CEC                     
  1760                           ; BSR set to: 0
  1761                           ;newmain.c: 196:                                 PORTAbits.RA2 = 1;
  1762  000CEC  8480               	bsf	128,2,c	;volatile
  1763  000CEE                     l168:
  1764                           
  1765                           ; BSR set to: 0
  1766                           ;newmain.c: 199:                             for (int i = 0; i < 18; i++) {
  1767  000CEE  0E00               	movlw	0
  1768  000CF0  6FB9               	movwf	(activar_seguridad@i_514+1)& (0+255),b
  1769  000CF2  0E00               	movlw	0
  1770  000CF4  6FB8               	movwf	activar_seguridad@i_514& (0+255),b
  1771  000CF6                     l3052:
  1772                           
  1773                           ; BSR set to: 0
  1774  000CF6  BFB9               	btfsc	(activar_seguridad@i_514+1)& (0+255),7,b
  1775  000CF8  EF87  F006         	goto	u2911
  1776  000CFC  51B9               	movf	(activar_seguridad@i_514+1)& (0+255),w,b
  1777  000CFE  E109               	bnz	u2910
  1778  000D00  0E12               	movlw	18
  1779  000D02  5DB8               	subwf	activar_seguridad@i_514& (0+255),w,b
  1780  000D04  A0D8               	btfss	status,0,c
  1781  000D06  EF87  F006         	goto	u2911
  1782  000D0A  EF89  F006         	goto	u2910
  1783  000D0E                     u2911:
  1784  000D0E  EF8B  F006         	goto	l172
  1785  000D12                     u2910:
  1786  000D12  EF9F  F006         	goto	l171
  1787  000D16                     l172:
  1788                           
  1789                           ;newmain.c: 201:                                 while (!TXSTAbits.TRMT) {
  1790  000D16  A2AC               	btfss	172,1,c	;volatile
  1791  000D18  EF90  F006         	goto	u2921
  1792  000D1C  EF92  F006         	goto	u2920
  1793  000D20                     u2921:
  1794  000D20  EF8B  F006         	goto	l172
  1795  000D24                     u2920:
  1796  000D24                     
  1797                           ;newmain.c: 204:                                 TXREG = buffer_TX[i];
  1798  000D24  0ED5               	movlw	low _buffer_TX
  1799  000D26  0100               	movlb	0	; () banked
  1800  000D28  25B8               	addwf	activar_seguridad@i_514& (0+255),w,b
  1801  000D2A  6ED9               	movwf	fsr2l,c
  1802  000D2C  0E00               	movlw	high _buffer_TX
  1803  000D2E  21B9               	addwfc	(activar_seguridad@i_514+1)& (0+255),w,b
  1804  000D30  6EDA               	movwf	fsr2h,c
  1805  000D32  50DF               	movf	indf2,w,c
  1806  000D34  6EAD               	movwf	173,c	;volatile
  1807  000D36                     
  1808                           ; BSR set to: 0
  1809                           ;newmain.c: 205:                             }
  1810  000D36  4BB8               	infsnz	activar_seguridad@i_514& (0+255),f,b
  1811  000D38  2BB9               	incf	(activar_seguridad@i_514+1)& (0+255),f,b
  1812  000D3A  EF7B  F006         	goto	l3052
  1813  000D3E                     l171:
  1814                           
  1815                           ; BSR set to: 0
  1816                           ;newmain.c: 206:                             PORTAbits.RA3 = 1;
  1817  000D3E  8680               	bsf	128,3,c	;volatile
  1818                           
  1819                           ;newmain.c: 207:                         } else {
  1820  000D40  EFCC  F006         	goto	l3074
  1821  000D44                     l3062:
  1822                           
  1823                           ;newmain.c: 209:                             for (int i = 0; i < 21; i++) {
  1824  000D44  0E00               	movlw	0
  1825  000D46  0100               	movlb	0	; () banked
  1826  000D48  6FBB               	movwf	(activar_seguridad@i_515+1)& (0+255),b
  1827  000D4A  0E00               	movlw	0
  1828  000D4C  6FBA               	movwf	activar_seguridad@i_515& (0+255),b
  1829  000D4E                     l3064:
  1830                           
  1831                           ; BSR set to: 0
  1832  000D4E  BFBB               	btfsc	(activar_seguridad@i_515+1)& (0+255),7,b
  1833  000D50  EFB3  F006         	goto	u2931
  1834  000D54  51BB               	movf	(activar_seguridad@i_515+1)& (0+255),w,b
  1835  000D56  E109               	bnz	u2930
  1836  000D58  0E15               	movlw	21
  1837  000D5A  5DBA               	subwf	activar_seguridad@i_515& (0+255),w,b
  1838  000D5C  A0D8               	btfss	status,0,c
  1839  000D5E  EFB3  F006         	goto	u2931
  1840  000D62  EFB5  F006         	goto	u2930
  1841  000D66                     u2931:
  1842  000D66  EFB7  F006         	goto	l178
  1843  000D6A                     u2930:
  1844  000D6A  EFCB  F006         	goto	l177
  1845  000D6E                     l178:
  1846                           
  1847                           ;newmain.c: 211:                                 while (!TXSTAbits.TRMT) {
  1848  000D6E  A2AC               	btfss	172,1,c	;volatile
  1849  000D70  EFBC  F006         	goto	u2941
  1850  000D74  EFBE  F006         	goto	u2940
  1851  000D78                     u2941:
  1852  000D78  EFB7  F006         	goto	l178
  1853  000D7C                     u2940:
  1854  000D7C                     
  1855                           ;newmain.c: 214:                                 TXREG = buffer_TX2[i];
  1856  000D7C  0EC0               	movlw	low _buffer_TX2
  1857  000D7E  0100               	movlb	0	; () banked
  1858  000D80  25BA               	addwf	activar_seguridad@i_515& (0+255),w,b
  1859  000D82  6ED9               	movwf	fsr2l,c
  1860  000D84  0E00               	movlw	high _buffer_TX2
  1861  000D86  21BB               	addwfc	(activar_seguridad@i_515+1)& (0+255),w,b
  1862  000D88  6EDA               	movwf	fsr2h,c
  1863  000D8A  50DF               	movf	indf2,w,c
  1864  000D8C  6EAD               	movwf	173,c	;volatile
  1865  000D8E                     
  1866                           ; BSR set to: 0
  1867                           ;newmain.c: 215:                             }
  1868  000D8E  4BBA               	infsnz	activar_seguridad@i_515& (0+255),f,b
  1869  000D90  2BBB               	incf	(activar_seguridad@i_515+1)& (0+255),f,b
  1870  000D92  EFA7  F006         	goto	l3064
  1871  000D96                     l177:
  1872                           
  1873                           ; BSR set to: 0
  1874                           ;newmain.c: 216:                             PORTAbits.RA3 = 0;
  1875  000D96  9680               	bcf	128,3,c	;volatile
  1876  000D98                     l3074:
  1877                           
  1878                           ;newmain.c: 185:                     while (contador == 4) {
  1879  000D98  0E04               	movlw	4
  1880  000D9A  0100               	movlb	0	; () banked
  1881  000D9C  1968               	xorwf	_contador& (0+255),w,b
  1882  000D9E  1169               	iorwf	(_contador+1)& (0+255),w,b
  1883  000DA0  B4D8               	btfsc	status,2,c
  1884  000DA2  EFD5  F006         	goto	u2951
  1885  000DA6  EFD7  F006         	goto	u2950
  1886  000DAA                     u2951:
  1887  000DAA  EFE8  F005         	goto	l3034
  1888  000DAE                     u2950:
  1889  000DAE  EF16  F007         	goto	l183
  1890  000DB2                     l3076:
  1891                           
  1892                           ; BSR set to: 0
  1893                           ;newmain.c: 220:                     aux_contrasenia[4] = 0;
  1894  000DB2  0E00               	movlw	0
  1895  000DB4  6F90               	movwf	(_aux_contrasenia+4)& (0+255),b
  1896  000DB6                     
  1897                           ; BSR set to: 0
  1898                           ;newmain.c: 221:                     retardo = atoi(aux_contrasenia);
  1899  000DB6  0E8C               	movlw	low _aux_contrasenia
  1900  000DB8  6E08               	movwf	atoi@s^0,c
  1901  000DBA  0E00               	movlw	high _aux_contrasenia
  1902  000DBC  6E09               	movwf	(atoi@s+1)^0,c
  1903  000DBE  EC8A  F00C         	call	_atoi	;wreg free
  1904  000DC2  C008  F0EB         	movff	?_atoi,_retardo
  1905  000DC6  C009  F0EC         	movff	?_atoi+1,_retardo+1
  1906  000DCA                     
  1907                           ;newmain.c: 222:                     estado_teclado = n1;
  1908  000DCA  0E00               	movlw	0
  1909  000DCC  0100               	movlb	0	; () banked
  1910  000DCE  6F6A               	movwf	_estado_teclado& (0+255),b
  1911  000DD0                     
  1912                           ; BSR set to: 0
  1913                           ;newmain.c: 223:                     Lcd_Set_Cursor(2, 1);
  1914  000DD0  0E01               	movlw	1
  1915  000DD2  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  1916  000DD4  0E02               	movlw	2
  1917  000DD6  ECD0  F011         	call	_Lcd_Set_Cursor
  1918  000DDA                     
  1919                           ;newmain.c: 224:                     Lcd_Write_String("contraseña invalida");
  1920  000DDA  0E27               	movlw	low STR_6
  1921  000DDC  6E05               	movwf	Lcd_Write_String@a^0,c
  1922  000DDE  0E08               	movlw	high STR_6
  1923  000DE0  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  1924  000DE2  EC59  F011         	call	_Lcd_Write_String	;wreg free
  1925  000DE6  EF59  F005         	goto	l2970
  1926  000DEA                     l3090:
  1927                           
  1928                           ; BSR set to: 0
  1929  000DEA  516A               	movf	_estado_teclado& (0+255),w,b
  1930  000DEC  6F9A               	movwf	??_activar_seguridad& (0+255),b
  1931  000DEE  6B9B               	clrf	(??_activar_seguridad+1)& (0+255),b
  1932                           
  1933                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1934                           ; Switch size 1, requested type "simple"
  1935                           ; Number of cases is 1, Range of values is 0 to 0
  1936                           ; switch strategies available:
  1937                           ; Name         Instructions Cycles
  1938                           ; simple_byte            4     3 (average)
  1939                           ;	Chosen strategy is simple_byte
  1940  000DF0  519B               	movf	(??_activar_seguridad+1)& (0+255),w,b
  1941  000DF2  0A00               	xorlw	0	; case 0
  1942  000DF4  B4D8               	btfsc	status,2,c
  1943  000DF6  EFFF  F006         	goto	l3214
  1944  000DFA  EF16  F007         	goto	l183
  1945  000DFE                     l3214:
  1946                           
  1947                           ; BSR set to: 0
  1948                           ; Switch size 1, requested type "simple"
  1949                           ; Number of cases is 5, Range of values is 0 to 4
  1950                           ; switch strategies available:
  1951                           ; Name         Instructions Cycles
  1952                           ; simple_byte           16     9 (average)
  1953                           ;	Chosen strategy is simple_byte
  1954  000DFE  519A               	movf	??_activar_seguridad& (0+255),w,b
  1955  000E00  0A00               	xorlw	0	; case 0
  1956  000E02  B4D8               	btfsc	status,2,c
  1957  000E04  EF40  F004         	goto	l2884
  1958  000E08  0A01               	xorlw	1	; case 1
  1959  000E0A  B4D8               	btfsc	status,2,c
  1960  000E0C  EF90  F004         	goto	l2906
  1961  000E10  0A03               	xorlw	3	; case 2
  1962  000E12  B4D8               	btfsc	status,2,c
  1963  000E14  EFC9  F004         	goto	l2924
  1964  000E18  0A01               	xorlw	1	; case 3
  1965  000E1A  B4D8               	btfsc	status,2,c
  1966  000E1C  EF02  F005         	goto	l2942
  1967  000E20  0A07               	xorlw	7	; case 4
  1968  000E22  B4D8               	btfsc	status,2,c
  1969  000E24  EF3B  F005         	goto	l2960
  1970  000E28  EF16  F007         	goto	l183
  1971  000E2C                     l183:
  1972  000E2C  0012               	return		;funcret
  1973  000E2E                     __end_of_activar_seguridad:
  1974                           	callstack 0
  1975                           
  1976 ;; *************** function _sprintf *****************
  1977 ;; Defined at:
  1978 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_sprintf.c"
  1979 ;; Parameters:    Size  Location     Type
  1980 ;;  s               2   88[COMRAM] PTR unsigned char 
  1981 ;;		 -> activar_seguridad@Temperatura(10), 
  1982 ;;  fmt             2   90[COMRAM] PTR const unsigned char 
  1983 ;;		 -> STR_5(6), 
  1984 ;; Auto vars:     Size  Location     Type
  1985 ;;  f               6    4[BANK0 ] struct _IO_FILE
  1986 ;;  ap              2    2[BANK0 ] PTR void [1]
  1987 ;;		 -> ?_sprintf(2), 
  1988 ;;  ret             2    0        int 
  1989 ;; Return value:  Size  Location     Type
  1990 ;;                  2   88[COMRAM] int 
  1991 ;; Registers used:
  1992 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1993 ;; Tracked objects:
  1994 ;;		On entry : 0/0
  1995 ;;		On exit  : 0/0
  1996 ;;		Unchanged: 0/0
  1997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1998 ;;      Params:         6       0       0       0       0       0       0       0       0
  1999 ;;      Locals:         0      10       0       0       0       0       0       0       0
  2000 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2001 ;;      Totals:         6      10       0       0       0       0       0       0       0
  2002 ;;Total ram usage:       16 bytes
  2003 ;; Hardware stack levels used:    1
  2004 ;; Hardware stack levels required when called:    7
  2005 ;; This function calls:
  2006 ;;		_vfprintf
  2007 ;; This function is called by:
  2008 ;;		_activar_seguridad
  2009 ;; This function uses a non-reentrant model
  2010 ;;
  2011                           
  2012                           	psect	text3
  2013  0024C4                     __ptext3:
  2014                           	callstack 0
  2015  0024C4                     _sprintf:
  2016                           	callstack 21
  2017  0024C4  0E5D               	movlw	low (?_sprintf+4)
  2018  0024C6  0100               	movlb	0	; () banked
  2019  0024C8  6F92               	movwf	sprintf@ap& (0+255),b
  2020  0024CA  0E00               	movlw	high (?_sprintf+4)
  2021  0024CC  6F93               	movwf	(sprintf@ap+1)& (0+255),b
  2022  0024CE  C059  F094         	movff	sprintf@s,sprintf@f
  2023  0024D2  C05A  F095         	movff	sprintf@s+1,sprintf@f+1
  2024  0024D6                     
  2025                           ; BSR set to: 0
  2026  0024D6  0E00               	movlw	0
  2027  0024D8  6F97               	movwf	(sprintf@f+3)& (0+255),b
  2028  0024DA  0E00               	movlw	0
  2029  0024DC  6F96               	movwf	(sprintf@f+2)& (0+255),b
  2030  0024DE                     
  2031                           ; BSR set to: 0
  2032  0024DE  0E00               	movlw	0
  2033  0024E0  6F99               	movwf	(sprintf@f+5)& (0+255),b
  2034  0024E2  0E00               	movlw	0
  2035  0024E4  6F98               	movwf	(sprintf@f+4)& (0+255),b
  2036  0024E6                     
  2037                           ; BSR set to: 0
  2038  0024E6  0E94               	movlw	low sprintf@f
  2039  0024E8  6E51               	movwf	vfprintf@fp^0,c
  2040  0024EA  0E00               	movlw	high sprintf@f
  2041  0024EC  6E52               	movwf	(vfprintf@fp+1)^0,c
  2042  0024EE  C05B  F053         	movff	sprintf@fmt,vfprintf@fmt
  2043  0024F2  C05C  F054         	movff	sprintf@fmt+1,vfprintf@fmt+1
  2044  0024F6  0E92               	movlw	low sprintf@ap
  2045  0024F8  6E55               	movwf	vfprintf@ap^0,c
  2046  0024FA  0E00               	movlw	high sprintf@ap
  2047  0024FC  6E56               	movwf	(vfprintf@ap+1)^0,c
  2048  0024FE  EC03  F012         	call	_vfprintf	;wreg free
  2049  002502  0100               	movlb	0	; () banked
  2050  002504  5196               	movf	(sprintf@f+2)& (0+255),w,b
  2051  002506  2459               	addwf	sprintf@s^0,w,c
  2052  002508  6ED9               	movwf	fsr2l,c
  2053  00250A  5197               	movf	(sprintf@f+3)& (0+255),w,b
  2054  00250C  205A               	addwfc	(sprintf@s+1)^0,w,c
  2055  00250E  6EDA               	movwf	fsr2h,c
  2056  002510  0E00               	movlw	0
  2057  002512  6EDF               	movwf	indf2,c
  2058  002514                     
  2059                           ; BSR set to: 0
  2060  002514  0012               	return		;funcret
  2061  002516                     __end_of_sprintf:
  2062                           	callstack 0
  2063                           
  2064 ;; *************** function _vfprintf *****************
  2065 ;; Defined at:
  2066 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  2067 ;; Parameters:    Size  Location     Type
  2068 ;;  fp              2   80[COMRAM] PTR struct _IO_FILE
  2069 ;;		 -> sprintf@f(6), 
  2070 ;;  fmt             2   82[COMRAM] PTR const unsigned char 
  2071 ;;		 -> STR_5(6), 
  2072 ;;  ap              2   84[COMRAM] PTR PTR void 
  2073 ;;		 -> sprintf@ap(2), 
  2074 ;; Auto vars:     Size  Location     Type
  2075 ;;  cfmt            2   86[COMRAM] PTR unsigned char 
  2076 ;;		 -> STR_5(6), 
  2077 ;; Return value:  Size  Location     Type
  2078 ;;                  2   80[COMRAM] int 
  2079 ;; Registers used:
  2080 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2081 ;; Tracked objects:
  2082 ;;		On entry : 0/0
  2083 ;;		On exit  : 0/0
  2084 ;;		Unchanged: 0/0
  2085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2086 ;;      Params:         6       0       0       0       0       0       0       0       0
  2087 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2088 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2089 ;;      Totals:         8       0       0       0       0       0       0       0       0
  2090 ;;Total ram usage:        8 bytes
  2091 ;; Hardware stack levels used:    1
  2092 ;; Hardware stack levels required when called:    6
  2093 ;; This function calls:
  2094 ;;		_vfpfcnvrt
  2095 ;; This function is called by:
  2096 ;;		_sprintf
  2097 ;; This function uses a non-reentrant model
  2098 ;;
  2099                           
  2100                           	psect	text4
  2101  002406                     __ptext4:
  2102                           	callstack 0
  2103  002406                     _vfprintf:
  2104                           	callstack 21
  2105  002406                     
  2106                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.31\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  2107  002406  C053  F057         	movff	vfprintf@fmt,vfprintf@cfmt
  2108  00240A  C054  F058         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2109  00240E                     
  2110                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  2111  00240E  0E00               	movlw	0
  2112  002410  0100               	movlb	0	; () banked
  2113  002412  6F61               	movwf	(_nout+1)& (0+255),b
  2114  002414  0E00               	movlw	0
  2115  002416  6F60               	movwf	_nout& (0+255),b
  2116                           
  2117                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  2118  002418  EF21  F012         	goto	l2484
  2119  00241C                     l2482:
  2120                           
  2121                           ; BSR set to: 0
  2122                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  2123  00241C  C051  F040         	movff	vfprintf@fp,vfpfcnvrt@fp
  2124  002420  C052  F041         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2125  002424  0E57               	movlw	low vfprintf@cfmt
  2126  002426  6E42               	movwf	vfpfcnvrt@fmt^0,c
  2127  002428  0E00               	movlw	high vfprintf@cfmt
  2128  00242A  6E43               	movwf	(vfpfcnvrt@fmt+1)^0,c
  2129  00242C  C055  F044         	movff	vfprintf@ap,vfpfcnvrt@ap
  2130  002430  C056  F045         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2131  002434  EC9D  F00A         	call	_vfpfcnvrt	;wreg free
  2132  002438  5040               	movf	?_vfpfcnvrt^0,w,c
  2133  00243A  0100               	movlb	0	; () banked
  2134  00243C  2760               	addwf	_nout& (0+255),f,b
  2135  00243E  5041               	movf	(?_vfpfcnvrt+1)^0,w,c
  2136  002440  2361               	addwfc	(_nout+1)& (0+255),f,b
  2137  002442                     l2484:
  2138                           
  2139                           ; BSR set to: 0
  2140                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  2141  002442  C057  FFF6         	movff	vfprintf@cfmt,tblptrl
  2142  002446  C058  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2143  00244A                     	if	0	;tblptru may be non-zero
  2144  00244A                     	endif
  2145  00244A                     	if	0	;tblptru may be non-zero
  2146  00244A                     	endif
  2147  00244A  0008               	tblrd		*
  2148  00244C  50F5               	movf	tablat,w,c
  2149  00244E  0900               	iorlw	0
  2150  002450  A4D8               	btfss	status,2,c
  2151  002452  EF2D  F012         	goto	u2061
  2152  002456  EF2F  F012         	goto	u2060
  2153  00245A                     u2061:
  2154  00245A  EF0E  F012         	goto	l2482
  2155  00245E                     u2060:
  2156  00245E                     
  2157                           ; BSR set to: 0
  2158                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  2159  00245E  C060  F051         	movff	_nout,?_vfprintf
  2160  002462  C061  F052         	movff	_nout+1,?_vfprintf+1
  2161  002466                     
  2162                           ; BSR set to: 0
  2163  002466  0012               	return		;funcret
  2164  002468                     __end_of_vfprintf:
  2165                           	callstack 0
  2166                           
  2167 ;; *************** function _vfpfcnvrt *****************
  2168 ;; Defined at:
  2169 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  2170 ;; Parameters:    Size  Location     Type
  2171 ;;  fp              2   63[COMRAM] PTR struct _IO_FILE
  2172 ;;		 -> sprintf@f(6), 
  2173 ;;  fmt             2   65[COMRAM] PTR PTR unsigned char 
  2174 ;;		 -> vfprintf@cfmt(2), 
  2175 ;;  ap              2   67[COMRAM] PTR PTR void 
  2176 ;;		 -> sprintf@ap(2), 
  2177 ;; Auto vars:     Size  Location     Type
  2178 ;;  ll              8   71[COMRAM] long long 
  2179 ;;  llu             8    0        unsigned long long 
  2180 ;;  f               4    0        unsigned long long 
  2181 ;;  vp              3    0        PTR void 
  2182 ;;  ct              3    0        unsigned char [3]
  2183 ;;  cp              3    0        PTR unsigned char 
  2184 ;;  i               2    0        int 
  2185 ;;  done            2    0        int 
  2186 ;;  c               1   79[COMRAM] unsigned char 
  2187 ;; Return value:  Size  Location     Type
  2188 ;;                  2   63[COMRAM] int 
  2189 ;; Registers used:
  2190 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2191 ;; Tracked objects:
  2192 ;;		On entry : 0/0
  2193 ;;		On exit  : 0/0
  2194 ;;		Unchanged: 0/0
  2195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2196 ;;      Params:         6       0       0       0       0       0       0       0       0
  2197 ;;      Locals:         9       0       0       0       0       0       0       0       0
  2198 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2199 ;;      Totals:        17       0       0       0       0       0       0       0       0
  2200 ;;Total ram usage:       17 bytes
  2201 ;; Hardware stack levels used:    1
  2202 ;; Hardware stack levels required when called:    5
  2203 ;; This function calls:
  2204 ;;		_ctoa
  2205 ;;		_dtoa
  2206 ;;		_fputc
  2207 ;; This function is called by:
  2208 ;;		_vfprintf
  2209 ;; This function uses a non-reentrant model
  2210 ;;
  2211                           
  2212                           	psect	text5
  2213  00153A                     __ptext5:
  2214                           	callstack 0
  2215  00153A                     _vfpfcnvrt:
  2216                           	callstack 21
  2217  00153A                     
  2218                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.31\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          1\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  2219  00153A  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2220  00153E  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2221  001542  CFDE FFF6          	movff	postinc2,tblptrl
  2222  001546  CFDD FFF7          	movff	postdec2,tblptrh
  2223  00154A                     	if	0	;tblptru may be non-zero
  2224  00154A                     	endif
  2225  00154A                     	if	0	;tblptru may be non-zero
  2226  00154A                     	endif
  2227  00154A  0008               	tblrd		*
  2228  00154C  50F5               	movf	tablat,w,c
  2229  00154E  0A25               	xorlw	37
  2230  001550  A4D8               	btfss	status,2,c
  2231  001552  EFAD  F00A         	goto	u1971
  2232  001556  EFAF  F00A         	goto	u1970
  2233  00155A                     u1971:
  2234  00155A  EF94  F00B         	goto	l2418
  2235  00155E                     u1970:
  2236  00155E                     
  2237                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  2238  00155E  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2239  001562  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2240  001566  2ADE               	incf	postinc2,f,c
  2241  001568  0E00               	movlw	0
  2242  00156A  22DD               	addwfc	postdec2,f,c
  2243  00156C                     
  2244                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  2245  00156C  0E00               	movlw	0
  2246  00156E  0100               	movlb	0	; () banked
  2247  001570  6F63               	movwf	(_width+1)& (0+255),b
  2248  001572  0E00               	movlw	0
  2249  001574  6F62               	movwf	_width& (0+255),b
  2250  001576  C062  F066         	movff	_width,_flags
  2251  00157A  C063  F067         	movff	_width+1,_flags+1
  2252  00157E                     
  2253                           ; BSR set to: 0
  2254                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  2255  00157E  6964               	setf	_prec& (0+255),b
  2256  001580  6965               	setf	(_prec+1)& (0+255),b
  2257  001582                     
  2258                           ; BSR set to: 0
  2259                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 814:         if (
      +                          *fmt[0] == 'c') {
  2260  001582  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2261  001586  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2262  00158A  CFDE FFF6          	movff	postinc2,tblptrl
  2263  00158E  CFDD FFF7          	movff	postdec2,tblptrh
  2264  001592                     	if	0	;tblptru may be non-zero
  2265  001592                     	endif
  2266  001592                     	if	0	;tblptru may be non-zero
  2267  001592                     	endif
  2268  001592  0008               	tblrd		*
  2269  001594  50F5               	movf	tablat,w,c
  2270  001596  0A63               	xorlw	99
  2271  001598  A4D8               	btfss	status,2,c
  2272  00159A  EFD1  F00A         	goto	u1981
  2273  00159E  EFD3  F00A         	goto	u1980
  2274  0015A2                     u1981:
  2275  0015A2  EFFA  F00A         	goto	l2392
  2276  0015A6                     u1980:
  2277  0015A6                     
  2278                           ; BSR set to: 0
  2279                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 815:             
      +                          ++*fmt;
  2280  0015A6  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2281  0015AA  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2282  0015AE  2ADE               	incf	postinc2,f,c
  2283  0015B0  0E00               	movlw	0
  2284  0015B2  22DD               	addwfc	postdec2,f,c
  2285                           
  2286                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 816:             
      +                          c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  2287  0015B4  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2288  0015B8  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2289  0015BC  CFDF F046          	movff	indf2,??_vfpfcnvrt
  2290  0015C0  0E02               	movlw	2
  2291  0015C2  26DE               	addwf	postinc2,f,c
  2292  0015C4  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  2293  0015C8  0E00               	movlw	0
  2294  0015CA  22DD               	addwfc	postdec2,f,c
  2295  0015CC  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2296  0015D0  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2297  0015D4  50DF               	movf	indf2,w,c
  2298  0015D6  6E50               	movwf	vfpfcnvrt@c^0,c
  2299  0015D8                     
  2300                           ; BSR set to: 0
  2301                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 817:             
      +                          return ctoa(fp, c);
  2302  0015D8  C040  F00A         	movff	vfpfcnvrt@fp,ctoa@fp
  2303  0015DC  C041  F00B         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  2304  0015E0  C050  F00C         	movff	vfpfcnvrt@c,ctoa@c
  2305  0015E4  ECCA  F00F         	call	_ctoa	;wreg free
  2306  0015E8  C00A  F040         	movff	?_ctoa,?_vfpfcnvrt
  2307  0015EC  C00B  F041         	movff	?_ctoa+1,?_vfpfcnvrt+1
  2308  0015F0  EFAF  F00B         	goto	l1002
  2309  0015F4                     l2392:
  2310                           
  2311                           ; BSR set to: 0
  2312                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  2313  0015F4  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2314  0015F8  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2315  0015FC  CFDE FFF6          	movff	postinc2,tblptrl
  2316  001600  CFDD FFF7          	movff	postdec2,tblptrh
  2317  001604                     	if	0	;tblptru may be non-zero
  2318  001604                     	endif
  2319  001604                     	if	0	;tblptru may be non-zero
  2320  001604                     	endif
  2321  001604  0008               	tblrd		*
  2322  001606  50F5               	movf	tablat,w,c
  2323  001608  0A64               	xorlw	100
  2324  00160A  B4D8               	btfsc	status,2,c
  2325  00160C  EF0A  F00B         	goto	u1991
  2326  001610  EF0C  F00B         	goto	u1990
  2327  001614                     u1991:
  2328  001614  EF1E  F00B         	goto	l2396
  2329  001618                     u1990:
  2330  001618                     
  2331                           ; BSR set to: 0
  2332  001618  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2333  00161C  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2334  001620  CFDE FFF6          	movff	postinc2,tblptrl
  2335  001624  CFDD FFF7          	movff	postdec2,tblptrh
  2336  001628                     	if	0	;tblptru may be non-zero
  2337  001628                     	endif
  2338  001628                     	if	0	;tblptru may be non-zero
  2339  001628                     	endif
  2340  001628  0008               	tblrd		*
  2341  00162A  50F5               	movf	tablat,w,c
  2342  00162C  0A69               	xorlw	105
  2343  00162E  A4D8               	btfss	status,2,c
  2344  001630  EF1C  F00B         	goto	u2001
  2345  001634  EF1E  F00B         	goto	u2000
  2346  001638                     u2001:
  2347  001638  EF5E  F00B         	goto	l2402
  2348  00163C                     u2000:
  2349  00163C                     l2396:
  2350                           
  2351                           ; BSR set to: 0
  2352                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  2353  00163C  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2354  001640  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2355  001644  2ADE               	incf	postinc2,f,c
  2356  001646  0E00               	movlw	0
  2357  001648  22DD               	addwfc	postdec2,f,c
  2358                           
  2359                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  2360  00164A  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2361  00164E  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2362  001652  CFDF F046          	movff	indf2,??_vfpfcnvrt
  2363  001656  0E02               	movlw	2
  2364  001658  26DE               	addwf	postinc2,f,c
  2365  00165A  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  2366  00165E  0E00               	movlw	0
  2367  001660  22DD               	addwfc	postdec2,f,c
  2368  001662  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2369  001666  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2370  00166A  CFDE F048          	movff	postinc2,vfpfcnvrt@ll
  2371  00166E  CFDD F049          	movff	postdec2,vfpfcnvrt@ll+1
  2372  001672  0E00               	movlw	0
  2373  001674  BE49               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  2374  001676  0EFF               	movlw	-1
  2375  001678  6E4A               	movwf	(vfpfcnvrt@ll+2)^0,c
  2376  00167A  6E4B               	movwf	(vfpfcnvrt@ll+3)^0,c
  2377  00167C  6E4C               	movwf	(vfpfcnvrt@ll+4)^0,c
  2378  00167E  6E4D               	movwf	(vfpfcnvrt@ll+5)^0,c
  2379  001680  6E4E               	movwf	(vfpfcnvrt@ll+6)^0,c
  2380  001682  6E4F               	movwf	(vfpfcnvrt@ll+7)^0,c
  2381  001684                     
  2382                           ; BSR set to: 0
  2383                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  2384  001684  C040  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  2385  001688  C041  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2386  00168C  C048  F01E         	movff	vfpfcnvrt@ll,dtoa@d
  2387  001690  C049  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  2388  001694  C04A  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  2389  001698  C04B  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  2390  00169C  C04C  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  2391  0016A0  C04D  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  2392  0016A4  C04E  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  2393  0016A8  C04F  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  2394  0016AC  EC2C  F009         	call	_dtoa	;wreg free
  2395  0016B0  C01C  F040         	movff	?_dtoa,?_vfpfcnvrt
  2396  0016B4  C01D  F041         	movff	?_dtoa+1,?_vfpfcnvrt+1
  2397  0016B8  EFAF  F00B         	goto	l1002
  2398  0016BC                     l2402:
  2399                           
  2400                           ; BSR set to: 0
  2401                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  2402  0016BC  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2403  0016C0  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2404  0016C4  CFDE FFF6          	movff	postinc2,tblptrl
  2405  0016C8  CFDD FFF7          	movff	postdec2,tblptrh
  2406  0016CC                     	if	0	;tblptru may be non-zero
  2407  0016CC                     	endif
  2408  0016CC                     	if	0	;tblptru may be non-zero
  2409  0016CC                     	endif
  2410  0016CC  0008               	tblrd		*
  2411  0016CE  50F5               	movf	tablat,w,c
  2412  0016D0  0A25               	xorlw	37
  2413  0016D2  A4D8               	btfss	status,2,c
  2414  0016D4  EF6E  F00B         	goto	u2011
  2415  0016D8  EF70  F00B         	goto	u2010
  2416  0016DC                     u2011:
  2417  0016DC  EF87  F00B         	goto	l2412
  2418  0016E0                     u2010:
  2419  0016E0                     
  2420                           ; BSR set to: 0
  2421                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  2422  0016E0  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2423  0016E4  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2424  0016E8  2ADE               	incf	postinc2,f,c
  2425  0016EA  0E00               	movlw	0
  2426  0016EC  22DD               	addwfc	postdec2,f,c
  2427  0016EE                     
  2428                           ; BSR set to: 0
  2429                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  2430  0016EE  0E00               	movlw	0
  2431  0016F0  6E02               	movwf	(fputc@c+1)^0,c
  2432  0016F2  0E25               	movlw	37
  2433  0016F4  6E01               	movwf	fputc@c^0,c
  2434  0016F6  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2435  0016FA  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2436  0016FE  EC36  F010         	call	_fputc	;wreg free
  2437  001702                     l2408:
  2438                           
  2439                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  2440  001702  0E00               	movlw	0
  2441  001704  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  2442  001706  0E01               	movlw	1
  2443  001708  6E40               	movwf	?_vfpfcnvrt^0,c
  2444  00170A  EFAF  F00B         	goto	l1002
  2445  00170E                     l2412:
  2446                           
  2447                           ; BSR set to: 0
  2448                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  2449  00170E  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2450  001712  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2451  001716  2ADE               	incf	postinc2,f,c
  2452  001718  0E00               	movlw	0
  2453  00171A  22DD               	addwfc	postdec2,f,c
  2454  00171C                     
  2455                           ; BSR set to: 0
  2456                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  2457  00171C  0E00               	movlw	0
  2458  00171E  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  2459  001720  0E00               	movlw	0
  2460  001722  6E40               	movwf	?_vfpfcnvrt^0,c
  2461  001724  EFAF  F00B         	goto	l1002
  2462  001728                     l2418:
  2463                           
  2464                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  2465  001728  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2466  00172C  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2467  001730  CFDE FFF6          	movff	postinc2,tblptrl
  2468  001734  CFDD FFF7          	movff	postdec2,tblptrh
  2469  001738                     	if	0	;tblptru may be non-zero
  2470  001738                     	endif
  2471  001738                     	if	0	;tblptru may be non-zero
  2472  001738                     	endif
  2473  001738  0008               	tblrd		*
  2474  00173A  50F5               	movf	tablat,w,c
  2475  00173C  6E01               	movwf	fputc@c^0,c
  2476  00173E  6A02               	clrf	(fputc@c+1)^0,c
  2477  001740  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2478  001744  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2479  001748  EC36  F010         	call	_fputc	;wreg free
  2480  00174C                     
  2481                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  2482  00174C  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2483  001750  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2484  001754  2ADE               	incf	postinc2,f,c
  2485  001756  0E00               	movlw	0
  2486  001758  22DD               	addwfc	postdec2,f,c
  2487  00175A  EF81  F00B         	goto	l2408
  2488  00175E                     l1002:
  2489  00175E  0012               	return		;funcret
  2490  001760                     __end_of_vfpfcnvrt:
  2491                           	callstack 0
  2492                           
  2493 ;; *************** function _dtoa *****************
  2494 ;; Defined at:
  2495 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  2496 ;; Parameters:    Size  Location     Type
  2497 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  2498 ;;		 -> sprintf@f(6), 
  2499 ;;  d               8   29[COMRAM] long long 
  2500 ;; Auto vars:     Size  Location     Type
  2501 ;;  n               8   53[COMRAM] long long 
  2502 ;;  i               2   61[COMRAM] int 
  2503 ;;  s               2   51[COMRAM] int 
  2504 ;;  w               2   49[COMRAM] int 
  2505 ;;  p               2   47[COMRAM] int 
  2506 ;; Return value:  Size  Location     Type
  2507 ;;                  2   27[COMRAM] int 
  2508 ;; Registers used:
  2509 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2510 ;; Tracked objects:
  2511 ;;		On entry : 0/0
  2512 ;;		On exit  : 0/0
  2513 ;;		Unchanged: 0/0
  2514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2515 ;;      Params:        10       0       0       0       0       0       0       0       0
  2516 ;;      Locals:        18       0       0       0       0       0       0       0       0
  2517 ;;      Temps:          8       0       0       0       0       0       0       0       0
  2518 ;;      Totals:        36       0       0       0       0       0       0       0       0
  2519 ;;Total ram usage:       36 bytes
  2520 ;; Hardware stack levels used:    1
  2521 ;; Hardware stack levels required when called:    4
  2522 ;; This function calls:
  2523 ;;		___aodiv
  2524 ;;		___aomod
  2525 ;;		_abs
  2526 ;;		_pad
  2527 ;; This function is called by:
  2528 ;;		_vfpfcnvrt
  2529 ;; This function uses a non-reentrant model
  2530 ;;
  2531                           
  2532                           	psect	text6
  2533  001258                     __ptext6:
  2534                           	callstack 0
  2535  001258                     _dtoa:
  2536                           	callstack 21
  2537  001258                     
  2538                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  2539  001258  C01E  F036         	movff	dtoa@d,dtoa@n
  2540  00125C  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
  2541  001260  C020  F038         	movff	dtoa@d+2,dtoa@n+2
  2542  001264  C021  F039         	movff	dtoa@d+3,dtoa@n+3
  2543  001268  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
  2544  00126C  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
  2545  001270  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
  2546  001274  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
  2547  001278                     
  2548                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  2549  001278  BE3D               	btfsc	(dtoa@n+7)^0,7,c
  2550  00127A  EF41  F009         	goto	u1781
  2551  00127E  EF44  F009         	goto	u1780
  2552  001282                     u1781:
  2553  001282  0E01               	movlw	1
  2554  001284  EF45  F009         	goto	u1790
  2555  001288                     u1780:
  2556  001288  0E00               	movlw	0
  2557  00128A                     u1790:
  2558  00128A  6E34               	movwf	dtoa@s^0,c
  2559  00128C  6A35               	clrf	(dtoa@s+1)^0,c
  2560                           
  2561                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  2562  00128E  5034               	movf	dtoa@s^0,w,c
  2563  001290  1035               	iorwf	(dtoa@s+1)^0,w,c
  2564  001292  B4D8               	btfsc	status,2,c
  2565  001294  EF4E  F009         	goto	u1801
  2566  001298  EF50  F009         	goto	u1800
  2567  00129C                     u1801:
  2568  00129C  EF60  F009         	goto	l2304
  2569  0012A0                     u1800:
  2570  0012A0                     
  2571                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  2572  0012A0  1E3D               	comf	(dtoa@n+7)^0,f,c
  2573  0012A2  1E3C               	comf	(dtoa@n+6)^0,f,c
  2574  0012A4  1E3B               	comf	(dtoa@n+5)^0,f,c
  2575  0012A6  1E3A               	comf	(dtoa@n+4)^0,f,c
  2576  0012A8  1E39               	comf	(dtoa@n+3)^0,f,c
  2577  0012AA  1E38               	comf	(dtoa@n+2)^0,f,c
  2578  0012AC  1E37               	comf	(dtoa@n+1)^0,f,c
  2579  0012AE  6C36               	negf	dtoa@n^0,c
  2580  0012B0  0E00               	movlw	0
  2581  0012B2  2237               	addwfc	(dtoa@n+1)^0,f,c
  2582  0012B4  2238               	addwfc	(dtoa@n+2)^0,f,c
  2583  0012B6  2239               	addwfc	(dtoa@n+3)^0,f,c
  2584  0012B8  223A               	addwfc	(dtoa@n+4)^0,f,c
  2585  0012BA  223B               	addwfc	(dtoa@n+5)^0,f,c
  2586  0012BC  223C               	addwfc	(dtoa@n+6)^0,f,c
  2587  0012BE  223D               	addwfc	(dtoa@n+7)^0,f,c
  2588  0012C0                     l2304:
  2589                           
  2590                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  2591  0012C0  0100               	movlb	0	; () banked
  2592  0012C2  BF65               	btfsc	(_prec+1)& (0+255),7,b
  2593  0012C4  EF66  F009         	goto	u1811
  2594  0012C8  EF68  F009         	goto	u1810
  2595  0012CC                     u1811:
  2596  0012CC  EF69  F009         	goto	l2308
  2597  0012D0                     u1810:
  2598  0012D0                     
  2599                           ; BSR set to: 0
  2600                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  2601  0012D0  9366               	bcf	_flags& (0+255),1,b
  2602  0012D2                     l2308:
  2603                           
  2604                           ; BSR set to: 0
  2605                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  2606  0012D2  BF65               	btfsc	(_prec+1)& (0+255),7,b
  2607  0012D4  EF76  F009         	goto	u1820
  2608  0012D8  5165               	movf	(_prec+1)& (0+255),w,b
  2609  0012DA  E106               	bnz	u1821
  2610  0012DC  0564               	decf	_prec& (0+255),w,b
  2611  0012DE  B0D8               	btfsc	status,0,c
  2612  0012E0  EF74  F009         	goto	u1821
  2613  0012E4  EF76  F009         	goto	u1820
  2614  0012E8                     u1821:
  2615  0012E8  EF7C  F009         	goto	l977
  2616  0012EC                     u1820:
  2617  0012EC                     
  2618                           ; BSR set to: 0
  2619  0012EC  0E00               	movlw	0
  2620  0012EE  6E31               	movwf	(dtoa@p+1)^0,c
  2621  0012F0  0E01               	movlw	1
  2622  0012F2  6E30               	movwf	dtoa@p^0,c
  2623  0012F4  EF80  F009         	goto	l979
  2624  0012F8                     l977:
  2625                           
  2626                           ; BSR set to: 0
  2627  0012F8  C064  F030         	movff	_prec,dtoa@p
  2628  0012FC  C065  F031         	movff	_prec+1,dtoa@p+1
  2629  001300                     l979:
  2630                           
  2631                           ; BSR set to: 0
  2632                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  2633  001300  C062  F032         	movff	_width,dtoa@w
  2634  001304  C063  F033         	movff	_width+1,dtoa@w+1
  2635  001308                     
  2636                           ; BSR set to: 0
  2637                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  2638  001308  5034               	movf	dtoa@s^0,w,c
  2639  00130A  1035               	iorwf	(dtoa@s+1)^0,w,c
  2640  00130C  A4D8               	btfss	status,2,c
  2641  00130E  EF8B  F009         	goto	u1831
  2642  001312  EF8D  F009         	goto	u1830
  2643  001316                     u1831:
  2644  001316  EF94  F009         	goto	l2316
  2645  00131A                     u1830:
  2646  00131A                     
  2647                           ; BSR set to: 0
  2648  00131A  A566               	btfss	_flags& (0+255),2,b
  2649  00131C  EF92  F009         	goto	u1841
  2650  001320  EF94  F009         	goto	u1840
  2651  001324                     u1841:
  2652  001324  EF97  F009         	goto	l2318
  2653  001328                     u1840:
  2654  001328                     l2316:
  2655                           
  2656                           ; BSR set to: 0
  2657                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 306:         --w;
  2658  001328  0632               	decf	dtoa@w^0,f,c
  2659  00132A  A0D8               	btfss	status,0,c
  2660  00132C  0633               	decf	(dtoa@w+1)^0,f,c
  2661  00132E                     l2318:
  2662                           
  2663                           ; BSR set to: 0
  2664                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  2665  00132E  0E00               	movlw	0
  2666  001330  6E3F               	movwf	(dtoa@i+1)^0,c
  2667  001332  0E1F               	movlw	31
  2668  001334  6E3E               	movwf	dtoa@i^0,c
  2669  001336                     
  2670                           ; BSR set to: 0
  2671                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  2672  001336  0E00               	movlw	0
  2673  001338  6F8B               	movwf	(_dbuf+31)& (0+255),b
  2674                           
  2675                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2676  00133A  EF1B  F00A         	goto	l2332
  2677  00133E                     l2322:
  2678                           
  2679                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 313:         --i;
  2680  00133E  063E               	decf	dtoa@i^0,f,c
  2681  001340  A0D8               	btfss	status,0,c
  2682  001342  063F               	decf	(dtoa@i+1)^0,f,c
  2683  001344                     
  2684                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  2685  001344  0E6C               	movlw	low _dbuf
  2686  001346  243E               	addwf	dtoa@i^0,w,c
  2687  001348  6ED9               	movwf	fsr2l,c
  2688  00134A  0E00               	movlw	high _dbuf
  2689  00134C  203F               	addwfc	(dtoa@i+1)^0,w,c
  2690  00134E  6EDA               	movwf	fsr2h,c
  2691  001350  C036  F001         	movff	dtoa@n,___aomod@dividend
  2692  001354  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
  2693  001358  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
  2694  00135C  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
  2695  001360  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
  2696  001364  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
  2697  001368  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
  2698  00136C  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
  2699  001370  0E0A               	movlw	10
  2700  001372  6E09               	movwf	___aomod@divisor^0,c
  2701  001374  0E00               	movlw	0
  2702  001376  6E0A               	movwf	(___aomod@divisor+1)^0,c
  2703  001378  0E00               	movlw	0
  2704  00137A  6E0B               	movwf	(___aomod@divisor+2)^0,c
  2705  00137C  0E00               	movlw	0
  2706  00137E  6E0C               	movwf	(___aomod@divisor+3)^0,c
  2707  001380  0E00               	movlw	0
  2708  001382  6E0D               	movwf	(___aomod@divisor+4)^0,c
  2709  001384  0E00               	movlw	0
  2710  001386  6E0E               	movwf	(___aomod@divisor+5)^0,c
  2711  001388  0E00               	movlw	0
  2712  00138A  6E0F               	movwf	(___aomod@divisor+6)^0,c
  2713  00138C  0E00               	movlw	0
  2714  00138E  6E10               	movwf	(___aomod@divisor+7)^0,c
  2715  001390  EC13  F00E         	call	___aomod	;wreg free
  2716  001394  C001  F026         	movff	?___aomod,??_dtoa
  2717  001398  C002  F027         	movff	?___aomod+1,??_dtoa+1
  2718  00139C  C003  F028         	movff	?___aomod+2,??_dtoa+2
  2719  0013A0  C004  F029         	movff	?___aomod+3,??_dtoa+3
  2720  0013A4  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  2721  0013A8  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  2722  0013AC  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  2723  0013B0  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  2724  0013B4  C026  F013         	movff	??_dtoa,abs@a
  2725  0013B8  C028  F014         	movff	??_dtoa+2,abs@a+1
  2726  0013BC  ECF8  F012         	call	_abs	;wreg free
  2727  0013C0  5013               	movf	?_abs^0,w,c
  2728  0013C2  0F30               	addlw	48
  2729  0013C4  6EDF               	movwf	indf2,c
  2730  0013C6                     
  2731                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 315:         --p;
  2732  0013C6  0630               	decf	dtoa@p^0,f,c
  2733  0013C8  A0D8               	btfss	status,0,c
  2734  0013CA  0631               	decf	(dtoa@p+1)^0,f,c
  2735  0013CC                     
  2736                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 316:         --w;
  2737  0013CC  0632               	decf	dtoa@w^0,f,c
  2738  0013CE  A0D8               	btfss	status,0,c
  2739  0013D0  0633               	decf	(dtoa@w+1)^0,f,c
  2740  0013D2                     
  2741                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  2742  0013D2  C036  F001         	movff	dtoa@n,___aodiv@dividend
  2743  0013D6  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  2744  0013DA  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  2745  0013DE  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  2746  0013E2  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  2747  0013E6  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  2748  0013EA  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  2749  0013EE  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  2750  0013F2  0E0A               	movlw	10
  2751  0013F4  6E09               	movwf	___aodiv@divisor^0,c
  2752  0013F6  0E00               	movlw	0
  2753  0013F8  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  2754  0013FA  0E00               	movlw	0
  2755  0013FC  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  2756  0013FE  0E00               	movlw	0
  2757  001400  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  2758  001402  0E00               	movlw	0
  2759  001404  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  2760  001406  0E00               	movlw	0
  2761  001408  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  2762  00140A  0E00               	movlw	0
  2763  00140C  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  2764  00140E  0E00               	movlw	0
  2765  001410  6E10               	movwf	(___aodiv@divisor+7)^0,c
  2766  001412  EC4F  F00D         	call	___aodiv	;wreg free
  2767  001416  C001  F036         	movff	?___aodiv,dtoa@n
  2768  00141A  C002  F037         	movff	?___aodiv+1,dtoa@n+1
  2769  00141E  C003  F038         	movff	?___aodiv+2,dtoa@n+2
  2770  001422  C004  F039         	movff	?___aodiv+3,dtoa@n+3
  2771  001426  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
  2772  00142A  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
  2773  00142E  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
  2774  001432  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
  2775  001436                     l2332:
  2776                           
  2777                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2778  001436  BE3F               	btfsc	(dtoa@i+1)^0,7,c
  2779  001438  EF26  F00A         	goto	u1851
  2780  00143C  503F               	movf	(dtoa@i+1)^0,w,c
  2781  00143E  E108               	bnz	u1850
  2782  001440  043E               	decf	dtoa@i^0,w,c
  2783  001442  A0D8               	btfss	status,0,c
  2784  001444  EF26  F00A         	goto	u1851
  2785  001448  EF28  F00A         	goto	u1850
  2786  00144C                     u1851:
  2787  00144C  EF59  F00A         	goto	l2342
  2788  001450                     u1850:
  2789  001450  5036               	movf	dtoa@n^0,w,c
  2790  001452  1037               	iorwf	(dtoa@n+1)^0,w,c
  2791  001454  1038               	iorwf	(dtoa@n+2)^0,w,c
  2792  001456  1039               	iorwf	(dtoa@n+3)^0,w,c
  2793  001458  103A               	iorwf	(dtoa@n+4)^0,w,c
  2794  00145A  103B               	iorwf	(dtoa@n+5)^0,w,c
  2795  00145C  103C               	iorwf	(dtoa@n+6)^0,w,c
  2796  00145E  103D               	iorwf	(dtoa@n+7)^0,w,c
  2797  001460  A4D8               	btfss	status,2,c
  2798  001462  EF35  F00A         	goto	u1861
  2799  001466  EF37  F00A         	goto	u1860
  2800  00146A                     u1861:
  2801  00146A  EF9F  F009         	goto	l2322
  2802  00146E                     u1860:
  2803  00146E  BE31               	btfsc	(dtoa@p+1)^0,7,c
  2804  001470  EF44  F00A         	goto	u1870
  2805  001474  5031               	movf	(dtoa@p+1)^0,w,c
  2806  001476  E106               	bnz	u1871
  2807  001478  0430               	decf	dtoa@p^0,w,c
  2808  00147A  B0D8               	btfsc	status,0,c
  2809  00147C  EF42  F00A         	goto	u1871
  2810  001480  EF44  F00A         	goto	u1870
  2811  001484                     u1871:
  2812  001484  EF9F  F009         	goto	l2322
  2813  001488                     u1870:
  2814  001488  BE33               	btfsc	(dtoa@w+1)^0,7,c
  2815  00148A  EF4F  F00A         	goto	u1881
  2816  00148E  5033               	movf	(dtoa@w+1)^0,w,c
  2817  001490  E108               	bnz	u1880
  2818  001492  0432               	decf	dtoa@w^0,w,c
  2819  001494  A0D8               	btfss	status,0,c
  2820  001496  EF4F  F00A         	goto	u1881
  2821  00149A  EF51  F00A         	goto	u1880
  2822  00149E                     u1881:
  2823  00149E  EF59  F00A         	goto	l2342
  2824  0014A2                     u1880:
  2825  0014A2  0100               	movlb	0	; () banked
  2826  0014A4  B366               	btfsc	_flags& (0+255),1,b
  2827  0014A6  EF57  F00A         	goto	u1891
  2828  0014AA  EF59  F00A         	goto	u1890
  2829  0014AE                     u1891:
  2830  0014AE  EF9F  F009         	goto	l2322
  2831  0014B2                     u1890:
  2832  0014B2                     l2342:
  2833                           
  2834                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  2835  0014B2  5034               	movf	dtoa@s^0,w,c
  2836  0014B4  1035               	iorwf	(dtoa@s+1)^0,w,c
  2837  0014B6  A4D8               	btfss	status,2,c
  2838  0014B8  EF60  F00A         	goto	u1901
  2839  0014BC  EF62  F00A         	goto	u1900
  2840  0014C0                     u1901:
  2841  0014C0  EF6A  F00A         	goto	l2346
  2842  0014C4                     u1900:
  2843  0014C4  0100               	movlb	0	; () banked
  2844  0014C6  A566               	btfss	_flags& (0+255),2,b
  2845  0014C8  EF68  F00A         	goto	u1911
  2846  0014CC  EF6A  F00A         	goto	u1910
  2847  0014D0                     u1911:
  2848  0014D0  EF88  F00A         	goto	l2356
  2849  0014D4                     u1910:
  2850  0014D4                     l2346:
  2851                           
  2852                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 322:         --i;
  2853  0014D4  063E               	decf	dtoa@i^0,f,c
  2854  0014D6  A0D8               	btfss	status,0,c
  2855  0014D8  063F               	decf	(dtoa@i+1)^0,f,c
  2856  0014DA                     
  2857                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  2858  0014DA  5034               	movf	dtoa@s^0,w,c
  2859  0014DC  1035               	iorwf	(dtoa@s+1)^0,w,c
  2860  0014DE  A4D8               	btfss	status,2,c
  2861  0014E0  EF74  F00A         	goto	u1921
  2862  0014E4  EF76  F00A         	goto	u1920
  2863  0014E8                     u1921:
  2864  0014E8  EF7C  F00A         	goto	l2352
  2865  0014EC                     u1920:
  2866  0014EC  0E00               	movlw	0
  2867  0014EE  6E2F               	movwf	(_dtoa$1076+1)^0,c
  2868  0014F0  0E2B               	movlw	43
  2869  0014F2  6E2E               	movwf	_dtoa$1076^0,c
  2870  0014F4  EF80  F00A         	goto	l2354
  2871  0014F8                     l2352:
  2872  0014F8  0E00               	movlw	0
  2873  0014FA  6E2F               	movwf	(_dtoa$1076+1)^0,c
  2874  0014FC  0E2D               	movlw	45
  2875  0014FE  6E2E               	movwf	_dtoa$1076^0,c
  2876  001500                     l2354:
  2877  001500  0E6C               	movlw	low _dbuf
  2878  001502  243E               	addwf	dtoa@i^0,w,c
  2879  001504  6ED9               	movwf	fsr2l,c
  2880  001506  0E00               	movlw	high _dbuf
  2881  001508  203F               	addwfc	(dtoa@i+1)^0,w,c
  2882  00150A  6EDA               	movwf	fsr2h,c
  2883  00150C  C02E  FFDF         	movff	_dtoa$1076,indf2
  2884  001510                     l2356:
  2885                           
  2886                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  2887  001510  C01C  F011         	movff	dtoa@fp,pad@fp
  2888  001514  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  2889  001518  0E6C               	movlw	low _dbuf
  2890  00151A  243E               	addwf	dtoa@i^0,w,c
  2891  00151C  6E13               	movwf	pad@buf^0,c
  2892  00151E  0E00               	movlw	high _dbuf
  2893  001520  203F               	addwfc	(dtoa@i+1)^0,w,c
  2894  001522  6E14               	movwf	(pad@buf+1)^0,c
  2895  001524  C032  F015         	movff	dtoa@w,pad@p
  2896  001528  C033  F016         	movff	dtoa@w+1,pad@p+1
  2897  00152C  EC9B  F010         	call	_pad	;wreg free
  2898  001530  C011  F01C         	movff	?_pad,?_dtoa
  2899  001534  C012  F01D         	movff	?_pad+1,?_dtoa+1
  2900  001538  0012               	return		;funcret
  2901  00153A                     __end_of_dtoa:
  2902                           	callstack 0
  2903                           
  2904 ;; *************** function _pad *****************
  2905 ;; Defined at:
  2906 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  2907 ;; Parameters:    Size  Location     Type
  2908 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  2909 ;;		 -> sprintf@f(6), 
  2910 ;;  buf             2   18[COMRAM] PTR unsigned char 
  2911 ;;		 -> dbuf(32), 
  2912 ;;  p               2   20[COMRAM] int 
  2913 ;; Auto vars:     Size  Location     Type
  2914 ;;  w               2   25[COMRAM] int 
  2915 ;;  i               2   23[COMRAM] int 
  2916 ;; Return value:  Size  Location     Type
  2917 ;;                  2   16[COMRAM] int 
  2918 ;; Registers used:
  2919 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2920 ;; Tracked objects:
  2921 ;;		On entry : 0/0
  2922 ;;		On exit  : 0/0
  2923 ;;		Unchanged: 0/0
  2924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2925 ;;      Params:         6       0       0       0       0       0       0       0       0
  2926 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2927 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2928 ;;      Totals:        11       0       0       0       0       0       0       0       0
  2929 ;;Total ram usage:       11 bytes
  2930 ;; Hardware stack levels used:    1
  2931 ;; Hardware stack levels required when called:    3
  2932 ;; This function calls:
  2933 ;;		_fputc
  2934 ;;		_fputs
  2935 ;;		_strlen
  2936 ;; This function is called by:
  2937 ;;		_dtoa
  2938 ;; This function uses a non-reentrant model
  2939 ;;
  2940                           
  2941                           	psect	text7
  2942  002136                     __ptext7:
  2943                           	callstack 0
  2944  002136                     _pad:
  2945                           	callstack 21
  2946  002136                     
  2947                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  2948  002136  0100               	movlb	0	; () banked
  2949  002138  A166               	btfss	_flags& (0+255),0,b
  2950  00213A  EFA1  F010         	goto	u1681
  2951  00213E  EFA3  F010         	goto	u1680
  2952  002142                     u1681:
  2953  002142  EFAD  F010         	goto	l2248
  2954  002146                     u1680:
  2955  002146                     
  2956                           ; BSR set to: 0
  2957                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  2958  002146  C013  F00A         	movff	pad@buf,fputs@s
  2959  00214A  C014  F00B         	movff	pad@buf+1,fputs@s+1
  2960  00214E  C011  F00C         	movff	pad@fp,fputs@fp
  2961  002152  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  2962  002156  ECB4  F012         	call	_fputs	;wreg free
  2963  00215A                     l2248:
  2964                           
  2965                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  2966  00215A  BE16               	btfsc	(pad@p+1)^0,7,c
  2967  00215C  EFB2  F010         	goto	u1691
  2968  002160  EFB4  F010         	goto	u1690
  2969  002164                     u1691:
  2970  002164  EFBA  F010         	goto	l2252
  2971  002168                     u1690:
  2972  002168  C015  F01A         	movff	pad@p,pad@w
  2973  00216C  C016  F01B         	movff	pad@p+1,pad@w+1
  2974  002170  EFBE  F010         	goto	l950
  2975  002174                     l2252:
  2976  002174  0E00               	movlw	0
  2977  002176  6E1B               	movwf	(pad@w+1)^0,c
  2978  002178  0E00               	movlw	0
  2979  00217A  6E1A               	movwf	pad@w^0,c
  2980  00217C                     l950:
  2981                           
  2982                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  2983  00217C  0E00               	movlw	0
  2984  00217E  6E19               	movwf	(pad@i+1)^0,c
  2985  002180  0E00               	movlw	0
  2986  002182  6E18               	movwf	pad@i^0,c
  2987                           
  2988                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  2989  002184  EFD0  F010         	goto	l2258
  2990  002188                     l2254:
  2991                           
  2992                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  2993  002188  0E00               	movlw	0
  2994  00218A  6E02               	movwf	(fputc@c+1)^0,c
  2995  00218C  0E20               	movlw	32
  2996  00218E  6E01               	movwf	fputc@c^0,c
  2997  002190  C011  F003         	movff	pad@fp,fputc@fp
  2998  002194  C012  F004         	movff	pad@fp+1,fputc@fp+1
  2999  002198  EC36  F010         	call	_fputc	;wreg free
  3000  00219C                     
  3001                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 86:         ++i;
  3002  00219C  4A18               	infsnz	pad@i^0,f,c
  3003  00219E  2A19               	incf	(pad@i+1)^0,f,c
  3004  0021A0                     l2258:
  3005                           
  3006                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  3007  0021A0  501A               	movf	pad@w^0,w,c
  3008  0021A2  5C18               	subwf	pad@i^0,w,c
  3009  0021A4  5019               	movf	(pad@i+1)^0,w,c
  3010  0021A6  0A80               	xorlw	128
  3011  0021A8  6E17               	movwf	??_pad^0,c
  3012  0021AA  501B               	movf	(pad@w+1)^0,w,c
  3013  0021AC  0A80               	xorlw	128
  3014  0021AE  5817               	subwfb	??_pad^0,w,c
  3015  0021B0  A0D8               	btfss	status,0,c
  3016  0021B2  EFDD  F010         	goto	u1701
  3017  0021B6  EFDF  F010         	goto	u1700
  3018  0021BA                     u1701:
  3019  0021BA  EFC4  F010         	goto	l2254
  3020  0021BE                     u1700:
  3021  0021BE                     
  3022                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  3023  0021BE  0100               	movlb	0	; () banked
  3024  0021C0  B166               	btfsc	_flags& (0+255),0,b
  3025  0021C2  EFE5  F010         	goto	u1711
  3026  0021C6  EFE7  F010         	goto	u1710
  3027  0021CA                     u1711:
  3028  0021CA  EFF1  F010         	goto	l2262
  3029  0021CE                     u1710:
  3030  0021CE                     
  3031                           ; BSR set to: 0
  3032                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  3033  0021CE  C013  F00A         	movff	pad@buf,fputs@s
  3034  0021D2  C014  F00B         	movff	pad@buf+1,fputs@s+1
  3035  0021D6  C011  F00C         	movff	pad@fp,fputs@fp
  3036  0021DA  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  3037  0021DE  ECB4  F012         	call	_fputs	;wreg free
  3038  0021E2                     l2262:
  3039                           
  3040                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  3041  0021E2  C013  F001         	movff	pad@buf,strlen@s
  3042  0021E6  C014  F002         	movff	pad@buf+1,strlen@s+1
  3043  0021EA  ECA6  F013         	call	_strlen	;wreg free
  3044  0021EE  501A               	movf	pad@w^0,w,c
  3045  0021F0  2401               	addwf	?_strlen^0,w,c
  3046  0021F2  6E11               	movwf	?_pad^0,c
  3047  0021F4  501B               	movf	(pad@w+1)^0,w,c
  3048  0021F6  2002               	addwfc	(?_strlen+1)^0,w,c
  3049  0021F8  6E12               	movwf	(?_pad+1)^0,c
  3050  0021FA  0012               	return		;funcret
  3051  0021FC                     __end_of_pad:
  3052                           	callstack 0
  3053                           
  3054 ;; *************** function _strlen *****************
  3055 ;; Defined at:
  3056 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\strlen.c"
  3057 ;; Parameters:    Size  Location     Type
  3058 ;;  s               2    0[COMRAM] PTR const unsigned char 
  3059 ;;		 -> dbuf(32), 
  3060 ;; Auto vars:     Size  Location     Type
  3061 ;;  a               2    2[COMRAM] PTR const unsigned char 
  3062 ;;		 -> dbuf(32), 
  3063 ;; Return value:  Size  Location     Type
  3064 ;;                  2    0[COMRAM] unsigned int 
  3065 ;; Registers used:
  3066 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3067 ;; Tracked objects:
  3068 ;;		On entry : 0/0
  3069 ;;		On exit  : 0/0
  3070 ;;		Unchanged: 0/0
  3071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3072 ;;      Params:         2       0       0       0       0       0       0       0       0
  3073 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3074 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3075 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3076 ;;Total ram usage:        4 bytes
  3077 ;; Hardware stack levels used:    1
  3078 ;; This function calls:
  3079 ;;		Nothing
  3080 ;; This function is called by:
  3081 ;;		_pad
  3082 ;; This function uses a non-reentrant model
  3083 ;;
  3084                           
  3085                           	psect	text8
  3086  00274C                     __ptext8:
  3087                           	callstack 0
  3088  00274C                     _strlen:
  3089                           	callstack 23
  3090  00274C  C001  F003         	movff	strlen@s,strlen@a
  3091  002750  C002  F004         	movff	strlen@s+1,strlen@a+1
  3092  002754  EFAE  F013         	goto	l2158
  3093  002758                     l2156:
  3094  002758  4A01               	infsnz	strlen@s^0,f,c
  3095  00275A  2A02               	incf	(strlen@s+1)^0,f,c
  3096  00275C                     l2158:
  3097  00275C  C001  FFD9         	movff	strlen@s,fsr2l
  3098  002760  C002  FFDA         	movff	strlen@s+1,fsr2h
  3099  002764  50DF               	movf	indf2,w,c
  3100  002766  A4D8               	btfss	status,2,c
  3101  002768  EFB8  F013         	goto	u1541
  3102  00276C  EFBA  F013         	goto	u1540
  3103  002770                     u1541:
  3104  002770  EFAC  F013         	goto	l2156
  3105  002774                     u1540:
  3106  002774  5003               	movf	strlen@a^0,w,c
  3107  002776  5C01               	subwf	strlen@s^0,w,c
  3108  002778  6E01               	movwf	?_strlen^0,c
  3109  00277A  5004               	movf	(strlen@a+1)^0,w,c
  3110  00277C  5802               	subwfb	(strlen@s+1)^0,w,c
  3111  00277E  6E02               	movwf	(?_strlen+1)^0,c
  3112  002780  0012               	return		;funcret
  3113  002782                     __end_of_strlen:
  3114                           	callstack 0
  3115                           
  3116 ;; *************** function _fputs *****************
  3117 ;; Defined at:
  3118 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_fputs.c"
  3119 ;; Parameters:    Size  Location     Type
  3120 ;;  s               2    9[COMRAM] PTR const unsigned char 
  3121 ;;		 -> dbuf(32), 
  3122 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  3123 ;;		 -> sprintf@f(6), 
  3124 ;; Auto vars:     Size  Location     Type
  3125 ;;  i               2   14[COMRAM] int 
  3126 ;;  c               1   13[COMRAM] unsigned char 
  3127 ;; Return value:  Size  Location     Type
  3128 ;;                  2    9[COMRAM] int 
  3129 ;; Registers used:
  3130 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3131 ;; Tracked objects:
  3132 ;;		On entry : 0/0
  3133 ;;		On exit  : 0/0
  3134 ;;		Unchanged: 0/0
  3135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3136 ;;      Params:         4       0       0       0       0       0       0       0       0
  3137 ;;      Locals:         3       0       0       0       0       0       0       0       0
  3138 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3139 ;;      Totals:         7       0       0       0       0       0       0       0       0
  3140 ;;Total ram usage:        7 bytes
  3141 ;; Hardware stack levels used:    1
  3142 ;; Hardware stack levels required when called:    2
  3143 ;; This function calls:
  3144 ;;		_fputc
  3145 ;; This function is called by:
  3146 ;;		_pad
  3147 ;; This function uses a non-reentrant model
  3148 ;;
  3149                           
  3150                           	psect	text9
  3151  002568                     __ptext9:
  3152                           	callstack 0
  3153  002568                     _fputs:
  3154                           	callstack 21
  3155  002568  0E00               	movlw	0
  3156  00256A  6E10               	movwf	(fputs@i+1)^0,c
  3157  00256C  0E00               	movlw	0
  3158  00256E  6E0F               	movwf	fputs@i^0,c
  3159  002570  EFC5  F012         	goto	l2152
  3160  002574                     l2148:
  3161  002574  C00E  F001         	movff	fputs@c,fputc@c
  3162  002578  6A02               	clrf	(fputc@c+1)^0,c
  3163  00257A  C00C  F003         	movff	fputs@fp,fputc@fp
  3164  00257E  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  3165  002582  EC36  F010         	call	_fputc	;wreg free
  3166  002586  4A0F               	infsnz	fputs@i^0,f,c
  3167  002588  2A10               	incf	(fputs@i+1)^0,f,c
  3168  00258A                     l2152:
  3169  00258A  500F               	movf	fputs@i^0,w,c
  3170  00258C  240A               	addwf	fputs@s^0,w,c
  3171  00258E  6ED9               	movwf	fsr2l,c
  3172  002590  5010               	movf	(fputs@i+1)^0,w,c
  3173  002592  200B               	addwfc	(fputs@s+1)^0,w,c
  3174  002594  6EDA               	movwf	fsr2h,c
  3175  002596  50DF               	movf	indf2,w,c
  3176  002598  6E0E               	movwf	fputs@c^0,c
  3177  00259A  500E               	movf	fputs@c^0,w,c
  3178  00259C  A4D8               	btfss	status,2,c
  3179  00259E  EFD3  F012         	goto	u1531
  3180  0025A2  EFD5  F012         	goto	u1530
  3181  0025A6                     u1531:
  3182  0025A6  EFBA  F012         	goto	l2148
  3183  0025AA                     u1530:
  3184  0025AA  0012               	return		;funcret
  3185  0025AC                     __end_of_fputs:
  3186                           	callstack 0
  3187                           
  3188 ;; *************** function _abs *****************
  3189 ;; Defined at:
  3190 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\abs.c"
  3191 ;; Parameters:    Size  Location     Type
  3192 ;;  a               2   18[COMRAM] int 
  3193 ;; Auto vars:     Size  Location     Type
  3194 ;;		None
  3195 ;; Return value:  Size  Location     Type
  3196 ;;                  2   18[COMRAM] int 
  3197 ;; Registers used:
  3198 ;;		wreg, status,2, status,0
  3199 ;; Tracked objects:
  3200 ;;		On entry : 0/0
  3201 ;;		On exit  : 0/0
  3202 ;;		Unchanged: 0/0
  3203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3204 ;;      Params:         2       0       0       0       0       0       0       0       0
  3205 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3206 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3207 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3208 ;;Total ram usage:        4 bytes
  3209 ;; Hardware stack levels used:    1
  3210 ;; This function calls:
  3211 ;;		Nothing
  3212 ;; This function is called by:
  3213 ;;		_dtoa
  3214 ;; This function uses a non-reentrant model
  3215 ;;
  3216                           
  3217                           	psect	text10
  3218  0025F0                     __ptext10:
  3219                           	callstack 0
  3220  0025F0                     _abs:
  3221                           	callstack 24
  3222  0025F0  BE14               	btfsc	(abs@a+1)^0,7,c
  3223  0025F2  EF05  F013         	goto	u1720
  3224  0025F6  5014               	movf	(abs@a+1)^0,w,c
  3225  0025F8  E106               	bnz	u1721
  3226  0025FA  0413               	decf	abs@a^0,w,c
  3227  0025FC  B0D8               	btfsc	status,0,c
  3228  0025FE  EF03  F013         	goto	u1721
  3229  002602  EF05  F013         	goto	u1720
  3230  002606                     u1721:
  3231  002606  EF13  F013         	goto	l1016
  3232  00260A                     u1720:
  3233  00260A  C013  F015         	movff	abs@a,??_abs
  3234  00260E  C014  F016         	movff	abs@a+1,??_abs+1
  3235  002612  1E15               	comf	??_abs^0,f,c
  3236  002614  1E16               	comf	(??_abs+1)^0,f,c
  3237  002616  4A15               	infsnz	??_abs^0,f,c
  3238  002618  2A16               	incf	(??_abs+1)^0,f,c
  3239  00261A  C015  F013         	movff	??_abs,?_abs
  3240  00261E  C016  F014         	movff	??_abs+1,?_abs+1
  3241  002622  EF17  F013         	goto	l1019
  3242  002626                     l1016:
  3243  002626  C013  F013         	movff	abs@a,?_abs
  3244  00262A  C014  F014         	movff	abs@a+1,?_abs+1
  3245  00262E                     l1019:
  3246  00262E  0012               	return		;funcret
  3247  002630                     __end_of_abs:
  3248                           	callstack 0
  3249                           
  3250 ;; *************** function ___aomod *****************
  3251 ;; Defined at:
  3252 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\aomod.c"
  3253 ;; Parameters:    Size  Location     Type
  3254 ;;  dividend        8    0[COMRAM] long long 
  3255 ;;  divisor         8    8[COMRAM] long long 
  3256 ;; Auto vars:     Size  Location     Type
  3257 ;;  sign            1   17[COMRAM] unsigned char 
  3258 ;;  counter         1   16[COMRAM] unsigned char 
  3259 ;; Return value:  Size  Location     Type
  3260 ;;                  8    0[COMRAM] long long 
  3261 ;; Registers used:
  3262 ;;		wreg, status,2, status,0
  3263 ;; Tracked objects:
  3264 ;;		On entry : 0/0
  3265 ;;		On exit  : 0/0
  3266 ;;		Unchanged: 0/0
  3267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3268 ;;      Params:        16       0       0       0       0       0       0       0       0
  3269 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3270 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3271 ;;      Totals:        18       0       0       0       0       0       0       0       0
  3272 ;;Total ram usage:       18 bytes
  3273 ;; Hardware stack levels used:    1
  3274 ;; This function calls:
  3275 ;;		Nothing
  3276 ;; This function is called by:
  3277 ;;		_dtoa
  3278 ;; This function uses a non-reentrant model
  3279 ;;
  3280                           
  3281                           	psect	text11
  3282  001C26                     __ptext11:
  3283                           	callstack 0
  3284  001C26                     ___aomod:
  3285                           	callstack 24
  3286  001C26  0E00               	movlw	0
  3287  001C28  6E12               	movwf	___aomod@sign^0,c
  3288  001C2A  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  3289  001C2C  EF1C  F00E         	goto	u1620
  3290  001C30  EF1A  F00E         	goto	u1621
  3291  001C34                     u1621:
  3292  001C34  EF2E  F00E         	goto	l2216
  3293  001C38                     u1620:
  3294  001C38  1E08               	comf	(___aomod@dividend+7)^0,f,c
  3295  001C3A  1E07               	comf	(___aomod@dividend+6)^0,f,c
  3296  001C3C  1E06               	comf	(___aomod@dividend+5)^0,f,c
  3297  001C3E  1E05               	comf	(___aomod@dividend+4)^0,f,c
  3298  001C40  1E04               	comf	(___aomod@dividend+3)^0,f,c
  3299  001C42  1E03               	comf	(___aomod@dividend+2)^0,f,c
  3300  001C44  1E02               	comf	(___aomod@dividend+1)^0,f,c
  3301  001C46  6C01               	negf	___aomod@dividend^0,c
  3302  001C48  0E00               	movlw	0
  3303  001C4A  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  3304  001C4C  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  3305  001C4E  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  3306  001C50  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  3307  001C52  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  3308  001C54  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  3309  001C56  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  3310  001C58  0E01               	movlw	1
  3311  001C5A  6E12               	movwf	___aomod@sign^0,c
  3312  001C5C                     l2216:
  3313  001C5C  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  3314  001C5E  EF35  F00E         	goto	u1630
  3315  001C62  EF33  F00E         	goto	u1631
  3316  001C66                     u1631:
  3317  001C66  EF45  F00E         	goto	l2220
  3318  001C6A                     u1630:
  3319  001C6A  1E10               	comf	(___aomod@divisor+7)^0,f,c
  3320  001C6C  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  3321  001C6E  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  3322  001C70  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  3323  001C72  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  3324  001C74  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  3325  001C76  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  3326  001C78  6C09               	negf	___aomod@divisor^0,c
  3327  001C7A  0E00               	movlw	0
  3328  001C7C  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  3329  001C7E  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  3330  001C80  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  3331  001C82  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  3332  001C84  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  3333  001C86  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  3334  001C88  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  3335  001C8A                     l2220:
  3336  001C8A  5009               	movf	___aomod@divisor^0,w,c
  3337  001C8C  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  3338  001C8E  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  3339  001C90  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  3340  001C92  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  3341  001C94  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  3342  001C96  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  3343  001C98  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  3344  001C9A  B4D8               	btfsc	status,2,c
  3345  001C9C  EF52  F00E         	goto	u1641
  3346  001CA0  EF54  F00E         	goto	u1640
  3347  001CA4                     u1641:
  3348  001CA4  EF9C  F00E         	goto	l2236
  3349  001CA8                     u1640:
  3350  001CA8  0E01               	movlw	1
  3351  001CAA  6E11               	movwf	___aomod@counter^0,c
  3352  001CAC  EF62  F00E         	goto	l2226
  3353  001CB0                     l2224:
  3354  001CB0  90D8               	bcf	status,0,c
  3355  001CB2  3609               	rlcf	___aomod@divisor^0,f,c
  3356  001CB4  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  3357  001CB6  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  3358  001CB8  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  3359  001CBA  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  3360  001CBC  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  3361  001CBE  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  3362  001CC0  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  3363  001CC2  2A11               	incf	___aomod@counter^0,f,c
  3364  001CC4                     l2226:
  3365  001CC4  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  3366  001CC6  EF67  F00E         	goto	u1651
  3367  001CCA  EF69  F00E         	goto	u1650
  3368  001CCE                     u1651:
  3369  001CCE  EF58  F00E         	goto	l2224
  3370  001CD2                     u1650:
  3371  001CD2                     l2228:
  3372  001CD2  5009               	movf	___aomod@divisor^0,w,c
  3373  001CD4  5C01               	subwf	___aomod@dividend^0,w,c
  3374  001CD6  500A               	movf	(___aomod@divisor+1)^0,w,c
  3375  001CD8  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  3376  001CDA  500B               	movf	(___aomod@divisor+2)^0,w,c
  3377  001CDC  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  3378  001CDE  500C               	movf	(___aomod@divisor+3)^0,w,c
  3379  001CE0  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  3380  001CE2  500D               	movf	(___aomod@divisor+4)^0,w,c
  3381  001CE4  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  3382  001CE6  500E               	movf	(___aomod@divisor+5)^0,w,c
  3383  001CE8  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  3384  001CEA  500F               	movf	(___aomod@divisor+6)^0,w,c
  3385  001CEC  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  3386  001CEE  5010               	movf	(___aomod@divisor+7)^0,w,c
  3387  001CF0  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  3388  001CF2  A0D8               	btfss	status,0,c
  3389  001CF4  EF7E  F00E         	goto	u1661
  3390  001CF8  EF80  F00E         	goto	u1660
  3391  001CFC                     u1661:
  3392  001CFC  EF90  F00E         	goto	l2232
  3393  001D00                     u1660:
  3394  001D00  5009               	movf	___aomod@divisor^0,w,c
  3395  001D02  5E01               	subwf	___aomod@dividend^0,f,c
  3396  001D04  500A               	movf	(___aomod@divisor+1)^0,w,c
  3397  001D06  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  3398  001D08  500B               	movf	(___aomod@divisor+2)^0,w,c
  3399  001D0A  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  3400  001D0C  500C               	movf	(___aomod@divisor+3)^0,w,c
  3401  001D0E  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  3402  001D10  500D               	movf	(___aomod@divisor+4)^0,w,c
  3403  001D12  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  3404  001D14  500E               	movf	(___aomod@divisor+5)^0,w,c
  3405  001D16  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  3406  001D18  500F               	movf	(___aomod@divisor+6)^0,w,c
  3407  001D1A  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  3408  001D1C  5010               	movf	(___aomod@divisor+7)^0,w,c
  3409  001D1E  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  3410  001D20                     l2232:
  3411  001D20  90D8               	bcf	status,0,c
  3412  001D22  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  3413  001D24  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  3414  001D26  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  3415  001D28  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  3416  001D2A  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  3417  001D2C  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  3418  001D2E  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  3419  001D30  3209               	rrcf	___aomod@divisor^0,f,c
  3420  001D32  2E11               	decfsz	___aomod@counter^0,f,c
  3421  001D34  EF69  F00E         	goto	l2228
  3422  001D38                     l2236:
  3423  001D38  5012               	movf	___aomod@sign^0,w,c
  3424  001D3A  B4D8               	btfsc	status,2,c
  3425  001D3C  EFA2  F00E         	goto	u1671
  3426  001D40  EFA4  F00E         	goto	u1670
  3427  001D44                     u1671:
  3428  001D44  EFB4  F00E         	goto	l2240
  3429  001D48                     u1670:
  3430  001D48  1E08               	comf	(___aomod@dividend+7)^0,f,c
  3431  001D4A  1E07               	comf	(___aomod@dividend+6)^0,f,c
  3432  001D4C  1E06               	comf	(___aomod@dividend+5)^0,f,c
  3433  001D4E  1E05               	comf	(___aomod@dividend+4)^0,f,c
  3434  001D50  1E04               	comf	(___aomod@dividend+3)^0,f,c
  3435  001D52  1E03               	comf	(___aomod@dividend+2)^0,f,c
  3436  001D54  1E02               	comf	(___aomod@dividend+1)^0,f,c
  3437  001D56  6C01               	negf	___aomod@dividend^0,c
  3438  001D58  0E00               	movlw	0
  3439  001D5A  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  3440  001D5C  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  3441  001D5E  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  3442  001D60  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  3443  001D62  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  3444  001D64  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  3445  001D66  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  3446  001D68                     l2240:
  3447  001D68  C001  F001         	movff	___aomod@dividend,?___aomod
  3448  001D6C  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  3449  001D70  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  3450  001D74  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  3451  001D78  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  3452  001D7C  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  3453  001D80  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  3454  001D84  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  3455  001D88  0012               	return		;funcret
  3456  001D8A                     __end_of___aomod:
  3457                           	callstack 0
  3458                           
  3459 ;; *************** function ___aodiv *****************
  3460 ;; Defined at:
  3461 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\aodiv.c"
  3462 ;; Parameters:    Size  Location     Type
  3463 ;;  dividend        8    0[COMRAM] long long 
  3464 ;;  divisor         8    8[COMRAM] long long 
  3465 ;; Auto vars:     Size  Location     Type
  3466 ;;  quotient        8   18[COMRAM] long long 
  3467 ;;  sign            1   17[COMRAM] unsigned char 
  3468 ;;  counter         1   16[COMRAM] unsigned char 
  3469 ;; Return value:  Size  Location     Type
  3470 ;;                  8    0[COMRAM] long long 
  3471 ;; Registers used:
  3472 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3473 ;; Tracked objects:
  3474 ;;		On entry : 0/0
  3475 ;;		On exit  : 0/0
  3476 ;;		Unchanged: 0/0
  3477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3478 ;;      Params:        16       0       0       0       0       0       0       0       0
  3479 ;;      Locals:        10       0       0       0       0       0       0       0       0
  3480 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3481 ;;      Totals:        26       0       0       0       0       0       0       0       0
  3482 ;;Total ram usage:       26 bytes
  3483 ;; Hardware stack levels used:    1
  3484 ;; This function calls:
  3485 ;;		Nothing
  3486 ;; This function is called by:
  3487 ;;		_dtoa
  3488 ;; This function uses a non-reentrant model
  3489 ;;
  3490                           
  3491                           	psect	text12
  3492  001A9E                     __ptext12:
  3493                           	callstack 0
  3494  001A9E                     ___aodiv:
  3495                           	callstack 24
  3496  001A9E  0E00               	movlw	0
  3497  001AA0  6E12               	movwf	___aodiv@sign^0,c
  3498  001AA2  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  3499  001AA4  EF58  F00D         	goto	u1550
  3500  001AA8  EF56  F00D         	goto	u1551
  3501  001AAC                     u1551:
  3502  001AAC  EF6A  F00D         	goto	l2172
  3503  001AB0                     u1550:
  3504  001AB0  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  3505  001AB2  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  3506  001AB4  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  3507  001AB6  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  3508  001AB8  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  3509  001ABA  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  3510  001ABC  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  3511  001ABE  6C09               	negf	___aodiv@divisor^0,c
  3512  001AC0  0E00               	movlw	0
  3513  001AC2  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  3514  001AC4  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  3515  001AC6  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  3516  001AC8  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  3517  001ACA  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  3518  001ACC  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  3519  001ACE  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  3520  001AD0  0E01               	movlw	1
  3521  001AD2  6E12               	movwf	___aodiv@sign^0,c
  3522  001AD4                     l2172:
  3523  001AD4  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  3524  001AD6  EF71  F00D         	goto	u1560
  3525  001ADA  EF6F  F00D         	goto	u1561
  3526  001ADE                     u1561:
  3527  001ADE  EF83  F00D         	goto	l2178
  3528  001AE2                     u1560:
  3529  001AE2  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  3530  001AE4  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  3531  001AE6  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  3532  001AE8  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  3533  001AEA  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  3534  001AEC  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  3535  001AEE  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  3536  001AF0  6C01               	negf	___aodiv@dividend^0,c
  3537  001AF2  0E00               	movlw	0
  3538  001AF4  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  3539  001AF6  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  3540  001AF8  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  3541  001AFA  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  3542  001AFC  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  3543  001AFE  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  3544  001B00  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  3545  001B02  0E01               	movlw	1
  3546  001B04  1A12               	xorwf	___aodiv@sign^0,f,c
  3547  001B06                     l2178:
  3548  001B06  EE20  F013         	lfsr	2,___aodiv@quotient
  3549  001B0A  0E07               	movlw	7
  3550  001B0C                     u1571:
  3551  001B0C  6ADE               	clrf	postinc2,c
  3552  001B0E  06E8               	decf	wreg,f,c
  3553  001B10  E2FD               	bc	u1571
  3554  001B12  5009               	movf	___aodiv@divisor^0,w,c
  3555  001B14  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  3556  001B16  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  3557  001B18  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  3558  001B1A  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  3559  001B1C  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  3560  001B1E  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  3561  001B20  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  3562  001B22  B4D8               	btfsc	status,2,c
  3563  001B24  EF96  F00D         	goto	u1581
  3564  001B28  EF98  F00D         	goto	u1580
  3565  001B2C                     u1581:
  3566  001B2C  EFEA  F00D         	goto	l2200
  3567  001B30                     u1580:
  3568  001B30  0E01               	movlw	1
  3569  001B32  6E11               	movwf	___aodiv@counter^0,c
  3570  001B34  EFA6  F00D         	goto	l2186
  3571  001B38                     l2184:
  3572  001B38  90D8               	bcf	status,0,c
  3573  001B3A  3609               	rlcf	___aodiv@divisor^0,f,c
  3574  001B3C  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  3575  001B3E  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  3576  001B40  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  3577  001B42  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  3578  001B44  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  3579  001B46  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  3580  001B48  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  3581  001B4A  2A11               	incf	___aodiv@counter^0,f,c
  3582  001B4C                     l2186:
  3583  001B4C  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  3584  001B4E  EFAB  F00D         	goto	u1591
  3585  001B52  EFAD  F00D         	goto	u1590
  3586  001B56                     u1591:
  3587  001B56  EF9C  F00D         	goto	l2184
  3588  001B5A                     u1590:
  3589  001B5A                     l2188:
  3590  001B5A  90D8               	bcf	status,0,c
  3591  001B5C  3613               	rlcf	___aodiv@quotient^0,f,c
  3592  001B5E  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  3593  001B60  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  3594  001B62  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  3595  001B64  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  3596  001B66  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  3597  001B68  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  3598  001B6A  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  3599  001B6C  5009               	movf	___aodiv@divisor^0,w,c
  3600  001B6E  5C01               	subwf	___aodiv@dividend^0,w,c
  3601  001B70  500A               	movf	(___aodiv@divisor+1)^0,w,c
  3602  001B72  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  3603  001B74  500B               	movf	(___aodiv@divisor+2)^0,w,c
  3604  001B76  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  3605  001B78  500C               	movf	(___aodiv@divisor+3)^0,w,c
  3606  001B7A  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  3607  001B7C  500D               	movf	(___aodiv@divisor+4)^0,w,c
  3608  001B7E  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  3609  001B80  500E               	movf	(___aodiv@divisor+5)^0,w,c
  3610  001B82  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  3611  001B84  500F               	movf	(___aodiv@divisor+6)^0,w,c
  3612  001B86  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  3613  001B88  5010               	movf	(___aodiv@divisor+7)^0,w,c
  3614  001B8A  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  3615  001B8C  A0D8               	btfss	status,0,c
  3616  001B8E  EFCB  F00D         	goto	u1601
  3617  001B92  EFCD  F00D         	goto	u1600
  3618  001B96                     u1601:
  3619  001B96  EFDE  F00D         	goto	l2196
  3620  001B9A                     u1600:
  3621  001B9A  5009               	movf	___aodiv@divisor^0,w,c
  3622  001B9C  5E01               	subwf	___aodiv@dividend^0,f,c
  3623  001B9E  500A               	movf	(___aodiv@divisor+1)^0,w,c
  3624  001BA0  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  3625  001BA2  500B               	movf	(___aodiv@divisor+2)^0,w,c
  3626  001BA4  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  3627  001BA6  500C               	movf	(___aodiv@divisor+3)^0,w,c
  3628  001BA8  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  3629  001BAA  500D               	movf	(___aodiv@divisor+4)^0,w,c
  3630  001BAC  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  3631  001BAE  500E               	movf	(___aodiv@divisor+5)^0,w,c
  3632  001BB0  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  3633  001BB2  500F               	movf	(___aodiv@divisor+6)^0,w,c
  3634  001BB4  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  3635  001BB6  5010               	movf	(___aodiv@divisor+7)^0,w,c
  3636  001BB8  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  3637  001BBA  8013               	bsf	___aodiv@quotient^0,0,c
  3638  001BBC                     l2196:
  3639  001BBC  90D8               	bcf	status,0,c
  3640  001BBE  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  3641  001BC0  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  3642  001BC2  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  3643  001BC4  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  3644  001BC6  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  3645  001BC8  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  3646  001BCA  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  3647  001BCC  3209               	rrcf	___aodiv@divisor^0,f,c
  3648  001BCE  2E11               	decfsz	___aodiv@counter^0,f,c
  3649  001BD0  EFAD  F00D         	goto	l2188
  3650  001BD4                     l2200:
  3651  001BD4  5012               	movf	___aodiv@sign^0,w,c
  3652  001BD6  B4D8               	btfsc	status,2,c
  3653  001BD8  EFF0  F00D         	goto	u1611
  3654  001BDC  EFF2  F00D         	goto	u1610
  3655  001BE0                     u1611:
  3656  001BE0  EF02  F00E         	goto	l2204
  3657  001BE4                     u1610:
  3658  001BE4  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  3659  001BE6  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  3660  001BE8  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  3661  001BEA  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  3662  001BEC  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  3663  001BEE  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  3664  001BF0  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  3665  001BF2  6C13               	negf	___aodiv@quotient^0,c
  3666  001BF4  0E00               	movlw	0
  3667  001BF6  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  3668  001BF8  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  3669  001BFA  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  3670  001BFC  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  3671  001BFE  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  3672  001C00  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  3673  001C02  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  3674  001C04                     l2204:
  3675  001C04  C013  F001         	movff	___aodiv@quotient,?___aodiv
  3676  001C08  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  3677  001C0C  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  3678  001C10  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  3679  001C14  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  3680  001C18  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  3681  001C1C  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  3682  001C20  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  3683  001C24  0012               	return		;funcret
  3684  001C26                     __end_of___aodiv:
  3685                           	callstack 0
  3686                           
  3687 ;; *************** function _ctoa *****************
  3688 ;; Defined at:
  3689 ;;		line 259 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  3690 ;; Parameters:    Size  Location     Type
  3691 ;;  fp              2    9[COMRAM] PTR struct _IO_FILE
  3692 ;;		 -> sprintf@f(6), 
  3693 ;;  c               1   11[COMRAM] unsigned char 
  3694 ;; Auto vars:     Size  Location     Type
  3695 ;;  w               2   15[COMRAM] int 
  3696 ;;  l               2   13[COMRAM] int 
  3697 ;; Return value:  Size  Location     Type
  3698 ;;                  2    9[COMRAM] int 
  3699 ;; Registers used:
  3700 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3701 ;; Tracked objects:
  3702 ;;		On entry : 0/0
  3703 ;;		On exit  : 0/0
  3704 ;;		Unchanged: 0/0
  3705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3706 ;;      Params:         3       0       0       0       0       0       0       0       0
  3707 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3708 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3709 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3710 ;;Total ram usage:        8 bytes
  3711 ;; Hardware stack levels used:    1
  3712 ;; Hardware stack levels required when called:    2
  3713 ;; This function calls:
  3714 ;;		_fputc
  3715 ;; This function is called by:
  3716 ;;		_vfpfcnvrt
  3717 ;; This function uses a non-reentrant model
  3718 ;;
  3719                           
  3720                           	psect	text13
  3721  001F94                     __ptext13:
  3722                           	callstack 0
  3723  001F94                     _ctoa:
  3724                           	callstack 23
  3725  001F94                     
  3726                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 259: static int c
      +                          toa(FILE *fp, char c);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt
      +                          .c: 260: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 261:   
      +                            int l, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 264:  
      +                             w = width ? width - 1 : width;
  3727  001F94  0100               	movlb	0	; () banked
  3728  001F96  5162               	movf	_width& (0+255),w,b
  3729  001F98  1163               	iorwf	(_width+1)& (0+255),w,b
  3730  001F9A  A4D8               	btfss	status,2,c
  3731  001F9C  EFD2  F00F         	goto	u1731
  3732  001FA0  EFD4  F00F         	goto	u1730
  3733  001FA4                     u1731:
  3734  001FA4  EFDA  F00F         	goto	l2274
  3735  001FA8                     u1730:
  3736  001FA8                     
  3737                           ; BSR set to: 0
  3738  001FA8  C062  F010         	movff	_width,ctoa@w
  3739  001FAC  C063  F011         	movff	_width+1,ctoa@w+1
  3740  001FB0  EFE0  F00F         	goto	l2276
  3741  001FB4                     l2274:
  3742                           
  3743                           ; BSR set to: 0
  3744  001FB4  0EFF               	movlw	255
  3745  001FB6  2562               	addwf	_width& (0+255),w,b
  3746  001FB8  6E10               	movwf	ctoa@w^0,c
  3747  001FBA  0EFF               	movlw	255
  3748  001FBC  2163               	addwfc	(_width+1)& (0+255),w,b
  3749  001FBE  6E11               	movwf	(ctoa@w+1)^0,c
  3750  001FC0                     l2276:
  3751                           
  3752                           ; BSR set to: 0
  3753                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 267:     if (flag
      +                          s & (1 << 0)) {
  3754  001FC0  A166               	btfss	_flags& (0+255),0,b
  3755  001FC2  EFE5  F00F         	goto	u1741
  3756  001FC6  EFE7  F00F         	goto	u1740
  3757  001FCA                     u1741:
  3758  001FCA  EFF0  F00F         	goto	l2280
  3759  001FCE                     u1740:
  3760  001FCE                     
  3761                           ; BSR set to: 0
  3762                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 268:         fput
      +                          c(c, fp);
  3763  001FCE  C00C  F001         	movff	ctoa@c,fputc@c
  3764  001FD2  6A02               	clrf	(fputc@c+1)^0,c
  3765  001FD4  C00A  F003         	movff	ctoa@fp,fputc@fp
  3766  001FD8  C00B  F004         	movff	ctoa@fp+1,fputc@fp+1
  3767  001FDC  EC36  F010         	call	_fputc	;wreg free
  3768  001FE0                     l2280:
  3769                           
  3770                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 271:     w = (w <
      +                           0) ? 0 : w;
  3771  001FE0  BE11               	btfsc	(ctoa@w+1)^0,7,c
  3772  001FE2  EFF5  F00F         	goto	u1751
  3773  001FE6  EFF7  F00F         	goto	u1750
  3774  001FEA                     u1751:
  3775  001FEA  EFF9  F00F         	goto	l2284
  3776  001FEE                     u1750:
  3777  001FEE  EFFD  F00F         	goto	l966
  3778  001FF2                     l2284:
  3779  001FF2  0E00               	movlw	0
  3780  001FF4  6E11               	movwf	(ctoa@w+1)^0,c
  3781  001FF6  0E00               	movlw	0
  3782  001FF8  6E10               	movwf	ctoa@w^0,c
  3783  001FFA                     l966:
  3784                           
  3785                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 272:     l = 0;
  3786  001FFA  0E00               	movlw	0
  3787  001FFC  6E0F               	movwf	(ctoa@l+1)^0,c
  3788  001FFE  0E00               	movlw	0
  3789  002000  6E0E               	movwf	ctoa@l^0,c
  3790                           
  3791                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 273:     while (l
      +                           < w) {
  3792  002002  EF0F  F010         	goto	l2290
  3793  002006                     l2286:
  3794                           
  3795                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 274:         fput
      +                          c(' ', fp);
  3796  002006  0E00               	movlw	0
  3797  002008  6E02               	movwf	(fputc@c+1)^0,c
  3798  00200A  0E20               	movlw	32
  3799  00200C  6E01               	movwf	fputc@c^0,c
  3800  00200E  C00A  F003         	movff	ctoa@fp,fputc@fp
  3801  002012  C00B  F004         	movff	ctoa@fp+1,fputc@fp+1
  3802  002016  EC36  F010         	call	_fputc	;wreg free
  3803  00201A                     
  3804                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 275:         ++l;
  3805  00201A  4A0E               	infsnz	ctoa@l^0,f,c
  3806  00201C  2A0F               	incf	(ctoa@l+1)^0,f,c
  3807  00201E                     l2290:
  3808                           
  3809                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 273:     while (l
      +                           < w) {
  3810  00201E  5010               	movf	ctoa@w^0,w,c
  3811  002020  5C0E               	subwf	ctoa@l^0,w,c
  3812  002022  500F               	movf	(ctoa@l+1)^0,w,c
  3813  002024  0A80               	xorlw	128
  3814  002026  6E0D               	movwf	??_ctoa^0,c
  3815  002028  5011               	movf	(ctoa@w+1)^0,w,c
  3816  00202A  0A80               	xorlw	128
  3817  00202C  580D               	subwfb	??_ctoa^0,w,c
  3818  00202E  A0D8               	btfss	status,0,c
  3819  002030  EF1C  F010         	goto	u1761
  3820  002034  EF1E  F010         	goto	u1760
  3821  002038                     u1761:
  3822  002038  EF03  F010         	goto	l2286
  3823  00203C                     u1760:
  3824  00203C                     
  3825                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 278:     if (!(fl
      +                          ags & (1 << 0))) {
  3826  00203C  0100               	movlb	0	; () banked
  3827  00203E  B166               	btfsc	_flags& (0+255),0,b
  3828  002040  EF24  F010         	goto	u1771
  3829  002044  EF26  F010         	goto	u1770
  3830  002048                     u1771:
  3831  002048  EF2F  F010         	goto	l2294
  3832  00204C                     u1770:
  3833  00204C                     
  3834                           ; BSR set to: 0
  3835                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 279:         fput
      +                          c(c, fp);
  3836  00204C  C00C  F001         	movff	ctoa@c,fputc@c
  3837  002050  6A02               	clrf	(fputc@c+1)^0,c
  3838  002052  C00A  F003         	movff	ctoa@fp,fputc@fp
  3839  002056  C00B  F004         	movff	ctoa@fp+1,fputc@fp+1
  3840  00205A  EC36  F010         	call	_fputc	;wreg free
  3841  00205E                     l2294:
  3842                           
  3843                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 282:     return l
      +                          +1;
  3844  00205E  0E01               	movlw	1
  3845  002060  240E               	addwf	ctoa@l^0,w,c
  3846  002062  6E0A               	movwf	?_ctoa^0,c
  3847  002064  0E00               	movlw	0
  3848  002066  200F               	addwfc	(ctoa@l+1)^0,w,c
  3849  002068  6E0B               	movwf	(?_ctoa+1)^0,c
  3850  00206A  0012               	return		;funcret
  3851  00206C                     __end_of_ctoa:
  3852                           	callstack 0
  3853                           
  3854 ;; *************** function _fputc *****************
  3855 ;; Defined at:
  3856 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_fputc.c"
  3857 ;; Parameters:    Size  Location     Type
  3858 ;;  c               2    0[COMRAM] int 
  3859 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  3860 ;;		 -> sprintf@f(6), 
  3861 ;; Auto vars:     Size  Location     Type
  3862 ;;		None
  3863 ;; Return value:  Size  Location     Type
  3864 ;;                  2    0[COMRAM] int 
  3865 ;; Registers used:
  3866 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3867 ;; Tracked objects:
  3868 ;;		On entry : 0/0
  3869 ;;		On exit  : 0/0
  3870 ;;		Unchanged: 0/0
  3871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3872 ;;      Params:         4       0       0       0       0       0       0       0       0
  3873 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3874 ;;      Temps:          5       0       0       0       0       0       0       0       0
  3875 ;;      Totals:         9       0       0       0       0       0       0       0       0
  3876 ;;Total ram usage:        9 bytes
  3877 ;; Hardware stack levels used:    1
  3878 ;; Hardware stack levels required when called:    1
  3879 ;; This function calls:
  3880 ;;		_putch
  3881 ;; This function is called by:
  3882 ;;		_pad
  3883 ;;		_ctoa
  3884 ;;		_vfpfcnvrt
  3885 ;;		_fputs
  3886 ;; This function uses a non-reentrant model
  3887 ;;
  3888                           
  3889                           	psect	text14
  3890  00206C                     __ptext14:
  3891                           	callstack 0
  3892  00206C                     _fputc:
  3893                           	callstack 24
  3894  00206C  5003               	movf	fputc@fp^0,w,c
  3895  00206E  1004               	iorwf	(fputc@fp+1)^0,w,c
  3896  002070  B4D8               	btfsc	status,2,c
  3897  002072  EF3D  F010         	goto	u1491
  3898  002076  EF3F  F010         	goto	u1490
  3899  00207A                     u1491:
  3900  00207A  EF48  F010         	goto	l2136
  3901  00207E                     u1490:
  3902  00207E  5003               	movf	fputc@fp^0,w,c
  3903  002080  1004               	iorwf	(fputc@fp+1)^0,w,c
  3904  002082  A4D8               	btfss	status,2,c
  3905  002084  EF46  F010         	goto	u1501
  3906  002088  EF48  F010         	goto	u1500
  3907  00208C                     u1501:
  3908  00208C  EF4D  F010         	goto	l2138
  3909  002090                     u1500:
  3910  002090                     l2136:
  3911  002090  5001               	movf	fputc@c^0,w,c
  3912  002092  EC05  F014         	call	_putch
  3913  002096  EF9A  F010         	goto	l1031
  3914  00209A                     l2138:
  3915  00209A  EE20 F004          	lfsr	2,4
  3916  00209E  5003               	movf	fputc@fp^0,w,c
  3917  0020A0  26D9               	addwf	fsr2l,f,c
  3918  0020A2  5004               	movf	(fputc@fp+1)^0,w,c
  3919  0020A4  22DA               	addwfc	fsr2h,f,c
  3920  0020A6  50DE               	movf	postinc2,w,c
  3921  0020A8  10DE               	iorwf	postinc2,w,c
  3922  0020AA  B4D8               	btfsc	status,2,c
  3923  0020AC  EF5A  F010         	goto	u1511
  3924  0020B0  EF5C  F010         	goto	u1510
  3925  0020B4                     u1511:
  3926  0020B4  EF77  F010         	goto	l2142
  3927  0020B8                     u1510:
  3928  0020B8  EE20 F004          	lfsr	2,4
  3929  0020BC  5003               	movf	fputc@fp^0,w,c
  3930  0020BE  26D9               	addwf	fsr2l,f,c
  3931  0020C0  5004               	movf	(fputc@fp+1)^0,w,c
  3932  0020C2  22DA               	addwfc	fsr2h,f,c
  3933  0020C4  EE10 F002          	lfsr	1,2
  3934  0020C8  5003               	movf	fputc@fp^0,w,c
  3935  0020CA  26E1               	addwf	fsr1l,f,c
  3936  0020CC  5004               	movf	(fputc@fp+1)^0,w,c
  3937  0020CE  22E2               	addwfc	fsr1h,f,c
  3938  0020D0  50DE               	movf	postinc2,w,c
  3939  0020D2  5CE6               	subwf	postinc1,w,c
  3940  0020D4  50E6               	movf	postinc1,w,c
  3941  0020D6  0A80               	xorlw	128
  3942  0020D8  6E09               	movwf	(??_fputc+4)^0,c
  3943  0020DA  50DE               	movf	postinc2,w,c
  3944  0020DC  0A80               	xorlw	128
  3945  0020DE  5809               	subwfb	(??_fputc+4)^0,w,c
  3946  0020E0  B0D8               	btfsc	status,0,c
  3947  0020E2  EF75  F010         	goto	u1521
  3948  0020E6  EF77  F010         	goto	u1520
  3949  0020EA                     u1521:
  3950  0020EA  EF9A  F010         	goto	l1031
  3951  0020EE                     u1520:
  3952  0020EE                     l2142:
  3953  0020EE  EE20 F002          	lfsr	2,2
  3954  0020F2  5003               	movf	fputc@fp^0,w,c
  3955  0020F4  26D9               	addwf	fsr2l,f,c
  3956  0020F6  5004               	movf	(fputc@fp+1)^0,w,c
  3957  0020F8  22DA               	addwfc	fsr2h,f,c
  3958  0020FA  CFDE F005          	movff	postinc2,??_fputc
  3959  0020FE  CFDD F006          	movff	postdec2,??_fputc+1
  3960  002102  C003  FFD9         	movff	fputc@fp,fsr2l
  3961  002106  C004  FFDA         	movff	fputc@fp+1,fsr2h
  3962  00210A  CFDE F007          	movff	postinc2,??_fputc+2
  3963  00210E  CFDD F008          	movff	postdec2,??_fputc+3
  3964  002112  5005               	movf	??_fputc^0,w,c
  3965  002114  2407               	addwf	(??_fputc+2)^0,w,c
  3966  002116  6ED9               	movwf	fsr2l,c
  3967  002118  5006               	movf	(??_fputc+1)^0,w,c
  3968  00211A  2008               	addwfc	(??_fputc+3)^0,w,c
  3969  00211C  6EDA               	movwf	fsr2h,c
  3970  00211E  C001  FFDF         	movff	fputc@c,indf2
  3971  002122  EE20 F002          	lfsr	2,2
  3972  002126  5003               	movf	fputc@fp^0,w,c
  3973  002128  26D9               	addwf	fsr2l,f,c
  3974  00212A  5004               	movf	(fputc@fp+1)^0,w,c
  3975  00212C  22DA               	addwfc	fsr2h,f,c
  3976  00212E  2ADE               	incf	postinc2,f,c
  3977  002130  0E00               	movlw	0
  3978  002132  22DD               	addwfc	postdec2,f,c
  3979  002134                     l1031:
  3980  002134  0012               	return		;funcret
  3981  002136                     __end_of_fputc:
  3982                           	callstack 0
  3983                           
  3984 ;; *************** function _putch *****************
  3985 ;; Defined at:
  3986 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\putch.c"
  3987 ;; Parameters:    Size  Location     Type
  3988 ;;  c               1    wreg     unsigned char 
  3989 ;; Auto vars:     Size  Location     Type
  3990 ;;  c               1    0[COMRAM] unsigned char 
  3991 ;; Return value:  Size  Location     Type
  3992 ;;                  1    wreg      void 
  3993 ;; Registers used:
  3994 ;;		wreg
  3995 ;; Tracked objects:
  3996 ;;		On entry : 0/0
  3997 ;;		On exit  : 0/0
  3998 ;;		Unchanged: 0/0
  3999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4000 ;;      Params:         0       0       0       0       0       0       0       0       0
  4001 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4002 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4003 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4004 ;;Total ram usage:        0 bytes
  4005 ;; Hardware stack levels used:    1
  4006 ;; This function calls:
  4007 ;;		Nothing
  4008 ;; This function is called by:
  4009 ;;		_fputc
  4010 ;; This function uses a non-reentrant model
  4011 ;;
  4012                           
  4013                           	psect	text15
  4014  00280A                     __ptext15:
  4015                           	callstack 0
  4016  00280A                     _putch:
  4017                           	callstack 24
  4018  00280A  0012               	return		;funcret
  4019  00280C                     __end_of_putch:
  4020                           	callstack 0
  4021                           
  4022 ;; *************** function _getCad *****************
  4023 ;; Defined at:
  4024 ;;		line 45 in file "newmain.c"
  4025 ;; Parameters:    Size  Location     Type
  4026 ;;  canal           1    wreg     unsigned char 
  4027 ;; Auto vars:     Size  Location     Type
  4028 ;;  canal           1    4[COMRAM] unsigned char 
  4029 ;; Return value:  Size  Location     Type
  4030 ;;                  2    0[COMRAM] short 
  4031 ;; Registers used:
  4032 ;;		wreg, status,2, status,0
  4033 ;; Tracked objects:
  4034 ;;		On entry : 0/0
  4035 ;;		On exit  : 0/0
  4036 ;;		Unchanged: 0/0
  4037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4038 ;;      Params:         2       0       0       0       0       0       0       0       0
  4039 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4040 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4041 ;;      Totals:         5       0       0       0       0       0       0       0       0
  4042 ;;Total ram usage:        5 bytes
  4043 ;; Hardware stack levels used:    1
  4044 ;; This function calls:
  4045 ;;		Nothing
  4046 ;; This function is called by:
  4047 ;;		_activar_seguridad
  4048 ;; This function uses a non-reentrant model
  4049 ;;
  4050                           
  4051                           	psect	text16
  4052  0025AC                     __ptext16:
  4053                           	callstack 0
  4054  0025AC                     _getCad:
  4055                           	callstack 28
  4056                           
  4057                           ;incstack = 0
  4058                           ;getCad@canal stored from wreg
  4059  0025AC  6E05               	movwf	getCad@canal^0,c
  4060  0025AE                     
  4061                           ;newmain.c: 46:     ADCON1 = 0b00001100;
  4062  0025AE  0E0C               	movlw	12
  4063  0025B0  6EC1               	movwf	193,c	;volatile
  4064                           
  4065                           ;newmain.c: 47:     switch (canal) {
  4066  0025B2  EFDF  F012         	goto	l2518
  4067  0025B6                     l2514:
  4068                           
  4069                           ;newmain.c: 49:             ADCON0 = 0b00000010;
  4070  0025B6  0E02               	movlw	2
  4071  0025B8  6EC2               	movwf	194,c	;volatile
  4072                           
  4073                           ;newmain.c: 50:             break;
  4074  0025BA  EFF0  F012         	goto	l2520
  4075  0025BE                     l2518:
  4076  0025BE  5005               	movf	getCad@canal^0,w,c
  4077  0025C0  6E03               	movwf	??_getCad^0,c
  4078  0025C2  6A04               	clrf	(??_getCad+1)^0,c
  4079                           
  4080                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4081                           ; Switch size 1, requested type "simple"
  4082                           ; Number of cases is 1, Range of values is 0 to 0
  4083                           ; switch strategies available:
  4084                           ; Name         Instructions Cycles
  4085                           ; simple_byte            4     3 (average)
  4086                           ;	Chosen strategy is simple_byte
  4087  0025C4  5004               	movf	(??_getCad+1)^0,w,c
  4088  0025C6  0A00               	xorlw	0	; case 0
  4089  0025C8  B4D8               	btfsc	status,2,c
  4090  0025CA  EFE9  F012         	goto	l3216
  4091  0025CE  EFF0  F012         	goto	l2520
  4092  0025D2                     l3216:
  4093                           
  4094                           ; Switch size 1, requested type "simple"
  4095                           ; Number of cases is 1, Range of values is 0 to 0
  4096                           ; switch strategies available:
  4097                           ; Name         Instructions Cycles
  4098                           ; simple_byte            4     3 (average)
  4099                           ;	Chosen strategy is simple_byte
  4100  0025D2  5003               	movf	??_getCad^0,w,c
  4101  0025D4  0A00               	xorlw	0	; case 0
  4102  0025D6  B4D8               	btfsc	status,2,c
  4103  0025D8  EFDB  F012         	goto	l2514
  4104  0025DC  EFF0  F012         	goto	l2520
  4105  0025E0                     l2520:
  4106                           
  4107                           ;newmain.c: 52:     ADCON2 = 0b00101001;
  4108  0025E0  0E29               	movlw	41
  4109  0025E2  6EC0               	movwf	192,c	;volatile
  4110  0025E4                     
  4111                           ;newmain.c: 53:     ADON = 1;
  4112  0025E4  80C2               	bsf	4034,0,c	;volatile
  4113  0025E6                     
  4114                           ;newmain.c: 54:     GO_DONE = 1;
  4115  0025E6  82C2               	bsf	4034,1,c	;volatile
  4116  0025E8                     
  4117                           ;newmain.c: 56:     return ADRESH;
  4118  0025E8  CFC4 F001          	movff	4036,?_getCad	;volatile
  4119  0025EC  6A02               	clrf	(?_getCad+1)^0,c
  4120  0025EE  0012               	return		;funcret
  4121  0025F0                     __end_of_getCad:
  4122                           	callstack 0
  4123                           
  4124 ;; *************** function _atoi *****************
  4125 ;; Defined at:
  4126 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\atoi.c"
  4127 ;; Parameters:    Size  Location     Type
  4128 ;;  s               2    7[COMRAM] PTR const unsigned char 
  4129 ;;		 -> aux_contrasenia(4), 
  4130 ;; Auto vars:     Size  Location     Type
  4131 ;;  n               2   20[COMRAM] int 
  4132 ;;  neg             2   13[COMRAM] int 
  4133 ;; Return value:  Size  Location     Type
  4134 ;;                  2    7[COMRAM] int 
  4135 ;; Registers used:
  4136 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4137 ;; Tracked objects:
  4138 ;;		On entry : 0/0
  4139 ;;		On exit  : 0/0
  4140 ;;		Unchanged: 0/0
  4141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4142 ;;      Params:         2       0       0       0       0       0       0       0       0
  4143 ;;      Locals:         9       0       0       0       0       0       0       0       0
  4144 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4145 ;;      Totals:        15       0       0       0       0       0       0       0       0
  4146 ;;Total ram usage:       15 bytes
  4147 ;; Hardware stack levels used:    1
  4148 ;; Hardware stack levels required when called:    1
  4149 ;; This function calls:
  4150 ;;		___wmul
  4151 ;;		_isdigit
  4152 ;;		_isspace
  4153 ;; This function is called by:
  4154 ;;		_activar_seguridad
  4155 ;; This function uses a non-reentrant model
  4156 ;;
  4157                           
  4158                           	psect	text17
  4159  001914                     __ptext17:
  4160                           	callstack 0
  4161  001914                     _atoi:
  4162                           	callstack 27
  4163  001914  0E00               	movlw	0
  4164  001916  6E16               	movwf	(atoi@n+1)^0,c
  4165  001918  0E00               	movlw	0
  4166  00191A  6E15               	movwf	atoi@n^0,c
  4167  00191C  0E00               	movlw	0
  4168  00191E  6E0F               	movwf	(atoi@neg+1)^0,c
  4169  001920  0E00               	movlw	0
  4170  001922  6E0E               	movwf	atoi@neg^0,c
  4171  001924  EF96  F00C         	goto	l2594
  4172  001928                     l2592:
  4173  001928  4A08               	infsnz	atoi@s^0,f,c
  4174  00192A  2A09               	incf	(atoi@s+1)^0,f,c
  4175  00192C                     l2594:
  4176  00192C  0E01               	movlw	1
  4177  00192E  6E14               	movwf	_atoi$977^0,c
  4178  001930  C008  FFD9         	movff	atoi@s,fsr2l
  4179  001934  C009  FFDA         	movff	atoi@s+1,fsr2h
  4180  001938  0E20               	movlw	32
  4181  00193A  18DE               	xorwf	postinc2,w,c
  4182  00193C  B4D8               	btfsc	status,2,c
  4183  00193E  EFA3  F00C         	goto	u2181
  4184  001942  EFA5  F00C         	goto	u2180
  4185  001946                     u2181:
  4186  001946  EFC1  F00C         	goto	l2602
  4187  00194A                     u2180:
  4188  00194A  0EF7               	movlw	247
  4189  00194C  6E0A               	movwf	??_atoi^0,c
  4190  00194E  0EFF               	movlw	255
  4191  001950  6E0B               	movwf	(??_atoi+1)^0,c
  4192  001952  C008  FFD9         	movff	atoi@s,fsr2l
  4193  001956  C009  FFDA         	movff	atoi@s+1,fsr2h
  4194  00195A  50DF               	movf	indf2,w,c
  4195  00195C  6E0C               	movwf	(??_atoi+2)^0,c
  4196  00195E  6A0D               	clrf	(??_atoi+3)^0,c
  4197  001960  500A               	movf	??_atoi^0,w,c
  4198  001962  260C               	addwf	(??_atoi+2)^0,f,c
  4199  001964  500B               	movf	(??_atoi+1)^0,w,c
  4200  001966  220D               	addwfc	(??_atoi+3)^0,f,c
  4201  001968  500D               	movf	(??_atoi+3)^0,w,c
  4202  00196A  E109               	bnz	u2190
  4203  00196C  0E05               	movlw	5
  4204  00196E  5C0C               	subwf	(??_atoi+2)^0,w,c
  4205  001970  A0D8               	btfss	status,0,c
  4206  001972  EFBD  F00C         	goto	u2191
  4207  001976  EFBF  F00C         	goto	u2190
  4208  00197A                     u2191:
  4209  00197A  EFC1  F00C         	goto	l2602
  4210  00197E                     u2190:
  4211  00197E  0E00               	movlw	0
  4212  001980  6E14               	movwf	_atoi$977^0,c
  4213  001982                     l2602:
  4214  001982  C014  F010         	movff	_atoi$977,_atoi$976
  4215  001986  6A11               	clrf	(_atoi$976+1)^0,c
  4216  001988  5010               	movf	_atoi$976^0,w,c
  4217  00198A  1011               	iorwf	(_atoi$976+1)^0,w,c
  4218  00198C  A4D8               	btfss	status,2,c
  4219  00198E  EFCB  F00C         	goto	u2201
  4220  001992  EFCD  F00C         	goto	u2200
  4221  001996                     u2201:
  4222  001996  EF94  F00C         	goto	l2592
  4223  00199A                     u2200:
  4224  00199A  EFD7  F00C         	goto	l2612
  4225  00199E                     l2608:
  4226  00199E  0E00               	movlw	0
  4227  0019A0  6E0F               	movwf	(atoi@neg+1)^0,c
  4228  0019A2  0E01               	movlw	1
  4229  0019A4  6E0E               	movwf	atoi@neg^0,c
  4230  0019A6                     l2610:
  4231  0019A6  4A08               	infsnz	atoi@s^0,f,c
  4232  0019A8  2A09               	incf	(atoi@s+1)^0,f,c
  4233  0019AA  EF0C  F00D         	goto	l2618
  4234  0019AE                     l2612:
  4235  0019AE  C008  FFD9         	movff	atoi@s,fsr2l
  4236  0019B2  C009  FFDA         	movff	atoi@s+1,fsr2h
  4237  0019B6  50DF               	movf	indf2,w,c
  4238  0019B8  6E0A               	movwf	??_atoi^0,c
  4239  0019BA  6A0B               	clrf	(??_atoi+1)^0,c
  4240                           
  4241                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4242                           ; Switch size 1, requested type "simple"
  4243                           ; Number of cases is 1, Range of values is 0 to 0
  4244                           ; switch strategies available:
  4245                           ; Name         Instructions Cycles
  4246                           ; simple_byte            4     3 (average)
  4247                           ;	Chosen strategy is simple_byte
  4248  0019BC  500B               	movf	(??_atoi+1)^0,w,c
  4249  0019BE  0A00               	xorlw	0	; case 0
  4250  0019C0  B4D8               	btfsc	status,2,c
  4251  0019C2  EFE5  F00C         	goto	l3218
  4252  0019C6  EF0C  F00D         	goto	l2618
  4253  0019CA                     l3218:
  4254                           
  4255                           ; Switch size 1, requested type "simple"
  4256                           ; Number of cases is 2, Range of values is 43 to 45
  4257                           ; switch strategies available:
  4258                           ; Name         Instructions Cycles
  4259                           ; simple_byte            7     4 (average)
  4260                           ;	Chosen strategy is simple_byte
  4261  0019CA  500A               	movf	??_atoi^0,w,c
  4262  0019CC  0A2B               	xorlw	43	; case 43
  4263  0019CE  B4D8               	btfsc	status,2,c
  4264  0019D0  EFD3  F00C         	goto	l2610
  4265  0019D4  0A06               	xorlw	6	; case 45
  4266  0019D6  B4D8               	btfsc	status,2,c
  4267  0019D8  EFCF  F00C         	goto	l2608
  4268  0019DC  EF0C  F00D         	goto	l2618
  4269  0019E0                     l2614:
  4270  0019E0  C015  F001         	movff	atoi@n,___wmul@multiplier
  4271  0019E4  C016  F002         	movff	atoi@n+1,___wmul@multiplier+1
  4272  0019E8  0E00               	movlw	0
  4273  0019EA  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  4274  0019EC  0E0A               	movlw	10
  4275  0019EE  6E03               	movwf	___wmul@multiplicand^0,c
  4276  0019F0  ECD8  F013         	call	___wmul	;wreg free
  4277  0019F4  C008  FFD9         	movff	atoi@s,fsr2l
  4278  0019F8  C009  FFDA         	movff	atoi@s+1,fsr2h
  4279  0019FC  50DF               	movf	indf2,w,c
  4280  0019FE  6E0A               	movwf	??_atoi^0,c
  4281  001A00  500A               	movf	??_atoi^0,w,c
  4282  001A02  5E01               	subwf	?___wmul^0,f,c
  4283  001A04  0E00               	movlw	0
  4284  001A06  5A02               	subwfb	(?___wmul+1)^0,f,c
  4285  001A08  0E30               	movlw	48
  4286  001A0A  2401               	addwf	?___wmul^0,w,c
  4287  001A0C  6E15               	movwf	atoi@n^0,c
  4288  001A0E  0E00               	movlw	0
  4289  001A10  2002               	addwfc	(?___wmul+1)^0,w,c
  4290  001A12  6E16               	movwf	(atoi@n+1)^0,c
  4291  001A14  EFD3  F00C         	goto	l2610
  4292  001A18                     l2618:
  4293  001A18  0ED0               	movlw	208
  4294  001A1A  6E0A               	movwf	??_atoi^0,c
  4295  001A1C  0EFF               	movlw	255
  4296  001A1E  6E0B               	movwf	(??_atoi+1)^0,c
  4297  001A20  C008  FFD9         	movff	atoi@s,fsr2l
  4298  001A24  C009  FFDA         	movff	atoi@s+1,fsr2h
  4299  001A28  50DF               	movf	indf2,w,c
  4300  001A2A  6E0C               	movwf	(??_atoi+2)^0,c
  4301  001A2C  6A0D               	clrf	(??_atoi+3)^0,c
  4302  001A2E  500A               	movf	??_atoi^0,w,c
  4303  001A30  260C               	addwf	(??_atoi+2)^0,f,c
  4304  001A32  500B               	movf	(??_atoi+1)^0,w,c
  4305  001A34  220D               	addwfc	(??_atoi+3)^0,f,c
  4306  001A36  500D               	movf	(??_atoi+3)^0,w,c
  4307  001A38  E10A               	bnz	u2210
  4308  001A3A  0E0A               	movlw	10
  4309  001A3C  5C0C               	subwf	(??_atoi+2)^0,w,c
  4310  001A3E  A0D8               	btfss	status,0,c
  4311  001A40  EF24  F00D         	goto	u2211
  4312  001A44  EF27  F00D         	goto	u2210
  4313  001A48                     u2211:
  4314  001A48  0E01               	movlw	1
  4315  001A4A  EF28  F00D         	goto	u2220
  4316  001A4E                     u2210:
  4317  001A4E  0E00               	movlw	0
  4318  001A50                     u2220:
  4319  001A50  6E12               	movwf	_atoi$978^0,c
  4320  001A52  6A13               	clrf	(_atoi$978+1)^0,c
  4321  001A54  5012               	movf	_atoi$978^0,w,c
  4322  001A56  1013               	iorwf	(_atoi$978+1)^0,w,c
  4323  001A58  A4D8               	btfss	status,2,c
  4324  001A5A  EF31  F00D         	goto	u2231
  4325  001A5E  EF33  F00D         	goto	u2230
  4326  001A62                     u2231:
  4327  001A62  EFF0  F00C         	goto	l2614
  4328  001A66                     u2230:
  4329  001A66  500E               	movf	atoi@neg^0,w,c
  4330  001A68  100F               	iorwf	(atoi@neg+1)^0,w,c
  4331  001A6A  A4D8               	btfss	status,2,c
  4332  001A6C  EF3A  F00D         	goto	u2241
  4333  001A70  EF3C  F00D         	goto	u2240
  4334  001A74                     u2241:
  4335  001A74  EF4A  F00D         	goto	l899
  4336  001A78                     u2240:
  4337  001A78  C015  F00A         	movff	atoi@n,??_atoi
  4338  001A7C  C016  F00B         	movff	atoi@n+1,??_atoi+1
  4339  001A80  1E0A               	comf	??_atoi^0,f,c
  4340  001A82  1E0B               	comf	(??_atoi+1)^0,f,c
  4341  001A84  4A0A               	infsnz	??_atoi^0,f,c
  4342  001A86  2A0B               	incf	(??_atoi+1)^0,f,c
  4343  001A88  C00A  F008         	movff	??_atoi,?_atoi
  4344  001A8C  C00B  F009         	movff	??_atoi+1,?_atoi+1
  4345  001A90  EF4E  F00D         	goto	l902
  4346  001A94                     l899:
  4347  001A94  C015  F008         	movff	atoi@n,?_atoi
  4348  001A98  C016  F009         	movff	atoi@n+1,?_atoi+1
  4349  001A9C                     l902:
  4350  001A9C  0012               	return		;funcret
  4351  001A9E                     __end_of_atoi:
  4352                           	callstack 0
  4353                           
  4354 ;; *************** function _isspace *****************
  4355 ;; Defined at:
  4356 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\isspace.c"
  4357 ;; Parameters:    Size  Location     Type
  4358 ;;  c               2    0[COMRAM] int 
  4359 ;; Auto vars:     Size  Location     Type
  4360 ;;		None
  4361 ;; Return value:  Size  Location     Type
  4362 ;;                  2    0[COMRAM] int 
  4363 ;; Registers used:
  4364 ;;		wreg, status,2, status,0
  4365 ;; Tracked objects:
  4366 ;;		On entry : 0/0
  4367 ;;		On exit  : 0/0
  4368 ;;		Unchanged: 0/0
  4369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4370 ;;      Params:         2       0       0       0       0       0       0       0       0
  4371 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4372 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4373 ;;      Totals:         7       0       0       0       0       0       0       0       0
  4374 ;;Total ram usage:        7 bytes
  4375 ;; Hardware stack levels used:    1
  4376 ;; This function calls:
  4377 ;;		Nothing
  4378 ;; This function is called by:
  4379 ;;		_atoi
  4380 ;; This function uses a non-reentrant model
  4381 ;;
  4382                           
  4383                           	psect	text18
  4384  002516                     __ptext18:
  4385                           	callstack 0
  4386  002516                     _isspace:
  4387                           	callstack 27
  4388  002516  0E01               	movlw	1
  4389  002518  6E07               	movwf	_isspace$994^0,c
  4390  00251A  0E20               	movlw	32
  4391  00251C  1801               	xorwf	isspace@c^0,w,c
  4392  00251E  1002               	iorwf	(isspace@c+1)^0,w,c
  4393  002520  B4D8               	btfsc	status,2,c
  4394  002522  EF95  F012         	goto	u2041
  4395  002526  EF97  F012         	goto	u2040
  4396  00252A                     u2041:
  4397  00252A  EFB0  F012         	goto	l2474
  4398  00252E                     u2040:
  4399  00252E  0EF7               	movlw	247
  4400  002530  6E03               	movwf	??_isspace^0,c
  4401  002532  0EFF               	movlw	255
  4402  002534  6E04               	movwf	(??_isspace+1)^0,c
  4403  002536  C001  F005         	movff	isspace@c,??_isspace+2
  4404  00253A  C002  F006         	movff	isspace@c+1,??_isspace+3
  4405  00253E  5003               	movf	??_isspace^0,w,c
  4406  002540  2605               	addwf	(??_isspace+2)^0,f,c
  4407  002542  5004               	movf	(??_isspace+1)^0,w,c
  4408  002544  2206               	addwfc	(??_isspace+3)^0,f,c
  4409  002546  5006               	movf	(??_isspace+3)^0,w,c
  4410  002548  E109               	bnz	u2050
  4411  00254A  0E05               	movlw	5
  4412  00254C  5C05               	subwf	(??_isspace+2)^0,w,c
  4413  00254E  A0D8               	btfss	status,0,c
  4414  002550  EFAC  F012         	goto	u2051
  4415  002554  EFAE  F012         	goto	u2050
  4416  002558                     u2051:
  4417  002558  EFB0  F012         	goto	l2474
  4418  00255C                     u2050:
  4419  00255C  0E00               	movlw	0
  4420  00255E  6E07               	movwf	_isspace$994^0,c
  4421  002560                     l2474:
  4422  002560  C007  F001         	movff	_isspace$994,?_isspace
  4423  002564  6A02               	clrf	(?_isspace+1)^0,c
  4424  002566  0012               	return		;funcret
  4425  002568                     __end_of_isspace:
  4426                           	callstack 0
  4427                           
  4428 ;; *************** function _isdigit *****************
  4429 ;; Defined at:
  4430 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\isdigit.c"
  4431 ;; Parameters:    Size  Location     Type
  4432 ;;  c               2    0[COMRAM] int 
  4433 ;; Auto vars:     Size  Location     Type
  4434 ;;		None
  4435 ;; Return value:  Size  Location     Type
  4436 ;;                  2    0[COMRAM] int 
  4437 ;; Registers used:
  4438 ;;		wreg, status,2, status,0
  4439 ;; Tracked objects:
  4440 ;;		On entry : 0/0
  4441 ;;		On exit  : 0/0
  4442 ;;		Unchanged: 0/0
  4443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4444 ;;      Params:         2       0       0       0       0       0       0       0       0
  4445 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4446 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4447 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4448 ;;Total ram usage:        6 bytes
  4449 ;; Hardware stack levels used:    1
  4450 ;; This function calls:
  4451 ;;		Nothing
  4452 ;; This function is called by:
  4453 ;;		_activar_seguridad
  4454 ;;		_atoi
  4455 ;; This function uses a non-reentrant model
  4456 ;;
  4457                           
  4458                           	psect	text19
  4459  0026A6                     __ptext19:
  4460                           	callstack 0
  4461  0026A6                     _isdigit:
  4462                           	callstack 28
  4463  0026A6  0ED0               	movlw	208
  4464  0026A8  6E03               	movwf	??_isdigit^0,c
  4465  0026AA  0EFF               	movlw	255
  4466  0026AC  6E04               	movwf	(??_isdigit+1)^0,c
  4467  0026AE  C001  F005         	movff	isdigit@c,??_isdigit+2
  4468  0026B2  C002  F006         	movff	isdigit@c+1,??_isdigit+3
  4469  0026B6  5003               	movf	??_isdigit^0,w,c
  4470  0026B8  2605               	addwf	(??_isdigit+2)^0,f,c
  4471  0026BA  5004               	movf	(??_isdigit+1)^0,w,c
  4472  0026BC  2206               	addwfc	(??_isdigit+3)^0,f,c
  4473  0026BE  5006               	movf	(??_isdigit+3)^0,w,c
  4474  0026C0  E10A               	bnz	u2020
  4475  0026C2  0E0A               	movlw	10
  4476  0026C4  5C05               	subwf	(??_isdigit+2)^0,w,c
  4477  0026C6  A0D8               	btfss	status,0,c
  4478  0026C8  EF68  F013         	goto	u2021
  4479  0026CC  EF6B  F013         	goto	u2020
  4480  0026D0                     u2021:
  4481  0026D0  0E01               	movlw	1
  4482  0026D2  EF6C  F013         	goto	u2030
  4483  0026D6                     u2020:
  4484  0026D6  0E00               	movlw	0
  4485  0026D8                     u2030:
  4486  0026D8  6E01               	movwf	?_isdigit^0,c
  4487  0026DA  6A02               	clrf	(?_isdigit+1)^0,c
  4488  0026DC  0012               	return		;funcret
  4489  0026DE                     __end_of_isdigit:
  4490                           	callstack 0
  4491                           
  4492 ;; *************** function ___wmul *****************
  4493 ;; Defined at:
  4494 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\Umul16.c"
  4495 ;; Parameters:    Size  Location     Type
  4496 ;;  multiplier      2    0[COMRAM] unsigned int 
  4497 ;;  multiplicand    2    2[COMRAM] unsigned int 
  4498 ;; Auto vars:     Size  Location     Type
  4499 ;;  product         2    4[COMRAM] unsigned int 
  4500 ;; Return value:  Size  Location     Type
  4501 ;;                  2    0[COMRAM] unsigned int 
  4502 ;; Registers used:
  4503 ;;		wreg, status,2, status,0, prodl, prodh
  4504 ;; Tracked objects:
  4505 ;;		On entry : 0/0
  4506 ;;		On exit  : 0/0
  4507 ;;		Unchanged: 0/0
  4508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4509 ;;      Params:         4       0       0       0       0       0       0       0       0
  4510 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4511 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4512 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4513 ;;Total ram usage:        6 bytes
  4514 ;; Hardware stack levels used:    1
  4515 ;; This function calls:
  4516 ;;		Nothing
  4517 ;; This function is called by:
  4518 ;;		_atoi
  4519 ;; This function uses a non-reentrant model
  4520 ;;
  4521                           
  4522                           	psect	text20
  4523  0027B0                     __ptext20:
  4524                           	callstack 0
  4525  0027B0                     ___wmul:
  4526                           	callstack 27
  4527  0027B0  5001               	movf	___wmul@multiplier^0,w,c
  4528  0027B2  0203               	mulwf	___wmul@multiplicand^0,c
  4529  0027B4  CFF3 F005          	movff	prodl,___wmul@product
  4530  0027B8  CFF4 F006          	movff	prodh,___wmul@product+1
  4531  0027BC  5001               	movf	___wmul@multiplier^0,w,c
  4532  0027BE  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  4533  0027C0  50F3               	movf	243,w,c
  4534  0027C2  2606               	addwf	(___wmul@product+1)^0,f,c
  4535  0027C4  5002               	movf	(___wmul@multiplier+1)^0,w,c
  4536  0027C6  0203               	mulwf	___wmul@multiplicand^0,c
  4537  0027C8  50F3               	movf	243,w,c
  4538  0027CA  2606               	addwf	(___wmul@product+1)^0,f,c
  4539  0027CC  C005  F001         	movff	___wmul@product,?___wmul
  4540  0027D0  C006  F002         	movff	___wmul@product+1,?___wmul+1
  4541  0027D4  0012               	return		;funcret
  4542  0027D6                     __end_of___wmul:
  4543                           	callstack 0
  4544                           
  4545 ;; *************** function ___xxtofl *****************
  4546 ;; Defined at:
  4547 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\xxtofl.c"
  4548 ;; Parameters:    Size  Location     Type
  4549 ;;  sign            1    wreg     unsigned char 
  4550 ;;  val             4    5[COMRAM] long 
  4551 ;; Auto vars:     Size  Location     Type
  4552 ;;  sign            1   13[COMRAM] unsigned char 
  4553 ;;  arg             4   15[COMRAM] unsigned long 
  4554 ;;  exp             1   14[COMRAM] unsigned char 
  4555 ;; Return value:  Size  Location     Type
  4556 ;;                  4    5[COMRAM] unsigned char 
  4557 ;; Registers used:
  4558 ;;		wreg, status,2, status,0
  4559 ;; Tracked objects:
  4560 ;;		On entry : 0/0
  4561 ;;		On exit  : 0/0
  4562 ;;		Unchanged: 0/0
  4563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4564 ;;      Params:         4       0       0       0       0       0       0       0       0
  4565 ;;      Locals:         6       0       0       0       0       0       0       0       0
  4566 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4567 ;;      Totals:        14       0       0       0       0       0       0       0       0
  4568 ;;Total ram usage:       14 bytes
  4569 ;; Hardware stack levels used:    1
  4570 ;; This function calls:
  4571 ;;		Nothing
  4572 ;; This function is called by:
  4573 ;;		_activar_seguridad
  4574 ;; This function uses a non-reentrant model
  4575 ;;
  4576                           
  4577                           	psect	text21
  4578  001760                     __ptext21:
  4579                           	callstack 0
  4580  001760                     ___xxtofl:
  4581                           	callstack 28
  4582                           
  4583                           ;incstack = 0
  4584                           ;___xxtofl@sign stored from wreg
  4585  001760  6E0E               	movwf	___xxtofl@sign^0,c
  4586  001762  500E               	movf	___xxtofl@sign^0,w,c
  4587  001764  B4D8               	btfsc	status,2,c
  4588  001766  EFB7  F00B         	goto	u2561
  4589  00176A  EFB9  F00B         	goto	u2560
  4590  00176E                     u2561:
  4591  00176E  EFDB  F00B         	goto	l855
  4592  001772                     u2560:
  4593  001772  BE09               	btfsc	(___xxtofl@val+3)^0,7,c
  4594  001774  EFC0  F00B         	goto	u2570
  4595  001778  EFBE  F00B         	goto	u2571
  4596  00177C                     u2571:
  4597  00177C  EFDB  F00B         	goto	l855
  4598  001780                     u2570:
  4599  001780  C006  F00A         	movff	___xxtofl@val,??___xxtofl
  4600  001784  C007  F00B         	movff	___xxtofl@val+1,??___xxtofl+1
  4601  001788  C008  F00C         	movff	___xxtofl@val+2,??___xxtofl+2
  4602  00178C  C009  F00D         	movff	___xxtofl@val+3,??___xxtofl+3
  4603  001790  1E0A               	comf	??___xxtofl^0,f,c
  4604  001792  1E0B               	comf	(??___xxtofl+1)^0,f,c
  4605  001794  1E0C               	comf	(??___xxtofl+2)^0,f,c
  4606  001796  1E0D               	comf	(??___xxtofl+3)^0,f,c
  4607  001798  2A0A               	incf	??___xxtofl^0,f,c
  4608  00179A  0E00               	movlw	0
  4609  00179C  220B               	addwfc	(??___xxtofl+1)^0,f,c
  4610  00179E  220C               	addwfc	(??___xxtofl+2)^0,f,c
  4611  0017A0  220D               	addwfc	(??___xxtofl+3)^0,f,c
  4612  0017A2  C00A  F010         	movff	??___xxtofl,___xxtofl@arg
  4613  0017A6  C00B  F011         	movff	??___xxtofl+1,___xxtofl@arg+1
  4614  0017AA  C00C  F012         	movff	??___xxtofl+2,___xxtofl@arg+2
  4615  0017AE  C00D  F013         	movff	??___xxtofl+3,___xxtofl@arg+3
  4616  0017B2  EFE3  F00B         	goto	l2834
  4617  0017B6                     l855:
  4618  0017B6  C006  F010         	movff	___xxtofl@val,___xxtofl@arg
  4619  0017BA  C007  F011         	movff	___xxtofl@val+1,___xxtofl@arg+1
  4620  0017BE  C008  F012         	movff	___xxtofl@val+2,___xxtofl@arg+2
  4621  0017C2  C009  F013         	movff	___xxtofl@val+3,___xxtofl@arg+3
  4622  0017C6                     l2834:
  4623  0017C6  5006               	movf	___xxtofl@val^0,w,c
  4624  0017C8  1007               	iorwf	(___xxtofl@val+1)^0,w,c
  4625  0017CA  1008               	iorwf	(___xxtofl@val+2)^0,w,c
  4626  0017CC  1009               	iorwf	(___xxtofl@val+3)^0,w,c
  4627  0017CE  A4D8               	btfss	status,2,c
  4628  0017D0  EFEC  F00B         	goto	u2581
  4629  0017D4  EFEE  F00B         	goto	u2580
  4630  0017D8                     u2581:
  4631  0017D8  EFF8  F00B         	goto	l2840
  4632  0017DC                     u2580:
  4633  0017DC  0E00               	movlw	0
  4634  0017DE  6E06               	movwf	?___xxtofl^0,c
  4635  0017E0  0E00               	movlw	0
  4636  0017E2  6E07               	movwf	(?___xxtofl+1)^0,c
  4637  0017E4  0E00               	movlw	0
  4638  0017E6  6E08               	movwf	(?___xxtofl+2)^0,c
  4639  0017E8  0E00               	movlw	0
  4640  0017EA  6E09               	movwf	(?___xxtofl+3)^0,c
  4641  0017EC  EF89  F00C         	goto	l858
  4642  0017F0                     l2840:
  4643  0017F0  0E96               	movlw	150
  4644  0017F2  6E0F               	movwf	___xxtofl@exp^0,c
  4645  0017F4  EF02  F00C         	goto	l2844
  4646  0017F8                     l2842:
  4647  0017F8  2A0F               	incf	___xxtofl@exp^0,f,c
  4648  0017FA  90D8               	bcf	status,0,c
  4649  0017FC  3213               	rrcf	(___xxtofl@arg+3)^0,f,c
  4650  0017FE  3212               	rrcf	(___xxtofl@arg+2)^0,f,c
  4651  001800  3211               	rrcf	(___xxtofl@arg+1)^0,f,c
  4652  001802  3210               	rrcf	___xxtofl@arg^0,f,c
  4653  001804                     l2844:
  4654  001804  0E00               	movlw	0
  4655  001806  1410               	andwf	___xxtofl@arg^0,w,c
  4656  001808  6E0A               	movwf	??___xxtofl^0,c
  4657  00180A  0E00               	movlw	0
  4658  00180C  1411               	andwf	(___xxtofl@arg+1)^0,w,c
  4659  00180E  6E0B               	movwf	(??___xxtofl+1)^0,c
  4660  001810  0E00               	movlw	0
  4661  001812  1412               	andwf	(___xxtofl@arg+2)^0,w,c
  4662  001814  6E0C               	movwf	(??___xxtofl+2)^0,c
  4663  001816  0EFE               	movlw	254
  4664  001818  1413               	andwf	(___xxtofl@arg+3)^0,w,c
  4665  00181A  6E0D               	movwf	(??___xxtofl+3)^0,c
  4666  00181C  500A               	movf	??___xxtofl^0,w,c
  4667  00181E  100B               	iorwf	(??___xxtofl+1)^0,w,c
  4668  001820  100C               	iorwf	(??___xxtofl+2)^0,w,c
  4669  001822  100D               	iorwf	(??___xxtofl+3)^0,w,c
  4670  001824  A4D8               	btfss	status,2,c
  4671  001826  EF17  F00C         	goto	u2591
  4672  00182A  EF19  F00C         	goto	u2590
  4673  00182E                     u2591:
  4674  00182E  EFFC  F00B         	goto	l2842
  4675  001832                     u2590:
  4676  001832  EF27  F00C         	goto	l862
  4677  001836                     l2846:
  4678  001836  2A0F               	incf	___xxtofl@exp^0,f,c
  4679  001838  0E01               	movlw	1
  4680  00183A  2610               	addwf	___xxtofl@arg^0,f,c
  4681  00183C  0E00               	movlw	0
  4682  00183E  2211               	addwfc	(___xxtofl@arg+1)^0,f,c
  4683  001840  2212               	addwfc	(___xxtofl@arg+2)^0,f,c
  4684  001842  2213               	addwfc	(___xxtofl@arg+3)^0,f,c
  4685  001844  90D8               	bcf	status,0,c
  4686  001846  3213               	rrcf	(___xxtofl@arg+3)^0,f,c
  4687  001848  3212               	rrcf	(___xxtofl@arg+2)^0,f,c
  4688  00184A  3211               	rrcf	(___xxtofl@arg+1)^0,f,c
  4689  00184C  3210               	rrcf	___xxtofl@arg^0,f,c
  4690  00184E                     l862:
  4691  00184E  0E00               	movlw	0
  4692  001850  1410               	andwf	___xxtofl@arg^0,w,c
  4693  001852  6E0A               	movwf	??___xxtofl^0,c
  4694  001854  0E00               	movlw	0
  4695  001856  1411               	andwf	(___xxtofl@arg+1)^0,w,c
  4696  001858  6E0B               	movwf	(??___xxtofl+1)^0,c
  4697  00185A  0E00               	movlw	0
  4698  00185C  1412               	andwf	(___xxtofl@arg+2)^0,w,c
  4699  00185E  6E0C               	movwf	(??___xxtofl+2)^0,c
  4700  001860  0EFF               	movlw	255
  4701  001862  1413               	andwf	(___xxtofl@arg+3)^0,w,c
  4702  001864  6E0D               	movwf	(??___xxtofl+3)^0,c
  4703  001866  500A               	movf	??___xxtofl^0,w,c
  4704  001868  100B               	iorwf	(??___xxtofl+1)^0,w,c
  4705  00186A  100C               	iorwf	(??___xxtofl+2)^0,w,c
  4706  00186C  100D               	iorwf	(??___xxtofl+3)^0,w,c
  4707  00186E  A4D8               	btfss	status,2,c
  4708  001870  EF3C  F00C         	goto	u2601
  4709  001874  EF3E  F00C         	goto	u2600
  4710  001878                     u2601:
  4711  001878  EF1B  F00C         	goto	l2846
  4712  00187C                     u2600:
  4713  00187C  EF46  F00C         	goto	l2854
  4714  001880                     l2852:
  4715  001880  060F               	decf	___xxtofl@exp^0,f,c
  4716  001882  90D8               	bcf	status,0,c
  4717  001884  3610               	rlcf	___xxtofl@arg^0,f,c
  4718  001886  3611               	rlcf	(___xxtofl@arg+1)^0,f,c
  4719  001888  3612               	rlcf	(___xxtofl@arg+2)^0,f,c
  4720  00188A  3613               	rlcf	(___xxtofl@arg+3)^0,f,c
  4721  00188C                     l2854:
  4722  00188C  BE12               	btfsc	(___xxtofl@arg+2)^0,7,c
  4723  00188E  EF4B  F00C         	goto	u2611
  4724  001892  EF4D  F00C         	goto	u2610
  4725  001896                     u2611:
  4726  001896  EF55  F00C         	goto	l869
  4727  00189A                     u2610:
  4728  00189A  0E02               	movlw	2
  4729  00189C  600F               	cpfslt	___xxtofl@exp^0,c
  4730  00189E  EF53  F00C         	goto	u2621
  4731  0018A2  EF55  F00C         	goto	u2620
  4732  0018A6                     u2621:
  4733  0018A6  EF40  F00C         	goto	l2852
  4734  0018AA                     u2620:
  4735  0018AA                     l869:
  4736  0018AA  B00F               	btfsc	___xxtofl@exp^0,0,c
  4737  0018AC  EF5A  F00C         	goto	u2631
  4738  0018B0  EF5C  F00C         	goto	u2630
  4739  0018B4                     u2631:
  4740  0018B4  EF5D  F00C         	goto	l2860
  4741  0018B8                     u2630:
  4742  0018B8  9E12               	bcf	(___xxtofl@arg+2)^0,7,c
  4743  0018BA                     l2860:
  4744  0018BA  90D8               	bcf	status,0,c
  4745  0018BC  320F               	rrcf	___xxtofl@exp^0,f,c
  4746  0018BE  C00F  F00A         	movff	___xxtofl@exp,??___xxtofl
  4747  0018C2  6A0B               	clrf	(??___xxtofl+1)^0,c
  4748  0018C4  6A0C               	clrf	(??___xxtofl+2)^0,c
  4749  0018C6  6A0D               	clrf	(??___xxtofl+3)^0,c
  4750  0018C8  C00A  F00D         	movff	??___xxtofl,??___xxtofl+3
  4751  0018CC  6A0C               	clrf	(??___xxtofl+2)^0,c
  4752  0018CE  6A0B               	clrf	(??___xxtofl+1)^0,c
  4753  0018D0  6A0A               	clrf	??___xxtofl^0,c
  4754  0018D2  500A               	movf	??___xxtofl^0,w,c
  4755  0018D4  1210               	iorwf	___xxtofl@arg^0,f,c
  4756  0018D6  500B               	movf	(??___xxtofl+1)^0,w,c
  4757  0018D8  1211               	iorwf	(___xxtofl@arg+1)^0,f,c
  4758  0018DA  500C               	movf	(??___xxtofl+2)^0,w,c
  4759  0018DC  1212               	iorwf	(___xxtofl@arg+2)^0,f,c
  4760  0018DE  500D               	movf	(??___xxtofl+3)^0,w,c
  4761  0018E0  1213               	iorwf	(___xxtofl@arg+3)^0,f,c
  4762  0018E2  500E               	movf	___xxtofl@sign^0,w,c
  4763  0018E4  B4D8               	btfsc	status,2,c
  4764  0018E6  EF77  F00C         	goto	u2641
  4765  0018EA  EF79  F00C         	goto	u2640
  4766  0018EE                     u2641:
  4767  0018EE  EF81  F00C         	goto	l2870
  4768  0018F2                     u2640:
  4769  0018F2  BE09               	btfsc	(___xxtofl@val+3)^0,7,c
  4770  0018F4  EF80  F00C         	goto	u2650
  4771  0018F8  EF7E  F00C         	goto	u2651
  4772  0018FC                     u2651:
  4773  0018FC  EF81  F00C         	goto	l2870
  4774  001900                     u2650:
  4775  001900  8E13               	bsf	(___xxtofl@arg+3)^0,7,c
  4776  001902                     l2870:
  4777  001902  C010  F006         	movff	___xxtofl@arg,?___xxtofl
  4778  001906  C011  F007         	movff	___xxtofl@arg+1,?___xxtofl+1
  4779  00190A  C012  F008         	movff	___xxtofl@arg+2,?___xxtofl+2
  4780  00190E  C013  F009         	movff	___xxtofl@arg+3,?___xxtofl+3
  4781  001912                     l858:
  4782  001912  0012               	return		;funcret
  4783  001914                     __end_of___xxtofl:
  4784                           	callstack 0
  4785                           
  4786 ;; *************** function ___fltol *****************
  4787 ;; Defined at:
  4788 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\fltol.c"
  4789 ;; Parameters:    Size  Location     Type
  4790 ;;  f1              4    0[COMRAM] unsigned char 
  4791 ;; Auto vars:     Size  Location     Type
  4792 ;;  exp1            1    9[COMRAM] unsigned char 
  4793 ;;  sign1           1    8[COMRAM] unsigned char 
  4794 ;; Return value:  Size  Location     Type
  4795 ;;                  4    0[COMRAM] long 
  4796 ;; Registers used:
  4797 ;;		wreg, status,2, status,0
  4798 ;; Tracked objects:
  4799 ;;		On entry : 0/0
  4800 ;;		On exit  : 0/0
  4801 ;;		Unchanged: 0/0
  4802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4803 ;;      Params:         4       0       0       0       0       0       0       0       0
  4804 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4805 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4806 ;;      Totals:        10       0       0       0       0       0       0       0       0
  4807 ;;Total ram usage:       10 bytes
  4808 ;; Hardware stack levels used:    1
  4809 ;; This function calls:
  4810 ;;		Nothing
  4811 ;; This function is called by:
  4812 ;;		_activar_seguridad
  4813 ;; This function uses a non-reentrant model
  4814 ;;
  4815                           
  4816                           	psect	text22
  4817  001D8A                     __ptext22:
  4818                           	callstack 0
  4819  001D8A                     ___fltol:
  4820                           	callstack 28
  4821  001D8A  3403               	rlcf	(___fltol@f1+2)^0,w,c
  4822  001D8C  3404               	rlcf	(___fltol@f1+3)^0,w,c
  4823  001D8E  6E0A               	movwf	___fltol@exp1^0,c
  4824  001D90  500A               	movf	___fltol@exp1^0,w,c
  4825  001D92  A4D8               	btfss	status,2,c
  4826  001D94  EFCE  F00E         	goto	u2491
  4827  001D98  EFD0  F00E         	goto	u2490
  4828  001D9C                     u2491:
  4829  001D9C  EFDA  F00E         	goto	l2790
  4830  001DA0                     u2490:
  4831  001DA0                     l2786:
  4832  001DA0  0E00               	movlw	0
  4833  001DA2  6E01               	movwf	?___fltol^0,c
  4834  001DA4  0E00               	movlw	0
  4835  001DA6  6E02               	movwf	(?___fltol+1)^0,c
  4836  001DA8  0E00               	movlw	0
  4837  001DAA  6E03               	movwf	(?___fltol+2)^0,c
  4838  001DAC  0E00               	movlw	0
  4839  001DAE  6E04               	movwf	(?___fltol+3)^0,c
  4840  001DB0  EF47  F00F         	goto	l497
  4841  001DB4                     l2790:
  4842  001DB4  C001  F005         	movff	___fltol@f1,??___fltol
  4843  001DB8  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  4844  001DBC  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  4845  001DC0  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  4846  001DC4  0E20               	movlw	32
  4847  001DC6  EFEA  F00E         	goto	u2500
  4848  001DCA                     u2505:
  4849  001DCA  90D8               	bcf	status,0,c
  4850  001DCC  3208               	rrcf	(??___fltol+3)^0,f,c
  4851  001DCE  3207               	rrcf	(??___fltol+2)^0,f,c
  4852  001DD0  3206               	rrcf	(??___fltol+1)^0,f,c
  4853  001DD2  3205               	rrcf	??___fltol^0,f,c
  4854  001DD4                     u2500:
  4855  001DD4  2EE8               	decfsz	wreg,f,c
  4856  001DD6  EFE5  F00E         	goto	u2505
  4857  001DDA  5005               	movf	??___fltol^0,w,c
  4858  001DDC  6E09               	movwf	___fltol@sign1^0,c
  4859  001DDE  8E03               	bsf	(___fltol@f1+2)^0,7,c
  4860  001DE0  0EFF               	movlw	255
  4861  001DE2  1601               	andwf	___fltol@f1^0,f,c
  4862  001DE4  0EFF               	movlw	255
  4863  001DE6  1602               	andwf	(___fltol@f1+1)^0,f,c
  4864  001DE8  0EFF               	movlw	255
  4865  001DEA  1603               	andwf	(___fltol@f1+2)^0,f,c
  4866  001DEC  0E00               	movlw	0
  4867  001DEE  1604               	andwf	(___fltol@f1+3)^0,f,c
  4868  001DF0  0E96               	movlw	150
  4869  001DF2  5E0A               	subwf	___fltol@exp1^0,f,c
  4870  001DF4  BE0A               	btfsc	___fltol@exp1^0,7,c
  4871  001DF6  EF01  F00F         	goto	u2510
  4872  001DFA  EFFF  F00E         	goto	u2511
  4873  001DFE                     u2511:
  4874  001DFE  EF17  F00F         	goto	l2810
  4875  001E02                     u2510:
  4876  001E02  500A               	movf	___fltol@exp1^0,w,c
  4877  001E04  0A80               	xorlw	128
  4878  001E06  0F97               	addlw	151
  4879  001E08  B0D8               	btfsc	status,0,c
  4880  001E0A  EF09  F00F         	goto	u2521
  4881  001E0E  EF0B  F00F         	goto	u2520
  4882  001E12                     u2521:
  4883  001E12  EF0D  F00F         	goto	l2806
  4884  001E16                     u2520:
  4885  001E16  EFD0  F00E         	goto	l2786
  4886  001E1A                     l2806:
  4887  001E1A  90D8               	bcf	status,0,c
  4888  001E1C  3204               	rrcf	(___fltol@f1+3)^0,f,c
  4889  001E1E  3203               	rrcf	(___fltol@f1+2)^0,f,c
  4890  001E20  3202               	rrcf	(___fltol@f1+1)^0,f,c
  4891  001E22  3201               	rrcf	___fltol@f1^0,f,c
  4892  001E24  3E0A               	incfsz	___fltol@exp1^0,f,c
  4893  001E26  EF0D  F00F         	goto	l2806
  4894  001E2A  EF2F  F00F         	goto	l2820
  4895  001E2E                     l2810:
  4896  001E2E  0E1F               	movlw	31
  4897  001E30  640A               	cpfsgt	___fltol@exp1^0,c
  4898  001E32  EF1D  F00F         	goto	u2531
  4899  001E36  EF1F  F00F         	goto	u2530
  4900  001E3A                     u2531:
  4901  001E3A  EF27  F00F         	goto	l2818
  4902  001E3E                     u2530:
  4903  001E3E  EFD0  F00E         	goto	l2786
  4904  001E42                     l2816:
  4905  001E42  90D8               	bcf	status,0,c
  4906  001E44  3601               	rlcf	___fltol@f1^0,f,c
  4907  001E46  3602               	rlcf	(___fltol@f1+1)^0,f,c
  4908  001E48  3603               	rlcf	(___fltol@f1+2)^0,f,c
  4909  001E4A  3604               	rlcf	(___fltol@f1+3)^0,f,c
  4910  001E4C  060A               	decf	___fltol@exp1^0,f,c
  4911  001E4E                     l2818:
  4912  001E4E  500A               	movf	___fltol@exp1^0,w,c
  4913  001E50  A4D8               	btfss	status,2,c
  4914  001E52  EF2D  F00F         	goto	u2541
  4915  001E56  EF2F  F00F         	goto	u2540
  4916  001E5A                     u2541:
  4917  001E5A  EF21  F00F         	goto	l2816
  4918  001E5E                     u2540:
  4919  001E5E                     l2820:
  4920  001E5E  5009               	movf	___fltol@sign1^0,w,c
  4921  001E60  B4D8               	btfsc	status,2,c
  4922  001E62  EF35  F00F         	goto	u2551
  4923  001E66  EF37  F00F         	goto	u2550
  4924  001E6A                     u2551:
  4925  001E6A  EF3F  F00F         	goto	l2824
  4926  001E6E                     u2550:
  4927  001E6E  1E04               	comf	(___fltol@f1+3)^0,f,c
  4928  001E70  1E03               	comf	(___fltol@f1+2)^0,f,c
  4929  001E72  1E02               	comf	(___fltol@f1+1)^0,f,c
  4930  001E74  6C01               	negf	___fltol@f1^0,c
  4931  001E76  0E00               	movlw	0
  4932  001E78  2202               	addwfc	(___fltol@f1+1)^0,f,c
  4933  001E7A  2203               	addwfc	(___fltol@f1+2)^0,f,c
  4934  001E7C  2204               	addwfc	(___fltol@f1+3)^0,f,c
  4935  001E7E                     l2824:
  4936  001E7E  C001  F001         	movff	___fltol@f1,?___fltol
  4937  001E82  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  4938  001E86  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  4939  001E8A  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  4940  001E8E                     l497:
  4941  001E8E  0012               	return		;funcret
  4942  001E90                     __end_of___fltol:
  4943                           	callstack 0
  4944                           
  4945 ;; *************** function ___flmul *****************
  4946 ;; Defined at:
  4947 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\sprcmul.c"
  4948 ;; Parameters:    Size  Location     Type
  4949 ;;  b               4   19[COMRAM] long 
  4950 ;;  a               4   23[COMRAM] long 
  4951 ;; Auto vars:     Size  Location     Type
  4952 ;;  prod            4   38[COMRAM] struct .
  4953 ;;  grs             4   32[COMRAM] unsigned long 
  4954 ;;  temp            2   42[COMRAM] struct .
  4955 ;;  bexp            1   37[COMRAM] unsigned char 
  4956 ;;  aexp            1   36[COMRAM] unsigned char 
  4957 ;;  sign            1   31[COMRAM] unsigned char 
  4958 ;; Return value:  Size  Location     Type
  4959 ;;                  4   19[COMRAM] unsigned char 
  4960 ;; Registers used:
  4961 ;;		wreg, status,2, status,0, prodl, prodh
  4962 ;; Tracked objects:
  4963 ;;		On entry : 0/0
  4964 ;;		On exit  : 0/0
  4965 ;;		Unchanged: 0/0
  4966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4967 ;;      Params:         8       0       0       0       0       0       0       0       0
  4968 ;;      Locals:        13       0       0       0       0       0       0       0       0
  4969 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4970 ;;      Totals:        25       0       0       0       0       0       0       0       0
  4971 ;;Total ram usage:       25 bytes
  4972 ;; Hardware stack levels used:    1
  4973 ;; This function calls:
  4974 ;;		Nothing
  4975 ;; This function is called by:
  4976 ;;		_activar_seguridad
  4977 ;; This function uses a non-reentrant model
  4978 ;;
  4979                           
  4980                           	psect	text23
  4981  000E2E                     __ptext23:
  4982                           	callstack 0
  4983  000E2E                     ___flmul:
  4984                           	callstack 28
  4985  000E2E  5017               	movf	(___flmul@b+3)^0,w,c
  4986  000E30  0B80               	andlw	128
  4987  000E32  6E20               	movwf	___flmul@sign^0,c
  4988  000E34  5017               	movf	(___flmul@b+3)^0,w,c
  4989  000E36  2417               	addwf	(___flmul@b+3)^0,w,c
  4990  000E38  6E26               	movwf	___flmul@bexp^0,c
  4991  000E3A  AE16               	btfss	(___flmul@b+2)^0,7,c
  4992  000E3C  EF22  F007         	goto	u2251
  4993  000E40  EF24  F007         	goto	u2250
  4994  000E44                     u2251:
  4995  000E44  EF25  F007         	goto	l2638
  4996  000E48                     u2250:
  4997  000E48  8026               	bsf	___flmul@bexp^0,0,c
  4998  000E4A                     l2638:
  4999  000E4A  5026               	movf	___flmul@bexp^0,w,c
  5000  000E4C  B4D8               	btfsc	status,2,c
  5001  000E4E  EF2B  F007         	goto	u2261
  5002  000E52  EF2D  F007         	goto	u2260
  5003  000E56                     u2261:
  5004  000E56  EF40  F007         	goto	l2646
  5005  000E5A                     u2260:
  5006  000E5A  2826               	incf	___flmul@bexp^0,w,c
  5007  000E5C  A4D8               	btfss	status,2,c
  5008  000E5E  EF33  F007         	goto	u2271
  5009  000E62  EF35  F007         	goto	u2270
  5010  000E66                     u2271:
  5011  000E66  EF3D  F007         	goto	l2644
  5012  000E6A                     u2270:
  5013  000E6A  0E00               	movlw	0
  5014  000E6C  6E14               	movwf	___flmul@b^0,c
  5015  000E6E  0E00               	movlw	0
  5016  000E70  6E15               	movwf	(___flmul@b+1)^0,c
  5017  000E72  0E00               	movlw	0
  5018  000E74  6E16               	movwf	(___flmul@b+2)^0,c
  5019  000E76  0E00               	movlw	0
  5020  000E78  6E17               	movwf	(___flmul@b+3)^0,c
  5021  000E7A                     l2644:
  5022  000E7A  8E16               	bsf	(___flmul@b+2)^0,7,c
  5023  000E7C  EF48  F007         	goto	l2648
  5024  000E80                     l2646:
  5025  000E80  0E00               	movlw	0
  5026  000E82  6E14               	movwf	___flmul@b^0,c
  5027  000E84  0E00               	movlw	0
  5028  000E86  6E15               	movwf	(___flmul@b+1)^0,c
  5029  000E88  0E00               	movlw	0
  5030  000E8A  6E16               	movwf	(___flmul@b+2)^0,c
  5031  000E8C  0E00               	movlw	0
  5032  000E8E  6E17               	movwf	(___flmul@b+3)^0,c
  5033  000E90                     l2648:
  5034  000E90  501B               	movf	(___flmul@a+3)^0,w,c
  5035  000E92  0B80               	andlw	128
  5036  000E94  1A20               	xorwf	___flmul@sign^0,f,c
  5037  000E96  501B               	movf	(___flmul@a+3)^0,w,c
  5038  000E98  241B               	addwf	(___flmul@a+3)^0,w,c
  5039  000E9A  6E25               	movwf	___flmul@aexp^0,c
  5040  000E9C  AE1A               	btfss	(___flmul@a+2)^0,7,c
  5041  000E9E  EF53  F007         	goto	u2281
  5042  000EA2  EF55  F007         	goto	u2280
  5043  000EA6                     u2281:
  5044  000EA6  EF56  F007         	goto	l2656
  5045  000EAA                     u2280:
  5046  000EAA  8025               	bsf	___flmul@aexp^0,0,c
  5047  000EAC                     l2656:
  5048  000EAC  5025               	movf	___flmul@aexp^0,w,c
  5049  000EAE  B4D8               	btfsc	status,2,c
  5050  000EB0  EF5C  F007         	goto	u2291
  5051  000EB4  EF5E  F007         	goto	u2290
  5052  000EB8                     u2291:
  5053  000EB8  EF71  F007         	goto	l2664
  5054  000EBC                     u2290:
  5055  000EBC  2825               	incf	___flmul@aexp^0,w,c
  5056  000EBE  A4D8               	btfss	status,2,c
  5057  000EC0  EF64  F007         	goto	u2301
  5058  000EC4  EF66  F007         	goto	u2300
  5059  000EC8                     u2301:
  5060  000EC8  EF6E  F007         	goto	l2662
  5061  000ECC                     u2300:
  5062  000ECC  0E00               	movlw	0
  5063  000ECE  6E18               	movwf	___flmul@a^0,c
  5064  000ED0  0E00               	movlw	0
  5065  000ED2  6E19               	movwf	(___flmul@a+1)^0,c
  5066  000ED4  0E00               	movlw	0
  5067  000ED6  6E1A               	movwf	(___flmul@a+2)^0,c
  5068  000ED8  0E00               	movlw	0
  5069  000EDA  6E1B               	movwf	(___flmul@a+3)^0,c
  5070  000EDC                     l2662:
  5071  000EDC  8E1A               	bsf	(___flmul@a+2)^0,7,c
  5072  000EDE  EF79  F007         	goto	l814
  5073  000EE2                     l2664:
  5074  000EE2  0E00               	movlw	0
  5075  000EE4  6E18               	movwf	___flmul@a^0,c
  5076  000EE6  0E00               	movlw	0
  5077  000EE8  6E19               	movwf	(___flmul@a+1)^0,c
  5078  000EEA  0E00               	movlw	0
  5079  000EEC  6E1A               	movwf	(___flmul@a+2)^0,c
  5080  000EEE  0E00               	movlw	0
  5081  000EF0  6E1B               	movwf	(___flmul@a+3)^0,c
  5082  000EF2                     l814:
  5083  000EF2  5025               	movf	___flmul@aexp^0,w,c
  5084  000EF4  B4D8               	btfsc	status,2,c
  5085  000EF6  EF7F  F007         	goto	u2311
  5086  000EFA  EF81  F007         	goto	u2310
  5087  000EFE                     u2311:
  5088  000EFE  EF89  F007         	goto	l2668
  5089  000F02                     u2310:
  5090  000F02  5026               	movf	___flmul@bexp^0,w,c
  5091  000F04  A4D8               	btfss	status,2,c
  5092  000F06  EF87  F007         	goto	u2321
  5093  000F0A  EF89  F007         	goto	u2320
  5094  000F0E                     u2321:
  5095  000F0E  EF93  F007         	goto	l2672
  5096  000F12                     u2320:
  5097  000F12                     l2668:
  5098  000F12  0E00               	movlw	0
  5099  000F14  6E14               	movwf	?___flmul^0,c
  5100  000F16  0E00               	movlw	0
  5101  000F18  6E15               	movwf	(?___flmul+1)^0,c
  5102  000F1A  0E00               	movlw	0
  5103  000F1C  6E16               	movwf	(?___flmul+2)^0,c
  5104  000F1E  0E00               	movlw	0
  5105  000F20  6E17               	movwf	(?___flmul+3)^0,c
  5106  000F22  EF2B  F009         	goto	l818
  5107  000F26                     l2672:
  5108  000F26  501A               	movf	(___flmul@a+2)^0,w,c
  5109  000F28  0214               	mulwf	___flmul@b^0,c
  5110  000F2A  CFF3 F02B          	movff	prodl,___flmul@temp
  5111  000F2E  CFF4 F02C          	movff	prodh,___flmul@temp+1
  5112  000F32  502B               	movf	___flmul@temp^0,w,c
  5113  000F34  6E21               	movwf	___flmul@grs^0,c
  5114  000F36  6A22               	clrf	(___flmul@grs+1)^0,c
  5115  000F38  6A23               	clrf	(___flmul@grs+2)^0,c
  5116  000F3A  6A24               	clrf	(___flmul@grs+3)^0,c
  5117  000F3C  502C               	movf	(___flmul@temp+1)^0,w,c
  5118  000F3E  6E27               	movwf	___flmul@prod^0,c
  5119  000F40  6A28               	clrf	(___flmul@prod+1)^0,c
  5120  000F42  6A29               	clrf	(___flmul@prod+2)^0,c
  5121  000F44  6A2A               	clrf	(___flmul@prod+3)^0,c
  5122  000F46  5019               	movf	(___flmul@a+1)^0,w,c
  5123  000F48  0215               	mulwf	(___flmul@b+1)^0,c
  5124  000F4A  CFF3 F02B          	movff	prodl,___flmul@temp
  5125  000F4E  CFF4 F02C          	movff	prodh,___flmul@temp+1
  5126  000F52  502B               	movf	___flmul@temp^0,w,c
  5127  000F54  2621               	addwf	___flmul@grs^0,f,c
  5128  000F56  0E00               	movlw	0
  5129  000F58  2222               	addwfc	(___flmul@grs+1)^0,f,c
  5130  000F5A  2223               	addwfc	(___flmul@grs+2)^0,f,c
  5131  000F5C  2224               	addwfc	(___flmul@grs+3)^0,f,c
  5132  000F5E  502C               	movf	(___flmul@temp+1)^0,w,c
  5133  000F60  2627               	addwf	___flmul@prod^0,f,c
  5134  000F62  0E00               	movlw	0
  5135  000F64  2228               	addwfc	(___flmul@prod+1)^0,f,c
  5136  000F66  2229               	addwfc	(___flmul@prod+2)^0,f,c
  5137  000F68  222A               	addwfc	(___flmul@prod+3)^0,f,c
  5138  000F6A  5018               	movf	___flmul@a^0,w,c
  5139  000F6C  0216               	mulwf	(___flmul@b+2)^0,c
  5140  000F6E  CFF3 F02B          	movff	prodl,___flmul@temp
  5141  000F72  CFF4 F02C          	movff	prodh,___flmul@temp+1
  5142  000F76  502B               	movf	___flmul@temp^0,w,c
  5143  000F78  2621               	addwf	___flmul@grs^0,f,c
  5144  000F7A  0E00               	movlw	0
  5145  000F7C  2222               	addwfc	(___flmul@grs+1)^0,f,c
  5146  000F7E  2223               	addwfc	(___flmul@grs+2)^0,f,c
  5147  000F80  2224               	addwfc	(___flmul@grs+3)^0,f,c
  5148  000F82  502C               	movf	(___flmul@temp+1)^0,w,c
  5149  000F84  2627               	addwf	___flmul@prod^0,f,c
  5150  000F86  0E00               	movlw	0
  5151  000F88  2228               	addwfc	(___flmul@prod+1)^0,f,c
  5152  000F8A  2229               	addwfc	(___flmul@prod+2)^0,f,c
  5153  000F8C  222A               	addwfc	(___flmul@prod+3)^0,f,c
  5154  000F8E  C023  F024         	movff	___flmul@grs+2,___flmul@grs+3
  5155  000F92  C022  F023         	movff	___flmul@grs+1,___flmul@grs+2
  5156  000F96  C021  F022         	movff	___flmul@grs,___flmul@grs+1
  5157  000F9A  6A21               	clrf	___flmul@grs^0,c
  5158  000F9C  5018               	movf	___flmul@a^0,w,c
  5159  000F9E  0215               	mulwf	(___flmul@b+1)^0,c
  5160  000FA0  CFF3 F02B          	movff	prodl,___flmul@temp
  5161  000FA4  CFF4 F02C          	movff	prodh,___flmul@temp+1
  5162  000FA8  502B               	movf	___flmul@temp^0,w,c
  5163  000FAA  2621               	addwf	___flmul@grs^0,f,c
  5164  000FAC  502C               	movf	(___flmul@temp+1)^0,w,c
  5165  000FAE  2222               	addwfc	(___flmul@grs+1)^0,f,c
  5166  000FB0  0E00               	movlw	0
  5167  000FB2  2223               	addwfc	(___flmul@grs+2)^0,f,c
  5168  000FB4  0E00               	movlw	0
  5169  000FB6  2224               	addwfc	(___flmul@grs+3)^0,f,c
  5170  000FB8  5019               	movf	(___flmul@a+1)^0,w,c
  5171  000FBA  0214               	mulwf	___flmul@b^0,c
  5172  000FBC  CFF3 F02B          	movff	prodl,___flmul@temp
  5173  000FC0  CFF4 F02C          	movff	prodh,___flmul@temp+1
  5174  000FC4  502B               	movf	___flmul@temp^0,w,c
  5175  000FC6  2621               	addwf	___flmul@grs^0,f,c
  5176  000FC8  502C               	movf	(___flmul@temp+1)^0,w,c
  5177  000FCA  2222               	addwfc	(___flmul@grs+1)^0,f,c
  5178  000FCC  0E00               	movlw	0
  5179  000FCE  2223               	addwfc	(___flmul@grs+2)^0,f,c
  5180  000FD0  0E00               	movlw	0
  5181  000FD2  2224               	addwfc	(___flmul@grs+3)^0,f,c
  5182  000FD4  C023  F024         	movff	___flmul@grs+2,___flmul@grs+3
  5183  000FD8  C022  F023         	movff	___flmul@grs+1,___flmul@grs+2
  5184  000FDC  C021  F022         	movff	___flmul@grs,___flmul@grs+1
  5185  000FE0  6A21               	clrf	___flmul@grs^0,c
  5186  000FE2  5018               	movf	___flmul@a^0,w,c
  5187  000FE4  0214               	mulwf	___flmul@b^0,c
  5188  000FE6  CFF3 F02B          	movff	prodl,___flmul@temp
  5189  000FEA  CFF4 F02C          	movff	prodh,___flmul@temp+1
  5190  000FEE  502B               	movf	___flmul@temp^0,w,c
  5191  000FF0  2621               	addwf	___flmul@grs^0,f,c
  5192  000FF2  502C               	movf	(___flmul@temp+1)^0,w,c
  5193  000FF4  2222               	addwfc	(___flmul@grs+1)^0,f,c
  5194  000FF6  0E00               	movlw	0
  5195  000FF8  2223               	addwfc	(___flmul@grs+2)^0,f,c
  5196  000FFA  0E00               	movlw	0
  5197  000FFC  2224               	addwfc	(___flmul@grs+3)^0,f,c
  5198  000FFE  501A               	movf	(___flmul@a+2)^0,w,c
  5199  001000  0215               	mulwf	(___flmul@b+1)^0,c
  5200  001002  CFF3 F02B          	movff	prodl,___flmul@temp
  5201  001006  CFF4 F02C          	movff	prodh,___flmul@temp+1
  5202  00100A  502B               	movf	___flmul@temp^0,w,c
  5203  00100C  2627               	addwf	___flmul@prod^0,f,c
  5204  00100E  502C               	movf	(___flmul@temp+1)^0,w,c
  5205  001010  2228               	addwfc	(___flmul@prod+1)^0,f,c
  5206  001012  0E00               	movlw	0
  5207  001014  2229               	addwfc	(___flmul@prod+2)^0,f,c
  5208  001016  0E00               	movlw	0
  5209  001018  222A               	addwfc	(___flmul@prod+3)^0,f,c
  5210  00101A  5019               	movf	(___flmul@a+1)^0,w,c
  5211  00101C  0216               	mulwf	(___flmul@b+2)^0,c
  5212  00101E  CFF3 F02B          	movff	prodl,___flmul@temp
  5213  001022  CFF4 F02C          	movff	prodh,___flmul@temp+1
  5214  001026  502B               	movf	___flmul@temp^0,w,c
  5215  001028  2627               	addwf	___flmul@prod^0,f,c
  5216  00102A  502C               	movf	(___flmul@temp+1)^0,w,c
  5217  00102C  2228               	addwfc	(___flmul@prod+1)^0,f,c
  5218  00102E  0E00               	movlw	0
  5219  001030  2229               	addwfc	(___flmul@prod+2)^0,f,c
  5220  001032  0E00               	movlw	0
  5221  001034  222A               	addwfc	(___flmul@prod+3)^0,f,c
  5222  001036  501A               	movf	(___flmul@a+2)^0,w,c
  5223  001038  0216               	mulwf	(___flmul@b+2)^0,c
  5224  00103A  CFF3 F02B          	movff	prodl,___flmul@temp
  5225  00103E  CFF4 F02C          	movff	prodh,___flmul@temp+1
  5226  001042  502B               	movf	___flmul@temp^0,w,c
  5227  001044  6E1C               	movwf	??___flmul^0,c
  5228  001046  502C               	movf	(___flmul@temp+1)^0,w,c
  5229  001048  6E1D               	movwf	(??___flmul+1)^0,c
  5230  00104A  6A1E               	clrf	(??___flmul+2)^0,c
  5231  00104C  6A1F               	clrf	(??___flmul+3)^0,c
  5232  00104E  C01E  F01F         	movff	??___flmul+2,??___flmul+3
  5233  001052  C01D  F01E         	movff	??___flmul+1,??___flmul+2
  5234  001056  C01C  F01D         	movff	??___flmul,??___flmul+1
  5235  00105A  6A1C               	clrf	??___flmul^0,c
  5236  00105C  501C               	movf	??___flmul^0,w,c
  5237  00105E  2627               	addwf	___flmul@prod^0,f,c
  5238  001060  501D               	movf	(??___flmul+1)^0,w,c
  5239  001062  2228               	addwfc	(___flmul@prod+1)^0,f,c
  5240  001064  501E               	movf	(??___flmul+2)^0,w,c
  5241  001066  2229               	addwfc	(___flmul@prod+2)^0,f,c
  5242  001068  501F               	movf	(??___flmul+3)^0,w,c
  5243  00106A  222A               	addwfc	(___flmul@prod+3)^0,f,c
  5244  00106C  C021  F01C         	movff	___flmul@grs,??___flmul
  5245  001070  C022  F01D         	movff	___flmul@grs+1,??___flmul+1
  5246  001074  C023  F01E         	movff	___flmul@grs+2,??___flmul+2
  5247  001078  C024  F01F         	movff	___flmul@grs+3,??___flmul+3
  5248  00107C  0E19               	movlw	25
  5249  00107E  EF46  F008         	goto	u2330
  5250  001082                     u2335:
  5251  001082  90D8               	bcf	status,0,c
  5252  001084  321F               	rrcf	(??___flmul+3)^0,f,c
  5253  001086  321E               	rrcf	(??___flmul+2)^0,f,c
  5254  001088  321D               	rrcf	(??___flmul+1)^0,f,c
  5255  00108A  321C               	rrcf	??___flmul^0,f,c
  5256  00108C                     u2330:
  5257  00108C  2EE8               	decfsz	wreg,f,c
  5258  00108E  EF41  F008         	goto	u2335
  5259  001092  501C               	movf	??___flmul^0,w,c
  5260  001094  2627               	addwf	___flmul@prod^0,f,c
  5261  001096  501D               	movf	(??___flmul+1)^0,w,c
  5262  001098  2228               	addwfc	(___flmul@prod+1)^0,f,c
  5263  00109A  501E               	movf	(??___flmul+2)^0,w,c
  5264  00109C  2229               	addwfc	(___flmul@prod+2)^0,f,c
  5265  00109E  501F               	movf	(??___flmul+3)^0,w,c
  5266  0010A0  222A               	addwfc	(___flmul@prod+3)^0,f,c
  5267  0010A2  C023  F024         	movff	___flmul@grs+2,___flmul@grs+3
  5268  0010A6  C022  F023         	movff	___flmul@grs+1,___flmul@grs+2
  5269  0010AA  C021  F022         	movff	___flmul@grs,___flmul@grs+1
  5270  0010AE  6A21               	clrf	___flmul@grs^0,c
  5271  0010B0  5025               	movf	___flmul@aexp^0,w,c
  5272  0010B2  C026  F01C         	movff	___flmul@bexp,??___flmul
  5273  0010B6  6A1D               	clrf	(??___flmul+1)^0,c
  5274  0010B8  261C               	addwf	??___flmul^0,f,c
  5275  0010BA  0E00               	movlw	0
  5276  0010BC  221D               	addwfc	(??___flmul+1)^0,f,c
  5277  0010BE  0E82               	movlw	130
  5278  0010C0  241C               	addwf	??___flmul^0,w,c
  5279  0010C2  6E2B               	movwf	___flmul@temp^0,c
  5280  0010C4  0EFF               	movlw	255
  5281  0010C6  201D               	addwfc	(??___flmul+1)^0,w,c
  5282  0010C8  6E2C               	movwf	(___flmul@temp+1)^0,c
  5283  0010CA  EF7C  F008         	goto	l2720
  5284  0010CE                     l2714:
  5285  0010CE  90D8               	bcf	status,0,c
  5286  0010D0  3627               	rlcf	___flmul@prod^0,f,c
  5287  0010D2  3628               	rlcf	(___flmul@prod+1)^0,f,c
  5288  0010D4  3629               	rlcf	(___flmul@prod+2)^0,f,c
  5289  0010D6  362A               	rlcf	(___flmul@prod+3)^0,f,c
  5290  0010D8  AE24               	btfss	(___flmul@grs+3)^0,7,c
  5291  0010DA  EF71  F008         	goto	u2341
  5292  0010DE  EF73  F008         	goto	u2340
  5293  0010E2                     u2341:
  5294  0010E2  EF74  F008         	goto	l821
  5295  0010E6                     u2340:
  5296  0010E6  8027               	bsf	___flmul@prod^0,0,c
  5297  0010E8                     l821:
  5298  0010E8  90D8               	bcf	status,0,c
  5299  0010EA  3621               	rlcf	___flmul@grs^0,f,c
  5300  0010EC  3622               	rlcf	(___flmul@grs+1)^0,f,c
  5301  0010EE  3623               	rlcf	(___flmul@grs+2)^0,f,c
  5302  0010F0  3624               	rlcf	(___flmul@grs+3)^0,f,c
  5303  0010F2  062B               	decf	___flmul@temp^0,f,c
  5304  0010F4  A0D8               	btfss	status,0,c
  5305  0010F6  062C               	decf	(___flmul@temp+1)^0,f,c
  5306  0010F8                     l2720:
  5307  0010F8  AE29               	btfss	(___flmul@prod+2)^0,7,c
  5308  0010FA  EF81  F008         	goto	u2351
  5309  0010FE  EF83  F008         	goto	u2350
  5310  001102                     u2351:
  5311  001102  EF67  F008         	goto	l2714
  5312  001106                     u2350:
  5313  001106  0E00               	movlw	0
  5314  001108  6E25               	movwf	___flmul@aexp^0,c
  5315  00110A  AE24               	btfss	(___flmul@grs+3)^0,7,c
  5316  00110C  EF8A  F008         	goto	u2361
  5317  001110  EF8C  F008         	goto	u2360
  5318  001114                     u2361:
  5319  001114  EFB0  F008         	goto	l823
  5320  001118                     u2360:
  5321  001118  0EFF               	movlw	255
  5322  00111A  1421               	andwf	___flmul@grs^0,w,c
  5323  00111C  6E1C               	movwf	??___flmul^0,c
  5324  00111E  0EFF               	movlw	255
  5325  001120  1422               	andwf	(___flmul@grs+1)^0,w,c
  5326  001122  6E1D               	movwf	(??___flmul+1)^0,c
  5327  001124  0EFF               	movlw	255
  5328  001126  1423               	andwf	(___flmul@grs+2)^0,w,c
  5329  001128  6E1E               	movwf	(??___flmul+2)^0,c
  5330  00112A  0E7F               	movlw	127
  5331  00112C  1424               	andwf	(___flmul@grs+3)^0,w,c
  5332  00112E  6E1F               	movwf	(??___flmul+3)^0,c
  5333  001130  501C               	movf	??___flmul^0,w,c
  5334  001132  101D               	iorwf	(??___flmul+1)^0,w,c
  5335  001134  101E               	iorwf	(??___flmul+2)^0,w,c
  5336  001136  101F               	iorwf	(??___flmul+3)^0,w,c
  5337  001138  B4D8               	btfsc	status,2,c
  5338  00113A  EFA1  F008         	goto	u2371
  5339  00113E  EFA3  F008         	goto	u2370
  5340  001142                     u2371:
  5341  001142  EFA7  F008         	goto	l824
  5342  001146                     u2370:
  5343  001146                     l2728:
  5344  001146  0E01               	movlw	1
  5345  001148  6E25               	movwf	___flmul@aexp^0,c
  5346  00114A  EFB0  F008         	goto	l823
  5347  00114E                     l824:
  5348  00114E  A027               	btfss	___flmul@prod^0,0,c
  5349  001150  EFAC  F008         	goto	u2381
  5350  001154  EFAE  F008         	goto	u2380
  5351  001158                     u2381:
  5352  001158  EFB0  F008         	goto	l823
  5353  00115C                     u2380:
  5354  00115C  EFA3  F008         	goto	l2728
  5355  001160                     l823:
  5356  001160  5025               	movf	___flmul@aexp^0,w,c
  5357  001162  B4D8               	btfsc	status,2,c
  5358  001164  EFB6  F008         	goto	u2391
  5359  001168  EFB8  F008         	goto	u2390
  5360  00116C                     u2391:
  5361  00116C  EFDC  F008         	goto	l2740
  5362  001170                     u2390:
  5363  001170  0E01               	movlw	1
  5364  001172  2627               	addwf	___flmul@prod^0,f,c
  5365  001174  0E00               	movlw	0
  5366  001176  2228               	addwfc	(___flmul@prod+1)^0,f,c
  5367  001178  2229               	addwfc	(___flmul@prod+2)^0,f,c
  5368  00117A  222A               	addwfc	(___flmul@prod+3)^0,f,c
  5369  00117C  A02A               	btfss	(___flmul@prod+3)^0,0,c
  5370  00117E  EFC3  F008         	goto	u2401
  5371  001182  EFC5  F008         	goto	u2400
  5372  001186                     u2401:
  5373  001186  EFDC  F008         	goto	l2740
  5374  00118A                     u2400:
  5375  00118A  C027  F01C         	movff	___flmul@prod,??___flmul
  5376  00118E  C028  F01D         	movff	___flmul@prod+1,??___flmul+1
  5377  001192  C029  F01E         	movff	___flmul@prod+2,??___flmul+2
  5378  001196  C02A  F01F         	movff	___flmul@prod+3,??___flmul+3
  5379  00119A  341F               	rlcf	(??___flmul+3)^0,w,c
  5380  00119C  321F               	rrcf	(??___flmul+3)^0,f,c
  5381  00119E  321E               	rrcf	(??___flmul+2)^0,f,c
  5382  0011A0  321D               	rrcf	(??___flmul+1)^0,f,c
  5383  0011A2  321C               	rrcf	??___flmul^0,f,c
  5384  0011A4  C01C  F027         	movff	??___flmul,___flmul@prod
  5385  0011A8  C01D  F028         	movff	??___flmul+1,___flmul@prod+1
  5386  0011AC  C01E  F029         	movff	??___flmul+2,___flmul@prod+2
  5387  0011B0  C01F  F02A         	movff	??___flmul+3,___flmul@prod+3
  5388  0011B4  4A2B               	infsnz	___flmul@temp^0,f,c
  5389  0011B6  2A2C               	incf	(___flmul@temp+1)^0,f,c
  5390  0011B8                     l2740:
  5391  0011B8  BE2C               	btfsc	(___flmul@temp+1)^0,7,c
  5392  0011BA  EFE7  F008         	goto	u2411
  5393  0011BE  502C               	movf	(___flmul@temp+1)^0,w,c
  5394  0011C0  E108               	bnz	u2410
  5395  0011C2  282B               	incf	___flmul@temp^0,w,c
  5396  0011C4  A0D8               	btfss	status,0,c
  5397  0011C6  EFE7  F008         	goto	u2411
  5398  0011CA  EFE9  F008         	goto	u2410
  5399  0011CE                     u2411:
  5400  0011CE  EFF3  F008         	goto	l2744
  5401  0011D2                     u2410:
  5402  0011D2  0E00               	movlw	0
  5403  0011D4  6E27               	movwf	___flmul@prod^0,c
  5404  0011D6  0E00               	movlw	0
  5405  0011D8  6E28               	movwf	(___flmul@prod+1)^0,c
  5406  0011DA  0E80               	movlw	128
  5407  0011DC  6E29               	movwf	(___flmul@prod+2)^0,c
  5408  0011DE  0E7F               	movlw	127
  5409  0011E0  6E2A               	movwf	(___flmul@prod+3)^0,c
  5410  0011E2  EF21  F009         	goto	l2756
  5411  0011E6                     l2744:
  5412  0011E6  BE2C               	btfsc	(___flmul@temp+1)^0,7,c
  5413  0011E8  EF00  F009         	goto	u2420
  5414  0011EC  502C               	movf	(___flmul@temp+1)^0,w,c
  5415  0011EE  E106               	bnz	u2421
  5416  0011F0  042B               	decf	___flmul@temp^0,w,c
  5417  0011F2  B0D8               	btfsc	status,0,c
  5418  0011F4  EFFE  F008         	goto	u2421
  5419  0011F8  EF00  F009         	goto	u2420
  5420  0011FC                     u2421:
  5421  0011FC  EF0C  F009         	goto	l831
  5422  001200                     u2420:
  5423  001200  0E00               	movlw	0
  5424  001202  6E27               	movwf	___flmul@prod^0,c
  5425  001204  0E00               	movlw	0
  5426  001206  6E28               	movwf	(___flmul@prod+1)^0,c
  5427  001208  0E00               	movlw	0
  5428  00120A  6E29               	movwf	(___flmul@prod+2)^0,c
  5429  00120C  0E00               	movlw	0
  5430  00120E  6E2A               	movwf	(___flmul@prod+3)^0,c
  5431  001210  0E00               	movlw	0
  5432  001212  6E20               	movwf	___flmul@sign^0,c
  5433  001214  EF21  F009         	goto	l2756
  5434  001218                     l831:
  5435  001218  C02B  F026         	movff	___flmul@temp,___flmul@bexp
  5436  00121C  0EFF               	movlw	255
  5437  00121E  1627               	andwf	___flmul@prod^0,f,c
  5438  001220  0EFF               	movlw	255
  5439  001222  1628               	andwf	(___flmul@prod+1)^0,f,c
  5440  001224  0E7F               	movlw	127
  5441  001226  1629               	andwf	(___flmul@prod+2)^0,f,c
  5442  001228  0E00               	movlw	0
  5443  00122A  162A               	andwf	(___flmul@prod+3)^0,f,c
  5444  00122C  A026               	btfss	___flmul@bexp^0,0,c
  5445  00122E  EF1B  F009         	goto	u2431
  5446  001232  EF1D  F009         	goto	u2430
  5447  001236                     u2431:
  5448  001236  EF1E  F009         	goto	l2754
  5449  00123A                     u2430:
  5450  00123A  8E29               	bsf	(___flmul@prod+2)^0,7,c
  5451  00123C                     l2754:
  5452  00123C  90D8               	bcf	status,0,c
  5453  00123E  3026               	rrcf	___flmul@bexp^0,w,c
  5454  001240  6E2A               	movwf	(___flmul@prod+3)^0,c
  5455  001242                     l2756:
  5456  001242  5020               	movf	___flmul@sign^0,w,c
  5457  001244  122A               	iorwf	(___flmul@prod+3)^0,f,c
  5458  001246  C027  F014         	movff	___flmul@prod,?___flmul
  5459  00124A  C028  F015         	movff	___flmul@prod+1,?___flmul+1
  5460  00124E  C029  F016         	movff	___flmul@prod+2,?___flmul+2
  5461  001252  C02A  F017         	movff	___flmul@prod+3,?___flmul+3
  5462  001256                     l818:
  5463  001256  0012               	return		;funcret
  5464  001258                     __end_of___flmul:
  5465                           	callstack 0
  5466                           
  5467 ;; *************** function ___flge *****************
  5468 ;; Defined at:
  5469 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\flge.c"
  5470 ;; Parameters:    Size  Location     Type
  5471 ;;  ff1             4    0[COMRAM] unsigned char 
  5472 ;;  ff2             4    4[COMRAM] unsigned char 
  5473 ;; Auto vars:     Size  Location     Type
  5474 ;;		None
  5475 ;; Return value:  Size  Location     Type
  5476 ;;		None               void
  5477 ;; Registers used:
  5478 ;;		wreg, status,2, status,0
  5479 ;; Tracked objects:
  5480 ;;		On entry : 0/0
  5481 ;;		On exit  : 0/0
  5482 ;;		Unchanged: 0/0
  5483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5484 ;;      Params:         8       0       0       0       0       0       0       0       0
  5485 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5486 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5487 ;;      Totals:        12       0       0       0       0       0       0       0       0
  5488 ;;Total ram usage:       12 bytes
  5489 ;; Hardware stack levels used:    1
  5490 ;; This function calls:
  5491 ;;		Nothing
  5492 ;; This function is called by:
  5493 ;;		_activar_seguridad
  5494 ;; This function uses a non-reentrant model
  5495 ;;
  5496                           
  5497                           	psect	text24
  5498  001E90                     __ptext24:
  5499                           	callstack 0
  5500  001E90                     ___flge:
  5501                           	callstack 28
  5502  001E90  0E00               	movlw	0
  5503  001E92  1401               	andwf	___flge@ff1^0,w,c
  5504  001E94  6E09               	movwf	??___flge^0,c
  5505  001E96  0E00               	movlw	0
  5506  001E98  1402               	andwf	(___flge@ff1+1)^0,w,c
  5507  001E9A  6E0A               	movwf	(??___flge+1)^0,c
  5508  001E9C  0E80               	movlw	128
  5509  001E9E  1403               	andwf	(___flge@ff1+2)^0,w,c
  5510  001EA0  6E0B               	movwf	(??___flge+2)^0,c
  5511  001EA2  0E7F               	movlw	127
  5512  001EA4  1404               	andwf	(___flge@ff1+3)^0,w,c
  5513  001EA6  6E0C               	movwf	(??___flge+3)^0,c
  5514  001EA8  5009               	movf	??___flge^0,w,c
  5515  001EAA  100A               	iorwf	(??___flge+1)^0,w,c
  5516  001EAC  100B               	iorwf	(??___flge+2)^0,w,c
  5517  001EAE  100C               	iorwf	(??___flge+3)^0,w,c
  5518  001EB0  A4D8               	btfss	status,2,c
  5519  001EB2  EF5D  F00F         	goto	u2441
  5520  001EB6  EF5F  F00F         	goto	u2440
  5521  001EBA                     u2441:
  5522  001EBA  EF67  F00F         	goto	l2766
  5523  001EBE                     u2440:
  5524  001EBE  0E00               	movlw	0
  5525  001EC0  6E01               	movwf	___flge@ff1^0,c
  5526  001EC2  0E00               	movlw	0
  5527  001EC4  6E02               	movwf	(___flge@ff1+1)^0,c
  5528  001EC6  0E00               	movlw	0
  5529  001EC8  6E03               	movwf	(___flge@ff1+2)^0,c
  5530  001ECA  0E00               	movlw	0
  5531  001ECC  6E04               	movwf	(___flge@ff1+3)^0,c
  5532  001ECE                     l2766:
  5533  001ECE  0E00               	movlw	0
  5534  001ED0  1405               	andwf	___flge@ff2^0,w,c
  5535  001ED2  6E09               	movwf	??___flge^0,c
  5536  001ED4  0E00               	movlw	0
  5537  001ED6  1406               	andwf	(___flge@ff2+1)^0,w,c
  5538  001ED8  6E0A               	movwf	(??___flge+1)^0,c
  5539  001EDA  0E80               	movlw	128
  5540  001EDC  1407               	andwf	(___flge@ff2+2)^0,w,c
  5541  001EDE  6E0B               	movwf	(??___flge+2)^0,c
  5542  001EE0  0E7F               	movlw	127
  5543  001EE2  1408               	andwf	(___flge@ff2+3)^0,w,c
  5544  001EE4  6E0C               	movwf	(??___flge+3)^0,c
  5545  001EE6  5009               	movf	??___flge^0,w,c
  5546  001EE8  100A               	iorwf	(??___flge+1)^0,w,c
  5547  001EEA  100B               	iorwf	(??___flge+2)^0,w,c
  5548  001EEC  100C               	iorwf	(??___flge+3)^0,w,c
  5549  001EEE  A4D8               	btfss	status,2,c
  5550  001EF0  EF7C  F00F         	goto	u2451
  5551  001EF4  EF7E  F00F         	goto	u2450
  5552  001EF8                     u2451:
  5553  001EF8  EF86  F00F         	goto	l2770
  5554  001EFC                     u2450:
  5555  001EFC  0E00               	movlw	0
  5556  001EFE  6E05               	movwf	___flge@ff2^0,c
  5557  001F00  0E00               	movlw	0
  5558  001F02  6E06               	movwf	(___flge@ff2+1)^0,c
  5559  001F04  0E00               	movlw	0
  5560  001F06  6E07               	movwf	(___flge@ff2+2)^0,c
  5561  001F08  0E00               	movlw	0
  5562  001F0A  6E08               	movwf	(___flge@ff2+3)^0,c
  5563  001F0C                     l2770:
  5564  001F0C  AE04               	btfss	(___flge@ff1+3)^0,7,c
  5565  001F0E  EF8B  F00F         	goto	u2461
  5566  001F12  EF8D  F00F         	goto	u2460
  5567  001F16                     u2461:
  5568  001F16  EF96  F00F         	goto	l2774
  5569  001F1A                     u2460:
  5570  001F1A  6C01               	negf	___flge@ff1^0,c
  5571  001F1C  1E02               	comf	(___flge@ff1+1)^0,f,c
  5572  001F1E  B0D8               	btfsc	status,0,c
  5573  001F20  2A02               	incf	(___flge@ff1+1)^0,f,c
  5574  001F22  1E03               	comf	(___flge@ff1+2)^0,f,c
  5575  001F24  B0D8               	btfsc	status,0,c
  5576  001F26  2A03               	incf	(___flge@ff1+2)^0,f,c
  5577  001F28  0E80               	movlw	128
  5578  001F2A  5604               	subfwb	(___flge@ff1+3)^0,f,c
  5579  001F2C                     l2774:
  5580  001F2C  AE08               	btfss	(___flge@ff2+3)^0,7,c
  5581  001F2E  EF9B  F00F         	goto	u2471
  5582  001F32  EF9D  F00F         	goto	u2470
  5583  001F36                     u2471:
  5584  001F36  EFA6  F00F         	goto	l465
  5585  001F3A                     u2470:
  5586  001F3A  6C05               	negf	___flge@ff2^0,c
  5587  001F3C  1E06               	comf	(___flge@ff2+1)^0,f,c
  5588  001F3E  B0D8               	btfsc	status,0,c
  5589  001F40  2A06               	incf	(___flge@ff2+1)^0,f,c
  5590  001F42  1E07               	comf	(___flge@ff2+2)^0,f,c
  5591  001F44  B0D8               	btfsc	status,0,c
  5592  001F46  2A07               	incf	(___flge@ff2+2)^0,f,c
  5593  001F48  0E80               	movlw	128
  5594  001F4A  5608               	subfwb	(___flge@ff2+3)^0,f,c
  5595  001F4C                     l465:
  5596  001F4C  0E00               	movlw	0
  5597  001F4E  1A01               	xorwf	___flge@ff1^0,f,c
  5598  001F50  0E00               	movlw	0
  5599  001F52  1A02               	xorwf	(___flge@ff1+1)^0,f,c
  5600  001F54  0E00               	movlw	0
  5601  001F56  1A03               	xorwf	(___flge@ff1+2)^0,f,c
  5602  001F58  0E80               	movlw	128
  5603  001F5A  1A04               	xorwf	(___flge@ff1+3)^0,f,c
  5604  001F5C  0E00               	movlw	0
  5605  001F5E  1A05               	xorwf	___flge@ff2^0,f,c
  5606  001F60  0E00               	movlw	0
  5607  001F62  1A06               	xorwf	(___flge@ff2+1)^0,f,c
  5608  001F64  0E00               	movlw	0
  5609  001F66  1A07               	xorwf	(___flge@ff2+2)^0,f,c
  5610  001F68  0E80               	movlw	128
  5611  001F6A  1A08               	xorwf	(___flge@ff2+3)^0,f,c
  5612  001F6C  5005               	movf	___flge@ff2^0,w,c
  5613  001F6E  5C01               	subwf	___flge@ff1^0,w,c
  5614  001F70  5006               	movf	(___flge@ff2+1)^0,w,c
  5615  001F72  5802               	subwfb	(___flge@ff1+1)^0,w,c
  5616  001F74  5007               	movf	(___flge@ff2+2)^0,w,c
  5617  001F76  5803               	subwfb	(___flge@ff1+2)^0,w,c
  5618  001F78  5008               	movf	(___flge@ff2+3)^0,w,c
  5619  001F7A  5804               	subwfb	(___flge@ff1+3)^0,w,c
  5620  001F7C  B0D8               	btfsc	status,0,c
  5621  001F7E  EFC3  F00F         	goto	u2481
  5622  001F82  EFC5  F00F         	goto	u2480
  5623  001F86                     u2481:
  5624  001F86  EFC8  F00F         	goto	l2780
  5625  001F8A                     u2480:
  5626  001F8A  90D8               	bcf	status,0,c
  5627  001F8C  EFC9  F00F         	goto	l470
  5628  001F90                     l2780:
  5629  001F90  80D8               	bsf	status,0,c
  5630  001F92                     l470:
  5631  001F92  0012               	return		;funcret
  5632  001F94                     __end_of___flge:
  5633                           	callstack 0
  5634                           
  5635 ;; *************** function _Lcd_Write_String *****************
  5636 ;; Defined at:
  5637 ;;		line 97 in file "./lcd.h"
  5638 ;; Parameters:    Size  Location     Type
  5639 ;;  a               2    4[COMRAM] PTR unsigned char 
  5640 ;;		 -> STR_7(8), STR_6(20), activar_seguridad@Temperatura(10), STR_4(12), 
  5641 ;;		 -> STR_3(20), STR_2(7), STR_1(21), 
  5642 ;; Auto vars:     Size  Location     Type
  5643 ;;  i               2    8[COMRAM] int 
  5644 ;; Return value:  Size  Location     Type
  5645 ;;                  1    wreg      void 
  5646 ;; Registers used:
  5647 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5648 ;; Tracked objects:
  5649 ;;		On entry : 0/0
  5650 ;;		On exit  : 0/0
  5651 ;;		Unchanged: 0/0
  5652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5653 ;;      Params:         2       0       0       0       0       0       0       0       0
  5654 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5655 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5656 ;;      Totals:         6       0       0       0       0       0       0       0       0
  5657 ;;Total ram usage:        6 bytes
  5658 ;; Hardware stack levels used:    1
  5659 ;; Hardware stack levels required when called:    2
  5660 ;; This function calls:
  5661 ;;		_Lcd_Write_Char
  5662 ;; This function is called by:
  5663 ;;		_activar_seguridad
  5664 ;;		_main
  5665 ;; This function uses a non-reentrant model
  5666 ;;
  5667                           
  5668                           	psect	text25
  5669  0022B2                     __ptext25:
  5670                           	callstack 0
  5671  0022B2                     _Lcd_Write_String:
  5672                           	callstack 26
  5673  0022B2                     
  5674                           ;./lcd.h: 97: void Lcd_Write_String(char *a);./lcd.h: 98: {;./lcd.h: 99:  int i;;./lcd.h
      +                          : 100:  for(i=0;a[i]!='\0';i++)
  5675  0022B2  0E00               	movlw	0
  5676  0022B4  6E0A               	movwf	(Lcd_Write_String@i+1)^0,c
  5677  0022B6  0E00               	movlw	0
  5678  0022B8  6E09               	movwf	Lcd_Write_String@i^0,c
  5679  0022BA  EF79  F011         	goto	l2510
  5680  0022BE                     l2506:
  5681                           
  5682                           ;./lcd.h: 101:     Lcd_Write_Char(a[i]);
  5683  0022BE  5009               	movf	Lcd_Write_String@i^0,w,c
  5684  0022C0  2405               	addwf	Lcd_Write_String@a^0,w,c
  5685  0022C2  6E07               	movwf	??_Lcd_Write_String^0,c
  5686  0022C4  500A               	movf	(Lcd_Write_String@i+1)^0,w,c
  5687  0022C6  2006               	addwfc	(Lcd_Write_String@a+1)^0,w,c
  5688  0022C8  6E08               	movwf	(??_Lcd_Write_String+1)^0,c
  5689  0022CA  C007  FFF6         	movff	??_Lcd_Write_String,tblptrl
  5690  0022CE  C008  FFF7         	movff	??_Lcd_Write_String+1,tblptrh
  5691  0022D2  6AF8               	clrf	tblptru,c
  5692  0022D4  0E07               	movlw	(high __ramtop+-1)
  5693  0022D6  64F7               	cpfsgt	tblptrh,c
  5694  0022D8  D003               	bra	u2097
  5695  0022DA  0008               	tblrd		*
  5696  0022DC  50F5               	movf	tablat,w,c
  5697  0022DE  D005               	bra	u2090
  5698  0022E0                     u2097:
  5699  0022E0  CFF6 FFE1          	movff	tblptrl,fsr1l
  5700  0022E4  CFF7 FFE2          	movff	tblptrh,fsr1h
  5701  0022E8  50E7               	movf	indf1,w,c
  5702  0022EA                     u2090:
  5703  0022EA  EC6F  F013         	call	_Lcd_Write_Char
  5704  0022EE  4A09               	infsnz	Lcd_Write_String@i^0,f,c
  5705  0022F0  2A0A               	incf	(Lcd_Write_String@i+1)^0,f,c
  5706  0022F2                     l2510:
  5707  0022F2  5009               	movf	Lcd_Write_String@i^0,w,c
  5708  0022F4  2405               	addwf	Lcd_Write_String@a^0,w,c
  5709  0022F6  6E07               	movwf	??_Lcd_Write_String^0,c
  5710  0022F8  500A               	movf	(Lcd_Write_String@i+1)^0,w,c
  5711  0022FA  2006               	addwfc	(Lcd_Write_String@a+1)^0,w,c
  5712  0022FC  6E08               	movwf	(??_Lcd_Write_String+1)^0,c
  5713  0022FE  C007  FFF6         	movff	??_Lcd_Write_String,tblptrl
  5714  002302  C008  FFF7         	movff	??_Lcd_Write_String+1,tblptrh
  5715  002306  6AF8               	clrf	tblptru,c
  5716  002308  0E07               	movlw	(high __ramtop+-1)
  5717  00230A  64F7               	cpfsgt	tblptrh,c
  5718  00230C  D003               	bra	u2107
  5719  00230E  0008               	tblrd		*
  5720  002310  50F5               	movf	tablat,w,c
  5721  002312  D005               	bra	u2100
  5722  002314                     u2107:
  5723  002314  CFF6 FFE1          	movff	tblptrl,fsr1l
  5724  002318  CFF7 FFE2          	movff	tblptrh,fsr1h
  5725  00231C  50E7               	movf	indf1,w,c
  5726  00231E                     u2100:
  5727  00231E  0900               	iorlw	0
  5728  002320  A4D8               	btfss	status,2,c
  5729  002322  EF95  F011         	goto	u2111
  5730  002326  EF97  F011         	goto	u2110
  5731  00232A                     u2111:
  5732  00232A  EF5F  F011         	goto	l2506
  5733  00232E                     u2110:
  5734  00232E  0012               	return		;funcret
  5735  002330                     __end_of_Lcd_Write_String:
  5736                           	callstack 0
  5737                           
  5738 ;; *************** function _Lcd_Write_Char *****************
  5739 ;; Defined at:
  5740 ;;		line 81 in file "./lcd.h"
  5741 ;; Parameters:    Size  Location     Type
  5742 ;;  a               1    wreg     unsigned char 
  5743 ;; Auto vars:     Size  Location     Type
  5744 ;;  a               1    3[COMRAM] unsigned char 
  5745 ;;  y               1    2[COMRAM] unsigned char 
  5746 ;;  temp            1    1[COMRAM] unsigned char 
  5747 ;; Return value:  Size  Location     Type
  5748 ;;                  1    wreg      void 
  5749 ;; Registers used:
  5750 ;;		wreg, status,2, status,0, cstack
  5751 ;; Tracked objects:
  5752 ;;		On entry : 0/0
  5753 ;;		On exit  : 0/0
  5754 ;;		Unchanged: 0/0
  5755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5756 ;;      Params:         0       0       0       0       0       0       0       0       0
  5757 ;;      Locals:         3       0       0       0       0       0       0       0       0
  5758 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5759 ;;      Totals:         3       0       0       0       0       0       0       0       0
  5760 ;;Total ram usage:        3 bytes
  5761 ;; Hardware stack levels used:    1
  5762 ;; Hardware stack levels required when called:    1
  5763 ;; This function calls:
  5764 ;;		_Lcd_Port
  5765 ;; This function is called by:
  5766 ;;		_Lcd_Write_String
  5767 ;;		_activar_seguridad
  5768 ;; This function uses a non-reentrant model
  5769 ;;
  5770                           
  5771                           	psect	text26
  5772  0026DE                     __ptext26:
  5773                           	callstack 0
  5774  0026DE                     _Lcd_Write_Char:
  5775                           	callstack 26
  5776                           
  5777                           ;incstack = 0
  5778                           ;Lcd_Write_Char@a stored from wreg
  5779  0026DE  6E04               	movwf	Lcd_Write_Char@a^0,c
  5780  0026E0                     
  5781                           ;./lcd.h: 81: void Lcd_Write_Char(char a);./lcd.h: 82: {;./lcd.h: 83:    char temp,y;;./
      +                          lcd.h: 84:    temp = a&0x0F;
  5782  0026E0  5004               	movf	Lcd_Write_Char@a^0,w,c
  5783  0026E2  0B0F               	andlw	15
  5784  0026E4  6E02               	movwf	Lcd_Write_Char@temp^0,c
  5785                           
  5786                           ;./lcd.h: 85:    y = a&0xF0;
  5787  0026E6  5004               	movf	Lcd_Write_Char@a^0,w,c
  5788  0026E8  0BF0               	andlw	240
  5789  0026EA  6E03               	movwf	Lcd_Write_Char@y^0,c
  5790  0026EC                     
  5791                           ;./lcd.h: 86:    PORTBbits.RB2 = 1;
  5792  0026EC  8481               	bsf	129,2,c	;volatile
  5793  0026EE                     
  5794                           ;./lcd.h: 87:    Lcd_Port(y>>4);
  5795  0026EE  3803               	swapf	Lcd_Write_Char@y^0,w,c
  5796  0026F0  0B0F               	andlw	15
  5797  0026F2  EC34  F012         	call	_Lcd_Port
  5798  0026F6                     
  5799                           ;./lcd.h: 88:    PORTBbits.RB3 = 1;
  5800  0026F6  8681               	bsf	129,3,c	;volatile
  5801  0026F8                     
  5802                           ;./lcd.h: 89:    _delay((unsigned long)((40)*(8000000/4000000.0)));
  5803  0026F8  0E1A               	movlw	26
  5804  0026FA                     u3017:
  5805  0026FA  2EE8               	decfsz	wreg,f,c
  5806  0026FC  D7FE               	bra	u3017
  5807  0026FE  D000               	nop2	
  5808  002700                     
  5809                           ;./lcd.h: 90:    PORTBbits.RB3 = 0;
  5810  002700  9681               	bcf	129,3,c	;volatile
  5811  002702                     
  5812                           ;./lcd.h: 91:    Lcd_Port(temp);
  5813  002702  5002               	movf	Lcd_Write_Char@temp^0,w,c
  5814  002704  EC34  F012         	call	_Lcd_Port
  5815  002708                     
  5816                           ;./lcd.h: 92:    PORTBbits.RB3 = 1;
  5817  002708  8681               	bsf	129,3,c	;volatile
  5818  00270A                     
  5819                           ;./lcd.h: 93:    _delay((unsigned long)((40)*(8000000/4000000.0)));
  5820  00270A  0E1A               	movlw	26
  5821  00270C                     u3027:
  5822  00270C  2EE8               	decfsz	wreg,f,c
  5823  00270E  D7FE               	bra	u3027
  5824  002710  D000               	nop2	
  5825  002712                     
  5826                           ;./lcd.h: 94:    PORTBbits.RB3 = 0;
  5827  002712  9681               	bcf	129,3,c	;volatile
  5828  002714  0012               	return		;funcret
  5829  002716                     __end_of_Lcd_Write_Char:
  5830                           	callstack 0
  5831                           
  5832 ;; *************** function _Lcd_Set_Cursor *****************
  5833 ;; Defined at:
  5834 ;;		line 41 in file "./lcd.h"
  5835 ;; Parameters:    Size  Location     Type
  5836 ;;  a               1    wreg     unsigned char 
  5837 ;;  b               1    3[COMRAM] unsigned char 
  5838 ;; Auto vars:     Size  Location     Type
  5839 ;;  a               1    4[COMRAM] unsigned char 
  5840 ;;  temp            1    7[COMRAM] unsigned char 
  5841 ;;  y               1    6[COMRAM] unsigned char 
  5842 ;;  z               1    5[COMRAM] unsigned char 
  5843 ;; Return value:  Size  Location     Type
  5844 ;;                  1    wreg      void 
  5845 ;; Registers used:
  5846 ;;		wreg, status,2, status,0, cstack
  5847 ;; Tracked objects:
  5848 ;;		On entry : 0/0
  5849 ;;		On exit  : 0/0
  5850 ;;		Unchanged: 0/0
  5851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5852 ;;      Params:         1       0       0       0       0       0       0       0       0
  5853 ;;      Locals:         4       0       0       0       0       0       0       0       0
  5854 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5855 ;;      Totals:         5       0       0       0       0       0       0       0       0
  5856 ;;Total ram usage:        5 bytes
  5857 ;; Hardware stack levels used:    1
  5858 ;; Hardware stack levels required when called:    2
  5859 ;; This function calls:
  5860 ;;		_Lcd_Cmd
  5861 ;; This function is called by:
  5862 ;;		_activar_seguridad
  5863 ;;		_main
  5864 ;; This function uses a non-reentrant model
  5865 ;;
  5866                           
  5867                           	psect	text27
  5868  0023A0                     __ptext27:
  5869                           	callstack 0
  5870  0023A0                     _Lcd_Set_Cursor:
  5871                           	callstack 26
  5872                           
  5873                           ;incstack = 0
  5874                           ;Lcd_Set_Cursor@a stored from wreg
  5875  0023A0  6E05               	movwf	Lcd_Set_Cursor@a^0,c
  5876  0023A2                     
  5877                           ;./lcd.h: 41: void Lcd_Set_Cursor(char a, char b);./lcd.h: 42: {;./lcd.h: 43:  char temp
      +                          ,z,y;;./lcd.h: 44:  if(a == 1)
  5878  0023A2  0405               	decf	Lcd_Set_Cursor@a^0,w,c
  5879  0023A4  A4D8               	btfss	status,2,c
  5880  0023A6  EFD7  F011         	goto	u2071
  5881  0023AA  EFD9  F011         	goto	u2070
  5882  0023AE                     u2071:
  5883  0023AE  EFEA  F011         	goto	l2496
  5884  0023B2                     u2070:
  5885  0023B2                     
  5886                           ;./lcd.h: 45:  {;./lcd.h: 46:    temp = 0x80 + b - 1;
  5887  0023B2  5004               	movf	Lcd_Set_Cursor@b^0,w,c
  5888  0023B4  0F7F               	addlw	127
  5889  0023B6  6E08               	movwf	Lcd_Set_Cursor@temp^0,c
  5890                           
  5891                           ;./lcd.h: 47:   z = temp>>4;
  5892  0023B8  3808               	swapf	Lcd_Set_Cursor@temp^0,w,c
  5893  0023BA  0B0F               	andlw	15
  5894  0023BC  6E06               	movwf	Lcd_Set_Cursor@z^0,c
  5895                           
  5896                           ;./lcd.h: 48:   y = temp & 0x0F;
  5897  0023BE  5008               	movf	Lcd_Set_Cursor@temp^0,w,c
  5898  0023C0  0B0F               	andlw	15
  5899  0023C2  6E07               	movwf	Lcd_Set_Cursor@y^0,c
  5900  0023C4                     
  5901                           ;./lcd.h: 49:   Lcd_Cmd(z);
  5902  0023C4  5006               	movf	Lcd_Set_Cursor@z^0,w,c
  5903  0023C6  ECEB  F013         	call	_Lcd_Cmd
  5904  0023CA                     
  5905                           ;./lcd.h: 50:   Lcd_Cmd(y);
  5906  0023CA  5007               	movf	Lcd_Set_Cursor@y^0,w,c
  5907  0023CC  ECEB  F013         	call	_Lcd_Cmd
  5908                           
  5909                           ;./lcd.h: 51:  }
  5910  0023D0  EF02  F012         	goto	l71
  5911  0023D4                     l2496:
  5912  0023D4  0E02               	movlw	2
  5913  0023D6  1805               	xorwf	Lcd_Set_Cursor@a^0,w,c
  5914  0023D8  A4D8               	btfss	status,2,c
  5915  0023DA  EFF1  F011         	goto	u2081
  5916  0023DE  EFF3  F011         	goto	u2080
  5917  0023E2                     u2081:
  5918  0023E2  EF02  F012         	goto	l71
  5919  0023E6                     u2080:
  5920  0023E6                     
  5921                           ;./lcd.h: 53:  {;./lcd.h: 54:   temp = 0xC0 + b - 1;
  5922  0023E6  5004               	movf	Lcd_Set_Cursor@b^0,w,c
  5923  0023E8  0FBF               	addlw	191
  5924  0023EA  6E08               	movwf	Lcd_Set_Cursor@temp^0,c
  5925                           
  5926                           ;./lcd.h: 55:   z = temp>>4;
  5927  0023EC  3808               	swapf	Lcd_Set_Cursor@temp^0,w,c
  5928  0023EE  0B0F               	andlw	15
  5929  0023F0  6E06               	movwf	Lcd_Set_Cursor@z^0,c
  5930                           
  5931                           ;./lcd.h: 56:   y = temp & 0x0F;
  5932  0023F2  5008               	movf	Lcd_Set_Cursor@temp^0,w,c
  5933  0023F4  0B0F               	andlw	15
  5934  0023F6  6E07               	movwf	Lcd_Set_Cursor@y^0,c
  5935  0023F8                     
  5936                           ;./lcd.h: 57:   Lcd_Cmd(z);
  5937  0023F8  5006               	movf	Lcd_Set_Cursor@z^0,w,c
  5938  0023FA  ECEB  F013         	call	_Lcd_Cmd
  5939  0023FE                     
  5940                           ;./lcd.h: 58:   Lcd_Cmd(y);
  5941  0023FE  5007               	movf	Lcd_Set_Cursor@y^0,w,c
  5942  002400  ECEB  F013         	call	_Lcd_Cmd
  5943  002404                     l71:
  5944  002404  0012               	return		;funcret
  5945  002406                     __end_of_Lcd_Set_Cursor:
  5946                           	callstack 0
  5947                           
  5948 ;; *************** function _Lcd_Clear *****************
  5949 ;; Defined at:
  5950 ;;		line 35 in file "./lcd.h"
  5951 ;; Parameters:    Size  Location     Type
  5952 ;;		None
  5953 ;; Auto vars:     Size  Location     Type
  5954 ;;		None
  5955 ;; Return value:  Size  Location     Type
  5956 ;;                  2   64[None  ] int 
  5957 ;; Registers used:
  5958 ;;		wreg, status,2, cstack
  5959 ;; Tracked objects:
  5960 ;;		On entry : 0/0
  5961 ;;		On exit  : 0/0
  5962 ;;		Unchanged: 0/0
  5963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5964 ;;      Params:         0       0       0       0       0       0       0       0       0
  5965 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5966 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5967 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5968 ;;Total ram usage:        0 bytes
  5969 ;; Hardware stack levels used:    1
  5970 ;; Hardware stack levels required when called:    2
  5971 ;; This function calls:
  5972 ;;		_Lcd_Cmd
  5973 ;; This function is called by:
  5974 ;;		_activar_seguridad
  5975 ;;		_main
  5976 ;; This function uses a non-reentrant model
  5977 ;;
  5978                           
  5979                           	psect	text28
  5980  0027F6                     __ptext28:
  5981                           	callstack 0
  5982  0027F6                     _Lcd_Clear:
  5983                           	callstack 26
  5984  0027F6                     
  5985                           ;./lcd.h: 37:  Lcd_Cmd(0);
  5986  0027F6  0E00               	movlw	0
  5987  0027F8  ECEB  F013         	call	_Lcd_Cmd
  5988                           
  5989                           ;./lcd.h: 38:  Lcd_Cmd(1);
  5990  0027FC  0E01               	movlw	1
  5991  0027FE  ECEB  F013         	call	_Lcd_Cmd
  5992  002802  0012               	return		;funcret
  5993  002804                     __end_of_Lcd_Clear:
  5994                           	callstack 0
  5995                           
  5996 ;; *************** function _Keypad_Key_Press *****************
  5997 ;; Defined at:
  5998 ;;		line 63 in file "newmain.c"
  5999 ;; Parameters:    Size  Location     Type
  6000 ;;		None
  6001 ;; Auto vars:     Size  Location     Type
  6002 ;;  keypad_deco    17    0[COMRAM] const unsigned char [17]
  6003 ;;  fila            2   19[COMRAM] unsigned int 
  6004 ;;  tec             2   17[COMRAM] unsigned int 
  6005 ;; Return value:  Size  Location     Type
  6006 ;;                  1    wreg      unsigned char 
  6007 ;; Registers used:
  6008 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  6009 ;; Tracked objects:
  6010 ;;		On entry : 0/0
  6011 ;;		On exit  : 0/0
  6012 ;;		Unchanged: 0/0
  6013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6014 ;;      Params:         0       0       0       0       0       0       0       0       0
  6015 ;;      Locals:        21       0       0       0       0       0       0       0       0
  6016 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6017 ;;      Totals:        21       0       0       0       0       0       0       0       0
  6018 ;;Total ram usage:       21 bytes
  6019 ;; Hardware stack levels used:    1
  6020 ;; This function calls:
  6021 ;;		Nothing
  6022 ;; This function is called by:
  6023 ;;		_activar_seguridad
  6024 ;; This function uses a non-reentrant model
  6025 ;;
  6026                           
  6027                           	psect	text29
  6028  0021FC                     __ptext29:
  6029                           	callstack 0
  6030  0021FC                     _Keypad_Key_Press:
  6031                           	callstack 28
  6032  0021FC                     
  6033                           ;newmain.c: 64:     const unsigned char keypad_deco[17] = {'7', '8', '9', '/', '4', '5',
      +                           '6', '*', '1', '2', '3', '-', 13, '0', '=', '+', 0};
  6034  0021FC  0E01               	movlw	low Keypad_Key_Press@F3774
  6035  0021FE  6EF6               	movwf	tblptrl,c
  6036  002200                     	if	1	;There is more than 1 active tblptr byte
  6037  002200  0E08               	movlw	high Keypad_Key_Press@F3774
  6038  002202  6EF7               	movwf	tblptrh,c
  6039  002204                     	endif
  6040  002204                     	if	0	;There are less than 3 active tblptr bytes
  6041  002204                     	endif
  6042  002204  EE20  F001         	lfsr	2,Keypad_Key_Press@keypad_deco
  6043  002208  0E10               	movlw	16
  6044  00220A                     u2120:
  6045  00220A  0009               	tblrd		*+
  6046  00220C  CFF5 FFDE          	movff	tablat,postinc2
  6047  002210  06E8               	decf	wreg,f,c
  6048  002212  E2FB               	bc	u2120
  6049  002214                     
  6050                           ;newmain.c: 65:     unsigned int tec = 0, fila;
  6051  002214  0E00               	movlw	0
  6052  002216  6E13               	movwf	(Keypad_Key_Press@tec+1)^0,c
  6053  002218  0E00               	movlw	0
  6054  00221A  6E12               	movwf	Keypad_Key_Press@tec^0,c
  6055  00221C                     
  6056                           ;newmain.c: 67:     for (fila = 0b00000001; fila < 0b00010000; fila <<= 1) {
  6057  00221C  0E00               	movlw	0
  6058  00221E  6E15               	movwf	(Keypad_Key_Press@fila+1)^0,c
  6059  002220  0E01               	movlw	1
  6060  002222  6E14               	movwf	Keypad_Key_Press@fila^0,c
  6061  002224                     l2544:
  6062                           
  6063                           ;newmain.c: 68:         LATD = fila << 4;
  6064  002224  3814               	swapf	Keypad_Key_Press@fila^0,w,c
  6065  002226  0BF0               	andlw	240
  6066  002228  6E8C               	movwf	140,c	;volatile
  6067  00222A                     
  6068                           ;newmain.c: 69:         if (PORTDbits.RD0 == 1) break;
  6069  00222A  A083               	btfss	131,0,c	;volatile
  6070  00222C  EF1A  F011         	goto	u2131
  6071  002230  EF1C  F011         	goto	u2130
  6072  002234                     u2131:
  6073  002234  EF1E  F011         	goto	l2550
  6074  002238                     u2130:
  6075  002238  EF4F  F011         	goto	l2572
  6076  00223C                     l2550:
  6077                           
  6078                           ;newmain.c: 70:         tec++;
  6079  00223C  4A12               	infsnz	Keypad_Key_Press@tec^0,f,c
  6080  00223E  2A13               	incf	(Keypad_Key_Press@tec+1)^0,f,c
  6081  002240                     
  6082                           ;newmain.c: 71:         if (PORTDbits.RD1 == 1) break;
  6083  002240  A283               	btfss	131,1,c	;volatile
  6084  002242  EF25  F011         	goto	u2141
  6085  002246  EF27  F011         	goto	u2140
  6086  00224A                     u2141:
  6087  00224A  EF29  F011         	goto	l2556
  6088  00224E                     u2140:
  6089  00224E  EF4F  F011         	goto	l2572
  6090  002252                     l2556:
  6091                           
  6092                           ;newmain.c: 72:         tec++;
  6093  002252  4A12               	infsnz	Keypad_Key_Press@tec^0,f,c
  6094  002254  2A13               	incf	(Keypad_Key_Press@tec+1)^0,f,c
  6095  002256                     
  6096                           ;newmain.c: 73:         if (PORTDbits.RD2 == 1) break;
  6097  002256  A483               	btfss	131,2,c	;volatile
  6098  002258  EF30  F011         	goto	u2151
  6099  00225C  EF32  F011         	goto	u2150
  6100  002260                     u2151:
  6101  002260  EF34  F011         	goto	l2562
  6102  002264                     u2150:
  6103  002264  EF4F  F011         	goto	l2572
  6104  002268                     l2562:
  6105                           
  6106                           ;newmain.c: 74:         tec++;
  6107  002268  4A12               	infsnz	Keypad_Key_Press@tec^0,f,c
  6108  00226A  2A13               	incf	(Keypad_Key_Press@tec+1)^0,f,c
  6109  00226C                     
  6110                           ;newmain.c: 75:         if (PORTDbits.RD3 == 1) break;
  6111  00226C  A683               	btfss	131,3,c	;volatile
  6112  00226E  EF3B  F011         	goto	u2161
  6113  002272  EF3D  F011         	goto	u2160
  6114  002276                     u2161:
  6115  002276  EF3F  F011         	goto	l2568
  6116  00227A                     u2160:
  6117  00227A  EF4F  F011         	goto	l2572
  6118  00227E                     l2568:
  6119                           
  6120                           ;newmain.c: 76:         tec++;
  6121  00227E  4A12               	infsnz	Keypad_Key_Press@tec^0,f,c
  6122  002280  2A13               	incf	(Keypad_Key_Press@tec+1)^0,f,c
  6123                           
  6124                           ;newmain.c: 77:     }
  6125  002282  90D8               	bcf	status,0,c
  6126  002284  3614               	rlcf	Keypad_Key_Press@fila^0,f,c
  6127  002286  3615               	rlcf	(Keypad_Key_Press@fila+1)^0,f,c
  6128  002288  5015               	movf	(Keypad_Key_Press@fila+1)^0,w,c
  6129  00228A  E109               	bnz	u2170
  6130  00228C  0E10               	movlw	16
  6131  00228E  5C14               	subwf	Keypad_Key_Press@fila^0,w,c
  6132  002290  A0D8               	btfss	status,0,c
  6133  002292  EF4D  F011         	goto	u2171
  6134  002296  EF4F  F011         	goto	u2170
  6135  00229A                     u2171:
  6136  00229A  EF12  F011         	goto	l2544
  6137  00229E                     u2170:
  6138  00229E                     l2572:
  6139                           
  6140                           ;newmain.c: 78:     PORTD = 0x00;
  6141  00229E  0E00               	movlw	0
  6142  0022A0  6E83               	movwf	131,c	;volatile
  6143  0022A2                     
  6144                           ;newmain.c: 79:     return keypad_deco[tec];
  6145  0022A2  0E01               	movlw	low Keypad_Key_Press@keypad_deco
  6146  0022A4  2412               	addwf	Keypad_Key_Press@tec^0,w,c
  6147  0022A6  6ED9               	movwf	fsr2l,c
  6148  0022A8  0E00               	movlw	high Keypad_Key_Press@keypad_deco
  6149  0022AA  2013               	addwfc	(Keypad_Key_Press@tec+1)^0,w,c
  6150  0022AC  6EDA               	movwf	fsr2h,c
  6151  0022AE  50DF               	movf	indf2,w,c
  6152  0022B0  0012               	return		;funcret
  6153  0022B2                     __end_of_Keypad_Key_Press:
  6154                           	callstack 0
  6155                           
  6156 ;; *************** function _Lcd_Init *****************
  6157 ;; Defined at:
  6158 ;;		line 62 in file "./lcd.h"
  6159 ;; Parameters:    Size  Location     Type
  6160 ;;		None
  6161 ;; Auto vars:     Size  Location     Type
  6162 ;;		None
  6163 ;; Return value:  Size  Location     Type
  6164 ;;                  1    wreg      void 
  6165 ;; Registers used:
  6166 ;;		wreg, status,2, cstack
  6167 ;; Tracked objects:
  6168 ;;		On entry : 0/0
  6169 ;;		On exit  : 0/0
  6170 ;;		Unchanged: 0/0
  6171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6172 ;;      Params:         0       0       0       0       0       0       0       0       0
  6173 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6174 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6175 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6176 ;;Total ram usage:        1 bytes
  6177 ;; Hardware stack levels used:    1
  6178 ;; Hardware stack levels required when called:    2
  6179 ;; This function calls:
  6180 ;;		_Lcd_Cmd
  6181 ;;		_Lcd_Port
  6182 ;; This function is called by:
  6183 ;;		_main
  6184 ;; This function uses a non-reentrant model
  6185 ;;
  6186                           
  6187                           	psect	text30
  6188  002330                     __ptext30:
  6189                           	callstack 0
  6190  002330                     _Lcd_Init:
  6191                           	callstack 28
  6192  002330                     
  6193                           ;./lcd.h: 64:   Lcd_Port(0x00);
  6194  002330  0E00               	movlw	0
  6195  002332  EC34  F012         	call	_Lcd_Port
  6196  002336                     
  6197                           ;./lcd.h: 65:    _delay((unsigned long)((20)*(8000000/4000.0)));
  6198  002336  0E34               	movlw	52
  6199  002338  6E04               	movwf	??_Lcd_Init^0,c
  6200  00233A  0EF2               	movlw	242
  6201  00233C                     u3037:
  6202  00233C  2EE8               	decfsz	wreg,f,c
  6203  00233E  D7FE               	bra	u3037
  6204  002340  2E04               	decfsz	??_Lcd_Init^0,f,c
  6205  002342  D7FC               	bra	u3037
  6206  002344                     
  6207                           ;./lcd.h: 66:   Lcd_Cmd(0x03);
  6208  002344  0E03               	movlw	3
  6209  002346  ECEB  F013         	call	_Lcd_Cmd
  6210  00234A                     
  6211                           ;./lcd.h: 67:  _delay((unsigned long)((5)*(8000000/4000.0)));
  6212  00234A  0E0D               	movlw	13
  6213  00234C  6E04               	movwf	??_Lcd_Init^0,c
  6214  00234E  0EFC               	movlw	252
  6215  002350                     u3047:
  6216  002350  2EE8               	decfsz	wreg,f,c
  6217  002352  D7FE               	bra	u3047
  6218  002354  2E04               	decfsz	??_Lcd_Init^0,f,c
  6219  002356  D7FC               	bra	u3047
  6220  002358                     
  6221                           ;./lcd.h: 68:   Lcd_Cmd(0x03);
  6222  002358  0E03               	movlw	3
  6223  00235A  ECEB  F013         	call	_Lcd_Cmd
  6224  00235E                     
  6225                           ;./lcd.h: 69:  _delay((unsigned long)((11)*(8000000/4000.0)));
  6226  00235E  0E1D               	movlw	29
  6227  002360  6E04               	movwf	??_Lcd_Init^0,c
  6228  002362  0E91               	movlw	145
  6229  002364                     u3057:
  6230  002364  2EE8               	decfsz	wreg,f,c
  6231  002366  D7FE               	bra	u3057
  6232  002368  2E04               	decfsz	??_Lcd_Init^0,f,c
  6233  00236A  D7FC               	bra	u3057
  6234  00236C  F000               	nop	
  6235  00236E                     
  6236                           ;./lcd.h: 70:   Lcd_Cmd(0x03);
  6237  00236E  0E03               	movlw	3
  6238  002370  ECEB  F013         	call	_Lcd_Cmd
  6239  002374                     
  6240                           ;./lcd.h: 72:   Lcd_Cmd(0x02);
  6241  002374  0E02               	movlw	2
  6242  002376  ECEB  F013         	call	_Lcd_Cmd
  6243  00237A                     
  6244                           ;./lcd.h: 73:   Lcd_Cmd(0x02);
  6245  00237A  0E02               	movlw	2
  6246  00237C  ECEB  F013         	call	_Lcd_Cmd
  6247  002380                     
  6248                           ;./lcd.h: 74:   Lcd_Cmd(0x08);
  6249  002380  0E08               	movlw	8
  6250  002382  ECEB  F013         	call	_Lcd_Cmd
  6251  002386                     
  6252                           ;./lcd.h: 75:   Lcd_Cmd(0x00);
  6253  002386  0E00               	movlw	0
  6254  002388  ECEB  F013         	call	_Lcd_Cmd
  6255  00238C                     
  6256                           ;./lcd.h: 76:   Lcd_Cmd(0x0C);
  6257  00238C  0E0C               	movlw	12
  6258  00238E  ECEB  F013         	call	_Lcd_Cmd
  6259  002392                     
  6260                           ;./lcd.h: 77:   Lcd_Cmd(0x00);
  6261  002392  0E00               	movlw	0
  6262  002394  ECEB  F013         	call	_Lcd_Cmd
  6263  002398                     
  6264                           ;./lcd.h: 78:   Lcd_Cmd(0x06);
  6265  002398  0E06               	movlw	6
  6266  00239A  ECEB  F013         	call	_Lcd_Cmd
  6267  00239E  0012               	return		;funcret
  6268  0023A0                     __end_of_Lcd_Init:
  6269                           	callstack 0
  6270                           
  6271 ;; *************** function _Lcd_Cmd *****************
  6272 ;; Defined at:
  6273 ;;		line 26 in file "./lcd.h"
  6274 ;; Parameters:    Size  Location     Type
  6275 ;;  a               1    wreg     unsigned char 
  6276 ;; Auto vars:     Size  Location     Type
  6277 ;;  a               1    2[COMRAM] unsigned char 
  6278 ;; Return value:  Size  Location     Type
  6279 ;;                  1    wreg      void 
  6280 ;; Registers used:
  6281 ;;		wreg, status,2, cstack
  6282 ;; Tracked objects:
  6283 ;;		On entry : 0/0
  6284 ;;		On exit  : 0/0
  6285 ;;		Unchanged: 0/0
  6286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6287 ;;      Params:         0       0       0       0       0       0       0       0       0
  6288 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6289 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6290 ;;      Totals:         2       0       0       0       0       0       0       0       0
  6291 ;;Total ram usage:        2 bytes
  6292 ;; Hardware stack levels used:    1
  6293 ;; Hardware stack levels required when called:    1
  6294 ;; This function calls:
  6295 ;;		_Lcd_Port
  6296 ;; This function is called by:
  6297 ;;		_Lcd_Clear
  6298 ;;		_Lcd_Set_Cursor
  6299 ;;		_Lcd_Init
  6300 ;;		_Lcd_Shift_Right
  6301 ;;		_Lcd_Shift_Left
  6302 ;; This function uses a non-reentrant model
  6303 ;;
  6304                           
  6305                           	psect	text31
  6306  0027D6                     __ptext31:
  6307                           	callstack 0
  6308  0027D6                     _Lcd_Cmd:
  6309                           	callstack 26
  6310                           
  6311                           ;incstack = 0
  6312                           ;Lcd_Cmd@a stored from wreg
  6313  0027D6  6E03               	movwf	Lcd_Cmd@a^0,c
  6314  0027D8                     
  6315                           ;./lcd.h: 26: void Lcd_Cmd(char a);./lcd.h: 27: {;./lcd.h: 28:  PORTBbits.RB2 = 0;
  6316  0027D8  9481               	bcf	129,2,c	;volatile
  6317  0027DA                     
  6318                           ;./lcd.h: 29:  Lcd_Port(a);
  6319  0027DA  5003               	movf	Lcd_Cmd@a^0,w,c
  6320  0027DC  EC34  F012         	call	_Lcd_Port
  6321  0027E0                     
  6322                           ;./lcd.h: 30:  PORTBbits.RB3 = 1;
  6323  0027E0  8681               	bsf	129,3,c	;volatile
  6324  0027E2                     
  6325                           ;./lcd.h: 31:         _delay((unsigned long)((4)*(8000000/4000.0)));
  6326  0027E2  0E0B               	movlw	11
  6327  0027E4  6E02               	movwf	??_Lcd_Cmd^0,c
  6328  0027E6  0E62               	movlw	98
  6329  0027E8                     u3067:
  6330  0027E8  2EE8               	decfsz	wreg,f,c
  6331  0027EA  D7FE               	bra	u3067
  6332  0027EC  2E02               	decfsz	??_Lcd_Cmd^0,f,c
  6333  0027EE  D7FC               	bra	u3067
  6334  0027F0  D000               	nop2	
  6335  0027F2                     
  6336                           ;./lcd.h: 32:         PORTBbits.RB3 = 0;
  6337  0027F2  9681               	bcf	129,3,c	;volatile
  6338  0027F4  0012               	return		;funcret
  6339  0027F6                     __end_of_Lcd_Cmd:
  6340                           	callstack 0
  6341                           
  6342 ;; *************** function _Lcd_Port *****************
  6343 ;; Defined at:
  6344 ;;		line 4 in file "./lcd.h"
  6345 ;; Parameters:    Size  Location     Type
  6346 ;;  a               1    wreg     unsigned char 
  6347 ;; Auto vars:     Size  Location     Type
  6348 ;;  a               1    0[COMRAM] unsigned char 
  6349 ;; Return value:  Size  Location     Type
  6350 ;;                  1    wreg      void 
  6351 ;; Registers used:
  6352 ;;		wreg
  6353 ;; Tracked objects:
  6354 ;;		On entry : 0/0
  6355 ;;		On exit  : 0/0
  6356 ;;		Unchanged: 0/0
  6357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6358 ;;      Params:         0       0       0       0       0       0       0       0       0
  6359 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6360 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6361 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6362 ;;Total ram usage:        1 bytes
  6363 ;; Hardware stack levels used:    1
  6364 ;; This function calls:
  6365 ;;		Nothing
  6366 ;; This function is called by:
  6367 ;;		_Lcd_Cmd
  6368 ;;		_Lcd_Init
  6369 ;;		_Lcd_Write_Char
  6370 ;; This function uses a non-reentrant model
  6371 ;;
  6372                           
  6373                           	psect	text32
  6374  002468                     __ptext32:
  6375                           	callstack 0
  6376  002468                     _Lcd_Port:
  6377                           	callstack 26
  6378                           
  6379                           ;incstack = 0
  6380                           ;Lcd_Port@a stored from wreg
  6381  002468  6E01               	movwf	Lcd_Port@a^0,c
  6382  00246A                     
  6383                           ;./lcd.h: 4: void Lcd_Port(char a);./lcd.h: 5: {;./lcd.h: 6:  if(a & 1)
  6384  00246A  A001               	btfss	Lcd_Port@a^0,0,c
  6385  00246C  EF3A  F012         	goto	u1931
  6386  002470  EF3C  F012         	goto	u1930
  6387  002474                     u1931:
  6388  002474  EF3F  F012         	goto	l51
  6389  002478                     u1930:
  6390  002478                     
  6391                           ;./lcd.h: 7:   PORTBbits.RB4 = 1;
  6392  002478  8881               	bsf	129,4,c	;volatile
  6393  00247A  EF40  F012         	goto	l2364
  6394  00247E                     l51:
  6395                           
  6396                           ;./lcd.h: 9:   PORTBbits.RB4 = 0;
  6397  00247E  9881               	bcf	129,4,c	;volatile
  6398  002480                     l2364:
  6399                           
  6400                           ;./lcd.h: 11:  if(a & 2)
  6401  002480  A201               	btfss	Lcd_Port@a^0,1,c
  6402  002482  EF45  F012         	goto	u1941
  6403  002486  EF47  F012         	goto	u1940
  6404  00248A                     u1941:
  6405  00248A  EF4A  F012         	goto	l53
  6406  00248E                     u1940:
  6407  00248E                     
  6408                           ;./lcd.h: 12:   PORTBbits.RB5 = 1;
  6409  00248E  8A81               	bsf	129,5,c	;volatile
  6410  002490  EF4B  F012         	goto	l2368
  6411  002494                     l53:
  6412                           
  6413                           ;./lcd.h: 14:   PORTBbits.RB5 = 0;
  6414  002494  9A81               	bcf	129,5,c	;volatile
  6415  002496                     l2368:
  6416                           
  6417                           ;./lcd.h: 16:  if(a & 4)
  6418  002496  A401               	btfss	Lcd_Port@a^0,2,c
  6419  002498  EF50  F012         	goto	u1951
  6420  00249C  EF52  F012         	goto	u1950
  6421  0024A0                     u1951:
  6422  0024A0  EF55  F012         	goto	l55
  6423  0024A4                     u1950:
  6424  0024A4                     
  6425                           ;./lcd.h: 17:   PORTBbits.RB6 = 1;
  6426  0024A4  8C81               	bsf	129,6,c	;volatile
  6427  0024A6  EF56  F012         	goto	l2372
  6428  0024AA                     l55:
  6429                           
  6430                           ;./lcd.h: 19:   PORTBbits.RB6 = 0;
  6431  0024AA  9C81               	bcf	129,6,c	;volatile
  6432  0024AC                     l2372:
  6433                           
  6434                           ;./lcd.h: 21:  if(a & 8)
  6435  0024AC  A601               	btfss	Lcd_Port@a^0,3,c
  6436  0024AE  EF5B  F012         	goto	u1961
  6437  0024B2  EF5D  F012         	goto	u1960
  6438  0024B6                     u1961:
  6439  0024B6  EF60  F012         	goto	l57
  6440  0024BA                     u1960:
  6441  0024BA                     
  6442                           ;./lcd.h: 22:   PORTBbits.RB7 = 1;
  6443  0024BA  8E81               	bsf	129,7,c	;volatile
  6444  0024BC  EF61  F012         	goto	l59
  6445  0024C0                     l57:
  6446                           
  6447                           ;./lcd.h: 24:   PORTBbits.RB7 = 0;
  6448  0024C0  9E81               	bcf	129,7,c	;volatile
  6449  0024C2                     l59:
  6450  0024C2  0012               	return		;funcret
  6451  0024C4                     __end_of_Lcd_Port:
  6452                           	callstack 0
  6453                           
  6454 ;; *************** function _Keypad_Init *****************
  6455 ;; Defined at:
  6456 ;;		line 59 in file "newmain.c"
  6457 ;; Parameters:    Size  Location     Type
  6458 ;;		None
  6459 ;; Auto vars:     Size  Location     Type
  6460 ;;		None
  6461 ;; Return value:  Size  Location     Type
  6462 ;;                  1    wreg      void 
  6463 ;; Registers used:
  6464 ;;		wreg, status,2
  6465 ;; Tracked objects:
  6466 ;;		On entry : 0/0
  6467 ;;		On exit  : 0/0
  6468 ;;		Unchanged: 0/0
  6469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6470 ;;      Params:         0       0       0       0       0       0       0       0       0
  6471 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6472 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6473 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6474 ;;Total ram usage:        0 bytes
  6475 ;; Hardware stack levels used:    1
  6476 ;; This function calls:
  6477 ;;		Nothing
  6478 ;; This function is called by:
  6479 ;;		_main
  6480 ;; This function uses a non-reentrant model
  6481 ;;
  6482                           
  6483                           	psect	text33
  6484  002804                     __ptext33:
  6485                           	callstack 0
  6486  002804                     _Keypad_Init:
  6487                           	callstack 30
  6488  002804                     
  6489                           ;newmain.c: 60:     TRISD = 0B00001111;
  6490  002804  0E0F               	movlw	15
  6491  002806  6E95               	movwf	149,c	;volatile
  6492  002808  0012               	return		;funcret
  6493  00280A                     __end_of_Keypad_Init:
  6494                           	callstack 0
  6495                           
  6496                           	psect	rparam
  6497  0000                     
  6498                           	psect	idloc
  6499                           
  6500                           ;Config register IDLOC0 @ 0x200000
  6501                           ;	unspecified, using default values
  6502  200000                     	org	2097152
  6503  200000  FF                 	db	255
  6504                           
  6505                           ;Config register IDLOC1 @ 0x200001
  6506                           ;	unspecified, using default values
  6507  200001                     	org	2097153
  6508  200001  FF                 	db	255
  6509                           
  6510                           ;Config register IDLOC2 @ 0x200002
  6511                           ;	unspecified, using default values
  6512  200002                     	org	2097154
  6513  200002  FF                 	db	255
  6514                           
  6515                           ;Config register IDLOC3 @ 0x200003
  6516                           ;	unspecified, using default values
  6517  200003                     	org	2097155
  6518  200003  FF                 	db	255
  6519                           
  6520                           ;Config register IDLOC4 @ 0x200004
  6521                           ;	unspecified, using default values
  6522  200004                     	org	2097156
  6523  200004  FF                 	db	255
  6524                           
  6525                           ;Config register IDLOC5 @ 0x200005
  6526                           ;	unspecified, using default values
  6527  200005                     	org	2097157
  6528  200005  FF                 	db	255
  6529                           
  6530                           ;Config register IDLOC6 @ 0x200006
  6531                           ;	unspecified, using default values
  6532  200006                     	org	2097158
  6533  200006  FF                 	db	255
  6534                           
  6535                           ;Config register IDLOC7 @ 0x200007
  6536                           ;	unspecified, using default values
  6537  200007                     	org	2097159
  6538  200007  FF                 	db	255
  6539                           
  6540                           	psect	config
  6541                           
  6542                           ;Config register CONFIG1L @ 0x300000
  6543                           ;	unspecified, using default values
  6544                           ;	PLL Prescaler Selection bits
  6545                           ;	PLLDIV = 0x0, unprogrammed default
  6546                           ;	System Clock Postscaler Selection bits
  6547                           ;	CPUDIV = 0x0, unprogrammed default
  6548                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  6549                           ;	USBDIV = 0x0, unprogrammed default
  6550  300000                     	org	3145728
  6551  300000  00                 	db	0
  6552                           
  6553                           ;Config register CONFIG1H @ 0x300001
  6554                           ;	unspecified, using default values
  6555                           ;	Oscillator Selection bits
  6556                           ;	FOSC = 0x5, unprogrammed default
  6557                           ;	Fail-Safe Clock Monitor Enable bit
  6558                           ;	FCMEN = 0x0, unprogrammed default
  6559                           ;	Internal/External Oscillator Switchover bit
  6560                           ;	IESO = 0x0, unprogrammed default
  6561  300001                     	org	3145729
  6562  300001  05                 	db	5
  6563                           
  6564                           ;Config register CONFIG2L @ 0x300002
  6565                           ;	unspecified, using default values
  6566                           ;	Power-up Timer Enable bit
  6567                           ;	PWRT = 0x1, unprogrammed default
  6568                           ;	Brown-out Reset Enable bits
  6569                           ;	BOR = 0x3, unprogrammed default
  6570                           ;	Brown-out Reset Voltage bits
  6571                           ;	BORV = 0x3, unprogrammed default
  6572                           ;	USB Voltage Regulator Enable bit
  6573                           ;	VREGEN = 0x0, unprogrammed default
  6574  300002                     	org	3145730
  6575  300002  1F                 	db	31
  6576                           
  6577                           ;Config register CONFIG2H @ 0x300003
  6578                           ;	unspecified, using default values
  6579                           ;	Watchdog Timer Enable bit
  6580                           ;	WDT = 0x1, unprogrammed default
  6581                           ;	Watchdog Timer Postscale Select bits
  6582                           ;	WDTPS = 0xF, unprogrammed default
  6583  300003                     	org	3145731
  6584  300003  1F                 	db	31
  6585                           
  6586                           ; Padding undefined space
  6587  300004                     	org	3145732
  6588  300004  FF                 	db	255
  6589                           
  6590                           ;Config register CONFIG3H @ 0x300005
  6591                           ;	unspecified, using default values
  6592                           ;	CCP2 MUX bit
  6593                           ;	CCP2MX = 0x1, unprogrammed default
  6594                           ;	PORTB A/D Enable bit
  6595                           ;	PBADEN = 0x1, unprogrammed default
  6596                           ;	Low-Power Timer 1 Oscillator Enable bit
  6597                           ;	LPT1OSC = 0x0, unprogrammed default
  6598                           ;	MCLR Pin Enable bit
  6599                           ;	MCLRE = 0x1, unprogrammed default
  6600  300005                     	org	3145733
  6601  300005  83                 	db	131
  6602                           
  6603                           ;Config register CONFIG4L @ 0x300006
  6604                           ;	unspecified, using default values
  6605                           ;	Stack Full/Underflow Reset Enable bit
  6606                           ;	STVREN = 0x1, unprogrammed default
  6607                           ;	Single-Supply ICSP Enable bit
  6608                           ;	LVP = 0x1, unprogrammed default
  6609                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  6610                           ;	ICPRT = 0x0, unprogrammed default
  6611                           ;	Extended Instruction Set Enable bit
  6612                           ;	XINST = 0x0, unprogrammed default
  6613                           ;	Background Debugger Enable bit
  6614                           ;	DEBUG = 0x1, unprogrammed default
  6615  300006                     	org	3145734
  6616  300006  85                 	db	133
  6617                           
  6618                           ; Padding undefined space
  6619  300007                     	org	3145735
  6620  300007  FF                 	db	255
  6621                           
  6622                           ;Config register CONFIG5L @ 0x300008
  6623                           ;	unspecified, using default values
  6624                           ;	Code Protection bit
  6625                           ;	CP0 = 0x1, unprogrammed default
  6626                           ;	Code Protection bit
  6627                           ;	CP1 = 0x1, unprogrammed default
  6628                           ;	Code Protection bit
  6629                           ;	CP2 = 0x1, unprogrammed default
  6630                           ;	Code Protection bit
  6631                           ;	CP3 = 0x1, unprogrammed default
  6632  300008                     	org	3145736
  6633  300008  0F                 	db	15
  6634                           
  6635                           ;Config register CONFIG5H @ 0x300009
  6636                           ;	unspecified, using default values
  6637                           ;	Boot Block Code Protection bit
  6638                           ;	CPB = 0x1, unprogrammed default
  6639                           ;	Data EEPROM Code Protection bit
  6640                           ;	CPD = 0x1, unprogrammed default
  6641  300009                     	org	3145737
  6642  300009  C0                 	db	192
  6643                           
  6644                           ;Config register CONFIG6L @ 0x30000A
  6645                           ;	unspecified, using default values
  6646                           ;	Write Protection bit
  6647                           ;	WRT0 = 0x1, unprogrammed default
  6648                           ;	Write Protection bit
  6649                           ;	WRT1 = 0x1, unprogrammed default
  6650                           ;	Write Protection bit
  6651                           ;	WRT2 = 0x1, unprogrammed default
  6652                           ;	Write Protection bit
  6653                           ;	WRT3 = 0x1, unprogrammed default
  6654  30000A                     	org	3145738
  6655  30000A  0F                 	db	15
  6656                           
  6657                           ;Config register CONFIG6H @ 0x30000B
  6658                           ;	unspecified, using default values
  6659                           ;	Configuration Register Write Protection bit
  6660                           ;	WRTC = 0x1, unprogrammed default
  6661                           ;	Boot Block Write Protection bit
  6662                           ;	WRTB = 0x1, unprogrammed default
  6663                           ;	Data EEPROM Write Protection bit
  6664                           ;	WRTD = 0x1, unprogrammed default
  6665  30000B                     	org	3145739
  6666  30000B  E0                 	db	224
  6667                           
  6668                           ;Config register CONFIG7L @ 0x30000C
  6669                           ;	unspecified, using default values
  6670                           ;	Table Read Protection bit
  6671                           ;	EBTR0 = 0x1, unprogrammed default
  6672                           ;	Table Read Protection bit
  6673                           ;	EBTR1 = 0x1, unprogrammed default
  6674                           ;	Table Read Protection bit
  6675                           ;	EBTR2 = 0x1, unprogrammed default
  6676                           ;	Table Read Protection bit
  6677                           ;	EBTR3 = 0x1, unprogrammed default
  6678  30000C                     	org	3145740
  6679  30000C  0F                 	db	15
  6680                           
  6681                           ;Config register CONFIG7H @ 0x30000D
  6682                           ;	unspecified, using default values
  6683                           ;	Boot Block Table Read Protection bit
  6684                           ;	EBTRB = 0x1, unprogrammed default
  6685  30000D                     	org	3145741
  6686  30000D  40                 	db	64
  6687                           tosu	equ	0xFFF
  6688                           tosh	equ	0xFFE
  6689                           tosl	equ	0xFFD
  6690                           stkptr	equ	0xFFC
  6691                           pclatu	equ	0xFFB
  6692                           pclath	equ	0xFFA
  6693                           pcl	equ	0xFF9
  6694                           tblptru	equ	0xFF8
  6695                           tblptrh	equ	0xFF7
  6696                           tblptrl	equ	0xFF6
  6697                           tablat	equ	0xFF5
  6698                           prodh	equ	0xFF4
  6699                           prodl	equ	0xFF3
  6700                           indf0	equ	0xFEF
  6701                           postinc0	equ	0xFEE
  6702                           postdec0	equ	0xFED
  6703                           preinc0	equ	0xFEC
  6704                           plusw0	equ	0xFEB
  6705                           fsr0h	equ	0xFEA
  6706                           fsr0l	equ	0xFE9
  6707                           wreg	equ	0xFE8
  6708                           indf1	equ	0xFE7
  6709                           postinc1	equ	0xFE6
  6710                           postdec1	equ	0xFE5
  6711                           preinc1	equ	0xFE4
  6712                           plusw1	equ	0xFE3
  6713                           fsr1h	equ	0xFE2
  6714                           fsr1l	equ	0xFE1
  6715                           bsr	equ	0xFE0
  6716                           indf2	equ	0xFDF
  6717                           postinc2	equ	0xFDE
  6718                           postdec2	equ	0xFDD
  6719                           preinc2	equ	0xFDC
  6720                           plusw2	equ	0xFDB
  6721                           fsr2h	equ	0xFDA
  6722                           fsr2l	equ	0xFD9
  6723                           status	equ	0xFD8

Data Sizes:
    Strings     87
    Constant    17
    Data        46
    BSS         48
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     94      94
    BANK0           160     48     142
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 10
		 -> activar_seguridad@Temperatura(BANK0[10]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_5(CODE[6]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 6
		 -> STR_5(CODE[6]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_5(CODE[6]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 10
		 -> activar_seguridad@Temperatura(BANK0[10]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    S998_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 10
		 -> activar_seguridad@Temperatura(BANK0[10]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 10
		 -> activar_seguridad@Temperatura(BANK0[10]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 4
		 -> aux_contrasenia(BANK0[4]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 21
		 -> STR_7(CODE[8]), STR_6(CODE[20]), activar_seguridad@Temperatura(BANK0[10]), STR_4(CODE[12]), 
		 -> STR_3(CODE[20]), STR_2(CODE[7]), STR_1(CODE[21]), 


Critical Paths under _main in COMRAM

    _activar_seguridad->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _ctoa->_fputc
    _atoi->_isspace
    ___xxtofl->_getCad
    ___flmul->___xxtofl
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    _main->_securityHouse
    _securityHouse->_activar_seguridad
    _activar_seguridad->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   19810
                        _Keypad_Init
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                      _securityHouse
 ---------------------------------------------------------------------------------
 (1) _securityHouse                                        2     0      2   17486
                                             46 BANK0      2     0      2
                  _activar_seguridad
 ---------------------------------------------------------------------------------
 (2) _activar_seguridad                                   36    36      0   17387
                                             10 BANK0     36    36      0
                   _Keypad_Key_Press
                          _Lcd_Clear
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
                   _Lcd_Write_String
                             ___flge
                            ___flmul
                            ___fltol
                           ___xxtofl
                               _atoi
                             _getCad
                            _isdigit
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             16    10      6    9585
                                             88 COMRAM     6     0      6
                                              0 BANK0     10    10      0
                            ___fltol (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             8     2      6    9232
                                             80 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           42    36      6    8875
                                             63 COMRAM    17    11      6
                               _ctoa
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _dtoa                                                36    26     10    5270
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (7) _pad                                                 11     5      6    3621
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (8) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) _fputs                                                7     3      4    1691
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (7) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (6) _ctoa                                                 8     5      3    1645
                                              9 COMRAM     8     5      3
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _fputc                                                9     5      4    1290
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (7) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (3) _getCad                                               5     3      2      22
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (3) _atoi                                                15    13      2    1518
                                              7 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (4) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              6     4      2     465
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     449
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     398
                                              5 COMRAM    14    10      4
                             _getCad (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4     305
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             25    17      8    1896
                                             19 COMRAM    25    17      8
                           ___xxtofl (ARG)
                             _getCad (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8     334
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write_String                                     6     4      2     800
                                              4 COMRAM     6     4      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (4) _Lcd_Write_Char                                       3     3      0     178
                                              1 COMRAM     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Set_Cursor                                       5     4      1    1216
                                              3 COMRAM     5     4      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Keypad_Key_Press                                    21    21      0     120
                                              0 COMRAM    21    21      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             1     1      0     198
                                              3 COMRAM     1     1      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (4) _Lcd_Cmd                                              2     2      0     110
                                              1 COMRAM     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (5) _Lcd_Port                                             1     1      0      88
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Keypad_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Keypad_Init
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _securityHouse
     _activar_seguridad
       _Keypad_Key_Press
       _Lcd_Clear
         _Lcd_Cmd
           _Lcd_Port
       _Lcd_Set_Cursor
         _Lcd_Cmd
           _Lcd_Port
       _Lcd_Write_Char
         _Lcd_Port
       _Lcd_Write_String
         _Lcd_Write_Char
           _Lcd_Port
       ___flge
       ___flmul
         ___xxtofl (ARG)
           _getCad (ARG)
         _getCad (ARG)
       ___fltol
       ___xxtofl
         _getCad (ARG)
       _atoi
         ___wmul
         _isdigit
         _isspace
       _getCad
       _isdigit
       _sprintf
         ___fltol (ARG)
         _vfprintf (ARG)
           _vfpfcnvrt
             _ctoa
               _fputc
                 _putch
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     30      8E       5       88.8%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5E      5E       1       98.9%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      EC      20        0.0%
DATA                 0      0      EC       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sun Dec 13 21:28:32 2020

                           l51 247E                             l53 2494                             l62 27F4  
                           l55 24AA                             l71 2404                             l57 24C0  
                           l65 2802                             l74 239E                             l59 24C2  
                           l83 232E                             l77 2714            ___wmul@multiplicand 0003  
                          l200 27D4                            l113 25EE                            l116 2808  
                          l127 22B0                            l314 1C24                            l162 0B28  
                          l171 0D3E                            l172 0D16                            l327 1D88  
                          l183 0E2C                            l168 0CEE                            l177 0D96  
                          l178 0D6E                            l189 26A4                            l470 1F92  
                          l465 1F4C                            l821 10E8                            l814 0EF2  
                          l902 1A9C                            l831 1218                            l823 1160  
                          l824 114E                            l497 1E8E                            l905 26DC  
                          l913 2566                            l818 1256                            l923 2514  
                          l862 184E                            l950 217C                            l855 17B6  
                          l953 21BE                            l858 1912                            l971 206A  
                          l955 21FA                            l869 18AA                            l966 1FFA  
                          l969 203C                            l977 12F8                            l899 1A94  
                          l979 1300                            l997 1538                            _abs 25F0  
                          _pad 2136                            wreg 000FE8                   ___flmul@aexp 0025  
                 ___flmul@bexp 0026                   ___flmul@sign 0020                   ___flmul@temp 002B  
                 ___flmul@prod 0027                   ___fltol@exp1 000A                           l1002 175E  
                         l1011 245E                           l1012 2466                           l1031 2134  
                         l1016 2626                           l1042 280A                           l1019 262E  
                         ?_abs 0013                           l1039 25AA                           l2200 1BD4  
                         l1048 2780                           l3000 0B90                           l2202 1BE4  
                         l2210 1C2A                           l3010 0BA0                           l3002 0B92  
                         l3100 2344                           l2140 20B8                           l2132 206C  
                         l2204 1C04                           l2220 1C8A                           l2212 1C38  
                         l2300 1278                           l3020 0BBC                           l3012 0BAA  
                         l3004 0B94                           l3110 2374                           l3102 234A  
                         l2142 20EE                           l2134 207E                           l2230 1D00  
                         l2222 1CA8                           l2214 1C58                           l2150 2586  
                         l2310 12EC                           l2302 12A0                           l3030 0BC6  
                         l3022 0BBE                           l3014 0BB6                           l3006 0B98  
                         l3120 2392                           l3112 237A                           l3104 2358  
                         l2136 2090                           l2240 1D68                           l2232 1D20  
                         l2224 1CB0                           l2216 1C5C                           l2208 1C26  
                         l2152 258A                           l2160 2774                           l2320 1336  
                         l2312 1308                           l2304 12C0                           l3040 0C90  
                         l3032 0BC8                           l3024 0BC0                           l3016 0BB8  
                         l3008 0B9C                           l3122 2398                           l3114 2380  
                         l3106 235E                           l2138 209A                           l2170 1AD0  
                         l2234 1D32                           l2226 1CC4                           l2218 1C6A  
                         l2146 2568                           l2154 274C                           l2250 2168  
                         l2330 13D2                           l2322 133E                           l2314 131A  
                         l2306 12D0                           l2402 16BC                           l3050 0CEC  
                         l3042 0C9C                           l3034 0BD0                           l3026 0BC2  
                         l3018 0BBA                           l3130 267C                           l3124 2804  
                         l3116 2386                           l3108 236E                           l2500 23F8  
                         l2180 1B12                           l2172 1AD4                           l2164 1A9E  
                         l2228 1CD2                           l2236 1D38                           l2148 2574  
                         l2156 2758                           l2260 21CE                           l2252 2174  
                         l2244 2136                           l2340 14A2                           l2324 1344  
                         l2332 1436                           l2316 1328                           l2308 12D2  
                         l2420 174C                           l2404 16E0                           l2412 170E  
                         l3052 0CF6                           l3044 0CCE                           l3036 0C56  
                         l3028 0BC4                           l3132 2680                           l3140 2630  
                         l2430 27E0                           l3118 238C                           l2502 23FE  
                         l2510 22F2                           l2270 1F94                           l2190 1B6C  
                         l2182 1B30                           l2174 1AE2                           l2166 1AA2  
                         l2238 1D48                           l2158 275C                           l2262 21E2  
                         l2254 2188                           l2246 2146                           l2350 14EC  
                         l2334 1450                           l2342 14B2                           l2326 13C6  
                         l2318 132E                           l2414 171C                           l2406 16EE  
                         l3214 0DFE                           l3070 0D8E                           l3046 0CE2  
                         l3062 0D44                           l3038 0C86                           l3134 2688  
                         l3126 266E                           l3150 264E                           l3142 2638  
                         l2360 246A                           l2432 27E2                           l2440 26EE  
                         l2504 22B2                           l2600 197E                           l3216 25D2  
                         l2520 25E0                           l2512 25AE                           l2280 1FE0  
                         l2272 1FA8                           l2192 1B9A                           l2184 1B38  
                         l2176 1B02                           l2168 1AB0                           l2256 219C  
                         l2248 215A                           l2352 14F8                           l2344 14C4  
                         l2336 146E                           l2328 13CC                           l2408 1702  
                         l3080 0DCA                           l3064 0D4E                           l3056 0D24  
                         l3048 0CE8                           l3128 2672                           l3152 265A  
                         l3144 263C                           l2370 24A4                           l2362 2478  
                         l2434 27F2                           l2426 27D8                           l2450 2708  
                         l2442 26F6                           l2506 22BE                           l3218 19CA  
                         l2610 19A6                           l2602 1982                           l2522 25E4  
                         l2514 25B6                           l2290 201E                           l2274 1FB4  
                         l2194 1BBA                           l2186 1B4C                           l2178 1B06  
                         l2266 25F0                           l2258 21A0                           l2354 1500  
                         l2346 14D4                           l2338 1488                           l2418 1728  
                         l3082 0DD0                           l3058 0D36                           l3074 0D98  
                         l3090 0DEA                           l3146 2640                           l2372 24AC  
                         l2364 2480                           l2428 27DA                           l2452 270A  
                         l2444 26F8                           l2436 26E0                           l2508 22EE  
                         l2700 0FFE                           l2460 27B0                           l2612 19AE  
                         l2524 25E6                           l2292 204C                           l2284 1FF2  
                         l2276 1FC0                           l2196 1BBC                           l2188 1B5A  
                         l2268 260A                           l2348 14DA                           l2356 1510  
                         l2380 156C                           l3084 0DDA                           l3068 0D7C  
                         l3076 0DB2                           l3148 2644                           l2374 24BA  
                         l2366 248E                           l2550 223C                           l2534 21FC  
                         l2454 2712                           l2446 2700                           l2438 26EC  
                         l2710 10A2                           l2702 101A                           l2462 27CC  
                         l2470 252E                           l2622 1A54                           l2614 19E0  
                         l2606 1988                           l2526 25E8                           l2518 25BE  
                         l2294 205E                           l2286 2006                           l2278 1FCE  
                         l2198 1BCE                           l2382 157E                           l3078 0DB6  
                         l2368 2496                           l3096 2330                           l2552 2240  
                         l2544 2224                           l2536 2214                           l2448 2702  
                         l2720 10F8                           l2712 10B0                           l2704 1026  
                         l2640 0E5A                           l2632 0E2E                           l2800 1E02  
                         l2456 26A6                           l2472 255C                           l2624 1A66  
                         l2608 199E                           l2288 201A                           l2392 15F4  
                         l2384 1582                           l2376 153A                           l2480 240E  
                         l3098 2336                           l2570 2288                           l2562 2268  
                         l2546 222A                           l2538 221C                           l2490 23B2  
                         l2722 1106                           l2714 10CE                           l2706 1042  
                         l2650 0E96                           l2642 0E6A                           l2634 0E3A  
                         l2810 1E2E                           l2474 2560                           l2466 2516  
                         l2626 1A78                           l2618 1A18                           l2298 1258  
                         l2394 1618                           l2386 15A6                           l2378 155E  
                         l2482 241C                           l2564 226C                           l2556 2252  
                         l2572 229E                           l2492 23C4                           l2732 1170  
                         l2740 11B8                           l2724 110A                           l2716 10D8  
                         l2708 106C                           l2660 0ECC                           l2652 0E9C  
                         l2644 0E7A                           l2636 0E48                           l2820 1E5E  
                         l2468 251A                           l2396 163C                           l2388 15D8  
                         l2484 2442                           l2580 24D6                           l2900 08F4  
                         l2574 22A2                           l2558 2256                           l2486 27F6  
                         l2494 23CA                           l2750 122C                           l2742 11D2  
                         l2734 117C                           l2726 1118                           l2718 10E6  
                         l2662 0EDC                           l2654 0EAA                           l2646 0E80  
                         l2638 0E4A                           l2822 1E6E                           l2806 1E1A  
                         l2830 1772                           l2590 1914                           l2398 1684  
                         l2478 2406                           l2582 24DE                           l2902 08FE  
                         l2568 227E                           l2496 23D4                           l2488 23A2  
                         l2752 123A                           l2744 11E6                           l2736 118A  
                         l2728 1146                           l2680 0F5E                           l2672 0F26  
                         l2664 0EE2                           l2656 0EAC                           l2648 0E90  
                         l2824 1E7E                           l2816 1E42                           l2808 1E24  
                         l2840 17F0                           l2832 1780                           l2592 1928  
                         l2584 24E6                           l2920 0988                           l2912 0964  
                         l2904 0904                           l2498 23E6                           l2770 1F0C  
                         l2762 1E90                           l2754 123C                           l2746 1200  
                         l2738 11B4                           l2690 0FA8                           l2682 0F76  
                         l2674 0F32                           l2666 0F02                           l2658 0EBC  
                         l2818 1E4E                           l2850 1844                           l2842 17F8  
                         l2834 17C6                           l2594 192C                           l2586 2502  
                         l2578 24C4                           l2930 09D6                           l2914 0976  
                         l2906 0920                           l2780 1F90                           l2772 1F1A  
                         l2764 1EBE                           l2748 121C                           l2756 1242  
                         l2692 0FB8                           l2684 0F82                           l2676 0F3C  
                         l2668 0F12                           l2860 18BA                           l2852 1880  
                         l2844 1804                           l2836 17DC                           l2828 1762  
                         l2596 1930                           l2932 09E8                           l2924 0992  
                         l2916 097A                           l2908 0930                           l2774 1F2C  
                         l2766 1ECE                           l2758 1246                           l2694 0FC4  
                         l2686 0F8E                           l2678 0F52                           l2790 1DB4  
                         l2870 1902                           l2862 18BE                           l2854 188C  
                         l2846 1836                           l2598 194A                           l2950 0A5A  
                         l2942 0A04                           l2934 09EC                           l2926 09A2  
                         l2918 097E                           ?_pad 0011                           l2776 1F3A  
                         l2768 1EFC                           l2696 0FD4                           l2688 0F9C  
                         l2792 1DDE                           l2784 1D8A                           l2864 18E2  
                         l2856 189A                           l2848 1838                           l2960 0A76  
                         l2952 0A5E                           l2944 0A14                           l2936 09F0  
                         l2880 0878                           l2778 1F8A                           l2698 0FEE  
                         l2794 1DE0                           l2786 1DA0                           l2866 18F2  
                         l2858 18B8                           l2970 0AB2                           l2962 0A86  
                         l2954 0A62                           l2938 09FA                           l2890 08C4  
                         l2882 087A                           l2874 086A                           l2796 1DF0  
                         l2868 1900                           l2964 0A98                           l2972 0AD0  
                         l2956 0A6C                           l2948 0A48                           l2892 08D6  
                         l2884 0880                           l2876 0872                           l2798 1DF4  
                         l2990 0B5C                           l2982 0AFA                           l2974 0AE0  
                         l2966 0A9C                           l2894 08DA                           l2886 0890  
                         l2878 0876                           l2992 0B66                           l2984 0B24  
                         l2976 0AF2                           l2968 0AA6                           l2896 08DE  
                         l2994 0B72                           l2986 0B2C                           l2898 08E8  
                         l2996 0B8C                           l2988 0B48                           l2998 0B8E  
                         _ADON 007E10  __end_ofKeypad_Key_Press@F3774 0812                           STR_1 0812  
                         STR_2 0820                           STR_3 083B                           STR_4 084F  
                         STR_5 0863                           STR_6 0827                           STR_7 085B  
                         u2000 163C                           u2001 1638                           u2010 16E0  
                         u2011 16DC                           u2100 231E                           u2020 26D6  
                         u2021 26D0                           u2110 232E                           u2030 26D8  
                         u2111 232A                           u2120 220A                           u2040 252E  
                         u2200 199A                           u2041 252A                           u2201 1996  
                         u2130 2238                           u2050 255C                           u2210 1A4E  
                         u2131 2234                           u2107 2314                           u2051 2558  
                         u2211 1A48                           u2140 224E                           u2300 0ECC  
                         u2220 1A50                           u1500 2090                           u2060 245E  
                         u2141 224A                           u2301 0EC8                           u1501 208C  
                         u2061 245A                           u2150 2264                           u2070 23B2  
                         u2310 0F02                           u2230 1A66                           u1510 20B8  
                         u2151 2260                           u2071 23AE                           u2311 0EFE  
                         u2231 1A62                           u1511 20B4                           u3007 0B7E  
                         u2160 227A                           u2080 23E6                           u2400 118A  
                         u2320 0F12                           u2240 1A78                           u1520 20EE  
                         u1600 1B9A                           _LATD 000F8C                           u2161 2276  
                         u2081 23E2                           u3017 26FA                           u2401 1186  
                         u2321 0F0E                           u2241 1A74                           u1521 20EA  
                         u1601 1B96                           u2170 229E                           u2090 22EA  
                         u2410 11D2                           u2330 108C                           u2250 0E48  
                         u1610 1BE4                           u1530 25AA                           u2171 229A  
                         u3027 270C                           u2411 11CE                           u2251 0E44  
                         u1611 1BE0                           u1531 25A6                           u2420 1200  
                         u2340 10E6                           u2260 0E5A                           u2500 1DD4  
                         u2180 194A                           u1620 1C38                           u1540 2774  
                         u1700 21BE                           u3037 233C                           u2421 11FC  
                         u2341 10E2                           u2261 0E56                           u2181 1946  
                         u1621 1C34                           u1541 2770                           u1701 21BA  
                         u2430 123A                           u2350 1106                           u2270 0E6A  
                         u2510 1E02                           u2190 197E                           u1550 1AB0  
                         u1630 1C6A                           u1710 21CE                           u3047 2350  
                         u2431 1236                           u2351 1102                           u2335 1082  
                         u2271 0E66                           u2511 1DFE                           u2191 197A  
                         u1551 1AAC                           u1631 1C66                           u1711 21CA  
                         u2440 1EBE                           u2360 1118                           u2280 0EAA  
                         u2520 1E16                           u2600 187C                           u1560 1AE2  
                         u1640 1CA8                           u1720 260A                           u1800 12A0  
                         u3057 2364                           u2097 22E0                           u2441 1EBA  
                         u2361 1114                           u2281 0EA6                           u2521 1E12  
                         u2505 1DCA                           u2601 1878                           u1561 1ADE  
                         u1641 1CA4                           u1721 2606                           u1801 129C  
                         u2450 1EFC                           u2370 1146                           u2290 0EBC  
                         u2530 1E3E                           u2610 189A                           u1490 207E  
                         u1730 1FA8                           u1650 1CD2                           u1810 12D0  
                         u3067 27E8                           u2451 1EF8                           u2371 1142  
                         u2291 0EB8                           u2531 1E3A                           u2611 1896  
                         u1491 207A                           u1731 1FA4                           u1571 1B0C  
                         u1651 1CCE                           u1811 12CC                           u2460 1F1A  
                         u2380 115C                           u2540 1E5E                           u2620 18AA  
                         u1740 1FCE                           u1580 1B30                           u1660 1D00  
                         u1900 14C4                           u1820 12EC                           u2700 0930  
                         u2461 1F16                           u2381 1158                           u2541 1E5A  
                         u2621 18A6                           u1741 1FCA                           u1581 1B2C  
                         u1661 1CFC                           u1901 14C0                           u1821 12E8  
                         u2701 092C                           u2470 1F3A                           u2390 1170  
                         u2550 1E6E                           u2630 18B8                           u1750 1FEE  
                         u1590 1B5A                           u1670 1D48                           u1910 14D4  
                         u1830 131A                           u2710 095E                           u2471 1F36  
                         u2391 116C                           u2551 1E6A                           u2631 18B4  
                         u1751 1FEA                           u1591 1B56                           u1671 1D44  
                         u1911 14D0                           u1831 1316                           u2711 0958  
                         u2480 1F8A                           u2640 18F2                           u2560 1772  
                         u1760 203C                           u1680 2146                           u1920 14EC  
                         u1840 1328                           u2800 0A44                           u2720 0960  
                         u2481 1F86                           u2641 18EE                           u2561 176E  
                         u1761 2038                           u1681 2142                           u1921 14E8  
                         u1841 1324                           u1930 2478                           u2490 1DA0  
                         u2650 1900                           u2570 1780                           u1770 204C  
                         u1690 2168                           u1850 1450                           u2810 0A5A  
                         u2730 0976                           u1931 2474                           u2491 1D9C  
                         u2651 18FC                           u2571 177C                           u1771 2048  
                         u1691 2164                           u1851 144C                           u2811 0A56  
                         u2731 0972                           u1940 248E                           u2580 17DC  
                         u1860 146E                           u1780 1288                           u2900 0CE2  
                         u2820 0A86                           u2740 09A2                           u2660 0890  
                         u1941 248A                           u2581 17D8                           u1861 146A  
                         u1781 1282                           u2901 0CDE                           u2821 0A82  
                         u2741 099E                           u2661 088C                           u1950 24A4  
                         u2590 1832                           u1870 1488                           u1790 128A  
                         u2910 0D12                           u2830 0A98                           u2750 09D0  
                         u2670 08BE                           u1951 24A0                           u2591 182E  
                         u1871 1484                           u2911 0D0E                           u2831 0A94  
                         u2751 09CA                           u2671 08B8                           u1960 24BA  
                         u1880 14A2                           u2920 0D24                           u2840 0AE0  
                         u2760 09D2                           u2680 08C0                           u1961 24B6  
                         u1881 149E                           u2921 0D20                           u2841 0ADC  
                         u1890 14B2                           u1970 155E                           u2930 0D6A  
                         u2850 0AF2                           u2770 09E8                           u2690 08D6  
                         u1891 14AE                           u1971 155A                           u2931 0D66  
                         u2851 0AEE                           u2771 09E4                           u2691 08D2  
                         u1980 15A6                           u2940 0D7C                           u2860 0B24  
                         u2780 0A14                           u1981 15A2                           u2941 0D78  
                         u2861 0B20                           u2781 0A10                           u1990 1618  
                         u2950 0DAE                           u2870 0B48                           u2790 0A42  
                         u1991 1614                           u2951 0DAA                           u2871 0B44  
                         u2791 0A3C                           u2880 0B5C                           u2960 26A4  
                         u2881 0B58                           u2961 26A0                           u2890 0CCE  
                         u2891 0CCA                           u2977 2674                           u2987 0910  
                         u2997 0ABE                           abs@a 0013              ?_Lcd_Write_String 0005  
                         _dbuf 006C                           _atoi 1914                           _ctoa 1F94  
                         _main 2630                           _dtoa 1258                           _prec 0064  
                         _nout 0060                           pad@i 0018                           pad@p 0015  
                         fsr1h 000FE2                           fsr2h 000FDA                           indf1 000FE7  
                         indf2 000FDF                           fsr1l 000FE1                           pad@w 001A  
                         fsr2l 000FD9                           prodh 000FF4                           prodl 000FF3  
                         start 0000             ??_Lcd_Write_String 0007                __end_of_Lcd_Cmd 27F6  
                 ___param_bank 000000                          ??_abs 0015                          ??_pad 0017  
                ___fltol@sign1 0009                __end_of___aodiv 1C26                          ?_atoi 0008  
                        ?_ctoa 000A                          ?_main 0001                          ?_dtoa 001C  
              __end_of___aomod 1D8A                __end_of___flmul 1258                __end_of___fltol 1E90  
                ??_Keypad_Init 0001                   vfpfcnvrt@fmt 0042                          _SPBRG 000FAF  
                        _PORTD 000F83        __size_of_Lcd_Set_Cursor 0066                          _TRISA 000F92  
                        _TRISB 000F93                          _TRISD 000F95                          _TXREG 000FAD  
                        _flags 0066                          _fputc 206C                          _fputs 2568  
              __end_of_isdigit 26DE                          _tecla 006B                          atoi@n 0015  
                        pad@fp 0011                          atoi@s 0008                          _width 0062  
                        ctoa@c 000C                          _putch 280A                          ctoa@l 000E  
                        ctoa@w 0010                          dtoa@d 001E                          dtoa@i 003E  
                        dtoa@n 0036                          dtoa@p 0030                          dtoa@s 0034  
                        dtoa@w 0032                __end_of_isspace 2568                          tablat 000FF5  
                        status 000FD8                __end_of_sprintf 2516              _activar_seguridad 086A  
             __end_of_Lcd_Init 23A0               __end_of_Lcd_Port 24C4             ?_activar_seguridad 0001  
              __initialization 2716                   __end_of_atoi 1A9E                   __end_of_ctoa 206C  
                 __end_of_main 266E                   __end_of_dtoa 153A             activar_seguridad@i 00BC  
          ??_activar_seguridad 009A                         ??_atoi 000A                         ??_ctoa 000D  
                       ??_main 005F                         ??_dtoa 0026             __size_of_Lcd_Clear 000E  
                __activetblptr 000002    Keypad_Key_Press@keypad_deco 0001                         _ADCON0 000FC2  
                       _ADCON1 000FC1                         _ADCON2 000FC0                         ?_fputc 0001  
                       ?_fputs 000A                         _ADRESH 000FC4                         ?_putch 0001  
          __end_of_Keypad_Init 280A      __end_of_activar_seguridad 0E2E                      ??_Lcd_Cmd 0002  
      __size_of_Lcd_Write_Char 0038               __end_of___xxtofl 1914                   vfprintf@cfmt 0057  
                       ___flge 1E90                      ??___aodiv 0011                      ??___aomod 0011  
                       ___wmul 27B0          __end_of_securityHouse 26A6                      ??___flmul 001C  
                    ??___fltol 0005                         _getCad 25AC      __size_of_Keypad_Key_Press 00B6  
                       clear_0 273C                         pad@buf 0013                         ctoa@fp 000A  
                       dtoa@fp 001C                         _strlen 274C                         fputc@c 0001  
                       fputs@c 000E                         fputs@i 000F                         fputs@s 000A  
                    ??_isdigit 0003                   __mediumconst 0000                      ??_isspace 0003  
                       tblptrh 000FF7                         tblptrl 000FF6                         tblptru 000FF8  
                       putch@c 0001               __end_of_vfprintf 2468                      ??_sprintf 005F  
              Lcd_Set_Cursor@a 0005                Lcd_Set_Cursor@b 0004                Lcd_Set_Cursor@y 0007  
              Lcd_Set_Cursor@z 0006                     ___flge@ff1 0001                     ___flge@ff2 0005  
                 ___xxtofl@arg 0010                   ___xxtofl@exp 000F                   ___xxtofl@val 0006  
                   __accesstop 0060        __end_of__initialization 2742              __end_of_Lcd_Clear 2804  
                ___rparam_used 000001                     ___fltol@f1 0001         activar_seguridad@i_514 00B8  
       activar_seguridad@i_515 00BA                 __pcstackCOMRAM 0001                   __pidataBANK0 2782  
                __end_of_fputc 2136                  __end_of_fputs 25AC                  __end_of_putch 280C  
               _Lcd_Set_Cursor 23A0                    _Keypad_Init 2804                      ?_Lcd_Init 0001  
                    ?_Lcd_Port 0001                        ??_fputc 0005                        ??_fputs 000E  
                      ??_putch 0001                     __pbssBANK0 0060     __size_of_activar_seguridad 05C4  
                      ?___flge 0001                        ?___wmul 0001                        ?_getCad 0001  
    __size_of_Lcd_Write_String 007E         __end_of_Lcd_Set_Cursor 2406                        ?_strlen 0001  
                    ?___xxtofl 0006                        _GO_DONE 007E11                     _buffer_TX2 00C0  
           __size_of_vfpfcnvrt 0226                     ??_Lcd_Init 0004                     ??_Lcd_Port 0001  
               _Lcd_Write_Char 26DE                        _Lcd_Cmd 27D6          Keypad_Key_Press@F3774 0801  
                      __Hparam 0000                        __Lparam 0000                __size_of___flge 0104  
                      ___aodiv 1A9E                     _estado_dia 00ED                        ___aomod 1C26  
                      ___flmul 0E2E                        ___fltol 1D8A                __size_of___wmul 0026  
              __size_of_getCad 0044                      ?_vfprintf 0051               _Keypad_Key_Press 21FC  
                 __psmallconst 0800                        __pcinit 2716                        __ramtop 0800  
              ?_Lcd_Set_Cursor 0004                        __ptext0 2630                        __ptext1 266E  
                      __ptext2 086A                        __ptext3 24C4                        __ptext4 2406  
                      __ptext5 153A                        __ptext6 1258                        __ptext7 2136  
                      __ptext8 274C                        __ptext9 2568                __size_of_strlen 0036  
                 __size_of_abs 0040                   __size_of_pad 00C6                        _isdigit 26A6  
                   ??___xxtofl 000A                        _isspace 2516                        _retardo 00EB  
                      atoi@neg 000E                        _sprintf 24C4         __end_of_Lcd_Write_Char 2716  
         end_of_initialization 2742                        fputc@fp 0003                  __Lmediumconst 0000  
                      fputs@fp 000C   activar_seguridad@temperatura 00B4              __end_of_vfpfcnvrt 1760  
                    _RCSTAbits 000FAB                        postdec1 000FE5                        postdec2 000FDD  
                      postinc0 000FEE                        postinc1 000FE6                        postinc2 000FDE  
              _aux_contrasenia 008C                      Lcd_Port@a 0001                     ??_vfprintf 0057  
                      strlen@a 0003                        strlen@s 0001                      _PORTAbits 000F80  
                    _PORTBbits 000F81                      _PORTDbits 000F83                  ___xxtofl@sign 000E  
                    _TRISCbits 000F94                ?_Lcd_Write_Char 0001                 _estado_teclado 006A  
            Lcd_Write_String@a 0005              Lcd_Write_String@i 0009                    ___flmul@grs 0021  
                    _TXSTAbits 000FAC                      _Lcd_Clear 27F6                 __end_of___flge 1F94  
                  vfpfcnvrt@ap 0044                    vfpfcnvrt@fp 0040                    vfpfcnvrt@ll 0048  
               __end_of___wmul 27D6                    _BAUDCONbits 000FB8               _Lcd_Write_String 22B2  
               __end_of_getCad 25F0                   ?_Keypad_Init 0001                 __end_of_strlen 2782  
          start_initialization 2716                    __end_of_abs 2630                    __end_of_pad 21FC  
       __size_of_securityHouse 0038              __size_of_Lcd_Init 0070              __size_of_Lcd_Port 005C  
                  vfprintf@fmt 0053                     ?_Lcd_Clear 0001                       ??___flge 0009  
                     ??___wmul 0005                       ??_getCad 0003                    __pdataBANK0 00C0  
              Lcd_Write_Char@a 0004                Lcd_Write_Char@y 0003                       ??_strlen 0003  
                    ___flmul@a 0018                      ___flmul@b 0014                  __pcstackBANK0 0090  
             ___aodiv@dividend 0001              __size_of___xxtofl 01B4       __end_of_Keypad_Key_Press 22B2  
                     ?_Lcd_Cmd 0001                      _dtoa$1076 002E               ??_Lcd_Set_Cursor 0005  
                     ?___aodiv 0001                       ?___aomod 0001               ___aodiv@quotient 0013  
                     ?___flmul 0014                       ?___fltol 0001                  _securityHouse 266E  
                    _buffer_TX 00D5              __size_of_vfprintf 0062                    __smallconst 0800  
                     ?_isdigit 0001                       ?_isspace 0001           Keypad_Key_Press@fila 0014  
                     ?_sprintf 0059                 __size_of_fputc 00CA                 __size_of_fputs 0044  
               __size_of_putch 0002                 ___wmul@product 0005                       Lcd_Cmd@a 0003  
                  ??_Lcd_Clear 0004                 ?_securityHouse 00BE                      _vfpfcnvrt 153A  
            ___wmul@multiplier 0001               ??_Lcd_Write_Char 0002                       _Lcd_Init 2330  
         __size_of_Keypad_Init 0006                       _Lcd_Port 2468                    _contrasenia 00E7  
                   vfpfcnvrt@c 0050                      copy_data0 272A       __end_of_Lcd_Write_String 2330  
             __size_of_Lcd_Cmd 0020                       __Hrparam 0000                     vfprintf@ap 0055  
                     __Lrparam 0000                     vfprintf@fp 0051               __size_of___aodiv 0188  
             __size_of___aomod 0164               __size_of___flmul 042A               __size_of___fltol 0106  
                   ?_vfpfcnvrt 0040                ___aodiv@divisor 0009                ___aodiv@counter 0011  
                   sprintf@fmt 005B                       ___xxtofl 1760                       _atoi$976 0010  
                     _atoi$977 0014                       _atoi$978 0012               __size_of_isdigit 0038  
             __size_of_isspace 0052                       __ptext10 25F0                       __ptext11 1C26  
                     __ptext20 27B0                       __ptext12 1A9E                       __ptext21 1760  
                     __ptext13 1F94                       __ptext30 2330                       __ptext22 1D8A  
                     __ptext14 206C                       __ptext31 27D6                       __ptext23 0E2E  
                     __ptext15 280A                       __ptext32 2468                       __ptext24 1E90  
                     __ptext16 25AC                       __ptext33 2804                       __ptext25 22B2  
                     __ptext17 1914                       __ptext26 26DE                       __ptext18 2516  
                     __ptext27 23A0                       __ptext19 26A6                       __ptext28 27F6  
                     __ptext29 21FC                       _contador 0068               __size_of_sprintf 0052  
          Keypad_Key_Press@tec 0012                  __size_of_atoi 018A                  __size_of_ctoa 00D8  
                __size_of_main 003E                  __size_of_dtoa 02E2                    getCad@canal 0005  
              ??_securityHouse 005F                       _vfprintf 2406                    _isspace$994 0007  
             ___aomod@dividend 0001                       isdigit@c 0001             Lcd_Write_Char@temp 0002  
                    sprintf@ap 0092   activar_seguridad@Temperatura 009E              ?_Keypad_Key_Press 0001  
                     isspace@c 0001             ??_Keypad_Key_Press 0001                ___aomod@divisor 0009  
                  ??_vfpfcnvrt 0046                ___aomod@counter 0011             Lcd_Set_Cursor@temp 0008  
                     sprintf@f 0094                       sprintf@s 0059             securityHouse@valor 00BE  
       _activar_seguridad$1345 00A8                   ___aodiv@sign 0012          _activar_seguridad$472 00AE  
        _activar_seguridad$473 00B0          _activar_seguridad$474 00B2          _activar_seguridad$468 00AC  
                 ___aomod@sign 0012  
