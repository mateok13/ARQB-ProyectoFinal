

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Mon Dec 14 23:01:30 2020

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=3
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=3
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=3
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=3
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=3
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=3
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1
    63                           	psect	text48,global,reloc=2,class=CODE,delta=1
    64                           	psect	text49,global,reloc=2,class=CODE,delta=1
    65                           	psect	text50,global,reloc=2,class=CODE,delta=1
    66                           	psect	text51,global,reloc=2,class=CODE,delta=1
    67                           	psect	text52,global,reloc=2,class=CODE,delta=1
    68                           	psect	text53,global,reloc=2,class=CODE,delta=1
    69                           	psect	text54,global,reloc=2,class=CODE,delta=1
    70                           	psect	text55,global,reloc=2,class=CODE,delta=1
    71                           	psect	text56,global,reloc=2,class=CODE,delta=1
    72                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    73                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    74                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    75                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    76  0000                     
    77                           ; Version 2.20
    78                           ; Generated 12/02/2020 GMT
    79                           ; 
    80                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    81                           ; All rights reserved.
    82                           ; 
    83                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    84                           ; 
    85                           ; Redistribution and use in source and binary forms, with or without modification, are
    86                           ; permitted provided that the following conditions are met:
    87                           ; 
    88                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    89                           ;        conditions and the following disclaimer.
    90                           ; 
    91                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    92                           ;        of conditions and the following disclaimer in the documentation and/or other
    93                           ;        materials provided with the distribution.
    94                           ; 
    95                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    96                           ;        software without specific prior written permission.
    97                           ; 
    98                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    99                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   100                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   101                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   102                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   103                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   104                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   105                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   106                           ; 
   107                           ; 
   108                           ; Code-generator required, PIC18F4550 Definitions
   109                           ; 
   110                           ; SFR Addresses
   111  0000                     
   112                           	psect	idataCOMRAM
   113  004756                     __pidataCOMRAM:
   114                           	callstack 0
   115                           
   116                           ;initializer for _estado_dia
   117  004756  4E                 	db	78
   118                           
   119                           	psect	idataBANK1
   120  004642                     __pidataBANK1:
   121                           	callstack 0
   122                           
   123                           ;initializer for _buffer_TX2
   124  004642  74                 	db	116
   125  004643  65                 	db	101
   126  004644  6D                 	db	109
   127  004645  70                 	db	112
   128  004646  65                 	db	101
   129  004647  72                 	db	114
   130  004648  61                 	db	97
   131  004649  74                 	db	116
   132  00464A  75                 	db	117
   133  00464B  72                 	db	114
   134  00464C  61                 	db	97
   135  00464D  20                 	db	32
   136  00464E  72                 	db	114
   137  00464F  65                 	db	101
   138  004650  67                 	db	103
   139  004651  75                 	db	117
   140  004652  6C                 	db	108
   141  004653  61                 	db	97
   142  004654  72                 	db	114
   143  004655  0D                 	db	13
   144  004656  00                 	db	0
   145                           
   146                           ;initializer for _buffer_TX
   147  004657  74                 	db	116
   148  004658  65                 	db	101
   149  004659  6D                 	db	109
   150  00465A  70                 	db	112
   151  00465B  65                 	db	101
   152  00465C  72                 	db	114
   153  00465D  61                 	db	97
   154  00465E  74                 	db	116
   155  00465F  75                 	db	117
   156  004660  72                 	db	114
   157  004661  61                 	db	97
   158  004662  20                 	db	32
   159  004663  61                 	db	97
   160  004664  6C                 	db	108
   161  004665  74                 	db	116
   162  004666  61                 	db	97
   163  004667  0D                 	db	13
   164  004668  00                 	db	0
   165                           
   166                           ;initializer for _contrasenia
   167  004669  32                 	db	50
   168  00466A  30                 	db	48
   169  00466B  32                 	db	50
   170  00466C  30                 	db	48
   171                           
   172                           ;initializer for _retardo
   173  00466D  0064               	dw	100
   174                           
   175                           	psect	smallconst
   176  000800                     __psmallconst:
   177                           	callstack 0
   178  000800  00                 	db	0
   179  000801                     Keypad_Key_Press@F3795:
   180                           	callstack 0
   181  000801  37                 	db	55
   182  000802  38                 	db	56
   183  000803  39                 	db	57
   184  000804  2F                 	db	47
   185  000805  34                 	db	52
   186  000806  35                 	db	53
   187  000807  36                 	db	54
   188  000808  2A                 	db	42
   189  000809  31                 	db	49
   190  00080A  32                 	db	50
   191  00080B  33                 	db	51
   192  00080C  2D                 	db	45
   193  00080D  0D                 	db	13
   194  00080E  30                 	db	48
   195  00080F  3D                 	db	61
   196  000810  2B                 	db	43
   197  000811  00                 	db	0
   198  000812                     __end_ofKeypad_Key_Press@F3795:
   199                           	callstack 0
   200  0000                     _TRISB	set	3987
   201  0000                     _TXREG	set	4013
   202  0000                     _PORTCbits	set	3970
   203  0000                     _SPBRG	set	4015
   204  0000                     _RCSTAbits	set	4011
   205  0000                     _BAUDCONbits	set	4024
   206  0000                     _TXSTAbits	set	4012
   207  0000                     _TRISCbits	set	3988
   208  0000                     _TRISC	set	3988
   209  0000                     _PORTAbits	set	3968
   210  0000                     _TRISA	set	3986
   211  0000                     _PORTD	set	3971
   212  0000                     _PORTDbits	set	3971
   213  0000                     _LATD	set	3980
   214  0000                     _TRISD	set	3989
   215  0000                     _ADRESH	set	4036
   216  0000                     _ADCON2	set	4032
   217  0000                     _ADCON0	set	4034
   218  0000                     _ADCON1	set	4033
   219  0000                     _SSPCON2bits	set	4037
   220  0000                     _SSPADD	set	4040
   221  0000                     _SSPCON2	set	4037
   222  0000                     _SSPCON1	set	4038
   223  0000                     _SSPSTAT	set	4039
   224  0000                     _SSPBUF	set	4041
   225  0000                     _SSPSTATbits	set	4039
   226  0000                     _PORTBbits	set	3969
   227  0000                     _GO_DONE	set	32273
   228  0000                     _ADON	set	32272
   229  0000                     _ACKEN	set	32300
   230  0000                     _ACKDT	set	32301
   231  0000                     _PEN	set	32298
   232  0000                     _RSEN	set	32297
   233  0000                     _ACKSTAT	set	32302
   234  0000                     _SSPIF	set	31987
   235  0000                     _SSPIE	set	31979
   236  0000                     _TRISB1	set	31897
   237  0000                     _TRISB0	set	31896
   238  0000                     _RCEN	set	32299
   239  000812                     STR_1:
   240  000812  20                 	db	32
   241  000813  20                 	db	32
   242  000814  20                 	db	32
   243  000815  20                 	db	32
   244  000816  20                 	db	32
   245  000817  20                 	db	32
   246  000818  20                 	db	32
   247  000819  20                 	db	32
   248  00081A  20                 	db	32
   249  00081B  20                 	db	32
   250  00081C  20                 	db	32
   251  00081D  20                 	db	32
   252  00081E  20                 	db	32
   253  00081F  20                 	db	32
   254  000820  20                 	db	32
   255  000821  20                 	db	32
   256  000822  20                 	db	32
   257  000823  20                 	db	32
   258  000824  20                 	db	32
   259  000825  20                 	db	32
   260  000826  00                 	db	0
   261  000827                     STR_9:
   262  000827  63                 	db	99	;'c'
   263  000828  6F                 	db	111	;'o'
   264  000829  6E                 	db	110	;'n'
   265  00082A  74                 	db	116	;'t'
   266  00082B  72                 	db	114	;'r'
   267  00082C  61                 	db	97	;'a'
   268  00082D  73                 	db	115	;'s'
   269  00082E  65                 	db	101	;'e'
   270  00082F  F1                 	db	-15
   271  000830  61                 	db	97	;'a'
   272  000831  20                 	db	32
   273  000832  69                 	db	105	;'i'
   274  000833  6E                 	db	110	;'n'
   275  000834  76                 	db	118	;'v'
   276  000835  61                 	db	97	;'a'
   277  000836  6C                 	db	108	;'l'
   278  000837  69                 	db	105	;'i'
   279  000838  64                 	db	100	;'d'
   280  000839  61                 	db	97	;'a'
   281  00083A  00                 	db	0
   282  00083B                     STR_3:
   283  00083B  63                 	db	99	;'c'
   284  00083C  6F                 	db	111	;'o'
   285  00083D  6E                 	db	110	;'n'
   286  00083E  74                 	db	116	;'t'
   287  00083F  72                 	db	114	;'r'
   288  000840  61                 	db	97	;'a'
   289  000841  73                 	db	115	;'s'
   290  000842  65                 	db	101	;'e'
   291  000843  F1                 	db	-15
   292  000844  61                 	db	97	;'a'
   293  000845  20                 	db	32
   294  000846  63                 	db	99	;'c'
   295  000847  6F                 	db	111	;'o'
   296  000848  72                 	db	114	;'r'
   297  000849  72                 	db	114	;'r'
   298  00084A  65                 	db	101	;'e'
   299  00084B  63                 	db	99	;'c'
   300  00084C  74                 	db	116	;'t'
   301  00084D  61                 	db	97	;'a'
   302  00084E  00                 	db	0
   303  00084F                     STR_4:
   304  00084F  54                 	db	84	;'T'
   305  000850  65                 	db	101	;'e'
   306  000851  6D                 	db	109	;'m'
   307  000852  70                 	db	112	;'p'
   308  000853  65                 	db	101	;'e'
   309  000854  72                 	db	114	;'r'
   310  000855  61                 	db	97	;'a'
   311  000856  74                 	db	116	;'t'
   312  000857  75                 	db	117	;'u'
   313  000858  72                 	db	114	;'r'
   314  000859  61                 	db	97	;'a'
   315  00085A  3A                 	db	58	;':'
   316  00085B  00                 	db	0
   317  00085C                     STR_7:
   318  00085C  48                 	db	72	;'H'
   319  00085D  6F                 	db	111	;'o'
   320  00085E  72                 	db	114	;'r'
   321  00085F  61                 	db	97	;'a'
   322  000860  3A                 	db	58	;':'
   323  000861  25                 	db	37
   324  000862  78                 	db	120	;'x'
   325  000863  3A                 	db	58	;':'
   326  000864  00                 	db	0
   327  000865                     STR_10:
   328  000865  54                 	db	84	;'T'
   329  000866  45                 	db	69	;'E'
   330  000867  43                 	db	67	;'C'
   331  000868  4C                 	db	76	;'L'
   332  000869  41                 	db	65	;'A'
   333  00086A  44                 	db	68	;'D'
   334  00086B  4F                 	db	79	;'O'
   335  00086C  00                 	db	0
   336  00086D                     STR_8:
   337  00086D  25                 	db	37
   338  00086E  2E                 	db	46
   339  00086F  32                 	db	50	;'2'
   340  000870  66                 	db	102	;'f'
   341  000871  00                 	db	0
   342  000872                     STR_11:
   343  000872  49                 	db	73	;'I'
   344  000873  4E                 	db	78	;'N'
   345  000874  46                 	db	70	;'F'
   346  000875  00                 	db	0
   347  000876                     STR_15:
   348  000876  4E                 	db	78	;'N'
   349  000877  41                 	db	65	;'A'
   350  000878  4E                 	db	78	;'N'
   351  000879  00                 	db	0
   352  00087A                     STR_12:
   353  00087A  69                 	db	105	;'i'
   354  00087B  6E                 	db	110	;'n'
   355  00087C  66                 	db	102	;'f'
   356  00087D  00                 	db	0
   357  00087E                     STR_16:
   358  00087E  6E                 	db	110	;'n'
   359  00087F  61                 	db	97	;'a'
   360  000880  6E                 	db	110	;'n'
   361  000881  00                 	db	0
   362  000882                     STR_5:
   363  000882  25                 	db	37
   364  000883  78                 	db	120	;'x'
   365  000884  20                 	db	32
   366  000885  00                 	db	0
   367  000886                     STR_19:
   368  000886  6C                 	db	108	;'l'
   369  000887  66                 	db	102	;'f'
   370  000888  00                 	db	0
   371  000889  00                 	db	0	; dummy byte at the end
   372  0000                     
   373                           ; #config settings
   374                           
   375                           	psect	cinit
   376  004190                     __pcinit:
   377                           	callstack 0
   378  004190                     start_initialization:
   379                           	callstack 0
   380  004190                     __initialization:
   381                           	callstack 0
   382                           
   383                           ; Initialize objects allocated to BANK1 (45 bytes)
   384                           ; load TBLPTR registers with __pidataBANK1
   385  004190  0E42               	movlw	low __pidataBANK1
   386  004192  6EF6               	movwf	tblptrl,c
   387  004194  0E46               	movlw	high __pidataBANK1
   388  004196  6EF7               	movwf	tblptrh,c
   389  004198  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   390  00419A  6EF8               	movwf	tblptru,c
   391  00419C  EE01  F068         	lfsr	0,__pdataBANK1
   392  0041A0  EE10 F02D          	lfsr	1,45
   393  0041A4                     copy_data0:
   394  0041A4  0009               	tblrd		*+
   395  0041A6  CFF5 FFEE          	movff	tablat,postinc0
   396  0041AA  50E5               	movf	postdec1,w,c
   397  0041AC  50E1               	movf	fsr1l,w,c
   398  0041AE  E1FA               	bnz	copy_data0
   399                           
   400                           ; Initialize objects allocated to COMRAM (1 bytes)
   401                           ; load TBLPTR registers with __pidataCOMRAM
   402  0041B0  0E56               	movlw	low __pidataCOMRAM
   403  0041B2  6EF6               	movwf	tblptrl,c
   404  0041B4  0E47               	movlw	high __pidataCOMRAM
   405  0041B6  6EF7               	movwf	tblptrh,c
   406  0041B8  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   407  0041BA  6EF8               	movwf	tblptru,c
   408  0041BC  0009               	tblrd		*+	;fetch initializer
   409  0041BE  CFF5 F05F          	movff	tablat,__pdataCOMRAM
   410                           
   411                           ; Clear objects allocated to BANK1 (104 bytes)
   412  0041C2  EE01  F000         	lfsr	0,__pbssBANK1
   413  0041C6  0E68               	movlw	104
   414  0041C8                     clear_0:
   415  0041C8  6AEE               	clrf	postinc0,c
   416  0041CA  06E8               	decf	wreg,f,c
   417  0041CC  E1FD               	bnz	clear_0
   418                           
   419                           ; Clear objects allocated to BANK0 (6 bytes)
   420  0041CE  0100               	movlb	0
   421  0041D0  6BFF               	clrf	(__pbssBANK0+5)& (0+255),b
   422  0041D2  6BFE               	clrf	(__pbssBANK0+4)& (0+255),b
   423  0041D4  6BFD               	clrf	(__pbssBANK0+3)& (0+255),b
   424  0041D6  6BFC               	clrf	(__pbssBANK0+2)& (0+255),b
   425  0041D8  6BFB               	clrf	(__pbssBANK0+1)& (0+255),b
   426  0041DA  6BFA               	clrf	__pbssBANK0& (0+255),b
   427  0041DC                     end_of_initialization:
   428                           	callstack 0
   429  0041DC                     __end_of__initialization:
   430                           	callstack 0
   431  0041DC  0E00               	movlw	low (__Lmediumconst shr (0+16))
   432  0041DE  6EF8               	movwf	tblptru,c
   433  0041E0  0100               	movlb	0
   434  0041E2  EFD6  F021         	goto	_main	;jump to C main() function
   435                           
   436                           	psect	dataCOMRAM
   437  00005F                     __pdataCOMRAM:
   438                           	callstack 0
   439  00005F                     _estado_dia:
   440                           	callstack 0
   441  00005F                     	ds	1
   442                           
   443                           	psect	bssBANK0
   444  0000FA                     __pbssBANK0:
   445                           	callstack 0
   446  0000FA                     _prec:
   447                           	callstack 0
   448  0000FA                     	ds	2
   449  0000FC                     _flags:
   450                           	callstack 0
   451  0000FC                     	ds	2
   452  0000FE                     _estado_teclado:
   453                           	callstack 0
   454  0000FE                     	ds	1
   455  0000FF                     _tecla:
   456                           	callstack 0
   457  0000FF                     	ds	1
   458                           
   459                           	psect	bssBANK1
   460  000100                     __pbssBANK1:
   461                           	callstack 0
   462  000100                     floorf@F527:
   463                           	callstack 0
   464  000100                     	ds	4
   465  000104                     ___fpclassifyf@F465:
   466                           	callstack 0
   467  000104                     	ds	4
   468  000108                     _nout:
   469                           	callstack 0
   470  000108                     	ds	2
   471  00010A                     _width:
   472                           	callstack 0
   473  00010A                     	ds	2
   474  00010C                     _contador:
   475                           	callstack 0
   476  00010C                     	ds	2
   477  00010E                     _hour:
   478                           	callstack 0
   479  00010E                     	ds	2
   480  000110                     _min:
   481                           	callstack 0
   482  000110                     	ds	2
   483  000112                     _sec:
   484                           	callstack 0
   485  000112                     	ds	2
   486  000114                     _dbuf:
   487                           	callstack 0
   488  000114                     	ds	80
   489  000164                     _aux_contrasenia:
   490                           	callstack 0
   491  000164                     	ds	4
   492                           
   493                           	psect	dataBANK1
   494  000168                     __pdataBANK1:
   495                           	callstack 0
   496  000168                     _buffer_TX2:
   497                           	callstack 0
   498  000168                     	ds	21
   499  00017D                     _buffer_TX:
   500                           	callstack 0
   501  00017D                     	ds	18
   502  00018F                     _contrasenia:
   503                           	callstack 0
   504  00018F                     	ds	4
   505  000193                     _retardo:
   506                           	callstack 0
   507  000193                     	ds	2
   508                           
   509                           	psect	cstackBANK0
   510  000060                     __pcstackBANK0:
   511                           	callstack 0
   512  000060                     _efgtoa$1447:
   513                           	callstack 0
   514                           
   515                           ; 2 bytes @ 0x0
   516  000060                     	ds	2
   517  000062                     _efgtoa$1448:
   518                           	callstack 0
   519                           
   520                           ; 2 bytes @ 0x2
   521  000062                     	ds	2
   522  000064                     _efgtoa$1453:
   523                           	callstack 0
   524                           
   525                           ; 2 bytes @ 0x4
   526  000064                     	ds	2
   527  000066                     _efgtoa$1457:
   528                           	callstack 0
   529                           
   530                           ; 2 bytes @ 0x6
   531  000066                     	ds	2
   532  000068                     _efgtoa$1458:
   533                           	callstack 0
   534                           
   535                           ; 2 bytes @ 0x8
   536  000068                     	ds	2
   537  00006A                     _efgtoa$1459:
   538                           	callstack 0
   539                           
   540                           ; 2 bytes @ 0xA
   541  00006A                     	ds	2
   542  00006C                     efgtoa@t:
   543                           	callstack 0
   544                           
   545                           ; 2 bytes @ 0xC
   546  00006C                     	ds	2
   547  00006E                     efgtoa@pp:
   548                           	callstack 0
   549                           
   550                           ; 2 bytes @ 0xE
   551  00006E                     	ds	2
   552  000070                     efgtoa@ne:
   553                           	callstack 0
   554                           
   555                           ; 2 bytes @ 0x10
   556  000070                     	ds	2
   557  000072                     efgtoa@m:
   558                           	callstack 0
   559                           
   560                           ; 2 bytes @ 0x12
   561  000072                     	ds	2
   562  000074                     efgtoa@ou:
   563                           	callstack 0
   564                           
   565                           ; 4 bytes @ 0x14
   566  000074                     	ds	4
   567  000078                     efgtoa@d:
   568                           	callstack 0
   569                           
   570                           ; 2 bytes @ 0x18
   571  000078                     	ds	2
   572  00007A                     efgtoa@sign:
   573                           	callstack 0
   574                           
   575                           ; 2 bytes @ 0x1A
   576  00007A                     	ds	2
   577  00007C                     efgtoa@p:
   578                           	callstack 0
   579                           
   580                           ; 2 bytes @ 0x1C
   581  00007C                     	ds	2
   582  00007E                     efgtoa@w:
   583                           	callstack 0
   584                           
   585                           ; 2 bytes @ 0x1E
   586  00007E                     	ds	2
   587  000080                     efgtoa@nmode:
   588                           	callstack 0
   589                           
   590                           ; 1 bytes @ 0x20
   591  000080                     	ds	1
   592  000081                     efgtoa@mode:
   593                           	callstack 0
   594                           
   595                           ; 1 bytes @ 0x21
   596  000081                     	ds	1
   597  000082                     efgtoa@h:
   598                           	callstack 0
   599                           
   600                           ; 4 bytes @ 0x22
   601  000082                     	ds	4
   602  000086                     efgtoa@l:
   603                           	callstack 0
   604                           
   605                           ; 4 bytes @ 0x26
   606  000086                     	ds	4
   607  00008A                     efgtoa@i:
   608                           	callstack 0
   609                           
   610                           ; 2 bytes @ 0x2A
   611  00008A                     	ds	2
   612  00008C                     efgtoa@g:
   613                           	callstack 0
   614                           
   615                           ; 4 bytes @ 0x2C
   616  00008C                     	ds	4
   617  000090                     efgtoa@e:
   618                           	callstack 0
   619                           
   620                           ; 2 bytes @ 0x30
   621  000090                     	ds	2
   622  000092                     efgtoa@n:
   623                           	callstack 0
   624                           
   625                           ; 2 bytes @ 0x32
   626  000092                     	ds	2
   627  000094                     efgtoa@u:
   628                           	callstack 0
   629                           
   630                           ; 4 bytes @ 0x34
   631  000094                     	ds	4
   632  000098                     vfpfcnvrt@llu:
   633                           	callstack 0
   634                           
   635                           ; 8 bytes @ 0x38
   636  000098                     	ds	8
   637  0000A0                     _vfpfcnvrt$1484:
   638                           	callstack 0
   639                           
   640                           ; 2 bytes @ 0x40
   641  0000A0                     	ds	2
   642  0000A2                     _vfpfcnvrt$1488:
   643                           	callstack 0
   644                           
   645                           ; 2 bytes @ 0x42
   646  0000A2                     	ds	2
   647  0000A4                     vfpfcnvrt@f:
   648                           	callstack 0
   649                           
   650                           ; 4 bytes @ 0x44
   651  0000A4                     	ds	4
   652  0000A8                     vfpfcnvrt@ct:
   653                           	callstack 0
   654                           
   655                           ; 3 bytes @ 0x48
   656  0000A8                     	ds	3
   657  0000AB                     vfpfcnvrt@c:
   658                           	callstack 0
   659                           
   660                           ; 1 bytes @ 0x4B
   661  0000AB                     	ds	3
   662  0000AE                     sprintf@ap:
   663                           	callstack 0
   664                           
   665                           ; 2 bytes @ 0x4E
   666  0000AE                     	ds	2
   667  0000B0                     sprintf@f:
   668                           	callstack 0
   669                           
   670                           ; 6 bytes @ 0x50
   671  0000B0                     	ds	6
   672  0000B6                     ??_activar_seguridad:
   673                           
   674                           ; 1 bytes @ 0x56
   675  0000B6                     	ds	4
   676  0000BA                     activar_seguridad@Temperatura:
   677                           	callstack 0
   678                           
   679                           ; 10 bytes @ 0x5A
   680  0000BA                     	ds	10
   681  0000C4                     activar_seguridad@secs:
   682                           	callstack 0
   683                           
   684                           ; 10 bytes @ 0x64
   685  0000C4                     	ds	10
   686  0000CE                     activar_seguridad@mins:
   687                           	callstack 0
   688                           
   689                           ; 10 bytes @ 0x6E
   690  0000CE                     	ds	10
   691  0000D8                     activar_seguridad@hours:
   692                           	callstack 0
   693                           
   694                           ; 10 bytes @ 0x78
   695  0000D8                     	ds	10
   696  0000E2                     _activar_seguridad$1864:
   697                           	callstack 0
   698                           
   699                           ; 4 bytes @ 0x82
   700  0000E2                     	ds	4
   701  0000E6                     _activar_seguridad$774:
   702                           	callstack 0
   703                           
   704                           ; 2 bytes @ 0x86
   705  0000E6                     	ds	2
   706  0000E8                     _activar_seguridad$778:
   707                           	callstack 0
   708                           
   709                           ; 2 bytes @ 0x88
   710  0000E8                     	ds	2
   711  0000EA                     _activar_seguridad$779:
   712                           	callstack 0
   713                           
   714                           ; 2 bytes @ 0x8A
   715  0000EA                     	ds	2
   716  0000EC                     _activar_seguridad$780:
   717                           	callstack 0
   718                           
   719                           ; 2 bytes @ 0x8C
   720  0000EC                     	ds	2
   721  0000EE                     activar_seguridad@temperatura:
   722                           	callstack 0
   723                           
   724                           ; 4 bytes @ 0x8E
   725  0000EE                     	ds	4
   726  0000F2                     activar_seguridad@i_836:
   727                           	callstack 0
   728                           
   729                           ; 2 bytes @ 0x92
   730  0000F2                     	ds	2
   731  0000F4                     activar_seguridad@i_837:
   732                           	callstack 0
   733                           
   734                           ; 2 bytes @ 0x94
   735  0000F4                     	ds	2
   736  0000F6                     activar_seguridad@i:
   737                           	callstack 0
   738                           
   739                           ; 2 bytes @ 0x96
   740  0000F6                     	ds	2
   741  0000F8                     securityHouse@valor:
   742                           	callstack 0
   743                           
   744                           ; 2 bytes @ 0x98
   745  0000F8                     	ds	2
   746                           
   747                           	psect	cstackCOMRAM
   748  000001                     __pcstackCOMRAM:
   749                           	callstack 0
   750  000001                     ?_isdigit:
   751                           	callstack 0
   752  000001                     ?_isspace:
   753                           	callstack 0
   754  000001                     ?_strlen:
   755                           	callstack 0
   756  000001                     ?___fpclassifyf:
   757                           	callstack 0
   758  000001                     ?_isupper:
   759                           	callstack 0
   760  000001                     ?_isalpha:
   761                           	callstack 0
   762  000001                     ?_strncmp:
   763                           	callstack 0
   764  000001                     ?_islower:
   765                           	callstack 0
   766  000001                     ?_getCad:
   767                           	callstack 0
   768  000001                     ?___wmul:
   769                           	callstack 0
   770  000001                     ?___awdiv:
   771                           	callstack 0
   772  000001                     ?___awmod:
   773                           	callstack 0
   774  000001                     ?___fladd:
   775                           	callstack 0
   776  000001                     ?___fldiv:
   777                           	callstack 0
   778  000001                     ?___flneg:
   779                           	callstack 0
   780  000001                     ?___fltol:
   781                           	callstack 0
   782  000001                     Lcd_Port@a:
   783                           	callstack 0
   784  000001                     I2C_Read@flag:
   785                           	callstack 0
   786  000001                     I2C_Write@data:
   787                           	callstack 0
   788  000001                     ___wmul@multiplier:
   789                           	callstack 0
   790  000001                     ___awdiv@dividend:
   791                           	callstack 0
   792  000001                     ___awmod@dividend:
   793                           	callstack 0
   794  000001                     isdigit@c:
   795                           	callstack 0
   796  000001                     isspace@c:
   797                           	callstack 0
   798  000001                     isalpha@c:
   799                           	callstack 0
   800  000001                     isupper@c:
   801                           	callstack 0
   802  000001                     fputc@c:
   803                           	callstack 0
   804  000001                     strcpy@dest:
   805                           	callstack 0
   806  000001                     strlen@s:
   807                           	callstack 0
   808  000001                     strncmp@_l:
   809                           	callstack 0
   810  000001                     islower@c:
   811                           	callstack 0
   812  000001                     ___fleq@ff1:
   813                           	callstack 0
   814  000001                     ___flneg@f1:
   815                           	callstack 0
   816  000001                     ___fltol@f1:
   817                           	callstack 0
   818  000001                     ___fladd@b:
   819                           	callstack 0
   820  000001                     ___fldiv@b:
   821                           	callstack 0
   822  000001                     ___fpclassifyf@x:
   823                           	callstack 0
   824  000001                     Keypad_Key_Press@keypad_deco:
   825                           	callstack 0
   826                           
   827                           ; 17 bytes @ 0x0
   828  000001                     	ds	1
   829  000002                     ??_Lcd_Cmd:
   830  000002                     Lcd_Write_Char@temp:
   831                           	callstack 0
   832  000002                     I2C_Read@buffer:
   833                           	callstack 0
   834  000002                     I2C_Start@slave_write_address:
   835                           	callstack 0
   836  000002                     I2C_Repeated_Start@slave_read_address:
   837                           	callstack 0
   838                           
   839                           ; 1 bytes @ 0x1
   840  000002                     	ds	1
   841  000003                     ??_isdigit:
   842  000003                     ??_isspace:
   843  000003                     ??_isupper:
   844  000003                     ??_isalpha:
   845  000003                     ??_islower:
   846  000003                     ??_getCad:
   847  000003                     ??_RTC_Read_Clock:
   848  000003                     Lcd_Cmd@a:
   849                           	callstack 0
   850  000003                     Lcd_Write_Char@y:
   851                           	callstack 0
   852  000003                     ___wmul@multiplicand:
   853                           	callstack 0
   854  000003                     ___awdiv@divisor:
   855                           	callstack 0
   856  000003                     ___awmod@divisor:
   857                           	callstack 0
   858  000003                     fputc@fp:
   859                           	callstack 0
   860  000003                     strcpy@src:
   861                           	callstack 0
   862  000003                     strlen@a:
   863                           	callstack 0
   864  000003                     strncmp@_r:
   865                           	callstack 0
   866                           
   867                           ; 2 bytes @ 0x2
   868  000003                     	ds	1
   869  000004                     ??_Lcd_Init:
   870  000004                     Lcd_Set_Cursor@b:
   871                           	callstack 0
   872  000004                     Lcd_Write_Char@a:
   873                           	callstack 0
   874  000004                     RTC_Read_Clock@read_clock_address:
   875                           	callstack 0
   876                           
   877                           ; 1 bytes @ 0x3
   878  000004                     	ds	1
   879  000005                     ??_fputc:
   880  000005                     ??___fpclassifyf:
   881  000005                     ??_strcpy:
   882  000005                     ??___fltol:
   883  000005                     Lcd_Set_Cursor@a:
   884                           	callstack 0
   885  000005                     getCad@canal:
   886                           	callstack 0
   887  000005                     ___awdiv@counter:
   888                           	callstack 0
   889  000005                     ___awmod@counter:
   890                           	callstack 0
   891  000005                     Lcd_Write_String@a:
   892                           	callstack 0
   893  000005                     ___wmul@product:
   894                           	callstack 0
   895  000005                     strncmp@n:
   896                           	callstack 0
   897  000005                     ___fleq@ff2:
   898                           	callstack 0
   899  000005                     ___fladd@a:
   900                           	callstack 0
   901  000005                     ___fldiv@a:
   902                           	callstack 0
   903                           
   904                           ; 4 bytes @ 0x4
   905  000005                     	ds	1
   906  000006                     ?___xxtofl:
   907                           	callstack 0
   908  000006                     Lcd_Set_Cursor@z:
   909                           	callstack 0
   910  000006                     ___awdiv@sign:
   911                           	callstack 0
   912  000006                     ___awmod@sign:
   913                           	callstack 0
   914  000006                     ___xxtofl@val:
   915                           	callstack 0
   916                           
   917                           ; 4 bytes @ 0x5
   918  000006                     	ds	1
   919  000007                     ??_strncmp:
   920  000007                     ??_Lcd_Write_String:
   921  000007                     ?_tolower:
   922                           	callstack 0
   923  000007                     ?_toupper:
   924                           	callstack 0
   925  000007                     Lcd_Set_Cursor@y:
   926                           	callstack 0
   927  000007                     _isspace$1316:
   928                           	callstack 0
   929  000007                     ___awdiv@quotient:
   930                           	callstack 0
   931  000007                     strcpy@s:
   932                           	callstack 0
   933  000007                     tolower@c:
   934                           	callstack 0
   935  000007                     toupper@c:
   936                           	callstack 0
   937                           
   938                           ; 2 bytes @ 0x6
   939  000007                     	ds	1
   940  000008                     ?_atoi:
   941                           	callstack 0
   942  000008                     Lcd_Set_Cursor@temp:
   943                           	callstack 0
   944  000008                     atoi@s:
   945                           	callstack 0
   946  000008                     strncmp@l:
   947                           	callstack 0
   948                           
   949                           ; 2 bytes @ 0x7
   950  000008                     	ds	1
   951  000009                     ??___fladd:
   952  000009                     ??___fldiv:
   953  000009                     ??_tolower:
   954  000009                     ??_toupper:
   955  000009                     ??___fleq:
   956  000009                     ___fltol@sign1:
   957                           	callstack 0
   958  000009                     Lcd_Write_String@i:
   959                           	callstack 0
   960  000009                     ___fpclassifyf@e:
   961                           	callstack 0
   962  000009                     strcpy@d:
   963                           	callstack 0
   964                           
   965                           ; 2 bytes @ 0x8
   966  000009                     	ds	1
   967  00000A                     ??_atoi:
   968  00000A                     ??___xxtofl:
   969  00000A                     ___fltol@exp1:
   970                           	callstack 0
   971  00000A                     fputs@s:
   972                           	callstack 0
   973  00000A                     strncmp@r:
   974                           	callstack 0
   975                           
   976                           ; 2 bytes @ 0x9
   977  00000A                     	ds	1
   978  00000B                     ___fpclassifyf@u:
   979                           	callstack 0
   980                           
   981                           ; 4 bytes @ 0xA
   982  00000B                     	ds	1
   983  00000C                     fputs@fp:
   984                           	callstack 0
   985                           
   986                           ; 2 bytes @ 0xB
   987  00000C                     	ds	1
   988  00000D                     ___fladd@signs:
   989                           	callstack 0
   990  00000D                     _tolower$1595:
   991                           	callstack 0
   992  00000D                     _toupper$1610:
   993                           	callstack 0
   994  00000D                     ___fldiv@rem:
   995                           	callstack 0
   996                           
   997                           ; 4 bytes @ 0xC
   998  00000D                     	ds	1
   999  00000E                     ___fladd@aexp:
  1000                           	callstack 0
  1001  00000E                     ___xxtofl@sign:
  1002                           	callstack 0
  1003  00000E                     fputs@c:
  1004                           	callstack 0
  1005  00000E                     atoi@neg:
  1006                           	callstack 0
  1007                           
  1008                           ; 2 bytes @ 0xD
  1009  00000E                     	ds	1
  1010  00000F                     ___fladd@bexp:
  1011                           	callstack 0
  1012  00000F                     ___xxtofl@exp:
  1013                           	callstack 0
  1014  00000F                     fputs@i:
  1015                           	callstack 0
  1016                           
  1017                           ; 2 bytes @ 0xE
  1018  00000F                     	ds	1
  1019  000010                     ___fladd@grs:
  1020                           	callstack 0
  1021  000010                     _atoi$1298:
  1022                           	callstack 0
  1023  000010                     ___xxtofl@arg:
  1024                           	callstack 0
  1025                           
  1026                           ; 4 bytes @ 0xF
  1027  000010                     	ds	1
  1028  000011                     ?_pad:
  1029                           	callstack 0
  1030  000011                     ___fldiv@sign:
  1031                           	callstack 0
  1032  000011                     pad@fp:
  1033                           	callstack 0
  1034                           
  1035                           ; 2 bytes @ 0x10
  1036  000011                     	ds	1
  1037  000012                     Keypad_Key_Press@tec:
  1038                           	callstack 0
  1039  000012                     ___fldiv@new_exp:
  1040                           	callstack 0
  1041  000012                     _atoi$1300:
  1042                           	callstack 0
  1043                           
  1044                           ; 2 bytes @ 0x11
  1045  000012                     	ds	1
  1046  000013                     pad@buf:
  1047                           	callstack 0
  1048                           
  1049                           ; 2 bytes @ 0x12
  1050  000013                     	ds	1
  1051  000014                     ?___flmul:
  1052                           	callstack 0
  1053  000014                     _atoi$1299:
  1054                           	callstack 0
  1055  000014                     Keypad_Key_Press@fila:
  1056                           	callstack 0
  1057  000014                     ___fldiv@grs:
  1058                           	callstack 0
  1059  000014                     ___flmul@b:
  1060                           	callstack 0
  1061                           
  1062                           ; 4 bytes @ 0x13
  1063  000014                     	ds	1
  1064  000015                     atoi@n:
  1065                           	callstack 0
  1066  000015                     pad@p:
  1067                           	callstack 0
  1068                           
  1069                           ; 2 bytes @ 0x14
  1070  000015                     	ds	2
  1071  000017                     ??_pad:
  1072                           
  1073                           ; 1 bytes @ 0x16
  1074  000017                     	ds	1
  1075  000018                     ___fldiv@bexp:
  1076                           	callstack 0
  1077  000018                     pad@i:
  1078                           	callstack 0
  1079  000018                     ___flmul@a:
  1080                           	callstack 0
  1081                           
  1082                           ; 4 bytes @ 0x17
  1083  000018                     	ds	1
  1084  000019                     ___fldiv@aexp:
  1085                           	callstack 0
  1086                           
  1087                           ; 1 bytes @ 0x18
  1088  000019                     	ds	1
  1089  00001A                     ?_floorf:
  1090                           	callstack 0
  1091  00001A                     pad@w:
  1092                           	callstack 0
  1093  00001A                     floorf@x:
  1094                           	callstack 0
  1095                           
  1096                           ; 4 bytes @ 0x19
  1097  00001A                     	ds	2
  1098  00001C                     ??___flmul:
  1099  00001C                     ?_xtoa:
  1100                           	callstack 0
  1101  00001C                     xtoa@fp:
  1102                           	callstack 0
  1103                           
  1104                           ; 2 bytes @ 0x1B
  1105  00001C                     	ds	2
  1106  00001E                     ??_floorf:
  1107  00001E                     xtoa@d:
  1108                           	callstack 0
  1109                           
  1110                           ; 8 bytes @ 0x1D
  1111  00001E                     	ds	2
  1112  000020                     ___flmul@sign:
  1113                           	callstack 0
  1114                           
  1115                           ; 1 bytes @ 0x1F
  1116  000020                     	ds	1
  1117  000021                     ___flmul@grs:
  1118                           	callstack 0
  1119                           
  1120                           ; 4 bytes @ 0x20
  1121  000021                     	ds	3
  1122  000024                     floorf@m:
  1123                           	callstack 0
  1124                           
  1125                           ; 4 bytes @ 0x23
  1126  000024                     	ds	1
  1127  000025                     ___flmul@aexp:
  1128                           	callstack 0
  1129                           
  1130                           ; 1 bytes @ 0x24
  1131  000025                     	ds	1
  1132  000026                     ___flmul@bexp:
  1133                           	callstack 0
  1134  000026                     xtoa@x:
  1135                           	callstack 0
  1136                           
  1137                           ; 1 bytes @ 0x25
  1138  000026                     	ds	1
  1139  000027                     ??_xtoa:
  1140  000027                     ___flmul@prod:
  1141                           	callstack 0
  1142                           
  1143                           ; 4 bytes @ 0x26
  1144  000027                     	ds	1
  1145  000028                     floorf@e:
  1146                           	callstack 0
  1147                           
  1148                           ; 2 bytes @ 0x27
  1149  000028                     	ds	2
  1150  00002A                     floorf@u:
  1151                           	callstack 0
  1152                           
  1153                           ; 4 bytes @ 0x29
  1154  00002A                     	ds	1
  1155  00002B                     ___flmul@temp:
  1156                           	callstack 0
  1157                           
  1158                           ; 2 bytes @ 0x2A
  1159  00002B                     	ds	2
  1160  00002D                     ?___flsub:
  1161                           	callstack 0
  1162  00002D                     ___flge@ff1:
  1163                           	callstack 0
  1164  00002D                     ___flsub@b:
  1165                           	callstack 0
  1166                           
  1167                           ; 4 bytes @ 0x2C
  1168  00002D                     	ds	2
  1169  00002F                     _xtoa$1469:
  1170                           	callstack 0
  1171                           
  1172                           ; 2 bytes @ 0x2E
  1173  00002F                     	ds	2
  1174  000031                     _xtoa$1470:
  1175                           	callstack 0
  1176  000031                     ___flge@ff2:
  1177                           	callstack 0
  1178  000031                     ___flsub@a:
  1179                           	callstack 0
  1180                           
  1181                           ; 4 bytes @ 0x30
  1182  000031                     	ds	2
  1183  000033                     xtoa@p:
  1184                           	callstack 0
  1185                           
  1186                           ; 2 bytes @ 0x32
  1187  000033                     	ds	2
  1188  000035                     ??___flge:
  1189  000035                     xtoa@w:
  1190                           	callstack 0
  1191                           
  1192                           ; 2 bytes @ 0x34
  1193  000035                     	ds	2
  1194  000037                     xtoa@n:
  1195                           	callstack 0
  1196                           
  1197                           ; 8 bytes @ 0x36
  1198  000037                     	ds	2
  1199  000039                     ?_efgtoa:
  1200                           	callstack 0
  1201  000039                     efgtoa@fp:
  1202                           	callstack 0
  1203                           
  1204                           ; 2 bytes @ 0x38
  1205  000039                     	ds	2
  1206  00003B                     efgtoa@f:
  1207                           	callstack 0
  1208                           
  1209                           ; 4 bytes @ 0x3A
  1210  00003B                     	ds	4
  1211  00003F                     efgtoa@c:
  1212                           	callstack 0
  1213  00003F                     xtoa@i:
  1214                           	callstack 0
  1215                           
  1216                           ; 2 bytes @ 0x3E
  1217  00003F                     	ds	1
  1218  000040                     ??_efgtoa:
  1219                           
  1220                           ; 1 bytes @ 0x3F
  1221  000040                     	ds	1
  1222  000041                     xtoa@c:
  1223                           	callstack 0
  1224                           
  1225                           ; 2 bytes @ 0x40
  1226  000041                     	ds	4
  1227  000045                     ?_vfpfcnvrt:
  1228                           	callstack 0
  1229  000045                     vfpfcnvrt@fp:
  1230                           	callstack 0
  1231                           
  1232                           ; 2 bytes @ 0x44
  1233  000045                     	ds	2
  1234  000047                     vfpfcnvrt@fmt:
  1235                           	callstack 0
  1236                           
  1237                           ; 2 bytes @ 0x46
  1238  000047                     	ds	2
  1239  000049                     vfpfcnvrt@ap:
  1240                           	callstack 0
  1241                           
  1242                           ; 2 bytes @ 0x48
  1243  000049                     	ds	2
  1244  00004B                     ??_vfpfcnvrt:
  1245                           
  1246                           ; 1 bytes @ 0x4A
  1247  00004B                     	ds	4
  1248  00004F                     ?_vfprintf:
  1249                           	callstack 0
  1250  00004F                     vfprintf@fp:
  1251                           	callstack 0
  1252                           
  1253                           ; 2 bytes @ 0x4E
  1254  00004F                     	ds	2
  1255  000051                     vfprintf@fmt:
  1256                           	callstack 0
  1257                           
  1258                           ; 2 bytes @ 0x50
  1259  000051                     	ds	2
  1260  000053                     vfprintf@ap:
  1261                           	callstack 0
  1262                           
  1263                           ; 2 bytes @ 0x52
  1264  000053                     	ds	2
  1265  000055                     vfprintf@cfmt:
  1266                           	callstack 0
  1267                           
  1268                           ; 2 bytes @ 0x54
  1269  000055                     	ds	2
  1270  000057                     ?_sprintf:
  1271                           	callstack 0
  1272  000057                     sprintf@s:
  1273                           	callstack 0
  1274                           
  1275                           ; 2 bytes @ 0x56
  1276  000057                     	ds	2
  1277  000059                     sprintf@fmt:
  1278                           	callstack 0
  1279                           
  1280                           ; 2 bytes @ 0x58
  1281  000059                     	ds	6
  1282  00005F                     
  1283                           ; 1 bytes @ 0x5E
  1284 ;;
  1285 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1286 ;;
  1287 ;; *************** function _main *****************
  1288 ;; Defined at:
  1289 ;;		line 279 in file "main.c"
  1290 ;; Parameters:    Size  Location     Type
  1291 ;;		None
  1292 ;; Auto vars:     Size  Location     Type
  1293 ;;		None
  1294 ;; Return value:  Size  Location     Type
  1295 ;;                  1    wreg      void 
  1296 ;; Registers used:
  1297 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1298 ;; Tracked objects:
  1299 ;;		On entry : 0/0
  1300 ;;		On exit  : 0/0
  1301 ;;		Unchanged: 0/0
  1302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1303 ;;      Params:         0       0       0       0       0       0       0       0       0
  1304 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1305 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1306 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1307 ;;Total ram usage:        0 bytes
  1308 ;; Hardware stack levels required when called:   10
  1309 ;; This function calls:
  1310 ;;		_Keypad_Init
  1311 ;;		_Lcd_Clear
  1312 ;;		_Lcd_Init
  1313 ;;		_Lcd_Set_Cursor
  1314 ;;		_Lcd_Write_String
  1315 ;;		_securityHouse
  1316 ;; This function is called by:
  1317 ;;		Startup code after reset
  1318 ;; This function uses a non-reentrant model
  1319 ;;
  1320                           
  1321                           	psect	text0
  1322  0043AC                     __ptext0:
  1323                           	callstack 0
  1324  0043AC                     _main:
  1325                           	callstack 21
  1326  0043AC                     
  1327                           ;main.c: 280:     TRISB = 0;
  1328  0043AC  0E00               	movlw	0
  1329  0043AE  6E93               	movwf	147,c	;volatile
  1330                           
  1331                           ;main.c: 281:     ADCON1 = 0b00001111;
  1332  0043B0  0E0F               	movlw	15
  1333  0043B2  6EC1               	movwf	193,c	;volatile
  1334  0043B4                     
  1335                           ;main.c: 282:     Keypad_Init();
  1336  0043B4  ECA7  F023         	call	_Keypad_Init	;wreg free
  1337  0043B8                     
  1338                           ;main.c: 283:     Lcd_Init();
  1339  0043B8  EC71  F01F         	call	_Lcd_Init	;wreg free
  1340  0043BC                     
  1341                           ;main.c: 284:     Lcd_Clear();
  1342  0043BC  ECA0  F023         	call	_Lcd_Clear	;wreg free
  1343  0043C0                     
  1344                           ;main.c: 285:     Lcd_Set_Cursor(1, 6);
  1345  0043C0  0E06               	movlw	6
  1346  0043C2  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  1347  0043C4  0E01               	movlw	1
  1348  0043C6  ECA9  F01F         	call	_Lcd_Set_Cursor
  1349  0043CA                     
  1350                           ;main.c: 286:     Lcd_Write_String("TECLADO");
  1351  0043CA  0E65               	movlw	low STR_10
  1352  0043CC  6E05               	movwf	Lcd_Write_String@a^0,c
  1353  0043CE  0E08               	movlw	high STR_10
  1354  0043D0  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  1355  0043D2  EC32  F01F         	call	_Lcd_Write_String	;wreg free
  1356  0043D6                     l5311:
  1357                           
  1358                           ;main.c: 288:         securityHouse(retardo);
  1359  0043D6  C193  F0F8         	movff	_retardo,securityHouse@valor
  1360  0043DA  C194  F0F9         	movff	_retardo+1,securityHouse@valor+1
  1361  0043DE  EC30  F022         	call	_securityHouse	;wreg free
  1362  0043E2  EFEB  F021         	goto	l5311
  1363  0043E6  EF00  F000         	goto	start
  1364  0043EA                     __end_of_main:
  1365                           	callstack 0
  1366                           
  1367 ;; *************** function _securityHouse *****************
  1368 ;; Defined at:
  1369 ;;		line 271 in file "main.c"
  1370 ;; Parameters:    Size  Location     Type
  1371 ;;  valor           2  152[BANK0 ] int 
  1372 ;; Auto vars:     Size  Location     Type
  1373 ;;		None
  1374 ;; Return value:  Size  Location     Type
  1375 ;;                  1    wreg      void 
  1376 ;; Registers used:
  1377 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1378 ;; Tracked objects:
  1379 ;;		On entry : 0/0
  1380 ;;		On exit  : 0/0
  1381 ;;		Unchanged: 0/0
  1382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1383 ;;      Params:         0       2       0       0       0       0       0       0       0
  1384 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1385 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1386 ;;      Totals:         0       2       0       0       0       0       0       0       0
  1387 ;;Total ram usage:        2 bytes
  1388 ;; Hardware stack levels used:    1
  1389 ;; Hardware stack levels required when called:    9
  1390 ;; This function calls:
  1391 ;;		_activar_seguridad
  1392 ;; This function is called by:
  1393 ;;		_main
  1394 ;; This function uses a non-reentrant model
  1395 ;;
  1396                           
  1397                           	psect	text1
  1398  004460                     __ptext1:
  1399                           	callstack 0
  1400  004460                     _securityHouse:
  1401                           	callstack 21
  1402  004460                     
  1403                           ;main.c: 272:     while (valor > 0) {
  1404  004460  EF3D  F022         	goto	l5285
  1405  004464                     l5279:
  1406                           
  1407                           ; BSR set to: 0
  1408                           ;main.c: 273:         _delay((unsigned long)((700)*(8000000/4000000.0)));
  1409  004464  0EC8               	movlw	200
  1410  004466                     u6637:
  1411  004466  D000               	nop2	
  1412  004468  D000               	nop2	
  1413  00446A  2EE8               	decfsz	wreg,f,c
  1414  00446C  D7FC               	bra	u6637
  1415  00446E                     
  1416                           ;main.c: 274:         activar_seguridad();
  1417  00446E  EC71  F00A         	call	_activar_seguridad	;wreg free
  1418  004472                     
  1419                           ;main.c: 275:         valor--;
  1420  004472  0100               	movlb	0	; () banked
  1421  004474  07F8               	decf	securityHouse@valor& (0+255),f,b
  1422  004476  A0D8               	btfss	status,0,c
  1423  004478  07F9               	decf	(securityHouse@valor+1)& (0+255),f,b
  1424  00447A                     l5285:
  1425                           
  1426                           ;main.c: 272:     while (valor > 0) {
  1427  00447A  0100               	movlb	0	; () banked
  1428  00447C  BFF9               	btfsc	(securityHouse@valor+1)& (0+255),7,b
  1429  00447E  EF4B  F022         	goto	u6590
  1430  004482  51F9               	movf	(securityHouse@valor+1)& (0+255),w,b
  1431  004484  E106               	bnz	u6591
  1432  004486  05F8               	decf	securityHouse@valor& (0+255),w,b
  1433  004488  B0D8               	btfsc	status,0,c
  1434  00448A  EF49  F022         	goto	u6591
  1435  00448E  EF4B  F022         	goto	u6590
  1436  004492                     u6591:
  1437  004492  EF32  F022         	goto	l5279
  1438  004496                     u6590:
  1439  004496                     
  1440                           ; BSR set to: 0
  1441  004496  0012               	return		;funcret
  1442  004498                     __end_of_securityHouse:
  1443                           	callstack 0
  1444                           
  1445 ;; *************** function _activar_seguridad *****************
  1446 ;; Defined at:
  1447 ;;		line 102 in file "main.c"
  1448 ;; Parameters:    Size  Location     Type
  1449 ;;		None
  1450 ;; Auto vars:     Size  Location     Type
  1451 ;;  i               2  148[BANK0 ] int 
  1452 ;;  i               2  146[BANK0 ] int 
  1453 ;;  hours          10  120[BANK0 ] unsigned char [10]
  1454 ;;  mins           10  110[BANK0 ] unsigned char [10]
  1455 ;;  secs           10  100[BANK0 ] unsigned char [10]
  1456 ;;  Temperatura    10   90[BANK0 ] unsigned char [10]
  1457 ;;  temperatura     4  142[BANK0 ] float 
  1458 ;;  i               2  150[BANK0 ] int 
  1459 ;; Return value:  Size  Location     Type
  1460 ;;                  1    wreg      void 
  1461 ;; Registers used:
  1462 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1463 ;; Tracked objects:
  1464 ;;		On entry : 0/0
  1465 ;;		On exit  : 0/0
  1466 ;;		Unchanged: 0/0
  1467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1468 ;;      Params:         0       0       0       0       0       0       0       0       0
  1469 ;;      Locals:         0      62       0       0       0       0       0       0       0
  1470 ;;      Temps:          0       4       0       0       0       0       0       0       0
  1471 ;;      Totals:         0      66       0       0       0       0       0       0       0
  1472 ;;Total ram usage:       66 bytes
  1473 ;; Hardware stack levels used:    1
  1474 ;; Hardware stack levels required when called:    8
  1475 ;; This function calls:
  1476 ;;		_I2C_Init
  1477 ;;		_I2C_Stop
  1478 ;;		_Keypad_Key_Press
  1479 ;;		_Lcd_Clear
  1480 ;;		_Lcd_Set_Cursor
  1481 ;;		_Lcd_Write_Char
  1482 ;;		_Lcd_Write_String
  1483 ;;		_RTC_Read_Clock
  1484 ;;		___flge
  1485 ;;		___flmul
  1486 ;;		___xxtofl
  1487 ;;		_atoi
  1488 ;;		_getCad
  1489 ;;		_isdigit
  1490 ;;		_sprintf
  1491 ;; This function is called by:
  1492 ;;		_securityHouse
  1493 ;; This function uses a non-reentrant model
  1494 ;;
  1495                           
  1496                           	psect	text2
  1497  0014E2                     __ptext2:
  1498                           	callstack 0
  1499  0014E2                     _activar_seguridad:
  1500                           	callstack 21
  1501  0014E2                     
  1502                           ;main.c: 103:     tecla = Keypad_Key_Press();
  1503  0014E2  EC2A  F01E         	call	_Keypad_Key_Press	;wreg free
  1504  0014E6  0100               	movlb	0	; () banked
  1505  0014E8  6FFF               	movwf	_tecla& (0+255),b
  1506  0014EA                     
  1507                           ; BSR set to: 0
  1508                           ;main.c: 105:     TRISA = 0b00000001;
  1509  0014EA  0E01               	movlw	1
  1510  0014EC  6E92               	movwf	146,c	;volatile
  1511  0014EE                     
  1512                           ; BSR set to: 0
  1513                           ;main.c: 107:     PORTAbits.RA3 = 0;
  1514  0014EE  9680               	bcf	128,3,c	;volatile
  1515  0014F0                     
  1516                           ; BSR set to: 0
  1517                           ;main.c: 108:     PORTAbits.RA5 = 0;
  1518  0014F0  9A80               	bcf	128,5,c	;volatile
  1519  0014F2                     
  1520                           ; BSR set to: 0
  1521                           ;main.c: 109:     PORTAbits.RA4 = 1;
  1522  0014F2  8880               	bsf	128,4,c	;volatile
  1523                           
  1524                           ;main.c: 110:     switch (estado_teclado) {
  1525  0014F4  EFB8  F00D         	goto	l5239
  1526  0014F8                     l5001:
  1527                           
  1528                           ; BSR set to: 0
  1529                           ;main.c: 112:             if ((tecla != 0) && ((0 ? isdigit(tecla) : ((unsigned)(tecla)-
      +                          '0') < 10))) {
  1530  0014F8  51FF               	movf	_tecla& (0+255),w,b
  1531  0014FA  B4D8               	btfsc	status,2,c
  1532  0014FC  EF82  F00A         	goto	u6281
  1533  001500  EF84  F00A         	goto	u6280
  1534  001504                     u6281:
  1535  001504  EFD9  F00D         	goto	l310
  1536  001508                     u6280:
  1537  001508                     
  1538                           ; BSR set to: 0
  1539  001508  0ED0               	movlw	208
  1540  00150A  6FB6               	movwf	??_activar_seguridad& (0+255),b
  1541  00150C  0EFF               	movlw	255
  1542  00150E  6FB7               	movwf	(??_activar_seguridad+1)& (0+255),b
  1543  001510  51FF               	movf	_tecla& (0+255),w,b
  1544  001512  6FB8               	movwf	(??_activar_seguridad+2)& (0+255),b
  1545  001514  6BB9               	clrf	(??_activar_seguridad+3)& (0+255),b
  1546  001516  51B6               	movf	??_activar_seguridad& (0+255),w,b
  1547  001518  27B8               	addwf	(??_activar_seguridad+2)& (0+255),f,b
  1548  00151A  51B7               	movf	(??_activar_seguridad+1)& (0+255),w,b
  1549  00151C  23B9               	addwfc	(??_activar_seguridad+3)& (0+255),f,b
  1550  00151E  51B9               	movf	(??_activar_seguridad+3)& (0+255),w,b
  1551  001520  E10A               	bnz	u6290
  1552  001522  0E0A               	movlw	10
  1553  001524  5DB8               	subwf	(??_activar_seguridad+2)& (0+255),w,b
  1554  001526  A0D8               	btfss	status,0,c
  1555  001528  EF98  F00A         	goto	u6291
  1556  00152C  EF9B  F00A         	goto	u6290
  1557  001530                     u6291:
  1558  001530  0E01               	movlw	1
  1559  001532  EF9C  F00A         	goto	u6300
  1560  001536                     u6290:
  1561  001536  0E00               	movlw	0
  1562  001538                     u6300:
  1563  001538  6FE6               	movwf	_activar_seguridad$774& (0+255),b
  1564  00153A  6BE7               	clrf	(_activar_seguridad$774+1)& (0+255),b
  1565  00153C                     
  1566                           ; BSR set to: 0
  1567  00153C  51E6               	movf	_activar_seguridad$774& (0+255),w,b
  1568  00153E  11E7               	iorwf	(_activar_seguridad$774+1)& (0+255),w,b
  1569  001540  B4D8               	btfsc	status,2,c
  1570  001542  EFA5  F00A         	goto	u6311
  1571  001546  EFA7  F00A         	goto	u6310
  1572  00154A                     u6311:
  1573  00154A  EFD9  F00D         	goto	l310
  1574  00154E                     u6310:
  1575  00154E                     
  1576                           ; BSR set to: 0
  1577                           ;main.c: 113:                 aux_contrasenia[0] = tecla;
  1578  00154E  C0FF  F164         	movff	_tecla,_aux_contrasenia
  1579  001552                     
  1580                           ; BSR set to: 0
  1581                           ;main.c: 114:                 estado_teclado = n2;
  1582  001552  0E01               	movlw	1
  1583  001554  6FFE               	movwf	_estado_teclado& (0+255),b
  1584  001556                     
  1585                           ; BSR set to: 0
  1586                           ;main.c: 115:                 Lcd_Set_Cursor(2, 1);
  1587  001556  0E01               	movlw	1
  1588  001558  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  1589  00155A  0E02               	movlw	2
  1590  00155C  ECA9  F01F         	call	_Lcd_Set_Cursor
  1591  001560                     
  1592                           ;main.c: 116:                 Lcd_Write_String("                    ");
  1593  001560  0E12               	movlw	low STR_1
  1594  001562  6E05               	movwf	Lcd_Write_String@a^0,c
  1595  001564  0E08               	movlw	high STR_1
  1596  001566  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  1597  001568  EC32  F01F         	call	_Lcd_Write_String	;wreg free
  1598  00156C                     
  1599                           ;main.c: 117:                 Lcd_Set_Cursor(2, 8);
  1600  00156C  0E08               	movlw	8
  1601  00156E  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  1602  001570  0E02               	movlw	2
  1603  001572  ECA9  F01F         	call	_Lcd_Set_Cursor
  1604  001576                     
  1605                           ;main.c: 118:                 Lcd_Write_Char('*');
  1606  001576  0E2A               	movlw	42
  1607  001578  ECBC  F022         	call	_Lcd_Write_Char
  1608  00157C                     l5021:
  1609                           
  1610                           ;main.c: 119:                 _delay((unsigned long)((400)*(8000000/4000.0)));
  1611  00157C  0E05               	movlw	5
  1612  00157E  0100               	movlb	0	; () banked
  1613  001580  6FB7               	movwf	(??_activar_seguridad+1)& (0+255),b
  1614  001582  0E0F               	movlw	15
  1615  001584  6FB6               	movwf	??_activar_seguridad& (0+255),b
  1616  001586  0EF1               	movlw	241
  1617  001588                     u6647:
  1618  001588  2EE8               	decfsz	wreg,f,c
  1619  00158A  D7FE               	bra	u6647
  1620  00158C  2FB6               	decfsz	??_activar_seguridad& (0+255),f,b
  1621  00158E  D7FC               	bra	u6647
  1622  001590  2FB7               	decfsz	(??_activar_seguridad+1)& (0+255),f,b
  1623  001592  D7FA               	bra	u6647
  1624  001594  EFD9  F00D         	goto	l310
  1625  001598                     l5023:
  1626                           
  1627                           ; BSR set to: 0
  1628                           ;main.c: 124:             if ((tecla != 0) && ((0 ? isdigit(tecla) : ((unsigned)(tecla)-
      +                          '0') < 10)))
  1629  001598  51FF               	movf	_tecla& (0+255),w,b
  1630  00159A  B4D8               	btfsc	status,2,c
  1631  00159C  EFD2  F00A         	goto	u6321
  1632  0015A0  EFD4  F00A         	goto	u6320
  1633  0015A4                     u6321:
  1634  0015A4  EFD9  F00D         	goto	l310
  1635  0015A8                     u6320:
  1636  0015A8                     
  1637                           ; BSR set to: 0
  1638  0015A8  0ED0               	movlw	208
  1639  0015AA  6FB6               	movwf	??_activar_seguridad& (0+255),b
  1640  0015AC  0EFF               	movlw	255
  1641  0015AE  6FB7               	movwf	(??_activar_seguridad+1)& (0+255),b
  1642  0015B0  51FF               	movf	_tecla& (0+255),w,b
  1643  0015B2  6FB8               	movwf	(??_activar_seguridad+2)& (0+255),b
  1644  0015B4  6BB9               	clrf	(??_activar_seguridad+3)& (0+255),b
  1645  0015B6  51B6               	movf	??_activar_seguridad& (0+255),w,b
  1646  0015B8  27B8               	addwf	(??_activar_seguridad+2)& (0+255),f,b
  1647  0015BA  51B7               	movf	(??_activar_seguridad+1)& (0+255),w,b
  1648  0015BC  23B9               	addwfc	(??_activar_seguridad+3)& (0+255),f,b
  1649  0015BE  51B9               	movf	(??_activar_seguridad+3)& (0+255),w,b
  1650  0015C0  E10A               	bnz	u6330
  1651  0015C2  0E0A               	movlw	10
  1652  0015C4  5DB8               	subwf	(??_activar_seguridad+2)& (0+255),w,b
  1653  0015C6  A0D8               	btfss	status,0,c
  1654  0015C8  EFE8  F00A         	goto	u6331
  1655  0015CC  EFEB  F00A         	goto	u6330
  1656  0015D0                     u6331:
  1657  0015D0  0E01               	movlw	1
  1658  0015D2  EFEC  F00A         	goto	u6340
  1659  0015D6                     u6330:
  1660  0015D6  0E00               	movlw	0
  1661  0015D8                     u6340:
  1662  0015D8  6FE8               	movwf	_activar_seguridad$778& (0+255),b
  1663  0015DA  6BE9               	clrf	(_activar_seguridad$778+1)& (0+255),b
  1664  0015DC                     
  1665                           ; BSR set to: 0
  1666  0015DC  51E8               	movf	_activar_seguridad$778& (0+255),w,b
  1667  0015DE  11E9               	iorwf	(_activar_seguridad$778+1)& (0+255),w,b
  1668  0015E0  B4D8               	btfsc	status,2,c
  1669  0015E2  EFF5  F00A         	goto	u6351
  1670  0015E6  EFF7  F00A         	goto	u6350
  1671  0015EA                     u6351:
  1672  0015EA  EFD9  F00D         	goto	l310
  1673  0015EE                     u6350:
  1674  0015EE                     
  1675                           ; BSR set to: 0
  1676                           ;main.c: 125:             {;main.c: 126:                 aux_contrasenia[1] = tecla;
  1677  0015EE  C0FF  F165         	movff	_tecla,_aux_contrasenia+1
  1678  0015F2                     
  1679                           ; BSR set to: 0
  1680                           ;main.c: 127:                 estado_teclado = n3;
  1681  0015F2  0E02               	movlw	2
  1682  0015F4  6FFE               	movwf	_estado_teclado& (0+255),b
  1683  0015F6                     
  1684                           ; BSR set to: 0
  1685                           ;main.c: 128:                 Lcd_Set_Cursor(2, 9);
  1686  0015F6  0E09               	movlw	9
  1687  0015F8  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  1688  0015FA  0E02               	movlw	2
  1689  0015FC  ECA9  F01F         	call	_Lcd_Set_Cursor
  1690  001600                     
  1691                           ;main.c: 129:                 Lcd_Write_Char('*');
  1692  001600  0E2A               	movlw	42
  1693  001602  ECBC  F022         	call	_Lcd_Write_Char
  1694  001606  EFBE  F00A         	goto	l5021
  1695  00160A                     l5041:
  1696                           
  1697                           ; BSR set to: 0
  1698                           ;main.c: 136:             if ((tecla != 0) && ((0 ? isdigit(tecla) : ((unsigned)(tecla)-
      +                          '0') < 10))) {
  1699  00160A  51FF               	movf	_tecla& (0+255),w,b
  1700  00160C  B4D8               	btfsc	status,2,c
  1701  00160E  EF0B  F00B         	goto	u6361
  1702  001612  EF0D  F00B         	goto	u6360
  1703  001616                     u6361:
  1704  001616  EFD9  F00D         	goto	l310
  1705  00161A                     u6360:
  1706  00161A                     
  1707                           ; BSR set to: 0
  1708  00161A  0ED0               	movlw	208
  1709  00161C  6FB6               	movwf	??_activar_seguridad& (0+255),b
  1710  00161E  0EFF               	movlw	255
  1711  001620  6FB7               	movwf	(??_activar_seguridad+1)& (0+255),b
  1712  001622  51FF               	movf	_tecla& (0+255),w,b
  1713  001624  6FB8               	movwf	(??_activar_seguridad+2)& (0+255),b
  1714  001626  6BB9               	clrf	(??_activar_seguridad+3)& (0+255),b
  1715  001628  51B6               	movf	??_activar_seguridad& (0+255),w,b
  1716  00162A  27B8               	addwf	(??_activar_seguridad+2)& (0+255),f,b
  1717  00162C  51B7               	movf	(??_activar_seguridad+1)& (0+255),w,b
  1718  00162E  23B9               	addwfc	(??_activar_seguridad+3)& (0+255),f,b
  1719  001630  51B9               	movf	(??_activar_seguridad+3)& (0+255),w,b
  1720  001632  E10A               	bnz	u6370
  1721  001634  0E0A               	movlw	10
  1722  001636  5DB8               	subwf	(??_activar_seguridad+2)& (0+255),w,b
  1723  001638  A0D8               	btfss	status,0,c
  1724  00163A  EF21  F00B         	goto	u6371
  1725  00163E  EF24  F00B         	goto	u6370
  1726  001642                     u6371:
  1727  001642  0E01               	movlw	1
  1728  001644  EF25  F00B         	goto	u6380
  1729  001648                     u6370:
  1730  001648  0E00               	movlw	0
  1731  00164A                     u6380:
  1732  00164A  6FEA               	movwf	_activar_seguridad$779& (0+255),b
  1733  00164C  6BEB               	clrf	(_activar_seguridad$779+1)& (0+255),b
  1734  00164E                     
  1735                           ; BSR set to: 0
  1736  00164E  51EA               	movf	_activar_seguridad$779& (0+255),w,b
  1737  001650  11EB               	iorwf	(_activar_seguridad$779+1)& (0+255),w,b
  1738  001652  B4D8               	btfsc	status,2,c
  1739  001654  EF2E  F00B         	goto	u6391
  1740  001658  EF30  F00B         	goto	u6390
  1741  00165C                     u6391:
  1742  00165C  EFD9  F00D         	goto	l310
  1743  001660                     u6390:
  1744  001660                     
  1745                           ; BSR set to: 0
  1746                           ;main.c: 137:                 aux_contrasenia[2] = tecla;
  1747  001660  C0FF  F166         	movff	_tecla,_aux_contrasenia+2
  1748  001664                     
  1749                           ; BSR set to: 0
  1750                           ;main.c: 138:                 estado_teclado = n4;
  1751  001664  0E03               	movlw	3
  1752  001666  6FFE               	movwf	_estado_teclado& (0+255),b
  1753  001668                     
  1754                           ; BSR set to: 0
  1755                           ;main.c: 139:                 Lcd_Set_Cursor(2, 10);
  1756  001668  0E0A               	movlw	10
  1757  00166A  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  1758  00166C  0E02               	movlw	2
  1759  00166E  ECA9  F01F         	call	_Lcd_Set_Cursor
  1760  001672                     
  1761                           ;main.c: 140:                 Lcd_Write_Char('*');
  1762  001672  0E2A               	movlw	42
  1763  001674  ECBC  F022         	call	_Lcd_Write_Char
  1764  001678  EFBE  F00A         	goto	l5021
  1765  00167C                     l5059:
  1766                           
  1767                           ; BSR set to: 0
  1768                           ;main.c: 146:             if ((tecla != 0) && ((0 ? isdigit(tecla) : ((unsigned)(tecla)-
      +                          '0') < 10))) {
  1769  00167C  51FF               	movf	_tecla& (0+255),w,b
  1770  00167E  B4D8               	btfsc	status,2,c
  1771  001680  EF44  F00B         	goto	u6401
  1772  001684  EF46  F00B         	goto	u6400
  1773  001688                     u6401:
  1774  001688  EFD9  F00D         	goto	l310
  1775  00168C                     u6400:
  1776  00168C                     
  1777                           ; BSR set to: 0
  1778  00168C  0ED0               	movlw	208
  1779  00168E  6FB6               	movwf	??_activar_seguridad& (0+255),b
  1780  001690  0EFF               	movlw	255
  1781  001692  6FB7               	movwf	(??_activar_seguridad+1)& (0+255),b
  1782  001694  51FF               	movf	_tecla& (0+255),w,b
  1783  001696  6FB8               	movwf	(??_activar_seguridad+2)& (0+255),b
  1784  001698  6BB9               	clrf	(??_activar_seguridad+3)& (0+255),b
  1785  00169A  51B6               	movf	??_activar_seguridad& (0+255),w,b
  1786  00169C  27B8               	addwf	(??_activar_seguridad+2)& (0+255),f,b
  1787  00169E  51B7               	movf	(??_activar_seguridad+1)& (0+255),w,b
  1788  0016A0  23B9               	addwfc	(??_activar_seguridad+3)& (0+255),f,b
  1789  0016A2  51B9               	movf	(??_activar_seguridad+3)& (0+255),w,b
  1790  0016A4  E10A               	bnz	u6410
  1791  0016A6  0E0A               	movlw	10
  1792  0016A8  5DB8               	subwf	(??_activar_seguridad+2)& (0+255),w,b
  1793  0016AA  A0D8               	btfss	status,0,c
  1794  0016AC  EF5A  F00B         	goto	u6411
  1795  0016B0  EF5D  F00B         	goto	u6410
  1796  0016B4                     u6411:
  1797  0016B4  0E01               	movlw	1
  1798  0016B6  EF5E  F00B         	goto	u6420
  1799  0016BA                     u6410:
  1800  0016BA  0E00               	movlw	0
  1801  0016BC                     u6420:
  1802  0016BC  6FEC               	movwf	_activar_seguridad$780& (0+255),b
  1803  0016BE  6BED               	clrf	(_activar_seguridad$780+1)& (0+255),b
  1804  0016C0                     
  1805                           ; BSR set to: 0
  1806  0016C0  51EC               	movf	_activar_seguridad$780& (0+255),w,b
  1807  0016C2  11ED               	iorwf	(_activar_seguridad$780+1)& (0+255),w,b
  1808  0016C4  B4D8               	btfsc	status,2,c
  1809  0016C6  EF67  F00B         	goto	u6431
  1810  0016CA  EF69  F00B         	goto	u6430
  1811  0016CE                     u6431:
  1812  0016CE  EFD9  F00D         	goto	l310
  1813  0016D2                     u6430:
  1814  0016D2                     
  1815                           ; BSR set to: 0
  1816                           ;main.c: 147:                 aux_contrasenia[3] = tecla;
  1817  0016D2  C0FF  F167         	movff	_tecla,_aux_contrasenia+3
  1818  0016D6                     
  1819                           ; BSR set to: 0
  1820                           ;main.c: 148:                 estado_teclado = en;
  1821  0016D6  0E04               	movlw	4
  1822  0016D8  6FFE               	movwf	_estado_teclado& (0+255),b
  1823  0016DA                     
  1824                           ; BSR set to: 0
  1825                           ;main.c: 149:                 Lcd_Set_Cursor(2, 11);
  1826  0016DA  0E0B               	movlw	11
  1827  0016DC  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  1828  0016DE  0E02               	movlw	2
  1829  0016E0  ECA9  F01F         	call	_Lcd_Set_Cursor
  1830  0016E4                     
  1831                           ;main.c: 150:                 Lcd_Write_Char('*');
  1832  0016E4  0E2A               	movlw	42
  1833  0016E6  ECBC  F022         	call	_Lcd_Write_Char
  1834  0016EA  EFBE  F00A         	goto	l5021
  1835  0016EE                     l5077:
  1836                           
  1837                           ; BSR set to: 0
  1838                           ;main.c: 157:             if ((tecla != 0) && (tecla != '='))
  1839  0016EE  51FF               	movf	_tecla& (0+255),w,b
  1840  0016F0  B4D8               	btfsc	status,2,c
  1841  0016F2  EF7D  F00B         	goto	u6441
  1842  0016F6  EF7F  F00B         	goto	u6440
  1843  0016FA                     u6441:
  1844  0016FA  EFA4  F00B         	goto	l5089
  1845  0016FE                     u6440:
  1846  0016FE                     
  1847                           ; BSR set to: 0
  1848  0016FE  0E3D               	movlw	61
  1849  001700  19FF               	xorwf	_tecla& (0+255),w,b
  1850  001702  B4D8               	btfsc	status,2,c
  1851  001704  EF86  F00B         	goto	u6451
  1852  001708  EF88  F00B         	goto	u6450
  1853  00170C                     u6451:
  1854  00170C  EFA4  F00B         	goto	l5089
  1855  001710                     u6450:
  1856  001710                     
  1857                           ; BSR set to: 0
  1858                           ;main.c: 158:             {;main.c: 159:                 estado_teclado = n1;
  1859  001710  0E00               	movlw	0
  1860  001712  6FFE               	movwf	_estado_teclado& (0+255),b
  1861  001714                     
  1862                           ; BSR set to: 0
  1863                           ;main.c: 160:                 Lcd_Set_Cursor(2, 8);
  1864  001714  0E08               	movlw	8
  1865  001716  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  1866  001718  0E02               	movlw	2
  1867  00171A  ECA9  F01F         	call	_Lcd_Set_Cursor
  1868  00171E                     
  1869                           ;main.c: 161:                 Lcd_Write_String("      ");
  1870  00171E  0E20               	movlw	low (STR_1+14)
  1871  001720  6E05               	movwf	Lcd_Write_String@a^0,c
  1872  001722  0E08               	movlw	high (STR_1+14)
  1873  001724  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  1874  001726  EC32  F01F         	call	_Lcd_Write_String	;wreg free
  1875  00172A                     l5087:
  1876                           
  1877                           ;main.c: 162:                 _delay((unsigned long)((600)*(8000000/4000.0)));
  1878  00172A  0E07               	movlw	7
  1879  00172C  0100               	movlb	0	; () banked
  1880  00172E  6FB7               	movwf	(??_activar_seguridad+1)& (0+255),b
  1881  001730  0E17               	movlw	23
  1882  001732  6FB6               	movwf	??_activar_seguridad& (0+255),b
  1883  001734  0E6A               	movlw	106
  1884  001736                     u6657:
  1885  001736  2EE8               	decfsz	wreg,f,c
  1886  001738  D7FE               	bra	u6657
  1887  00173A  2FB6               	decfsz	??_activar_seguridad& (0+255),f,b
  1888  00173C  D7FC               	bra	u6657
  1889  00173E  2FB7               	decfsz	(??_activar_seguridad+1)& (0+255),f,b
  1890  001740  D7FA               	bra	u6657
  1891  001742  F000               	nop	
  1892                           
  1893                           ;main.c: 163:             }
  1894  001744  EFD9  F00D         	goto	l310
  1895  001748                     l5089:
  1896                           
  1897                           ; BSR set to: 0
  1898  001748  51FF               	movf	_tecla& (0+255),w,b
  1899  00174A  B4D8               	btfsc	status,2,c
  1900  00174C  EFAA  F00B         	goto	u6461
  1901  001750  EFAC  F00B         	goto	u6460
  1902  001754                     u6461:
  1903  001754  EFD9  F00D         	goto	l310
  1904  001758                     u6460:
  1905  001758                     
  1906                           ; BSR set to: 0
  1907  001758  0E3D               	movlw	61
  1908  00175A  19FF               	xorwf	_tecla& (0+255),w,b
  1909  00175C  A4D8               	btfss	status,2,c
  1910  00175E  EFB3  F00B         	goto	u6471
  1911  001762  EFB5  F00B         	goto	u6470
  1912  001766                     u6471:
  1913  001766  EFD9  F00D         	goto	l310
  1914  00176A                     u6470:
  1915  00176A                     
  1916                           ; BSR set to: 0
  1917                           ;main.c: 165:             {;main.c: 167:                 for (int i = 0; i <= 3; i++) {
  1918  00176A  0E00               	movlw	0
  1919  00176C  6FF7               	movwf	(activar_seguridad@i+1)& (0+255),b
  1920  00176E  0E00               	movlw	0
  1921  001770  6FF6               	movwf	activar_seguridad@i& (0+255),b
  1922  001772                     l5099:
  1923                           
  1924                           ; BSR set to: 0
  1925                           ;main.c: 169:                     if (contrasenia[i] == aux_contrasenia[i]) {
  1926  001772  0E64               	movlw	low _aux_contrasenia
  1927  001774  25F6               	addwf	activar_seguridad@i& (0+255),w,b
  1928  001776  6ED9               	movwf	fsr2l,c
  1929  001778  0E01               	movlw	high _aux_contrasenia
  1930  00177A  21F7               	addwfc	(activar_seguridad@i+1)& (0+255),w,b
  1931  00177C  6EDA               	movwf	fsr2h,c
  1932  00177E  0E8F               	movlw	low _contrasenia
  1933  001780  25F6               	addwf	activar_seguridad@i& (0+255),w,b
  1934  001782  6EE1               	movwf	fsr1l,c
  1935  001784  0E01               	movlw	high _contrasenia
  1936  001786  21F7               	addwfc	(activar_seguridad@i+1)& (0+255),w,b
  1937  001788  6EE2               	movwf	fsr1h,c
  1938  00178A  50DE               	movf	postinc2,w,c
  1939  00178C  18E6               	xorwf	postinc1,w,c
  1940  00178E  A4D8               	btfss	status,2,c
  1941  001790  EFCC  F00B         	goto	u6481
  1942  001794  EFCE  F00B         	goto	u6480
  1943  001798                     u6481:
  1944  001798  EFD1  F00B         	goto	l290
  1945  00179C                     u6480:
  1946  00179C                     
  1947                           ; BSR set to: 0
  1948                           ;main.c: 171:                         contador++;
  1949  00179C  0101               	movlb	1	; () banked
  1950  00179E  4B0C               	infsnz	_contador& (0+255),f,b
  1951  0017A0  2B0D               	incf	(_contador+1)& (0+255),f,b
  1952  0017A2                     l290:
  1953                           
  1954                           ;main.c: 173:                 }
  1955  0017A2  0100               	movlb	0	; () banked
  1956  0017A4  4BF6               	infsnz	activar_seguridad@i& (0+255),f,b
  1957  0017A6  2BF7               	incf	(activar_seguridad@i+1)& (0+255),f,b
  1958  0017A8                     
  1959                           ; BSR set to: 0
  1960  0017A8  BFF7               	btfsc	(activar_seguridad@i+1)& (0+255),7,b
  1961  0017AA  EFE0  F00B         	goto	u6491
  1962  0017AE  51F7               	movf	(activar_seguridad@i+1)& (0+255),w,b
  1963  0017B0  E109               	bnz	u6490
  1964  0017B2  0E04               	movlw	4
  1965  0017B4  5DF6               	subwf	activar_seguridad@i& (0+255),w,b
  1966  0017B6  A0D8               	btfss	status,0,c
  1967  0017B8  EFE0  F00B         	goto	u6491
  1968  0017BC  EFE2  F00B         	goto	u6490
  1969  0017C0                     u6491:
  1970  0017C0  EFB9  F00B         	goto	l5099
  1971  0017C4                     u6490:
  1972  0017C4                     
  1973                           ; BSR set to: 0
  1974                           ;main.c: 175:                 if (contador == 4) {
  1975  0017C4  0E04               	movlw	4
  1976  0017C6  0101               	movlb	1	; () banked
  1977  0017C8  190C               	xorwf	_contador& (0+255),w,b
  1978  0017CA  110D               	iorwf	(_contador+1)& (0+255),w,b
  1979  0017CC  A4D8               	btfss	status,2,c
  1980  0017CE  EFEB  F00B         	goto	u6501
  1981  0017D2  EFED  F00B         	goto	u6500
  1982  0017D6                     u6501:
  1983  0017D6  EF9C  F00D         	goto	l5225
  1984  0017DA                     u6500:
  1985  0017DA                     
  1986                           ; BSR set to: 1
  1987                           ;main.c: 176:                     Lcd_Set_Cursor(2, 1);
  1988  0017DA  0E01               	movlw	1
  1989  0017DC  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  1990  0017DE  0E02               	movlw	2
  1991  0017E0  ECA9  F01F         	call	_Lcd_Set_Cursor
  1992  0017E4                     
  1993                           ;main.c: 177:                     Lcd_Write_String("contraseña correcta");
  1994  0017E4  0E3B               	movlw	low STR_3
  1995  0017E6  6E05               	movwf	Lcd_Write_String@a^0,c
  1996  0017E8  0E08               	movlw	high STR_3
  1997  0017EA  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  1998  0017EC  EC32  F01F         	call	_Lcd_Write_String	;wreg free
  1999  0017F0                     
  2000                           ;main.c: 178:                     _delay((unsigned long)((600)*(8000000/4000.0)));
  2001  0017F0  0E07               	movlw	7
  2002  0017F2  0100               	movlb	0	; () banked
  2003  0017F4  6FB7               	movwf	(??_activar_seguridad+1)& (0+255),b
  2004  0017F6  0E17               	movlw	23
  2005  0017F8  6FB6               	movwf	??_activar_seguridad& (0+255),b
  2006  0017FA  0E6A               	movlw	106
  2007  0017FC                     u6667:
  2008  0017FC  2EE8               	decfsz	wreg,f,c
  2009  0017FE  D7FE               	bra	u6667
  2010  001800  2FB6               	decfsz	??_activar_seguridad& (0+255),f,b
  2011  001802  D7FC               	bra	u6667
  2012  001804  2FB7               	decfsz	(??_activar_seguridad+1)& (0+255),f,b
  2013  001806  D7FA               	bra	u6667
  2014  001808  F000               	nop	
  2015  00180A                     
  2016                           ;main.c: 180:                     PORTBbits.RB4 = 0;
  2017  00180A  9881               	bcf	129,4,c	;volatile
  2018  00180C                     
  2019                           ;main.c: 181:                     PORTBbits.RB5 = 0;
  2020  00180C  9A81               	bcf	129,5,c	;volatile
  2021  00180E                     
  2022                           ;main.c: 182:                     PORTBbits.RB6 = 0;
  2023  00180E  9C81               	bcf	129,6,c	;volatile
  2024  001810                     
  2025                           ;main.c: 183:                     PORTBbits.RB7 = 0;
  2026  001810  9E81               	bcf	129,7,c	;volatile
  2027  001812                     
  2028                           ;main.c: 185:                     ADCON1 = 0b00001111;
  2029  001812  0E0F               	movlw	15
  2030  001814  6EC1               	movwf	193,c	;volatile
  2031  001816                     
  2032                           ;main.c: 187:                     float temperatura;;main.c: 188:                     ch
      +                          ar Temperatura[10];;main.c: 189:                     Lcd_Clear();
  2033  001816  ECA0  F023         	call	_Lcd_Clear	;wreg free
  2034  00181A                     
  2035                           ;main.c: 190:                     TRISA = 0b00000001;
  2036  00181A  0E01               	movlw	1
  2037  00181C  6E92               	movwf	146,c	;volatile
  2038  00181E                     
  2039                           ;main.c: 191:                     TRISC = 0b00000000;
  2040  00181E  0E00               	movlw	0
  2041  001820  6E94               	movwf	148,c	;volatile
  2042  001822                     
  2043                           ;main.c: 192:                     Lcd_Set_Cursor(1, 3);
  2044  001822  0E03               	movlw	3
  2045  001824  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  2046  001826  0E01               	movlw	1
  2047  001828  ECA9  F01F         	call	_Lcd_Set_Cursor
  2048  00182C                     
  2049                           ;main.c: 193:                     Lcd_Write_String("Temperatura:");
  2050  00182C  0E4F               	movlw	low STR_4
  2051  00182E  6E05               	movwf	Lcd_Write_String@a^0,c
  2052  001830  0E08               	movlw	high STR_4
  2053  001832  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  2054  001834  EC32  F01F         	call	_Lcd_Write_String	;wreg free
  2055  001838                     
  2056                           ;main.c: 194:                     char secs[10], mins[10], hours[10];;main.c: 195:      
      +                                         I2C_Init();
  2057  001838  EC6C  F023         	call	_I2C_Init	;wreg free
  2058  00183C                     
  2059                           ;main.c: 196:                     _delay((unsigned long)((10)*(8000000/4000.0)));
  2060  00183C  0E1A               	movlw	26
  2061  00183E  0100               	movlb	0	; () banked
  2062  001840  6FB6               	movwf	??_activar_seguridad& (0+255),b
  2063  001842  0EF8               	movlw	248
  2064  001844                     u6677:
  2065  001844  2EE8               	decfsz	wreg,f,c
  2066  001846  D7FE               	bra	u6677
  2067  001848  2FB6               	decfsz	??_activar_seguridad& (0+255),f,b
  2068  00184A  D7FC               	bra	u6677
  2069  00184C  F000               	nop	
  2070  00184E                     
  2071                           ;main.c: 197:                     RTC_Read_Clock(0);
  2072  00184E  0E00               	movlw	0
  2073  001850  EC91  F021         	call	_RTC_Read_Clock
  2074  001854                     
  2075                           ;main.c: 198:                     I2C_Stop();
  2076  001854  EC8D  F023         	call	_I2C_Stop	;wreg free
  2077  001858                     
  2078                           ;main.c: 199:                     _delay((unsigned long)((1000)*(8000000/4000.0)));
  2079  001858  0E0B               	movlw	11
  2080  00185A  0100               	movlb	0	; () banked
  2081  00185C  6FB7               	movwf	(??_activar_seguridad+1)& (0+255),b
  2082  00185E  0E26               	movlw	38
  2083  001860  6FB6               	movwf	??_activar_seguridad& (0+255),b
  2084  001862  0E5D               	movlw	93
  2085  001864                     u6687:
  2086  001864  2EE8               	decfsz	wreg,f,c
  2087  001866  D7FE               	bra	u6687
  2088  001868  2FB6               	decfsz	??_activar_seguridad& (0+255),f,b
  2089  00186A  D7FC               	bra	u6687
  2090  00186C  2FB7               	decfsz	(??_activar_seguridad+1)& (0+255),f,b
  2091  00186E  D7FA               	bra	u6687
  2092  001870  D000               	nop2	
  2093  001872                     
  2094                           ;main.c: 201:                     sprintf(secs, "%x ", sec);
  2095  001872  0EC4               	movlw	low activar_seguridad@secs
  2096  001874  6E57               	movwf	sprintf@s^0,c
  2097  001876  0E00               	movlw	high activar_seguridad@secs
  2098  001878  6E58               	movwf	(sprintf@s+1)^0,c
  2099  00187A  0E82               	movlw	low STR_5
  2100  00187C  6E59               	movwf	sprintf@fmt^0,c
  2101  00187E  0E08               	movlw	high STR_5
  2102  001880  6E5A               	movwf	(sprintf@fmt+1)^0,c
  2103  001882  C112  F05B         	movff	_sec,?_sprintf+4
  2104  001886  C113  F05C         	movff	_sec+1,?_sprintf+5
  2105  00188A  ECF3  F020         	call	_sprintf	;wreg free
  2106  00188E                     
  2107                           ;main.c: 202:                     sprintf(mins, "%x:", min);
  2108  00188E  0ECE               	movlw	low activar_seguridad@mins
  2109  001890  6E57               	movwf	sprintf@s^0,c
  2110  001892  0E00               	movlw	high activar_seguridad@mins
  2111  001894  6E58               	movwf	(sprintf@s+1)^0,c
  2112  001896  0E61               	movlw	low (STR_7+5)
  2113  001898  6E59               	movwf	sprintf@fmt^0,c
  2114  00189A  0E08               	movlw	high (STR_7+5)
  2115  00189C  6E5A               	movwf	(sprintf@fmt+1)^0,c
  2116  00189E  C110  F05B         	movff	_min,?_sprintf+4
  2117  0018A2  C111  F05C         	movff	_min+1,?_sprintf+5
  2118  0018A6  ECF3  F020         	call	_sprintf	;wreg free
  2119  0018AA                     
  2120                           ;main.c: 203:                     sprintf(hours, "Hora:%x:", hour);
  2121  0018AA  0ED8               	movlw	low activar_seguridad@hours
  2122  0018AC  6E57               	movwf	sprintf@s^0,c
  2123  0018AE  0E00               	movlw	high activar_seguridad@hours
  2124  0018B0  6E58               	movwf	(sprintf@s+1)^0,c
  2125  0018B2  0E5C               	movlw	low STR_7
  2126  0018B4  6E59               	movwf	sprintf@fmt^0,c
  2127  0018B6  0E08               	movlw	high STR_7
  2128  0018B8  6E5A               	movwf	(sprintf@fmt+1)^0,c
  2129  0018BA  C10E  F05B         	movff	_hour,?_sprintf+4
  2130  0018BE  C10F  F05C         	movff	_hour+1,?_sprintf+5
  2131  0018C2  ECF3  F020         	call	_sprintf	;wreg free
  2132  0018C6                     
  2133                           ;main.c: 204:                     Lcd_Set_Cursor(2, 3);
  2134  0018C6  0E03               	movlw	3
  2135  0018C8  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  2136  0018CA  0E02               	movlw	2
  2137  0018CC  ECA9  F01F         	call	_Lcd_Set_Cursor
  2138  0018D0                     
  2139                           ;main.c: 205:                     Lcd_Write_String(hours);
  2140  0018D0  0ED8               	movlw	low activar_seguridad@hours
  2141  0018D2  6E05               	movwf	Lcd_Write_String@a^0,c
  2142  0018D4  0E00               	movlw	high activar_seguridad@hours
  2143  0018D6  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  2144  0018D8  EC32  F01F         	call	_Lcd_Write_String	;wreg free
  2145  0018DC                     
  2146                           ;main.c: 206:                     Lcd_Set_Cursor(2, 11);
  2147  0018DC  0E0B               	movlw	11
  2148  0018DE  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  2149  0018E0  0E02               	movlw	2
  2150  0018E2  ECA9  F01F         	call	_Lcd_Set_Cursor
  2151  0018E6                     
  2152                           ;main.c: 207:                     Lcd_Write_String(mins);
  2153  0018E6  0ECE               	movlw	low activar_seguridad@mins
  2154  0018E8  6E05               	movwf	Lcd_Write_String@a^0,c
  2155  0018EA  0E00               	movlw	high activar_seguridad@mins
  2156  0018EC  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  2157  0018EE  EC32  F01F         	call	_Lcd_Write_String	;wreg free
  2158  0018F2                     
  2159                           ;main.c: 208:                     Lcd_Set_Cursor(2, 14);
  2160  0018F2  0E0E               	movlw	14
  2161  0018F4  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  2162  0018F6  0E02               	movlw	2
  2163  0018F8  ECA9  F01F         	call	_Lcd_Set_Cursor
  2164  0018FC                     
  2165                           ;main.c: 209:                     Lcd_Write_String(secs);
  2166  0018FC  0EC4               	movlw	low activar_seguridad@secs
  2167  0018FE  6E05               	movwf	Lcd_Write_String@a^0,c
  2168  001900  0E00               	movlw	high activar_seguridad@secs
  2169  001902  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  2170  001904  EC32  F01F         	call	_Lcd_Write_String	;wreg free
  2171  001908                     
  2172                           ;main.c: 210:                     PORTAbits.RA5 = 1;
  2173  001908  8A80               	bsf	128,5,c	;volatile
  2174  00190A                     
  2175                           ;main.c: 211:                     PORTAbits.RA4 = 0;
  2176  00190A  9880               	bcf	128,4,c	;volatile
  2177  00190C                     
  2178                           ;main.c: 213:                     TRISCbits.RC6 = 0;
  2179  00190C  9C94               	bcf	148,6,c	;volatile
  2180  00190E                     
  2181                           ;main.c: 214:                     TXSTAbits.TX9 = 0;
  2182  00190E  9CAC               	bcf	172,6,c	;volatile
  2183  001910                     
  2184                           ;main.c: 215:                     TXSTAbits.TXEN = 1;
  2185  001910  8AAC               	bsf	172,5,c	;volatile
  2186  001912                     
  2187                           ;main.c: 216:                     TXSTAbits.SYNC = 0;
  2188  001912  98AC               	bcf	172,4,c	;volatile
  2189  001914                     
  2190                           ;main.c: 217:                     TXSTAbits.BRGH = 0;
  2191  001914  94AC               	bcf	172,2,c	;volatile
  2192  001916                     
  2193                           ;main.c: 218:                     BAUDCONbits.BRG16 = 0;
  2194  001916  96B8               	bcf	184,3,c	;volatile
  2195  001918                     
  2196                           ;main.c: 219:                     RCSTAbits.SPEN = 1;
  2197  001918  8EAB               	bsf	171,7,c	;volatile
  2198  00191A                     
  2199                           ;main.c: 220:                     SPBRG = (unsigned char) (((8000000 / 9600) / 64) - 1);
  2200  00191A  0E0C               	movlw	12
  2201  00191C  6EAF               	movwf	175,c	;volatile
  2202                           
  2203                           ;main.c: 221:                     while (contador == 4) {
  2204  00191E  EF8F  F00D         	goto	l5223
  2205  001922                     l5181:
  2206                           
  2207                           ; BSR set to: 1
  2208                           ;main.c: 222:                         temperatura = (getCad(0)*0.02 * 100);
  2209  001922  0E0A               	movlw	10
  2210  001924  6E18               	movwf	___flmul@a^0,c
  2211  001926  0ED7               	movlw	215
  2212  001928  6E19               	movwf	(___flmul@a+1)^0,c
  2213  00192A  0EA3               	movlw	163
  2214  00192C  6E1A               	movwf	(___flmul@a+2)^0,c
  2215  00192E  0E3C               	movlw	60
  2216  001930  6E1B               	movwf	(___flmul@a+3)^0,c
  2217  001932  0E00               	movlw	0
  2218  001934  EC45  F021         	call	_getCad
  2219  001938  C001  F006         	movff	?_getCad,___xxtofl@val
  2220  00193C  C002  F007         	movff	?_getCad+1,___xxtofl@val+1
  2221  001940  0E00               	movlw	0
  2222  001942  BE07               	btfsc	(___xxtofl@val+1)^0,7,c
  2223  001944  0EFF               	movlw	-1
  2224  001946  6E08               	movwf	(___xxtofl@val+2)^0,c
  2225  001948  6E09               	movwf	(___xxtofl@val+3)^0,c
  2226  00194A  0E01               	movlw	1
  2227  00194C  EC37  F01A         	call	___xxtofl
  2228  001950  C006  F014         	movff	?___xxtofl,___flmul@b
  2229  001954  C007  F015         	movff	?___xxtofl+1,___flmul@b+1
  2230  001958  C008  F016         	movff	?___xxtofl+2,___flmul@b+2
  2231  00195C  C009  F017         	movff	?___xxtofl+3,___flmul@b+3
  2232  001960  ECE3  F012         	call	___flmul	;wreg free
  2233  001964  C014  F0E2         	movff	?___flmul,_activar_seguridad$1864
  2234  001968  C015  F0E3         	movff	?___flmul+1,_activar_seguridad$1864+1
  2235  00196C  C016  F0E4         	movff	?___flmul+2,_activar_seguridad$1864+2
  2236  001970  C017  F0E5         	movff	?___flmul+3,_activar_seguridad$1864+3
  2237                           
  2238                           ;main.c: 222:                         temperatura = (getCad(0)*0.02 * 100);
  2239  001974  C0E2  F014         	movff	_activar_seguridad$1864,___flmul@b
  2240  001978  C0E3  F015         	movff	_activar_seguridad$1864+1,___flmul@b+1
  2241  00197C  C0E4  F016         	movff	_activar_seguridad$1864+2,___flmul@b+2
  2242  001980  C0E5  F017         	movff	_activar_seguridad$1864+3,___flmul@b+3
  2243  001984  0E00               	movlw	0
  2244  001986  6E18               	movwf	___flmul@a^0,c
  2245  001988  0E00               	movlw	0
  2246  00198A  6E19               	movwf	(___flmul@a+1)^0,c
  2247  00198C  0EC8               	movlw	200
  2248  00198E  6E1A               	movwf	(___flmul@a+2)^0,c
  2249  001990  0E42               	movlw	66
  2250  001992  6E1B               	movwf	(___flmul@a+3)^0,c
  2251  001994  ECE3  F012         	call	___flmul	;wreg free
  2252  001998  C014  F0EE         	movff	?___flmul,activar_seguridad@temperatura
  2253  00199C  C015  F0EF         	movff	?___flmul+1,activar_seguridad@temperatura+1
  2254  0019A0  C016  F0F0         	movff	?___flmul+2,activar_seguridad@temperatura+2
  2255  0019A4  C017  F0F1         	movff	?___flmul+3,activar_seguridad@temperatura+3
  2256  0019A8                     
  2257                           ;main.c: 223:                         sprintf(Temperatura, "%.2f", temperatura);
  2258  0019A8  0EBA               	movlw	low activar_seguridad@Temperatura
  2259  0019AA  6E57               	movwf	sprintf@s^0,c
  2260  0019AC  0E00               	movlw	high activar_seguridad@Temperatura
  2261  0019AE  6E58               	movwf	(sprintf@s+1)^0,c
  2262  0019B0  0E6D               	movlw	low STR_8
  2263  0019B2  6E59               	movwf	sprintf@fmt^0,c
  2264  0019B4  0E08               	movlw	high STR_8
  2265  0019B6  6E5A               	movwf	(sprintf@fmt+1)^0,c
  2266  0019B8  C0EE  F05B         	movff	activar_seguridad@temperatura,?_sprintf+4
  2267  0019BC  C0EF  F05C         	movff	activar_seguridad@temperatura+1,?_sprintf+5
  2268  0019C0  C0F0  F05D         	movff	activar_seguridad@temperatura+2,?_sprintf+6
  2269  0019C4  C0F1  F05E         	movff	activar_seguridad@temperatura+3,?_sprintf+7
  2270  0019C8  ECF3  F020         	call	_sprintf	;wreg free
  2271  0019CC                     
  2272                           ;main.c: 224:                         Lcd_Set_Cursor(1, 15);
  2273  0019CC  0E0F               	movlw	15
  2274  0019CE  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  2275  0019D0  0E01               	movlw	1
  2276  0019D2  ECA9  F01F         	call	_Lcd_Set_Cursor
  2277  0019D6                     
  2278                           ;main.c: 225:                         Lcd_Write_String(Temperatura);
  2279  0019D6  0EBA               	movlw	low activar_seguridad@Temperatura
  2280  0019D8  6E05               	movwf	Lcd_Write_String@a^0,c
  2281  0019DA  0E00               	movlw	high activar_seguridad@Temperatura
  2282  0019DC  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  2283  0019DE  EC32  F01F         	call	_Lcd_Write_String	;wreg free
  2284  0019E2                     
  2285                           ;main.c: 226:                         if (temperatura > 30) {
  2286  0019E2  0E00               	movlw	0
  2287  0019E4  6E2D               	movwf	___flge@ff1^0,c
  2288  0019E6  0E00               	movlw	0
  2289  0019E8  6E2E               	movwf	(___flge@ff1+1)^0,c
  2290  0019EA  0EF0               	movlw	240
  2291  0019EC  6E2F               	movwf	(___flge@ff1+2)^0,c
  2292  0019EE  0E41               	movlw	65
  2293  0019F0  6E30               	movwf	(___flge@ff1+3)^0,c
  2294  0019F2  C0EE  F031         	movff	activar_seguridad@temperatura,___flge@ff2
  2295  0019F6  C0EF  F032         	movff	activar_seguridad@temperatura+1,___flge@ff2+1
  2296  0019FA  C0F0  F033         	movff	activar_seguridad@temperatura+2,___flge@ff2+2
  2297  0019FE  C0F1  F034         	movff	activar_seguridad@temperatura+3,___flge@ff2+3
  2298  001A02  EC94  F01B         	call	___flge	;wreg free
  2299  001A06  B0D8               	btfsc	status,0,c
  2300  001A08  EF08  F00D         	goto	u6511
  2301  001A0C  EF0A  F00D         	goto	u6510
  2302  001A10                     u6511:
  2303  001A10  EF57  F00D         	goto	l5209
  2304  001A14                     u6510:
  2305  001A14                     
  2306                           ;main.c: 230:                             if (hour > 6 && hour < 0x18) {
  2307  001A14  0101               	movlb	1	; () banked
  2308  001A16  BF0F               	btfsc	(_hour+1)& (0+255),7,b
  2309  001A18  EF17  F00D         	goto	u6521
  2310  001A1C  510F               	movf	(_hour+1)& (0+255),w,b
  2311  001A1E  E109               	bnz	u6520
  2312  001A20  0E07               	movlw	7
  2313  001A22  5D0E               	subwf	_hour& (0+255),w,b
  2314  001A24  A0D8               	btfss	status,0,c
  2315  001A26  EF17  F00D         	goto	u6521
  2316  001A2A  EF19  F00D         	goto	u6520
  2317  001A2E                     u6521:
  2318  001A2E  EF2A  F00D         	goto	l295
  2319  001A32                     u6520:
  2320  001A32                     
  2321                           ; BSR set to: 1
  2322  001A32  BF0F               	btfsc	(_hour+1)& (0+255),7,b
  2323  001A34  EF27  F00D         	goto	u6530
  2324  001A38  510F               	movf	(_hour+1)& (0+255),w,b
  2325  001A3A  E107               	bnz	u6531
  2326  001A3C  0E18               	movlw	24
  2327  001A3E  5D0E               	subwf	_hour& (0+255),w,b
  2328  001A40  B0D8               	btfsc	status,0,c
  2329  001A42  EF25  F00D         	goto	u6531
  2330  001A46  EF27  F00D         	goto	u6530
  2331  001A4A                     u6531:
  2332  001A4A  EF2A  F00D         	goto	l295
  2333  001A4E                     u6530:
  2334  001A4E                     
  2335                           ; BSR set to: 1
  2336                           ;main.c: 231:                                 PORTCbits.RC0 = 0;
  2337  001A4E  9082               	bcf	130,0,c	;volatile
  2338                           
  2339                           ;main.c: 232:                             } else {
  2340  001A50  EF2B  F00D         	goto	l5197
  2341  001A54                     l295:
  2342                           
  2343                           ; BSR set to: 1
  2344                           ;main.c: 233:                                 PORTCbits.RC0 = 1;
  2345  001A54  8082               	bsf	130,0,c	;volatile
  2346  001A56                     l5197:
  2347                           
  2348                           ; BSR set to: 1
  2349                           ;main.c: 236:                             for (int i = 0; i < 18; i++) {
  2350  001A56  0E00               	movlw	0
  2351  001A58  0100               	movlb	0	; () banked
  2352  001A5A  6FF3               	movwf	(activar_seguridad@i_836+1)& (0+255),b
  2353  001A5C  0E00               	movlw	0
  2354  001A5E  6FF2               	movwf	activar_seguridad@i_836& (0+255),b
  2355  001A60                     l5199:
  2356                           
  2357                           ; BSR set to: 0
  2358  001A60  BFF3               	btfsc	(activar_seguridad@i_836+1)& (0+255),7,b
  2359  001A62  EF3C  F00D         	goto	u6541
  2360  001A66  51F3               	movf	(activar_seguridad@i_836+1)& (0+255),w,b
  2361  001A68  E109               	bnz	u6540
  2362  001A6A  0E12               	movlw	18
  2363  001A6C  5DF2               	subwf	activar_seguridad@i_836& (0+255),w,b
  2364  001A6E  A0D8               	btfss	status,0,c
  2365  001A70  EF3C  F00D         	goto	u6541
  2366  001A74  EF3E  F00D         	goto	u6540
  2367  001A78                     u6541:
  2368  001A78  EF40  F00D         	goto	l299
  2369  001A7C                     u6540:
  2370  001A7C  EF54  F00D         	goto	l298
  2371  001A80                     l299:
  2372                           
  2373                           ;main.c: 238:                                 while (!TXSTAbits.TRMT) {
  2374  001A80  A2AC               	btfss	172,1,c	;volatile
  2375  001A82  EF45  F00D         	goto	u6551
  2376  001A86  EF47  F00D         	goto	u6550
  2377  001A8A                     u6551:
  2378  001A8A  EF40  F00D         	goto	l299
  2379  001A8E                     u6550:
  2380  001A8E                     
  2381                           ;main.c: 241:                                 TXREG = buffer_TX[i];
  2382  001A8E  0E7D               	movlw	low _buffer_TX
  2383  001A90  0100               	movlb	0	; () banked
  2384  001A92  25F2               	addwf	activar_seguridad@i_836& (0+255),w,b
  2385  001A94  6ED9               	movwf	fsr2l,c
  2386  001A96  0E01               	movlw	high _buffer_TX
  2387  001A98  21F3               	addwfc	(activar_seguridad@i_836+1)& (0+255),w,b
  2388  001A9A  6EDA               	movwf	fsr2h,c
  2389  001A9C  50DF               	movf	indf2,w,c
  2390  001A9E  6EAD               	movwf	173,c	;volatile
  2391  001AA0                     
  2392                           ; BSR set to: 0
  2393                           ;main.c: 242:                             }
  2394  001AA0  4BF2               	infsnz	activar_seguridad@i_836& (0+255),f,b
  2395  001AA2  2BF3               	incf	(activar_seguridad@i_836+1)& (0+255),f,b
  2396  001AA4  EF30  F00D         	goto	l5199
  2397  001AA8                     l298:
  2398                           
  2399                           ; BSR set to: 0
  2400                           ;main.c: 243:                             PORTAbits.RA3 = 1;
  2401  001AA8  8680               	bsf	128,3,c	;volatile
  2402                           
  2403                           ;main.c: 244:                         } else {
  2404  001AAA  EF82  F00D         	goto	l5221
  2405  001AAE                     l5209:
  2406                           
  2407                           ;main.c: 246:                             for (int i = 0; i < 21; i++) {
  2408  001AAE  0E00               	movlw	0
  2409  001AB0  0100               	movlb	0	; () banked
  2410  001AB2  6FF5               	movwf	(activar_seguridad@i_837+1)& (0+255),b
  2411  001AB4  0E00               	movlw	0
  2412  001AB6  6FF4               	movwf	activar_seguridad@i_837& (0+255),b
  2413  001AB8                     l5211:
  2414                           
  2415                           ; BSR set to: 0
  2416  001AB8  BFF5               	btfsc	(activar_seguridad@i_837+1)& (0+255),7,b
  2417  001ABA  EF68  F00D         	goto	u6561
  2418  001ABE  51F5               	movf	(activar_seguridad@i_837+1)& (0+255),w,b
  2419  001AC0  E109               	bnz	u6560
  2420  001AC2  0E15               	movlw	21
  2421  001AC4  5DF4               	subwf	activar_seguridad@i_837& (0+255),w,b
  2422  001AC6  A0D8               	btfss	status,0,c
  2423  001AC8  EF68  F00D         	goto	u6561
  2424  001ACC  EF6A  F00D         	goto	u6560
  2425  001AD0                     u6561:
  2426  001AD0  EF6C  F00D         	goto	l305
  2427  001AD4                     u6560:
  2428  001AD4  EF80  F00D         	goto	l304
  2429  001AD8                     l305:
  2430                           
  2431                           ;main.c: 248:                                 while (!TXSTAbits.TRMT) {
  2432  001AD8  A2AC               	btfss	172,1,c	;volatile
  2433  001ADA  EF71  F00D         	goto	u6571
  2434  001ADE  EF73  F00D         	goto	u6570
  2435  001AE2                     u6571:
  2436  001AE2  EF6C  F00D         	goto	l305
  2437  001AE6                     u6570:
  2438  001AE6                     
  2439                           ;main.c: 251:                                 TXREG = buffer_TX2[i];
  2440  001AE6  0E68               	movlw	low _buffer_TX2
  2441  001AE8  0100               	movlb	0	; () banked
  2442  001AEA  25F4               	addwf	activar_seguridad@i_837& (0+255),w,b
  2443  001AEC  6ED9               	movwf	fsr2l,c
  2444  001AEE  0E01               	movlw	high _buffer_TX2
  2445  001AF0  21F5               	addwfc	(activar_seguridad@i_837+1)& (0+255),w,b
  2446  001AF2  6EDA               	movwf	fsr2h,c
  2447  001AF4  50DF               	movf	indf2,w,c
  2448  001AF6  6EAD               	movwf	173,c	;volatile
  2449  001AF8                     
  2450                           ; BSR set to: 0
  2451                           ;main.c: 252:                             }
  2452  001AF8  4BF4               	infsnz	activar_seguridad@i_837& (0+255),f,b
  2453  001AFA  2BF5               	incf	(activar_seguridad@i_837+1)& (0+255),f,b
  2454  001AFC  EF5C  F00D         	goto	l5211
  2455  001B00                     l304:
  2456                           
  2457                           ; BSR set to: 0
  2458                           ;main.c: 253:                             PORTAbits.RA3 = 0;
  2459  001B00  9680               	bcf	128,3,c	;volatile
  2460                           
  2461                           ;main.c: 254:                             PORTCbits.RC0 = 0;
  2462  001B02  9082               	bcf	130,0,c	;volatile
  2463  001B04                     l5221:
  2464                           
  2465                           ; BSR set to: 0
  2466                           ;main.c: 256:                         _delay((unsigned long)((1000)*(8000000/4000.0)));
  2467  001B04  0E0B               	movlw	11
  2468  001B06  0100               	movlb	0	; () banked
  2469  001B08  6FB7               	movwf	(??_activar_seguridad+1)& (0+255),b
  2470  001B0A  0E26               	movlw	38
  2471  001B0C  6FB6               	movwf	??_activar_seguridad& (0+255),b
  2472  001B0E  0E5D               	movlw	93
  2473  001B10                     u6697:
  2474  001B10  2EE8               	decfsz	wreg,f,c
  2475  001B12  D7FE               	bra	u6697
  2476  001B14  2FB6               	decfsz	??_activar_seguridad& (0+255),f,b
  2477  001B16  D7FC               	bra	u6697
  2478  001B18  2FB7               	decfsz	(??_activar_seguridad+1)& (0+255),f,b
  2479  001B1A  D7FA               	bra	u6697
  2480  001B1C  D000               	nop2	
  2481  001B1E                     l5223:
  2482                           
  2483                           ;main.c: 221:                     while (contador == 4) {
  2484  001B1E  0E04               	movlw	4
  2485  001B20  0101               	movlb	1	; () banked
  2486  001B22  190C               	xorwf	_contador& (0+255),w,b
  2487  001B24  110D               	iorwf	(_contador+1)& (0+255),w,b
  2488  001B26  B4D8               	btfsc	status,2,c
  2489  001B28  EF98  F00D         	goto	u6581
  2490  001B2C  EF9A  F00D         	goto	u6580
  2491  001B30                     u6581:
  2492  001B30  EF91  F00C         	goto	l5181
  2493  001B34                     u6580:
  2494  001B34  EFD9  F00D         	goto	l310
  2495  001B38                     l5225:
  2496                           
  2497                           ; BSR set to: 1
  2498                           ;main.c: 259:                     aux_contrasenia[4] = 0;
  2499  001B38  0E00               	movlw	0
  2500  001B3A  6F68               	movwf	(_aux_contrasenia+4)& (0+255),b
  2501  001B3C                     
  2502                           ; BSR set to: 1
  2503                           ;main.c: 260:                     retardo = atoi(aux_contrasenia);
  2504  001B3C  0E64               	movlw	low _aux_contrasenia
  2505  001B3E  6E08               	movwf	atoi@s^0,c
  2506  001B40  0E01               	movlw	high _aux_contrasenia
  2507  001B42  6E09               	movwf	(atoi@s+1)^0,c
  2508  001B44  EC3B  F019         	call	_atoi	;wreg free
  2509  001B48  C008  F193         	movff	?_atoi,_retardo
  2510  001B4C  C009  F194         	movff	?_atoi+1,_retardo+1
  2511  001B50                     
  2512                           ;main.c: 261:                     estado_teclado = n1;
  2513  001B50  0E00               	movlw	0
  2514  001B52  0100               	movlb	0	; () banked
  2515  001B54  6FFE               	movwf	_estado_teclado& (0+255),b
  2516  001B56                     
  2517                           ; BSR set to: 0
  2518                           ;main.c: 262:                     Lcd_Set_Cursor(2, 1);
  2519  001B56  0E01               	movlw	1
  2520  001B58  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  2521  001B5A  0E02               	movlw	2
  2522  001B5C  ECA9  F01F         	call	_Lcd_Set_Cursor
  2523  001B60                     
  2524                           ;main.c: 263:                     Lcd_Write_String("contraseña invalida");
  2525  001B60  0E27               	movlw	low STR_9
  2526  001B62  6E05               	movwf	Lcd_Write_String@a^0,c
  2527  001B64  0E08               	movlw	high STR_9
  2528  001B66  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  2529  001B68  EC32  F01F         	call	_Lcd_Write_String	;wreg free
  2530  001B6C  EF95  F00B         	goto	l5087
  2531  001B70                     l5239:
  2532                           
  2533                           ; BSR set to: 0
  2534  001B70  51FE               	movf	_estado_teclado& (0+255),w,b
  2535  001B72  6FB6               	movwf	??_activar_seguridad& (0+255),b
  2536  001B74  6BB7               	clrf	(??_activar_seguridad+1)& (0+255),b
  2537                           
  2538                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2539                           ; Switch size 1, requested type "simple"
  2540                           ; Number of cases is 1, Range of values is 0 to 0
  2541                           ; switch strategies available:
  2542                           ; Name         Instructions Cycles
  2543                           ; simple_byte            4     3 (average)
  2544                           ;	Chosen strategy is simple_byte
  2545  001B76  51B7               	movf	(??_activar_seguridad+1)& (0+255),w,b
  2546  001B78  0A00               	xorlw	0	; case 0
  2547  001B7A  B4D8               	btfsc	status,2,c
  2548  001B7C  EFC2  F00D         	goto	l5383
  2549  001B80  EFD9  F00D         	goto	l310
  2550  001B84                     l5383:
  2551                           
  2552                           ; BSR set to: 0
  2553                           ; Switch size 1, requested type "simple"
  2554                           ; Number of cases is 5, Range of values is 0 to 4
  2555                           ; switch strategies available:
  2556                           ; Name         Instructions Cycles
  2557                           ; simple_byte           16     9 (average)
  2558                           ;	Chosen strategy is simple_byte
  2559  001B84  51B6               	movf	??_activar_seguridad& (0+255),w,b
  2560  001B86  0A00               	xorlw	0	; case 0
  2561  001B88  B4D8               	btfsc	status,2,c
  2562  001B8A  EF7C  F00A         	goto	l5001
  2563  001B8E  0A01               	xorlw	1	; case 1
  2564  001B90  B4D8               	btfsc	status,2,c
  2565  001B92  EFCC  F00A         	goto	l5023
  2566  001B96  0A03               	xorlw	3	; case 2
  2567  001B98  B4D8               	btfsc	status,2,c
  2568  001B9A  EF05  F00B         	goto	l5041
  2569  001B9E  0A01               	xorlw	1	; case 3
  2570  001BA0  B4D8               	btfsc	status,2,c
  2571  001BA2  EF3E  F00B         	goto	l5059
  2572  001BA6  0A07               	xorlw	7	; case 4
  2573  001BA8  B4D8               	btfsc	status,2,c
  2574  001BAA  EF77  F00B         	goto	l5077
  2575  001BAE  EFD9  F00D         	goto	l310
  2576  001BB2                     l310:
  2577  001BB2  0012               	return		;funcret
  2578  001BB4                     __end_of_activar_seguridad:
  2579                           	callstack 0
  2580                           
  2581 ;; *************** function _sprintf *****************
  2582 ;; Defined at:
  2583 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_sprintf.c"
  2584 ;; Parameters:    Size  Location     Type
  2585 ;;  s               2   86[COMRAM] PTR unsigned char 
  2586 ;;		 -> activar_seguridad@Temperatura(10), activar_seguridad@hours(10), activar_seguridad@mins(10), activar_seguridad@se
      +cs(10), 
  2587 ;;  fmt             2   88[COMRAM] PTR const unsigned char 
  2588 ;;		 -> STR_8(5), STR_7(9), STR_6(4), STR_5(4), 
  2589 ;; Auto vars:     Size  Location     Type
  2590 ;;  f               6   80[BANK0 ] struct _IO_FILE
  2591 ;;  ap              2   78[BANK0 ] PTR void [1]
  2592 ;;		 -> ?_sprintf(2), 
  2593 ;;  ret             2    0        int 
  2594 ;; Return value:  Size  Location     Type
  2595 ;;                  2   86[COMRAM] int 
  2596 ;; Registers used:
  2597 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2598 ;; Tracked objects:
  2599 ;;		On entry : 0/0
  2600 ;;		On exit  : 0/0
  2601 ;;		Unchanged: 0/0
  2602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2603 ;;      Params:         8       0       0       0       0       0       0       0       0
  2604 ;;      Locals:         0      10       0       0       0       0       0       0       0
  2605 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2606 ;;      Totals:         8      10       0       0       0       0       0       0       0
  2607 ;;Total ram usage:       18 bytes
  2608 ;; Hardware stack levels used:    1
  2609 ;; Hardware stack levels required when called:    7
  2610 ;; This function calls:
  2611 ;;		_vfprintf
  2612 ;; This function is called by:
  2613 ;;		_activar_seguridad
  2614 ;; This function uses a non-reentrant model
  2615 ;;
  2616                           
  2617                           	psect	text3
  2618  0041E6                     __ptext3:
  2619                           	callstack 0
  2620  0041E6                     _sprintf:
  2621                           	callstack 21
  2622  0041E6  0E5B               	movlw	low (?_sprintf+4)
  2623  0041E8  0100               	movlb	0	; () banked
  2624  0041EA  6FAE               	movwf	sprintf@ap& (0+255),b
  2625  0041EC  0E00               	movlw	high (?_sprintf+4)
  2626  0041EE  6FAF               	movwf	(sprintf@ap+1)& (0+255),b
  2627  0041F0  C057  F0B0         	movff	sprintf@s,sprintf@f
  2628  0041F4  C058  F0B1         	movff	sprintf@s+1,sprintf@f+1
  2629  0041F8                     
  2630                           ; BSR set to: 0
  2631  0041F8  0E00               	movlw	0
  2632  0041FA  6FB3               	movwf	(sprintf@f+3)& (0+255),b
  2633  0041FC  0E00               	movlw	0
  2634  0041FE  6FB2               	movwf	(sprintf@f+2)& (0+255),b
  2635  004200                     
  2636                           ; BSR set to: 0
  2637  004200  0E00               	movlw	0
  2638  004202  6FB5               	movwf	(sprintf@f+5)& (0+255),b
  2639  004204  0E00               	movlw	0
  2640  004206  6FB4               	movwf	(sprintf@f+4)& (0+255),b
  2641  004208                     
  2642                           ; BSR set to: 0
  2643  004208  0EB0               	movlw	low sprintf@f
  2644  00420A  6E4F               	movwf	vfprintf@fp^0,c
  2645  00420C  0E00               	movlw	high sprintf@f
  2646  00420E  6E50               	movwf	(vfprintf@fp+1)^0,c
  2647  004210  C059  F051         	movff	sprintf@fmt,vfprintf@fmt
  2648  004214  C05A  F052         	movff	sprintf@fmt+1,vfprintf@fmt+1
  2649  004218  0EAE               	movlw	low sprintf@ap
  2650  00421A  6E53               	movwf	vfprintf@ap^0,c
  2651  00421C  0E00               	movlw	high sprintf@ap
  2652  00421E  6E54               	movwf	(vfprintf@ap+1)^0,c
  2653  004220  ECDC  F01F         	call	_vfprintf	;wreg free
  2654  004224  0100               	movlb	0	; () banked
  2655  004226  51B2               	movf	(sprintf@f+2)& (0+255),w,b
  2656  004228  2457               	addwf	sprintf@s^0,w,c
  2657  00422A  6ED9               	movwf	fsr2l,c
  2658  00422C  51B3               	movf	(sprintf@f+3)& (0+255),w,b
  2659  00422E  2058               	addwfc	(sprintf@s+1)^0,w,c
  2660  004230  6EDA               	movwf	fsr2h,c
  2661  004232  0E00               	movlw	0
  2662  004234  6EDF               	movwf	indf2,c
  2663  004236                     
  2664                           ; BSR set to: 0
  2665  004236  0012               	return		;funcret
  2666  004238                     __end_of_sprintf:
  2667                           	callstack 0
  2668                           
  2669 ;; *************** function _vfprintf *****************
  2670 ;; Defined at:
  2671 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  2672 ;; Parameters:    Size  Location     Type
  2673 ;;  fp              2   78[COMRAM] PTR struct _IO_FILE
  2674 ;;		 -> sprintf@f(6), 
  2675 ;;  fmt             2   80[COMRAM] PTR const unsigned char 
  2676 ;;		 -> STR_8(5), STR_7(9), STR_6(4), STR_5(4), 
  2677 ;;  ap              2   82[COMRAM] PTR PTR void 
  2678 ;;		 -> sprintf@ap(2), 
  2679 ;; Auto vars:     Size  Location     Type
  2680 ;;  cfmt            2   84[COMRAM] PTR unsigned char 
  2681 ;;		 -> STR_8(5), STR_7(9), STR_6(4), STR_5(4), 
  2682 ;; Return value:  Size  Location     Type
  2683 ;;                  2   78[COMRAM] int 
  2684 ;; Registers used:
  2685 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2686 ;; Tracked objects:
  2687 ;;		On entry : 0/0
  2688 ;;		On exit  : 0/0
  2689 ;;		Unchanged: 0/0
  2690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2691 ;;      Params:         6       0       0       0       0       0       0       0       0
  2692 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2693 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2694 ;;      Totals:         8       0       0       0       0       0       0       0       0
  2695 ;;Total ram usage:        8 bytes
  2696 ;; Hardware stack levels used:    1
  2697 ;; Hardware stack levels required when called:    6
  2698 ;; This function calls:
  2699 ;;		_vfpfcnvrt
  2700 ;; This function is called by:
  2701 ;;		_sprintf
  2702 ;; This function uses a non-reentrant model
  2703 ;;
  2704                           
  2705                           	psect	text4
  2706  003FB8                     __ptext4:
  2707                           	callstack 0
  2708  003FB8                     _vfprintf:
  2709                           	callstack 21
  2710  003FB8                     
  2711                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.31\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  2712  003FB8  C051  F055         	movff	vfprintf@fmt,vfprintf@cfmt
  2713  003FBC  C052  F056         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2714  003FC0                     
  2715                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  2716  003FC0  0E00               	movlw	0
  2717  003FC2  0101               	movlb	1	; () banked
  2718  003FC4  6F09               	movwf	(_nout+1)& (0+255),b
  2719  003FC6  0E00               	movlw	0
  2720  003FC8  6F08               	movwf	_nout& (0+255),b
  2721                           
  2722                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  2723  003FCA  EFFA  F01F         	goto	l4825
  2724  003FCE                     l4823:
  2725                           
  2726                           ; BSR set to: 1
  2727                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  2728  003FCE  C04F  F045         	movff	vfprintf@fp,vfpfcnvrt@fp
  2729  003FD2  C050  F046         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2730  003FD6  0E55               	movlw	low vfprintf@cfmt
  2731  003FD8  6E47               	movwf	vfpfcnvrt@fmt^0,c
  2732  003FDA  0E00               	movlw	high vfprintf@cfmt
  2733  003FDC  6E48               	movwf	(vfpfcnvrt@fmt+1)^0,c
  2734  003FDE  C053  F049         	movff	vfprintf@ap,vfpfcnvrt@ap
  2735  003FE2  C054  F04A         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2736  003FE6  ECDA  F00D         	call	_vfpfcnvrt	;wreg free
  2737  003FEA  5045               	movf	?_vfpfcnvrt^0,w,c
  2738  003FEC  0101               	movlb	1	; () banked
  2739  003FEE  2708               	addwf	_nout& (0+255),f,b
  2740  003FF0  5046               	movf	(?_vfpfcnvrt+1)^0,w,c
  2741  003FF2  2309               	addwfc	(_nout+1)& (0+255),f,b
  2742  003FF4                     l4825:
  2743                           
  2744                           ; BSR set to: 1
  2745                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  2746  003FF4  C055  FFF6         	movff	vfprintf@cfmt,tblptrl
  2747  003FF8  C056  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2748  003FFC                     	if	0	;tblptru may be non-zero
  2749  003FFC                     	endif
  2750  003FFC                     	if	0	;tblptru may be non-zero
  2751  003FFC                     	endif
  2752  003FFC  0008               	tblrd		*
  2753  003FFE  50F5               	movf	tablat,w,c
  2754  004000  0900               	iorlw	0
  2755  004002  A4D8               	btfss	status,2,c
  2756  004004  EF06  F020         	goto	u6041
  2757  004008  EF08  F020         	goto	u6040
  2758  00400C                     u6041:
  2759  00400C  EFE7  F01F         	goto	l4823
  2760  004010                     u6040:
  2761  004010                     
  2762                           ; BSR set to: 1
  2763                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  2764  004010  C108  F04F         	movff	_nout,?_vfprintf
  2765  004014  C109  F050         	movff	_nout+1,?_vfprintf+1
  2766  004018                     
  2767                           ; BSR set to: 1
  2768  004018  0012               	return		;funcret
  2769  00401A                     __end_of_vfprintf:
  2770                           	callstack 0
  2771                           
  2772 ;; *************** function _vfpfcnvrt *****************
  2773 ;; Defined at:
  2774 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  2775 ;; Parameters:    Size  Location     Type
  2776 ;;  fp              2   68[COMRAM] PTR struct _IO_FILE
  2777 ;;		 -> sprintf@f(6), 
  2778 ;;  fmt             2   70[COMRAM] PTR PTR unsigned char 
  2779 ;;		 -> vfprintf@cfmt(2), 
  2780 ;;  ap              2   72[COMRAM] PTR PTR void 
  2781 ;;		 -> sprintf@ap(2), 
  2782 ;; Auto vars:     Size  Location     Type
  2783 ;;  llu             8   56[BANK0 ] unsigned long long 
  2784 ;;  ll              8    0        long long 
  2785 ;;  f               4   68[BANK0 ] long long 
  2786 ;;  ct              3   72[BANK0 ] unsigned char [3]
  2787 ;;  vp              3    0        PTR void 
  2788 ;;  cp              3    0        PTR unsigned char 
  2789 ;;  i               2    0        int 
  2790 ;;  done            2    0        int 
  2791 ;;  c               1   75[BANK0 ] unsigned char 
  2792 ;; Return value:  Size  Location     Type
  2793 ;;                  2   68[COMRAM] int 
  2794 ;; Registers used:
  2795 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2796 ;; Tracked objects:
  2797 ;;		On entry : 0/0
  2798 ;;		On exit  : 0/0
  2799 ;;		Unchanged: 0/0
  2800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2801 ;;      Params:         6       0       0       0       0       0       0       0       0
  2802 ;;      Locals:         0      20       0       0       0       0       0       0       0
  2803 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2804 ;;      Totals:        10      20       0       0       0       0       0       0       0
  2805 ;;Total ram usage:       30 bytes
  2806 ;; Hardware stack levels used:    1
  2807 ;; Hardware stack levels required when called:    5
  2808 ;; This function calls:
  2809 ;;		_atoi
  2810 ;;		_efgtoa
  2811 ;;		_fputc
  2812 ;;		_isdigit
  2813 ;;		_isupper
  2814 ;;		_strncmp
  2815 ;;		_tolower
  2816 ;;		_xtoa
  2817 ;; This function is called by:
  2818 ;;		_vfprintf
  2819 ;; This function uses a non-reentrant model
  2820 ;;
  2821                           
  2822                           	psect	text5
  2823  001BB4                     __ptext5:
  2824                           	callstack 0
  2825  001BB4                     _vfpfcnvrt:
  2826                           	callstack 21
  2827  001BB4                     
  2828                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.31\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          1\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  2829  001BB4  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2830  001BB8  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2831  001BBC  CFDE FFF6          	movff	postinc2,tblptrl
  2832  001BC0  CFDD FFF7          	movff	postdec2,tblptrh
  2833  001BC4                     	if	0	;tblptru may be non-zero
  2834  001BC4                     	endif
  2835  001BC4                     	if	0	;tblptru may be non-zero
  2836  001BC4                     	endif
  2837  001BC4  0008               	tblrd		*
  2838  001BC6  50F5               	movf	tablat,w,c
  2839  001BC8  0A25               	xorlw	37
  2840  001BCA  A4D8               	btfss	status,2,c
  2841  001BCC  EFEA  F00D         	goto	u5821
  2842  001BD0  EFEC  F00D         	goto	u5820
  2843  001BD4                     u5821:
  2844  001BD4  EF67  F010         	goto	l4749
  2845  001BD8                     u5820:
  2846  001BD8                     
  2847                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  2848  001BD8  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2849  001BDC  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2850  001BE0  2ADE               	incf	postinc2,f,c
  2851  001BE2  0E00               	movlw	0
  2852  001BE4  22DD               	addwfc	postdec2,f,c
  2853  001BE6                     
  2854                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  2855  001BE6  0E00               	movlw	0
  2856  001BE8  0101               	movlb	1	; () banked
  2857  001BEA  6F0B               	movwf	(_width+1)& (0+255),b
  2858  001BEC  0E00               	movlw	0
  2859  001BEE  6F0A               	movwf	_width& (0+255),b
  2860  001BF0  C10A  F0FC         	movff	_width,_flags
  2861  001BF4  C10B  F0FD         	movff	_width+1,_flags+1
  2862  001BF8                     
  2863                           ; BSR set to: 1
  2864                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  2865  001BF8  0100               	movlb	0	; () banked
  2866  001BFA  69FA               	setf	_prec& (0+255),b
  2867  001BFC  69FB               	setf	(_prec+1)& (0+255),b
  2868  001BFE                     
  2869                           ; BSR set to: 0
  2870                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 762:         if (
      +                          (*fmt)[0] == '.') {
  2871  001BFE  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2872  001C02  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2873  001C06  CFDE FFF6          	movff	postinc2,tblptrl
  2874  001C0A  CFDD FFF7          	movff	postdec2,tblptrh
  2875  001C0E                     	if	0	;tblptru may be non-zero
  2876  001C0E                     	endif
  2877  001C0E                     	if	0	;tblptru may be non-zero
  2878  001C0E                     	endif
  2879  001C0E  0008               	tblrd		*
  2880  001C10  50F5               	movf	tablat,w,c
  2881  001C12  0A2E               	xorlw	46
  2882  001C14  A4D8               	btfss	status,2,c
  2883  001C16  EF0F  F00E         	goto	u5831
  2884  001C1A  EF11  F00E         	goto	u5830
  2885  001C1E                     u5831:
  2886  001C1E  EF8F  F00E         	goto	l4681
  2887  001C22                     u5830:
  2888  001C22                     
  2889                           ; BSR set to: 0
  2890                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 763:             
      +                          prec = 0;
  2891  001C22  0E00               	movlw	0
  2892  001C24  6FFB               	movwf	(_prec+1)& (0+255),b
  2893  001C26  0E00               	movlw	0
  2894  001C28  6FFA               	movwf	_prec& (0+255),b
  2895  001C2A                     
  2896                           ; BSR set to: 0
  2897                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 764:             
      +                          ++*fmt;
  2898  001C2A  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2899  001C2E  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2900  001C32  2ADE               	incf	postinc2,f,c
  2901  001C34  0E00               	movlw	0
  2902  001C36  22DD               	addwfc	postdec2,f,c
  2903  001C38                     
  2904                           ; BSR set to: 0
  2905                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 765:             
      +                          if ((*fmt)[0] == '*') {
  2906  001C38  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2907  001C3C  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2908  001C40  CFDE FFF6          	movff	postinc2,tblptrl
  2909  001C44  CFDD FFF7          	movff	postdec2,tblptrh
  2910  001C48                     	if	0	;tblptru may be non-zero
  2911  001C48                     	endif
  2912  001C48                     	if	0	;tblptru may be non-zero
  2913  001C48                     	endif
  2914  001C48  0008               	tblrd		*
  2915  001C4A  50F5               	movf	tablat,w,c
  2916  001C4C  0A2A               	xorlw	42
  2917  001C4E  A4D8               	btfss	status,2,c
  2918  001C50  EF2C  F00E         	goto	u5841
  2919  001C54  EF2E  F00E         	goto	u5840
  2920  001C58                     u5841:
  2921  001C58  EF4B  F00E         	goto	l4671
  2922  001C5C                     u5840:
  2923  001C5C                     
  2924                           ; BSR set to: 0
  2925                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 766:             
      +                              ++*fmt;
  2926  001C5C  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2927  001C60  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2928  001C64  2ADE               	incf	postinc2,f,c
  2929  001C66  0E00               	movlw	0
  2930  001C68  22DD               	addwfc	postdec2,f,c
  2931                           
  2932                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 767:             
      +                              prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  2933  001C6A  C049  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2934  001C6E  C04A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2935  001C72  CFDF F04B          	movff	indf2,??_vfpfcnvrt
  2936  001C76  0E02               	movlw	2
  2937  001C78  26DE               	addwf	postinc2,f,c
  2938  001C7A  CFDF F04C          	movff	indf2,??_vfpfcnvrt+1
  2939  001C7E  0E00               	movlw	0
  2940  001C80  22DD               	addwfc	postdec2,f,c
  2941  001C82  C04B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2942  001C86  C04C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2943  001C8A  CFDE F0FA          	movff	postinc2,_prec
  2944  001C8E  CFDD F0FB          	movff	postdec2,_prec+1
  2945                           
  2946                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 768:             
      +                          } else {
  2947  001C92  EF8F  F00E         	goto	l4681
  2948  001C96                     l4671:
  2949                           
  2950                           ; BSR set to: 0
  2951                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 769:             
      +                              prec = atoi(*fmt);
  2952  001C96  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2953  001C9A  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2954  001C9E  CFDE F008          	movff	postinc2,atoi@s
  2955  001CA2  CFDD F009          	movff	postdec2,atoi@s+1
  2956  001CA6  EC3B  F019         	call	_atoi	;wreg free
  2957  001CAA  C008  F0FA         	movff	?_atoi,_prec
  2958  001CAE  C009  F0FB         	movff	?_atoi+1,_prec+1
  2959                           
  2960                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 770:             
      +                              while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  2961  001CB2  EF62  F00E         	goto	l4675
  2962  001CB6                     l4673:
  2963                           
  2964                           ; BSR set to: 0
  2965                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 771:             
      +                                  ++*fmt;
  2966  001CB6  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2967  001CBA  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2968  001CBE  2ADE               	incf	postinc2,f,c
  2969  001CC0  0E00               	movlw	0
  2970  001CC2  22DD               	addwfc	postdec2,f,c
  2971  001CC4                     l4675:
  2972  001CC4  0ED0               	movlw	208
  2973  001CC6  6E4B               	movwf	??_vfpfcnvrt^0,c
  2974  001CC8  0EFF               	movlw	255
  2975  001CCA  6E4C               	movwf	(??_vfpfcnvrt+1)^0,c
  2976  001CCC  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2977  001CD0  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2978  001CD4  CFDE FFF6          	movff	postinc2,tblptrl
  2979  001CD8  CFDD FFF7          	movff	postdec2,tblptrh
  2980  001CDC                     	if	0	;tblptru may be non-zero
  2981  001CDC                     	endif
  2982  001CDC                     	if	0	;tblptru may be non-zero
  2983  001CDC                     	endif
  2984  001CDC  0008               	tblrd		*
  2985  001CDE  50F5               	movf	tablat,w,c
  2986  001CE0  6E4D               	movwf	(??_vfpfcnvrt+2)^0,c
  2987  001CE2  6A4E               	clrf	(??_vfpfcnvrt+3)^0,c
  2988  001CE4  504B               	movf	??_vfpfcnvrt^0,w,c
  2989  001CE6  264D               	addwf	(??_vfpfcnvrt+2)^0,f,c
  2990  001CE8  504C               	movf	(??_vfpfcnvrt+1)^0,w,c
  2991  001CEA  224E               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  2992  001CEC  504E               	movf	(??_vfpfcnvrt+3)^0,w,c
  2993  001CEE  E10A               	bnz	u5850
  2994  001CF0  0E0A               	movlw	10
  2995  001CF2  5C4D               	subwf	(??_vfpfcnvrt+2)^0,w,c
  2996  001CF4  A0D8               	btfss	status,0,c
  2997  001CF6  EF7F  F00E         	goto	u5851
  2998  001CFA  EF82  F00E         	goto	u5850
  2999  001CFE                     u5851:
  3000  001CFE  0E01               	movlw	1
  3001  001D00  EF83  F00E         	goto	u5860
  3002  001D04                     u5850:
  3003  001D04  0E00               	movlw	0
  3004  001D06                     u5860:
  3005  001D06  0100               	movlb	0	; () banked
  3006  001D08  6FA0               	movwf	_vfpfcnvrt$1484& (0+255),b
  3007  001D0A  6BA1               	clrf	(_vfpfcnvrt$1484+1)& (0+255),b
  3008  001D0C                     
  3009                           ; BSR set to: 0
  3010  001D0C  51A0               	movf	_vfpfcnvrt$1484& (0+255),w,b
  3011  001D0E  11A1               	iorwf	(_vfpfcnvrt$1484+1)& (0+255),w,b
  3012  001D10  A4D8               	btfss	status,2,c
  3013  001D12  EF8D  F00E         	goto	u5871
  3014  001D16  EF8F  F00E         	goto	u5870
  3015  001D1A                     u5871:
  3016  001D1A  EF5B  F00E         	goto	l4673
  3017  001D1E                     u5870:
  3018  001D1E                     l4681:
  3019                           
  3020                           ; BSR set to: 0
  3021                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 779:         ct[0
      +                          ] = (char)tolower((int)(*fmt)[0]);
  3022  001D1E  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3023  001D22  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3024  001D26  CFDE FFF6          	movff	postinc2,tblptrl
  3025  001D2A  CFDD FFF7          	movff	postdec2,tblptrh
  3026  001D2E                     	if	0	;tblptru may be non-zero
  3027  001D2E                     	endif
  3028  001D2E                     	if	0	;tblptru may be non-zero
  3029  001D2E                     	endif
  3030  001D2E  0008               	tblrd		*
  3031  001D30  50F5               	movf	tablat,w,c
  3032  001D32  6E07               	movwf	tolower@c^0,c
  3033  001D34  6A08               	clrf	(tolower@c+1)^0,c
  3034  001D36  EC0D  F020         	call	_tolower	;wreg free
  3035  001D3A  5007               	movf	?_tolower^0,w,c
  3036  001D3C  0100               	movlb	0	; () banked
  3037  001D3E  6FA8               	movwf	vfpfcnvrt@ct& (0+255),b
  3038  001D40                     
  3039                           ; BSR set to: 0
  3040                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 780:         if (
      +                          ct[0]) {
  3041  001D40  51A8               	movf	vfpfcnvrt@ct& (0+255),w,b
  3042  001D42  B4D8               	btfsc	status,2,c
  3043  001D44  EFA6  F00E         	goto	u5881
  3044  001D48  EFA8  F00E         	goto	u5880
  3045  001D4C                     u5881:
  3046  001D4C  EFE2  F00E         	goto	l4691
  3047  001D50                     u5880:
  3048  001D50                     
  3049                           ; BSR set to: 0
  3050                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 781:             
      +                          ct[1] = (char)tolower((int)(*fmt)[1]);
  3051  001D50  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3052  001D54  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3053  001D58  CFDE F04B          	movff	postinc2,??_vfpfcnvrt
  3054  001D5C  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+1
  3055  001D60  0E01               	movlw	1
  3056  001D62  264B               	addwf	??_vfpfcnvrt^0,f,c
  3057  001D64  0E00               	movlw	0
  3058  001D66  224C               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  3059  001D68  C04B  FFF6         	movff	??_vfpfcnvrt,tblptrl
  3060  001D6C  C04C  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  3061  001D70                     	if	0	;tblptru may be non-zero
  3062  001D70                     	endif
  3063  001D70                     	if	0	;tblptru may be non-zero
  3064  001D70                     	endif
  3065  001D70  0008               	tblrd		*
  3066  001D72  50F5               	movf	tablat,w,c
  3067  001D74  6E07               	movwf	tolower@c^0,c
  3068  001D76  6A08               	clrf	(tolower@c+1)^0,c
  3069  001D78  EC0D  F020         	call	_tolower	;wreg free
  3070  001D7C  5007               	movf	?_tolower^0,w,c
  3071  001D7E  0100               	movlb	0	; () banked
  3072  001D80  6FA9               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  3073  001D82                     
  3074                           ; BSR set to: 0
  3075                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 782:             
      +                          if (ct[1]) {
  3076  001D82  51A9               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  3077  001D84  B4D8               	btfsc	status,2,c
  3078  001D86  EFC7  F00E         	goto	u5891
  3079  001D8A  EFC9  F00E         	goto	u5890
  3080  001D8E                     u5891:
  3081  001D8E  EFE2  F00E         	goto	l4691
  3082  001D92                     u5890:
  3083  001D92                     
  3084                           ; BSR set to: 0
  3085                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 783:             
      +                              ct[2] = (char)tolower((int)(*fmt)[2]);
  3086  001D92  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3087  001D96  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3088  001D9A  CFDE F04B          	movff	postinc2,??_vfpfcnvrt
  3089  001D9E  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+1
  3090  001DA2  0E02               	movlw	2
  3091  001DA4  264B               	addwf	??_vfpfcnvrt^0,f,c
  3092  001DA6  0E00               	movlw	0
  3093  001DA8  224C               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  3094  001DAA  C04B  FFF6         	movff	??_vfpfcnvrt,tblptrl
  3095  001DAE  C04C  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  3096  001DB2                     	if	0	;tblptru may be non-zero
  3097  001DB2                     	endif
  3098  001DB2                     	if	0	;tblptru may be non-zero
  3099  001DB2                     	endif
  3100  001DB2  0008               	tblrd		*
  3101  001DB4  50F5               	movf	tablat,w,c
  3102  001DB6  6E07               	movwf	tolower@c^0,c
  3103  001DB8  6A08               	clrf	(tolower@c+1)^0,c
  3104  001DBA  EC0D  F020         	call	_tolower	;wreg free
  3105  001DBE  5007               	movf	?_tolower^0,w,c
  3106  001DC0  0100               	movlb	0	; () banked
  3107  001DC2  6FAA               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  3108  001DC4                     l4691:
  3109                           
  3110                           ; BSR set to: 0
  3111                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 942:         if (
      +                          ct[0] == 'f') {
  3112  001DC4  0E66               	movlw	102
  3113  001DC6  19A8               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  3114  001DC8  A4D8               	btfss	status,2,c
  3115  001DCA  EFE9  F00E         	goto	u5901
  3116  001DCE  EFEB  F00E         	goto	u5900
  3117  001DD2                     u5901:
  3118  001DD2  EF2B  F00F         	goto	l4703
  3119  001DD6                     u5900:
  3120  001DD6                     
  3121                           ; BSR set to: 0
  3122                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 944:             
      +                          c = (*fmt)[0];
  3123  001DD6  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3124  001DDA  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3125  001DDE  CFDE FFF6          	movff	postinc2,tblptrl
  3126  001DE2  CFDD FFF7          	movff	postdec2,tblptrh
  3127  001DE6                     	if	0	;tblptru may be non-zero
  3128  001DE6                     	endif
  3129  001DE6                     	if	0	;tblptru may be non-zero
  3130  001DE6                     	endif
  3131  001DE6  0008               	tblrd		*
  3132  001DE8  CFF5 F0AB          	movff	tablat,vfpfcnvrt@c
  3133  001DEC                     
  3134                           ; BSR set to: 0
  3135                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 945:             
      +                          ++*fmt;
  3136  001DEC  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3137  001DF0  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3138  001DF4  2ADE               	incf	postinc2,f,c
  3139  001DF6  0E00               	movlw	0
  3140  001DF8  22DD               	addwfc	postdec2,f,c
  3141  001DFA                     
  3142                           ; BSR set to: 0
  3143                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 946:             
      +                          f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  3144  001DFA  C049  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3145  001DFE  C04A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3146  001E02  CFDF F04B          	movff	indf2,??_vfpfcnvrt
  3147  001E06  0E04               	movlw	4
  3148  001E08  26DE               	addwf	postinc2,f,c
  3149  001E0A  CFDF F04C          	movff	indf2,??_vfpfcnvrt+1
  3150  001E0E  0E00               	movlw	0
  3151  001E10  22DD               	addwfc	postdec2,f,c
  3152  001E12  C04B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3153  001E16  C04C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3154  001E1A  CFDE F0A4          	movff	postinc2,vfpfcnvrt@f
  3155  001E1E  CFDE F0A5          	movff	postinc2,vfpfcnvrt@f+1
  3156  001E22  CFDE F0A6          	movff	postinc2,vfpfcnvrt@f+2
  3157  001E26  CFDE F0A7          	movff	postinc2,vfpfcnvrt@f+3
  3158  001E2A                     l4699:
  3159                           
  3160                           ; BSR set to: 0
  3161                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 948:             
      +                          return efgtoa(fp, f, c);
  3162  001E2A  C045  F039         	movff	vfpfcnvrt@fp,efgtoa@fp
  3163  001E2E  C046  F03A         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  3164  001E32  C0A4  F03B         	movff	vfpfcnvrt@f,efgtoa@f
  3165  001E36  C0A5  F03C         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  3166  001E3A  C0A6  F03D         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  3167  001E3E  C0A7  F03E         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  3168  001E42  C0AB  F03F         	movff	vfpfcnvrt@c,efgtoa@c
  3169  001E46  EC45  F004         	call	_efgtoa	;wreg free
  3170  001E4A  C039  F045         	movff	?_efgtoa,?_vfpfcnvrt
  3171  001E4E  C03A  F046         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  3172  001E52  EF82  F010         	goto	l1240
  3173  001E56                     l4703:
  3174                           
  3175                           ; BSR set to: 0
  3176                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 950:         if (
      +                          !strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  3177  001E56  0EA8               	movlw	low vfpfcnvrt@ct
  3178  001E58  6E01               	movwf	strncmp@_l^0,c
  3179  001E5A  0E00               	movlw	high vfpfcnvrt@ct
  3180  001E5C  6E02               	movwf	(strncmp@_l+1)^0,c
  3181  001E5E  0E86               	movlw	low STR_19
  3182  001E60  6E03               	movwf	strncmp@_r^0,c
  3183  001E62  0E08               	movlw	high STR_19
  3184  001E64  6E04               	movwf	(strncmp@_r+1)^0,c
  3185  001E66  0E00               	movlw	0
  3186  001E68  6E06               	movwf	(strncmp@n+1)^0,c
  3187  001E6A  0E02               	movlw	2
  3188  001E6C  6E05               	movwf	strncmp@n^0,c
  3189  001E6E  EC95  F01C         	call	_strncmp	;wreg free
  3190  001E72  5001               	movf	?_strncmp^0,w,c
  3191  001E74  1002               	iorwf	(?_strncmp+1)^0,w,c
  3192  001E76  A4D8               	btfss	status,2,c
  3193  001E78  EF40  F00F         	goto	u5911
  3194  001E7C  EF42  F00F         	goto	u5910
  3195  001E80                     u5911:
  3196  001E80  EFBE  F00F         	goto	l4719
  3197  001E84                     u5910:
  3198  001E84                     
  3199                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 953:             
      +                          if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  3200  001E84  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3201  001E88  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3202  001E8C  CFDE F04B          	movff	postinc2,??_vfpfcnvrt
  3203  001E90  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+1
  3204  001E94  0E01               	movlw	1
  3205  001E96  264B               	addwf	??_vfpfcnvrt^0,f,c
  3206  001E98  0E00               	movlw	0
  3207  001E9A  224C               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  3208  001E9C  C04B  FFF6         	movff	??_vfpfcnvrt,tblptrl
  3209  001EA0  C04C  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  3210  001EA4                     	if	0	;tblptru may be non-zero
  3211  001EA4                     	endif
  3212  001EA4                     	if	0	;tblptru may be non-zero
  3213  001EA4                     	endif
  3214  001EA4  0008               	tblrd		*
  3215  001EA6  CFF5 F0AB          	movff	tablat,vfpfcnvrt@c
  3216  001EAA  0EBF               	movlw	191
  3217  001EAC  6E4B               	movwf	??_vfpfcnvrt^0,c
  3218  001EAE  0EFF               	movlw	255
  3219  001EB0  6E4C               	movwf	(??_vfpfcnvrt+1)^0,c
  3220  001EB2  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3221  001EB6  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3222  001EBA  CFDE FFF6          	movff	postinc2,tblptrl
  3223  001EBE  CFDD FFF7          	movff	postdec2,tblptrh
  3224  001EC2                     	if	0	;tblptru may be non-zero
  3225  001EC2                     	endif
  3226  001EC2                     	if	0	;tblptru may be non-zero
  3227  001EC2                     	endif
  3228  001EC2  0008               	tblrd		*
  3229  001EC4  50F5               	movf	tablat,w,c
  3230  001EC6  6E4D               	movwf	(??_vfpfcnvrt+2)^0,c
  3231  001EC8  6A4E               	clrf	(??_vfpfcnvrt+3)^0,c
  3232  001ECA  504B               	movf	??_vfpfcnvrt^0,w,c
  3233  001ECC  264D               	addwf	(??_vfpfcnvrt+2)^0,f,c
  3234  001ECE  504C               	movf	(??_vfpfcnvrt+1)^0,w,c
  3235  001ED0  224E               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  3236  001ED2  504E               	movf	(??_vfpfcnvrt+3)^0,w,c
  3237  001ED4  E10A               	bnz	u5920
  3238  001ED6  0E1A               	movlw	26
  3239  001ED8  5C4D               	subwf	(??_vfpfcnvrt+2)^0,w,c
  3240  001EDA  A0D8               	btfss	status,0,c
  3241  001EDC  EF72  F00F         	goto	u5921
  3242  001EE0  EF75  F00F         	goto	u5920
  3243  001EE4                     u5921:
  3244  001EE4  0E01               	movlw	1
  3245  001EE6  EF76  F00F         	goto	u5930
  3246  001EEA                     u5920:
  3247  001EEA  0E00               	movlw	0
  3248  001EEC                     u5930:
  3249  001EEC  0100               	movlb	0	; () banked
  3250  001EEE  6FA2               	movwf	_vfpfcnvrt$1488& (0+255),b
  3251  001EF0  6BA3               	clrf	(_vfpfcnvrt$1488+1)& (0+255),b
  3252  001EF2                     
  3253                           ; BSR set to: 0
  3254  001EF2  51A2               	movf	_vfpfcnvrt$1488& (0+255),w,b
  3255  001EF4  11A3               	iorwf	(_vfpfcnvrt$1488+1)& (0+255),w,b
  3256  001EF6  B4D8               	btfsc	status,2,c
  3257  001EF8  EF80  F00F         	goto	u5941
  3258  001EFC  EF82  F00F         	goto	u5940
  3259  001F00                     u5941:
  3260  001F00  EF9C  F00F         	goto	l4713
  3261  001F04                     u5940:
  3262  001F04                     
  3263                           ; BSR set to: 0
  3264                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 954:             
      +                              f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  3265  001F04  C049  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3266  001F08  C04A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3267  001F0C  CFDF F04B          	movff	indf2,??_vfpfcnvrt
  3268  001F10  0E04               	movlw	4
  3269  001F12  26DE               	addwf	postinc2,f,c
  3270  001F14  CFDF F04C          	movff	indf2,??_vfpfcnvrt+1
  3271  001F18  0E00               	movlw	0
  3272  001F1A  22DD               	addwfc	postdec2,f,c
  3273  001F1C  C04B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3274  001F20  C04C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3275  001F24  CFDE F0A4          	movff	postinc2,vfpfcnvrt@f
  3276  001F28  CFDE F0A5          	movff	postinc2,vfpfcnvrt@f+1
  3277  001F2C  CFDE F0A6          	movff	postinc2,vfpfcnvrt@f+2
  3278  001F30  CFDE F0A7          	movff	postinc2,vfpfcnvrt@f+3
  3279                           
  3280                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 955:             
      +                          } else {
  3281  001F34  EFB4  F00F         	goto	l1247
  3282  001F38                     l4713:
  3283                           
  3284                           ; BSR set to: 0
  3285                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 956:             
      +                              f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  3286  001F38  C049  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3287  001F3C  C04A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3288  001F40  CFDF F04B          	movff	indf2,??_vfpfcnvrt
  3289  001F44  0E04               	movlw	4
  3290  001F46  26DE               	addwf	postinc2,f,c
  3291  001F48  CFDF F04C          	movff	indf2,??_vfpfcnvrt+1
  3292  001F4C  0E00               	movlw	0
  3293  001F4E  22DD               	addwfc	postdec2,f,c
  3294  001F50  C04B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3295  001F54  C04C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3296  001F58  CFDE F0A4          	movff	postinc2,vfpfcnvrt@f
  3297  001F5C  CFDE F0A5          	movff	postinc2,vfpfcnvrt@f+1
  3298  001F60  CFDE F0A6          	movff	postinc2,vfpfcnvrt@f+2
  3299  001F64  CFDE F0A7          	movff	postinc2,vfpfcnvrt@f+3
  3300  001F68                     l1247:
  3301                           
  3302                           ; BSR set to: 0
  3303                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 958:             
      +                          *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  3304  001F68  0E02               	movlw	2
  3305  001F6A  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3306  001F6E  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3307  001F72  26DE               	addwf	postinc2,f,c
  3308  001F74  0E00               	movlw	0
  3309  001F76  22DD               	addwfc	postdec2,f,c
  3310  001F78  EF15  F00F         	goto	l4699
  3311  001F7C                     l4719:
  3312                           
  3313                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1296:         if 
      +                          ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
  3314  001F7C  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3315  001F80  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3316  001F84  CFDE FFF6          	movff	postinc2,tblptrl
  3317  001F88  CFDD FFF7          	movff	postdec2,tblptrh
  3318  001F8C                     	if	0	;tblptru may be non-zero
  3319  001F8C                     	endif
  3320  001F8C                     	if	0	;tblptru may be non-zero
  3321  001F8C                     	endif
  3322  001F8C  0008               	tblrd		*
  3323  001F8E  50F5               	movf	tablat,w,c
  3324  001F90  0A78               	xorlw	120
  3325  001F92  B4D8               	btfsc	status,2,c
  3326  001F94  EFCE  F00F         	goto	u5951
  3327  001F98  EFD0  F00F         	goto	u5950
  3328  001F9C                     u5951:
  3329  001F9C  EFE2  F00F         	goto	l4723
  3330  001FA0                     u5950:
  3331  001FA0  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3332  001FA4  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3333  001FA8  CFDE FFF6          	movff	postinc2,tblptrl
  3334  001FAC  CFDD FFF7          	movff	postdec2,tblptrh
  3335  001FB0                     	if	0	;tblptru may be non-zero
  3336  001FB0                     	endif
  3337  001FB0                     	if	0	;tblptru may be non-zero
  3338  001FB0                     	endif
  3339  001FB0  0008               	tblrd		*
  3340  001FB2  50F5               	movf	tablat,w,c
  3341  001FB4  0A58               	xorlw	88
  3342  001FB6  A4D8               	btfss	status,2,c
  3343  001FB8  EFE0  F00F         	goto	u5961
  3344  001FBC  EFE2  F00F         	goto	u5960
  3345  001FC0                     u5961:
  3346  001FC0  EF31  F010         	goto	l4733
  3347  001FC4                     u5960:
  3348  001FC4                     l4723:
  3349                           
  3350                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1298:            
      +                           c = (*fmt)[0];
  3351  001FC4  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3352  001FC8  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3353  001FCC  CFDE FFF6          	movff	postinc2,tblptrl
  3354  001FD0  CFDD FFF7          	movff	postdec2,tblptrh
  3355  001FD4                     	if	0	;tblptru may be non-zero
  3356  001FD4                     	endif
  3357  001FD4                     	if	0	;tblptru may be non-zero
  3358  001FD4                     	endif
  3359  001FD4  0008               	tblrd		*
  3360  001FD6  CFF5 F0AB          	movff	tablat,vfpfcnvrt@c
  3361  001FDA                     
  3362                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1299:            
      +                           ++*fmt;
  3363  001FDA  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3364  001FDE  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3365  001FE2  2ADE               	incf	postinc2,f,c
  3366  001FE4  0E00               	movlw	0
  3367  001FE6  22DD               	addwfc	postdec2,f,c
  3368  001FE8                     
  3369                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1300:            
      +                           llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned in
      +                          t)0));
  3370  001FE8  C049  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3371  001FEC  C04A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3372  001FF0  CFDF F04B          	movff	indf2,??_vfpfcnvrt
  3373  001FF4  0E02               	movlw	2
  3374  001FF6  26DE               	addwf	postinc2,f,c
  3375  001FF8  CFDF F04C          	movff	indf2,??_vfpfcnvrt+1
  3376  001FFC  0E00               	movlw	0
  3377  001FFE  22DD               	addwfc	postdec2,f,c
  3378  002000  C04B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3379  002004  C04C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3380  002008  CFDE F04D          	movff	postinc2,??_vfpfcnvrt+2
  3381  00200C  CFDD F04E          	movff	postdec2,??_vfpfcnvrt+3
  3382  002010  C04D  F098         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  3383  002014  C04E  F099         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  3384  002018  0100               	movlb	0	; () banked
  3385  00201A  6B9A               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  3386  00201C  6B9B               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  3387  00201E  6B9C               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  3388  002020  6B9D               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  3389  002022  6B9E               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  3390  002024  6B9F               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  3391  002026                     
  3392                           ; BSR set to: 0
  3393                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1302:            
      +                           return xtoa(fp, llu, c);
  3394  002026  C045  F01C         	movff	vfpfcnvrt@fp,xtoa@fp
  3395  00202A  C046  F01D         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  3396  00202E  C098  F01E         	movff	vfpfcnvrt@llu,xtoa@d
  3397  002032  C099  F01F         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  3398  002036  C09A  F020         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  3399  00203A  C09B  F021         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  3400  00203E  C09C  F022         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  3401  002042  C09D  F023         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  3402  002046  C09E  F024         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  3403  00204A  C09F  F025         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  3404  00204E  C0AB  F026         	movff	vfpfcnvrt@c,xtoa@x
  3405  002052  ECC5  F016         	call	_xtoa	;wreg free
  3406  002056  C01C  F045         	movff	?_xtoa,?_vfpfcnvrt
  3407  00205A  C01D  F046         	movff	?_xtoa+1,?_vfpfcnvrt+1
  3408  00205E  EF82  F010         	goto	l1240
  3409  002062                     l4733:
  3410                           
  3411                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  3412  002062  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3413  002066  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3414  00206A  CFDE FFF6          	movff	postinc2,tblptrl
  3415  00206E  CFDD FFF7          	movff	postdec2,tblptrh
  3416  002072                     	if	0	;tblptru may be non-zero
  3417  002072                     	endif
  3418  002072                     	if	0	;tblptru may be non-zero
  3419  002072                     	endif
  3420  002072  0008               	tblrd		*
  3421  002074  50F5               	movf	tablat,w,c
  3422  002076  0A25               	xorlw	37
  3423  002078  A4D8               	btfss	status,2,c
  3424  00207A  EF41  F010         	goto	u5971
  3425  00207E  EF43  F010         	goto	u5970
  3426  002082                     u5971:
  3427  002082  EF5A  F010         	goto	l4743
  3428  002086                     u5970:
  3429  002086                     
  3430                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  3431  002086  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3432  00208A  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3433  00208E  2ADE               	incf	postinc2,f,c
  3434  002090  0E00               	movlw	0
  3435  002092  22DD               	addwfc	postdec2,f,c
  3436  002094                     
  3437                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  3438  002094  0E00               	movlw	0
  3439  002096  6E02               	movwf	(fputc@c+1)^0,c
  3440  002098  0E25               	movlw	37
  3441  00209A  6E01               	movwf	fputc@c^0,c
  3442  00209C  C045  F003         	movff	vfpfcnvrt@fp,fputc@fp
  3443  0020A0  C046  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3444  0020A4  EC00  F01D         	call	_fputc	;wreg free
  3445  0020A8                     l4739:
  3446                           
  3447                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  3448  0020A8  0E00               	movlw	0
  3449  0020AA  6E46               	movwf	(?_vfpfcnvrt+1)^0,c
  3450  0020AC  0E01               	movlw	1
  3451  0020AE  6E45               	movwf	?_vfpfcnvrt^0,c
  3452  0020B0  EF82  F010         	goto	l1240
  3453  0020B4                     l4743:
  3454                           
  3455                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  3456  0020B4  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3457  0020B8  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3458  0020BC  2ADE               	incf	postinc2,f,c
  3459  0020BE  0E00               	movlw	0
  3460  0020C0  22DD               	addwfc	postdec2,f,c
  3461  0020C2                     
  3462                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  3463  0020C2  0E00               	movlw	0
  3464  0020C4  6E46               	movwf	(?_vfpfcnvrt+1)^0,c
  3465  0020C6  0E00               	movlw	0
  3466  0020C8  6E45               	movwf	?_vfpfcnvrt^0,c
  3467  0020CA  EF82  F010         	goto	l1240
  3468  0020CE                     l4749:
  3469                           
  3470                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  3471  0020CE  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3472  0020D2  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3473  0020D6  CFDE FFF6          	movff	postinc2,tblptrl
  3474  0020DA  CFDD FFF7          	movff	postdec2,tblptrh
  3475  0020DE                     	if	0	;tblptru may be non-zero
  3476  0020DE                     	endif
  3477  0020DE                     	if	0	;tblptru may be non-zero
  3478  0020DE                     	endif
  3479  0020DE  0008               	tblrd		*
  3480  0020E0  50F5               	movf	tablat,w,c
  3481  0020E2  6E01               	movwf	fputc@c^0,c
  3482  0020E4  6A02               	clrf	(fputc@c+1)^0,c
  3483  0020E6  C045  F003         	movff	vfpfcnvrt@fp,fputc@fp
  3484  0020EA  C046  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3485  0020EE  EC00  F01D         	call	_fputc	;wreg free
  3486  0020F2                     
  3487                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  3488  0020F2  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3489  0020F6  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3490  0020FA  2ADE               	incf	postinc2,f,c
  3491  0020FC  0E00               	movlw	0
  3492  0020FE  22DD               	addwfc	postdec2,f,c
  3493  002100  EF54  F010         	goto	l4739
  3494  002104                     l1240:
  3495  002104  0012               	return		;funcret
  3496  002106                     __end_of_vfpfcnvrt:
  3497                           	callstack 0
  3498                           
  3499 ;; *************** function _xtoa *****************
  3500 ;; Defined at:
  3501 ;;		line 645 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  3502 ;; Parameters:    Size  Location     Type
  3503 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  3504 ;;		 -> sprintf@f(6), 
  3505 ;;  d               8   29[COMRAM] unsigned long long 
  3506 ;;  x               1   37[COMRAM] unsigned char 
  3507 ;; Auto vars:     Size  Location     Type
  3508 ;;  n               8   54[COMRAM] unsigned long long 
  3509 ;;  c               2   64[COMRAM] int 
  3510 ;;  i               2   62[COMRAM] int 
  3511 ;;  w               2   52[COMRAM] int 
  3512 ;;  p               2   50[COMRAM] int 
  3513 ;; Return value:  Size  Location     Type
  3514 ;;                  2   27[COMRAM] int 
  3515 ;; Registers used:
  3516 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3517 ;; Tracked objects:
  3518 ;;		On entry : 0/0
  3519 ;;		On exit  : 0/0
  3520 ;;		Unchanged: 0/0
  3521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3522 ;;      Params:        11       0       0       0       0       0       0       0       0
  3523 ;;      Locals:        20       0       0       0       0       0       0       0       0
  3524 ;;      Temps:          8       0       0       0       0       0       0       0       0
  3525 ;;      Totals:        39       0       0       0       0       0       0       0       0
  3526 ;;Total ram usage:       39 bytes
  3527 ;; Hardware stack levels used:    1
  3528 ;; Hardware stack levels required when called:    4
  3529 ;; This function calls:
  3530 ;;		_isalpha
  3531 ;;		_isupper
  3532 ;;		_pad
  3533 ;;		_toupper
  3534 ;; This function is called by:
  3535 ;;		_vfpfcnvrt
  3536 ;; This function uses a non-reentrant model
  3537 ;;
  3538                           
  3539                           	psect	text6
  3540  002D8A                     __ptext6:
  3541                           	callstack 0
  3542  002D8A                     _xtoa:
  3543                           	callstack 21
  3544  002D8A                     
  3545                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 645: static int x
      +                          toa(FILE *fp, unsigned long long d, char x);C:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 646: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\co
      +                          mmon\doprnt.c: 647:     int c, i, p, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources
      +                          \c99\common\doprnt.c: 648:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.3
      +                          1\pic\sources\c99\common\doprnt.c: 651:     if (!(prec < 0)) {
  3546  002D8A  0100               	movlb	0	; () banked
  3547  002D8C  BFFB               	btfsc	(_prec+1)& (0+255),7,b
  3548  002D8E  EFCB  F016         	goto	u5531
  3549  002D92  EFCD  F016         	goto	u5530
  3550  002D96                     u5531:
  3551  002D96  EFCE  F016         	goto	l4535
  3552  002D9A                     u5530:
  3553  002D9A                     
  3554                           ; BSR set to: 0
  3555                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 652:         flag
      +                          s &= ~(1 << 1);
  3556  002D9A  93FC               	bcf	_flags& (0+255),1,b
  3557  002D9C                     l4535:
  3558                           
  3559                           ; BSR set to: 0
  3560                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 654:     p = (0 <
      +                           prec) ? prec : 1;
  3561  002D9C  BFFB               	btfsc	(_prec+1)& (0+255),7,b
  3562  002D9E  EFDB  F016         	goto	u5540
  3563  002DA2  51FB               	movf	(_prec+1)& (0+255),w,b
  3564  002DA4  E106               	bnz	u5541
  3565  002DA6  05FA               	decf	_prec& (0+255),w,b
  3566  002DA8  B0D8               	btfsc	status,0,c
  3567  002DAA  EFD9  F016         	goto	u5541
  3568  002DAE  EFDB  F016         	goto	u5540
  3569  002DB2                     u5541:
  3570  002DB2  EFE1  F016         	goto	l1198
  3571  002DB6                     u5540:
  3572  002DB6                     
  3573                           ; BSR set to: 0
  3574  002DB6  0E00               	movlw	0
  3575  002DB8  6E34               	movwf	(xtoa@p+1)^0,c
  3576  002DBA  0E01               	movlw	1
  3577  002DBC  6E33               	movwf	xtoa@p^0,c
  3578  002DBE  EFE5  F016         	goto	l1200
  3579  002DC2                     l1198:
  3580                           
  3581                           ; BSR set to: 0
  3582  002DC2  C0FA  F033         	movff	_prec,xtoa@p
  3583  002DC6  C0FB  F034         	movff	_prec+1,xtoa@p+1
  3584  002DCA                     l1200:
  3585                           
  3586                           ; BSR set to: 0
  3587                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 655:     w = widt
      +                          h;
  3588  002DCA  C10A  F035         	movff	_width,xtoa@w
  3589  002DCE  C10B  F036         	movff	_width+1,xtoa@w+1
  3590                           
  3591                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 656:     if (flag
      +                          s & (1 << 4)) {
  3592  002DD2  A9FC               	btfss	_flags& (0+255),4,b
  3593  002DD4  EFEE  F016         	goto	u5551
  3594  002DD8  EFF0  F016         	goto	u5550
  3595  002DDC                     u5551:
  3596  002DDC  EFF4  F016         	goto	l4541
  3597  002DE0                     u5550:
  3598  002DE0                     
  3599                           ; BSR set to: 0
  3600                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 657:         w -=
      +                           2;
  3601  002DE0  0EFE               	movlw	254
  3602  002DE2  2635               	addwf	xtoa@w^0,f,c
  3603  002DE4  0EFF               	movlw	255
  3604  002DE6  2236               	addwfc	(xtoa@w+1)^0,f,c
  3605  002DE8                     l4541:
  3606                           
  3607                           ; BSR set to: 0
  3608                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 661:     n = d;
  3609  002DE8  C01E  F037         	movff	xtoa@d,xtoa@n
  3610  002DEC  C01F  F038         	movff	xtoa@d+1,xtoa@n+1
  3611  002DF0  C020  F039         	movff	xtoa@d+2,xtoa@n+2
  3612  002DF4  C021  F03A         	movff	xtoa@d+3,xtoa@n+3
  3613  002DF8  C022  F03B         	movff	xtoa@d+4,xtoa@n+4
  3614  002DFC  C023  F03C         	movff	xtoa@d+5,xtoa@n+5
  3615  002E00  C024  F03D         	movff	xtoa@d+6,xtoa@n+6
  3616  002E04  C025  F03E         	movff	xtoa@d+7,xtoa@n+7
  3617  002E08                     
  3618                           ; BSR set to: 0
  3619                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 662:     i = size
      +                          of(dbuf) - 1;
  3620  002E08  0E00               	movlw	0
  3621  002E0A  6E40               	movwf	(xtoa@i+1)^0,c
  3622  002E0C  0E4F               	movlw	79
  3623  002E0E  6E3F               	movwf	xtoa@i^0,c
  3624  002E10                     
  3625                           ; BSR set to: 0
  3626                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 663:     dbuf[i] 
      +                          = '\0';
  3627  002E10  0E00               	movlw	0
  3628  002E12  0101               	movlb	1	; () banked
  3629  002E14  6F63               	movwf	(_dbuf+79)& (0+255),b
  3630                           
  3631                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 664:     while (!
      +                          (i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3632  002E16  EFC0  F017         	goto	l4577
  3633  002E1A                     l4547:
  3634                           
  3635                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 665:         --i;
  3636  002E1A  063F               	decf	xtoa@i^0,f,c
  3637  002E1C  A0D8               	btfss	status,0,c
  3638  002E1E  0640               	decf	(xtoa@i+1)^0,f,c
  3639  002E20                     
  3640                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 666:         c = 
      +                          n & 0x0f;
  3641  002E20  0E0F               	movlw	15
  3642  002E22  1437               	andwf	xtoa@n^0,w,c
  3643  002E24  6E41               	movwf	xtoa@c^0,c
  3644  002E26  6A42               	clrf	(xtoa@c+1)^0,c
  3645  002E28                     
  3646                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 667:         c = 
      +                          (c < 10) ? (int)'0' + c : (int)'a' + (c - 10);
  3647  002E28  BE42               	btfsc	(xtoa@c+1)^0,7,c
  3648  002E2A  EF20  F017         	goto	u5561
  3649  002E2E  5042               	movf	(xtoa@c+1)^0,w,c
  3650  002E30  E109               	bnz	u5560
  3651  002E32  0E0A               	movlw	10
  3652  002E34  5C41               	subwf	xtoa@c^0,w,c
  3653  002E36  A0D8               	btfss	status,0,c
  3654  002E38  EF20  F017         	goto	u5561
  3655  002E3C  EF22  F017         	goto	u5560
  3656  002E40                     u5561:
  3657  002E40  EF2A  F017         	goto	l4555
  3658  002E44                     u5560:
  3659  002E44  0E57               	movlw	87
  3660  002E46  2441               	addwf	xtoa@c^0,w,c
  3661  002E48  6E41               	movwf	xtoa@c^0,c
  3662  002E4A  0E00               	movlw	0
  3663  002E4C  2042               	addwfc	(xtoa@c+1)^0,w,c
  3664  002E4E  6E42               	movwf	(xtoa@c+1)^0,c
  3665  002E50  EF30  F017         	goto	l1207
  3666  002E54                     l4555:
  3667  002E54  0E30               	movlw	48
  3668  002E56  2441               	addwf	xtoa@c^0,w,c
  3669  002E58  6E41               	movwf	xtoa@c^0,c
  3670  002E5A  0E00               	movlw	0
  3671  002E5C  2042               	addwfc	(xtoa@c+1)^0,w,c
  3672  002E5E  6E42               	movwf	(xtoa@c+1)^0,c
  3673  002E60                     l1207:
  3674  002E60  0EBF               	movlw	191
  3675  002E62  6E27               	movwf	??_xtoa^0,c
  3676  002E64  0EFF               	movlw	255
  3677  002E66  6E28               	movwf	(??_xtoa+1)^0,c
  3678  002E68  5026               	movf	xtoa@x^0,w,c
  3679  002E6A  6E29               	movwf	(??_xtoa+2)^0,c
  3680  002E6C  6A2A               	clrf	(??_xtoa+3)^0,c
  3681  002E6E  5027               	movf	??_xtoa^0,w,c
  3682  002E70  2629               	addwf	(??_xtoa+2)^0,f,c
  3683  002E72  5028               	movf	(??_xtoa+1)^0,w,c
  3684  002E74  222A               	addwfc	(??_xtoa+3)^0,f,c
  3685  002E76  502A               	movf	(??_xtoa+3)^0,w,c
  3686  002E78  E10A               	bnz	u5570
  3687  002E7A  0E1A               	movlw	26
  3688  002E7C  5C29               	subwf	(??_xtoa+2)^0,w,c
  3689  002E7E  A0D8               	btfss	status,0,c
  3690  002E80  EF44  F017         	goto	u5571
  3691  002E84  EF47  F017         	goto	u5570
  3692  002E88                     u5571:
  3693  002E88  0E01               	movlw	1
  3694  002E8A  EF48  F017         	goto	u5580
  3695  002E8E                     u5570:
  3696  002E8E  0E00               	movlw	0
  3697  002E90                     u5580:
  3698  002E90  6E2F               	movwf	_xtoa$1469^0,c
  3699  002E92  6A30               	clrf	(_xtoa$1469+1)^0,c
  3700  002E94  502F               	movf	_xtoa$1469^0,w,c
  3701  002E96  1030               	iorwf	(_xtoa$1469+1)^0,w,c
  3702  002E98  B4D8               	btfsc	status,2,c
  3703  002E9A  EF51  F017         	goto	u5591
  3704  002E9E  EF53  F017         	goto	u5590
  3705  002EA2                     u5591:
  3706  002EA2  EF83  F017         	goto	l4569
  3707  002EA6                     u5590:
  3708  002EA6  0E9F               	movlw	159
  3709  002EA8  6E27               	movwf	??_xtoa^0,c
  3710  002EAA  0EFF               	movlw	255
  3711  002EAC  6E28               	movwf	(??_xtoa+1)^0,c
  3712  002EAE  0E20               	movlw	32
  3713  002EB0  1041               	iorwf	xtoa@c^0,w,c
  3714  002EB2  6E29               	movwf	(??_xtoa+2)^0,c
  3715  002EB4  0E00               	movlw	0
  3716  002EB6  1042               	iorwf	(xtoa@c+1)^0,w,c
  3717  002EB8  6E2A               	movwf	(??_xtoa+3)^0,c
  3718  002EBA  5027               	movf	??_xtoa^0,w,c
  3719  002EBC  2629               	addwf	(??_xtoa+2)^0,f,c
  3720  002EBE  5028               	movf	(??_xtoa+1)^0,w,c
  3721  002EC0  222A               	addwfc	(??_xtoa+3)^0,f,c
  3722  002EC2  502A               	movf	(??_xtoa+3)^0,w,c
  3723  002EC4  E10A               	bnz	u5600
  3724  002EC6  0E1A               	movlw	26
  3725  002EC8  5C29               	subwf	(??_xtoa+2)^0,w,c
  3726  002ECA  A0D8               	btfss	status,0,c
  3727  002ECC  EF6A  F017         	goto	u5601
  3728  002ED0  EF6D  F017         	goto	u5600
  3729  002ED4                     u5601:
  3730  002ED4  0E01               	movlw	1
  3731  002ED6  EF6E  F017         	goto	u5610
  3732  002EDA                     u5600:
  3733  002EDA  0E00               	movlw	0
  3734  002EDC                     u5610:
  3735  002EDC  6E31               	movwf	_xtoa$1470^0,c
  3736  002EDE  6A32               	clrf	(_xtoa$1470+1)^0,c
  3737  002EE0  5031               	movf	_xtoa$1470^0,w,c
  3738  002EE2  1032               	iorwf	(_xtoa$1470+1)^0,w,c
  3739  002EE4  B4D8               	btfsc	status,2,c
  3740  002EE6  EF77  F017         	goto	u5621
  3741  002EEA  EF79  F017         	goto	u5620
  3742  002EEE                     u5621:
  3743  002EEE  EF83  F017         	goto	l4569
  3744  002EF2                     u5620:
  3745  002EF2                     
  3746                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 669:             
      +                          c = toupper(c);
  3747  002EF2  C041  F007         	movff	xtoa@c,toupper@c
  3748  002EF6  C042  F008         	movff	xtoa@c+1,toupper@c+1
  3749  002EFA  EC3D  F020         	call	_toupper	;wreg free
  3750  002EFE  C007  F041         	movff	?_toupper,xtoa@c
  3751  002F02  C008  F042         	movff	?_toupper+1,xtoa@c+1
  3752  002F06                     l4569:
  3753                           
  3754                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 671:         dbuf
      +                          [i] = (char)c;
  3755  002F06  0E14               	movlw	low _dbuf
  3756  002F08  243F               	addwf	xtoa@i^0,w,c
  3757  002F0A  6ED9               	movwf	fsr2l,c
  3758  002F0C  0E01               	movlw	high _dbuf
  3759  002F0E  2040               	addwfc	(xtoa@i+1)^0,w,c
  3760  002F10  6EDA               	movwf	fsr2h,c
  3761  002F12  C041  FFDF         	movff	xtoa@c,indf2
  3762  002F16                     
  3763                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 672:         --p;
  3764  002F16  0633               	decf	xtoa@p^0,f,c
  3765  002F18  A0D8               	btfss	status,0,c
  3766  002F1A  0634               	decf	(xtoa@p+1)^0,f,c
  3767  002F1C                     
  3768                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 673:         --w;
  3769  002F1C  0635               	decf	xtoa@w^0,f,c
  3770  002F1E  A0D8               	btfss	status,0,c
  3771  002F20  0636               	decf	(xtoa@w+1)^0,f,c
  3772  002F22                     
  3773                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 674:         n = 
      +                          n >> 4;
  3774  002F22  C037  F027         	movff	xtoa@n,??_xtoa
  3775  002F26  C038  F028         	movff	xtoa@n+1,??_xtoa+1
  3776  002F2A  C039  F029         	movff	xtoa@n+2,??_xtoa+2
  3777  002F2E  C03A  F02A         	movff	xtoa@n+3,??_xtoa+3
  3778  002F32  C03B  F02B         	movff	xtoa@n+4,??_xtoa+4
  3779  002F36  C03C  F02C         	movff	xtoa@n+5,??_xtoa+5
  3780  002F3A  C03D  F02D         	movff	xtoa@n+6,??_xtoa+6
  3781  002F3E  C03E  F02E         	movff	xtoa@n+7,??_xtoa+7
  3782  002F42  0E05               	movlw	5
  3783  002F44  EFAD  F017         	goto	u5630
  3784  002F48                     u5635:
  3785  002F48  90D8               	bcf	status,0,c
  3786  002F4A  322E               	rrcf	(??_xtoa+7)^0,f,c
  3787  002F4C  322D               	rrcf	(??_xtoa+6)^0,f,c
  3788  002F4E  322C               	rrcf	(??_xtoa+5)^0,f,c
  3789  002F50  322B               	rrcf	(??_xtoa+4)^0,f,c
  3790  002F52  322A               	rrcf	(??_xtoa+3)^0,f,c
  3791  002F54  3229               	rrcf	(??_xtoa+2)^0,f,c
  3792  002F56  3228               	rrcf	(??_xtoa+1)^0,f,c
  3793  002F58  3227               	rrcf	??_xtoa^0,f,c
  3794  002F5A                     u5630:
  3795  002F5A  2EE8               	decfsz	wreg,f,c
  3796  002F5C  EFA4  F017         	goto	u5635
  3797  002F60  C027  F037         	movff	??_xtoa,xtoa@n
  3798  002F64  C028  F038         	movff	??_xtoa+1,xtoa@n+1
  3799  002F68  C029  F039         	movff	??_xtoa+2,xtoa@n+2
  3800  002F6C  C02A  F03A         	movff	??_xtoa+3,xtoa@n+3
  3801  002F70  C02B  F03B         	movff	??_xtoa+4,xtoa@n+4
  3802  002F74  C02C  F03C         	movff	??_xtoa+5,xtoa@n+5
  3803  002F78  C02D  F03D         	movff	??_xtoa+6,xtoa@n+6
  3804  002F7C  C02E  F03E         	movff	??_xtoa+7,xtoa@n+7
  3805  002F80                     l4577:
  3806                           
  3807                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 664:     while (!
      +                          (i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3808  002F80  BE40               	btfsc	(xtoa@i+1)^0,7,c
  3809  002F82  EFCC  F017         	goto	u5641
  3810  002F86  5040               	movf	(xtoa@i+1)^0,w,c
  3811  002F88  E109               	bnz	u5640
  3812  002F8A  0E02               	movlw	2
  3813  002F8C  5C3F               	subwf	xtoa@i^0,w,c
  3814  002F8E  A0D8               	btfss	status,0,c
  3815  002F90  EFCC  F017         	goto	u5641
  3816  002F94  EFCE  F017         	goto	u5640
  3817  002F98                     u5641:
  3818  002F98  EFFF  F017         	goto	l1221
  3819  002F9C                     u5640:
  3820  002F9C  5037               	movf	xtoa@n^0,w,c
  3821  002F9E  1038               	iorwf	(xtoa@n+1)^0,w,c
  3822  002FA0  1039               	iorwf	(xtoa@n+2)^0,w,c
  3823  002FA2  103A               	iorwf	(xtoa@n+3)^0,w,c
  3824  002FA4  103B               	iorwf	(xtoa@n+4)^0,w,c
  3825  002FA6  103C               	iorwf	(xtoa@n+5)^0,w,c
  3826  002FA8  103D               	iorwf	(xtoa@n+6)^0,w,c
  3827  002FAA  103E               	iorwf	(xtoa@n+7)^0,w,c
  3828  002FAC  A4D8               	btfss	status,2,c
  3829  002FAE  EFDB  F017         	goto	u5651
  3830  002FB2  EFDD  F017         	goto	u5650
  3831  002FB6                     u5651:
  3832  002FB6  EF0D  F017         	goto	l4547
  3833  002FBA                     u5650:
  3834  002FBA  BE34               	btfsc	(xtoa@p+1)^0,7,c
  3835  002FBC  EFEA  F017         	goto	u5660
  3836  002FC0  5034               	movf	(xtoa@p+1)^0,w,c
  3837  002FC2  E106               	bnz	u5661
  3838  002FC4  0433               	decf	xtoa@p^0,w,c
  3839  002FC6  B0D8               	btfsc	status,0,c
  3840  002FC8  EFE8  F017         	goto	u5661
  3841  002FCC  EFEA  F017         	goto	u5660
  3842  002FD0                     u5661:
  3843  002FD0  EF0D  F017         	goto	l4547
  3844  002FD4                     u5660:
  3845  002FD4  BE36               	btfsc	(xtoa@w+1)^0,7,c
  3846  002FD6  EFF5  F017         	goto	u5671
  3847  002FDA  5036               	movf	(xtoa@w+1)^0,w,c
  3848  002FDC  E108               	bnz	u5670
  3849  002FDE  0435               	decf	xtoa@w^0,w,c
  3850  002FE0  A0D8               	btfss	status,0,c
  3851  002FE2  EFF5  F017         	goto	u5671
  3852  002FE6  EFF7  F017         	goto	u5670
  3853  002FEA                     u5671:
  3854  002FEA  EFFF  F017         	goto	l1221
  3855  002FEE                     u5670:
  3856  002FEE  0100               	movlb	0	; () banked
  3857  002FF0  B3FC               	btfsc	_flags& (0+255),1,b
  3858  002FF2  EFFD  F017         	goto	u5681
  3859  002FF6  EFFF  F017         	goto	u5680
  3860  002FFA                     u5681:
  3861  002FFA  EF0D  F017         	goto	l4547
  3862  002FFE                     u5680:
  3863  002FFE                     l1221:
  3864                           
  3865                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 678:     if (flag
      +                          s & (1 << 4)) {
  3866  002FFE  0100               	movlb	0	; () banked
  3867  003000  A9FC               	btfss	_flags& (0+255),4,b
  3868  003002  EF05  F018         	goto	u5691
  3869  003006  EF07  F018         	goto	u5690
  3870  00300A                     u5691:
  3871  00300A  EF1D  F018         	goto	l4593
  3872  00300E                     u5690:
  3873  00300E                     
  3874                           ; BSR set to: 0
  3875                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 679:         --i;
  3876  00300E  063F               	decf	xtoa@i^0,f,c
  3877  003010  A0D8               	btfss	status,0,c
  3878  003012  0640               	decf	(xtoa@i+1)^0,f,c
  3879  003014                     
  3880                           ; BSR set to: 0
  3881                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 680:         dbuf
      +                          [i] = x;
  3882  003014  0E14               	movlw	low _dbuf
  3883  003016  243F               	addwf	xtoa@i^0,w,c
  3884  003018  6ED9               	movwf	fsr2l,c
  3885  00301A  0E01               	movlw	high _dbuf
  3886  00301C  2040               	addwfc	(xtoa@i+1)^0,w,c
  3887  00301E  6EDA               	movwf	fsr2h,c
  3888  003020  C026  FFDF         	movff	xtoa@x,indf2
  3889  003024                     
  3890                           ; BSR set to: 0
  3891                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 681:         --i;
  3892  003024  063F               	decf	xtoa@i^0,f,c
  3893  003026  A0D8               	btfss	status,0,c
  3894  003028  0640               	decf	(xtoa@i+1)^0,f,c
  3895                           
  3896                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 682:         dbuf
      +                          [i] = '0';
  3897  00302A  0E14               	movlw	low _dbuf
  3898  00302C  243F               	addwf	xtoa@i^0,w,c
  3899  00302E  6ED9               	movwf	fsr2l,c
  3900  003030  0E01               	movlw	high _dbuf
  3901  003032  2040               	addwfc	(xtoa@i+1)^0,w,c
  3902  003034  6EDA               	movwf	fsr2h,c
  3903  003036  0E30               	movlw	48
  3904  003038  6EDF               	movwf	indf2,c
  3905  00303A                     l4593:
  3906                           
  3907                           ; BSR set to: 0
  3908                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 686:     return p
      +                          ad(fp, &dbuf[i], w);
  3909  00303A  C01C  F011         	movff	xtoa@fp,pad@fp
  3910  00303E  C01D  F012         	movff	xtoa@fp+1,pad@fp+1
  3911  003042  0E14               	movlw	low _dbuf
  3912  003044  243F               	addwf	xtoa@i^0,w,c
  3913  003046  6E13               	movwf	pad@buf^0,c
  3914  003048  0E01               	movlw	high _dbuf
  3915  00304A  2040               	addwfc	(xtoa@i+1)^0,w,c
  3916  00304C  6E14               	movwf	(pad@buf+1)^0,c
  3917  00304E  C035  F015         	movff	xtoa@w,pad@p
  3918  003052  C036  F016         	movff	xtoa@w+1,pad@p+1
  3919  003056  EC65  F01D         	call	_pad	;wreg free
  3920  00305A  C011  F01C         	movff	?_pad,?_xtoa
  3921  00305E  C012  F01D         	movff	?_pad+1,?_xtoa+1
  3922  003062  0012               	return		;funcret
  3923  003064                     __end_of_xtoa:
  3924                           	callstack 0
  3925                           
  3926 ;; *************** function _toupper *****************
  3927 ;; Defined at:
  3928 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\toupper.c"
  3929 ;; Parameters:    Size  Location     Type
  3930 ;;  c               2    6[COMRAM] int 
  3931 ;; Auto vars:     Size  Location     Type
  3932 ;;		None
  3933 ;; Return value:  Size  Location     Type
  3934 ;;                  2    6[COMRAM] int 
  3935 ;; Registers used:
  3936 ;;		wreg, status,2, status,0
  3937 ;; Tracked objects:
  3938 ;;		On entry : 0/0
  3939 ;;		On exit  : 0/0
  3940 ;;		Unchanged: 0/0
  3941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3942 ;;      Params:         2       0       0       0       0       0       0       0       0
  3943 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3944 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3945 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3946 ;;Total ram usage:        8 bytes
  3947 ;; Hardware stack levels used:    1
  3948 ;; Hardware stack levels required when called:    1
  3949 ;; This function calls:
  3950 ;;		_islower
  3951 ;; This function is called by:
  3952 ;;		_xtoa
  3953 ;; This function uses a non-reentrant model
  3954 ;;
  3955                           
  3956                           	psect	text7
  3957  00407A                     __ptext7:
  3958                           	callstack 0
  3959  00407A                     _toupper:
  3960                           	callstack 23
  3961  00407A  0E9F               	movlw	159
  3962  00407C  6E09               	movwf	??_toupper^0,c
  3963  00407E  0EFF               	movlw	255
  3964  004080  6E0A               	movwf	(??_toupper+1)^0,c
  3965  004082  C007  F00B         	movff	toupper@c,??_toupper+2
  3966  004086  C008  F00C         	movff	toupper@c+1,??_toupper+3
  3967  00408A  5009               	movf	??_toupper^0,w,c
  3968  00408C  260B               	addwf	(??_toupper+2)^0,f,c
  3969  00408E  500A               	movf	(??_toupper+1)^0,w,c
  3970  004090  220C               	addwfc	(??_toupper+3)^0,f,c
  3971  004092  500C               	movf	(??_toupper+3)^0,w,c
  3972  004094  E10A               	bnz	u4830
  3973  004096  0E1A               	movlw	26
  3974  004098  5C0B               	subwf	(??_toupper+2)^0,w,c
  3975  00409A  A0D8               	btfss	status,0,c
  3976  00409C  EF52  F020         	goto	u4831
  3977  0040A0  EF55  F020         	goto	u4830
  3978  0040A4                     u4831:
  3979  0040A4  0E01               	movlw	1
  3980  0040A6  EF56  F020         	goto	u4840
  3981  0040AA                     u4830:
  3982  0040AA  0E00               	movlw	0
  3983  0040AC                     u4840:
  3984  0040AC  6E0D               	movwf	_toupper$1610^0,c
  3985  0040AE  6A0E               	clrf	(_toupper$1610+1)^0,c
  3986  0040B0  500D               	movf	_toupper$1610^0,w,c
  3987  0040B2  100E               	iorwf	(_toupper$1610+1)^0,w,c
  3988  0040B4  B4D8               	btfsc	status,2,c
  3989  0040B6  EF5F  F020         	goto	u4851
  3990  0040BA  EF61  F020         	goto	u4850
  3991  0040BE                     u4851:
  3992  0040BE  EF67  F020         	goto	l1355
  3993  0040C2                     u4850:
  3994  0040C2  0E5F               	movlw	95
  3995  0040C4  1407               	andwf	toupper@c^0,w,c
  3996  0040C6  6E07               	movwf	?_toupper^0,c
  3997  0040C8  6A08               	clrf	(?_toupper+1)^0,c
  3998  0040CA  EF6B  F020         	goto	l1360
  3999  0040CE                     l1355:
  4000  0040CE  C007  F007         	movff	toupper@c,?_toupper
  4001  0040D2  C008  F008         	movff	toupper@c+1,?_toupper+1
  4002  0040D6                     l1360:
  4003  0040D6  0012               	return		;funcret
  4004  0040D8                     __end_of_toupper:
  4005                           	callstack 0
  4006                           
  4007 ;; *************** function _islower *****************
  4008 ;; Defined at:
  4009 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\islower.c"
  4010 ;; Parameters:    Size  Location     Type
  4011 ;;  c               2    0[COMRAM] int 
  4012 ;; Auto vars:     Size  Location     Type
  4013 ;;		None
  4014 ;; Return value:  Size  Location     Type
  4015 ;;                  2    0[COMRAM] int 
  4016 ;; Registers used:
  4017 ;;		wreg, status,2, status,0
  4018 ;; Tracked objects:
  4019 ;;		On entry : 0/0
  4020 ;;		On exit  : 0/0
  4021 ;;		Unchanged: 0/0
  4022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4023 ;;      Params:         2       0       0       0       0       0       0       0       0
  4024 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4025 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4026 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4027 ;;Total ram usage:        6 bytes
  4028 ;; Hardware stack levels used:    1
  4029 ;; This function calls:
  4030 ;;		Nothing
  4031 ;; This function is called by:
  4032 ;;		_toupper
  4033 ;; This function uses a non-reentrant model
  4034 ;;
  4035                           
  4036                           	psect	text8
  4037  004498                     __ptext8:
  4038                           	callstack 0
  4039  004498                     _islower:
  4040                           	callstack 23
  4041  004498  0E9F               	movlw	159
  4042  00449A  6E03               	movwf	??_islower^0,c
  4043  00449C  0EFF               	movlw	255
  4044  00449E  6E04               	movwf	(??_islower+1)^0,c
  4045  0044A0  C001  F005         	movff	islower@c,??_islower+2
  4046  0044A4  C002  F006         	movff	islower@c+1,??_islower+3
  4047  0044A8  5003               	movf	??_islower^0,w,c
  4048  0044AA  2605               	addwf	(??_islower+2)^0,f,c
  4049  0044AC  5004               	movf	(??_islower+1)^0,w,c
  4050  0044AE  2206               	addwfc	(??_islower+3)^0,f,c
  4051  0044B0  5006               	movf	(??_islower+3)^0,w,c
  4052  0044B2  E10A               	bnz	u3790
  4053  0044B4  0E1A               	movlw	26
  4054  0044B6  5C05               	subwf	(??_islower+2)^0,w,c
  4055  0044B8  A0D8               	btfss	status,0,c
  4056  0044BA  EF61  F022         	goto	u3791
  4057  0044BE  EF64  F022         	goto	u3790
  4058  0044C2                     u3791:
  4059  0044C2  0E01               	movlw	1
  4060  0044C4  EF65  F022         	goto	u3800
  4061  0044C8                     u3790:
  4062  0044C8  0E00               	movlw	0
  4063  0044CA                     u3800:
  4064  0044CA  6E01               	movwf	?_islower^0,c
  4065  0044CC  6A02               	clrf	(?_islower+1)^0,c
  4066  0044CE  0012               	return		;funcret
  4067  0044D0                     __end_of_islower:
  4068                           	callstack 0
  4069                           
  4070 ;; *************** function _isalpha *****************
  4071 ;; Defined at:
  4072 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\isalpha.c"
  4073 ;; Parameters:    Size  Location     Type
  4074 ;;  c               2    0[COMRAM] int 
  4075 ;; Auto vars:     Size  Location     Type
  4076 ;;		None
  4077 ;; Return value:  Size  Location     Type
  4078 ;;                  2    0[COMRAM] int 
  4079 ;; Registers used:
  4080 ;;		wreg, status,2, status,0
  4081 ;; Tracked objects:
  4082 ;;		On entry : 0/0
  4083 ;;		On exit  : 0/0
  4084 ;;		Unchanged: 0/0
  4085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4086 ;;      Params:         2       0       0       0       0       0       0       0       0
  4087 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4088 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4089 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4090 ;;Total ram usage:        6 bytes
  4091 ;; Hardware stack levels used:    1
  4092 ;; This function calls:
  4093 ;;		Nothing
  4094 ;; This function is called by:
  4095 ;;		_xtoa
  4096 ;; This function uses a non-reentrant model
  4097 ;;
  4098                           
  4099                           	psect	text9
  4100  0043EA                     __ptext9:
  4101                           	callstack 0
  4102  0043EA                     _isalpha:
  4103                           	callstack 24
  4104  0043EA  0E9F               	movlw	159
  4105  0043EC  6E03               	movwf	??_isalpha^0,c
  4106  0043EE  0EFF               	movlw	255
  4107  0043F0  6E04               	movwf	(??_isalpha+1)^0,c
  4108  0043F2  0E20               	movlw	32
  4109  0043F4  1001               	iorwf	isalpha@c^0,w,c
  4110  0043F6  6E05               	movwf	(??_isalpha+2)^0,c
  4111  0043F8  0E00               	movlw	0
  4112  0043FA  1002               	iorwf	(isalpha@c+1)^0,w,c
  4113  0043FC  6E06               	movwf	(??_isalpha+3)^0,c
  4114  0043FE  5003               	movf	??_isalpha^0,w,c
  4115  004400  2605               	addwf	(??_isalpha+2)^0,f,c
  4116  004402  5004               	movf	(??_isalpha+1)^0,w,c
  4117  004404  2206               	addwfc	(??_isalpha+3)^0,f,c
  4118  004406  5006               	movf	(??_isalpha+3)^0,w,c
  4119  004408  E10A               	bnz	u4810
  4120  00440A  0E1A               	movlw	26
  4121  00440C  5C05               	subwf	(??_isalpha+2)^0,w,c
  4122  00440E  A0D8               	btfss	status,0,c
  4123  004410  EF0C  F022         	goto	u4811
  4124  004414  EF0F  F022         	goto	u4810
  4125  004418                     u4811:
  4126  004418  0E01               	movlw	1
  4127  00441A  EF10  F022         	goto	u4820
  4128  00441E                     u4810:
  4129  00441E  0E00               	movlw	0
  4130  004420                     u4820:
  4131  004420  6E01               	movwf	?_isalpha^0,c
  4132  004422  6A02               	clrf	(?_isalpha+1)^0,c
  4133  004424  0012               	return		;funcret
  4134  004426                     __end_of_isalpha:
  4135                           	callstack 0
  4136                           
  4137 ;; *************** function _strncmp *****************
  4138 ;; Defined at:
  4139 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\strncmp.c"
  4140 ;; Parameters:    Size  Location     Type
  4141 ;;  _l              2    0[COMRAM] PTR const unsigned char 
  4142 ;;		 -> vfpfcnvrt@ct(3), 
  4143 ;;  _r              2    2[COMRAM] PTR const unsigned char 
  4144 ;;		 -> STR_21(3), 
  4145 ;;  n               2    4[COMRAM] unsigned int 
  4146 ;; Auto vars:     Size  Location     Type
  4147 ;;  r               2    9[COMRAM] PTR const unsigned char 
  4148 ;;		 -> STR_21(3), 
  4149 ;;  l               2    7[COMRAM] PTR const unsigned char 
  4150 ;;		 -> vfpfcnvrt@ct(3), 
  4151 ;; Return value:  Size  Location     Type
  4152 ;;                  2    0[COMRAM] int 
  4153 ;; Registers used:
  4154 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4155 ;; Tracked objects:
  4156 ;;		On entry : 0/0
  4157 ;;		On exit  : 0/0
  4158 ;;		Unchanged: 0/0
  4159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4160 ;;      Params:         6       0       0       0       0       0       0       0       0
  4161 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4162 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4163 ;;      Totals:        11       0       0       0       0       0       0       0       0
  4164 ;;Total ram usage:       11 bytes
  4165 ;; Hardware stack levels used:    1
  4166 ;; This function calls:
  4167 ;;		Nothing
  4168 ;; This function is called by:
  4169 ;;		_vfpfcnvrt
  4170 ;; This function uses a non-reentrant model
  4171 ;;
  4172                           
  4173                           	psect	text10
  4174  00392A                     __ptext10:
  4175                           	callstack 0
  4176  00392A                     _strncmp:
  4177                           	callstack 25
  4178  00392A  C001  F008         	movff	strncmp@_l,strncmp@l
  4179  00392E  C002  F009         	movff	strncmp@_l+1,strncmp@l+1
  4180  003932  C003  F00A         	movff	strncmp@_r,strncmp@r
  4181  003936  C004  F00B         	movff	strncmp@_r+1,strncmp@r+1
  4182  00393A  0605               	decf	strncmp@n^0,f,c
  4183  00393C  A0D8               	btfss	status,0,c
  4184  00393E  0606               	decf	(strncmp@n+1)^0,f,c
  4185  003940  2805               	incf	strncmp@n^0,w,c
  4186  003942  E106               	bnz	u5701
  4187  003944  2806               	incf	(strncmp@n+1)^0,w,c
  4188  003946  A4D8               	btfss	status,2,c
  4189  003948  EFA8  F01C         	goto	u5701
  4190  00394C  EFAA  F01C         	goto	u5700
  4191  003950                     u5701:
  4192  003950  EFB7  F01C         	goto	l4605
  4193  003954                     u5700:
  4194  003954  0E00               	movlw	0
  4195  003956  6E02               	movwf	(?_strncmp+1)^0,c
  4196  003958  0E00               	movlw	0
  4197  00395A  6E01               	movwf	?_strncmp^0,c
  4198  00395C  EFFF  F01C         	goto	l1332
  4199  003960                     l4603:
  4200  003960  4A08               	infsnz	strncmp@l^0,f,c
  4201  003962  2A09               	incf	(strncmp@l+1)^0,f,c
  4202  003964  4A0A               	infsnz	strncmp@r^0,f,c
  4203  003966  2A0B               	incf	(strncmp@r+1)^0,f,c
  4204  003968  0605               	decf	strncmp@n^0,f,c
  4205  00396A  A0D8               	btfss	status,0,c
  4206  00396C  0606               	decf	(strncmp@n+1)^0,f,c
  4207  00396E                     l4605:
  4208  00396E  C008  FFD9         	movff	strncmp@l,fsr2l
  4209  003972  C009  FFDA         	movff	strncmp@l+1,fsr2h
  4210  003976  50DF               	movf	indf2,w,c
  4211  003978  B4D8               	btfsc	status,2,c
  4212  00397A  EFC1  F01C         	goto	u5711
  4213  00397E  EFC3  F01C         	goto	u5710
  4214  003982                     u5711:
  4215  003982  EFEE  F01C         	goto	l4613
  4216  003986                     u5710:
  4217  003986  C00A  FFF6         	movff	strncmp@r,tblptrl
  4218  00398A  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  4219  00398E                     	if	0	;tblptru may be non-zero
  4220  00398E                     	endif
  4221  00398E                     	if	0	;tblptru may be non-zero
  4222  00398E                     	endif
  4223  00398E  0008               	tblrd		*
  4224  003990  50F5               	movf	tablat,w,c
  4225  003992  0900               	iorlw	0
  4226  003994  B4D8               	btfsc	status,2,c
  4227  003996  EFCF  F01C         	goto	u5721
  4228  00399A  EFD1  F01C         	goto	u5720
  4229  00399E                     u5721:
  4230  00399E  EFEE  F01C         	goto	l4613
  4231  0039A2                     u5720:
  4232  0039A2  5005               	movf	strncmp@n^0,w,c
  4233  0039A4  1006               	iorwf	(strncmp@n+1)^0,w,c
  4234  0039A6  B4D8               	btfsc	status,2,c
  4235  0039A8  EFD8  F01C         	goto	u5731
  4236  0039AC  EFDA  F01C         	goto	u5730
  4237  0039B0                     u5731:
  4238  0039B0  EFEE  F01C         	goto	l4613
  4239  0039B4                     u5730:
  4240  0039B4  C008  FFD9         	movff	strncmp@l,fsr2l
  4241  0039B8  C009  FFDA         	movff	strncmp@l+1,fsr2h
  4242  0039BC  50DF               	movf	indf2,w,c
  4243  0039BE  6E07               	movwf	??_strncmp^0,c
  4244  0039C0  C00A  FFF6         	movff	strncmp@r,tblptrl
  4245  0039C4  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  4246  0039C8                     	if	0	;tblptru may be non-zero
  4247  0039C8                     	endif
  4248  0039C8                     	if	0	;tblptru may be non-zero
  4249  0039C8                     	endif
  4250  0039C8  0008               	tblrd		*
  4251  0039CA  50F5               	movf	tablat,w,c
  4252  0039CC  1807               	xorwf	??_strncmp^0,w,c
  4253  0039CE  B4D8               	btfsc	status,2,c
  4254  0039D0  EFEC  F01C         	goto	u5741
  4255  0039D4  EFEE  F01C         	goto	u5740
  4256  0039D8                     u5741:
  4257  0039D8  EFB0  F01C         	goto	l4603
  4258  0039DC                     u5740:
  4259  0039DC                     l4613:
  4260  0039DC  C008  FFD9         	movff	strncmp@l,fsr2l
  4261  0039E0  C009  FFDA         	movff	strncmp@l+1,fsr2h
  4262  0039E4  50DF               	movf	indf2,w,c
  4263  0039E6  6E07               	movwf	??_strncmp^0,c
  4264  0039E8  C00A  FFF6         	movff	strncmp@r,tblptrl
  4265  0039EC  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  4266  0039F0                     	if	0	;tblptru may be non-zero
  4267  0039F0                     	endif
  4268  0039F0                     	if	0	;tblptru may be non-zero
  4269  0039F0                     	endif
  4270  0039F0  0008               	tblrd		*
  4271  0039F2  50F5               	movf	tablat,w,c
  4272  0039F4  5C07               	subwf	??_strncmp^0,w,c
  4273  0039F6  6E01               	movwf	?_strncmp^0,c
  4274  0039F8  6A02               	clrf	(?_strncmp+1)^0,c
  4275  0039FA  A0D8               	btfss	status,0,c
  4276  0039FC  0602               	decf	(?_strncmp+1)^0,f,c
  4277  0039FE                     l1332:
  4278  0039FE  0012               	return		;funcret
  4279  003A00                     __end_of_strncmp:
  4280                           	callstack 0
  4281                           
  4282 ;; *************** function _efgtoa *****************
  4283 ;; Defined at:
  4284 ;;		line 332 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  4285 ;; Parameters:    Size  Location     Type
  4286 ;;  fp              2   56[COMRAM] PTR struct _IO_FILE
  4287 ;;		 -> sprintf@f(6), 
  4288 ;;  f               4   58[COMRAM] PTR struct _IO_FILE
  4289 ;;  c               1   62[COMRAM] unsigned char 
  4290 ;; Auto vars:     Size  Location     Type
  4291 ;;  u               4   52[BANK0 ] unsigned char 
  4292 ;;  g               4   44[BANK0 ] unsigned char 
  4293 ;;  l               4   38[BANK0 ] unsigned char 
  4294 ;;  h               4   34[BANK0 ] unsigned char 
  4295 ;;  ou              4   20[BANK0 ] unsigned char 
  4296 ;;  n               2   50[BANK0 ] int 
  4297 ;;  e               2   48[BANK0 ] int 
  4298 ;;  i               2   42[BANK0 ] int 
  4299 ;;  w               2   30[BANK0 ] int 
  4300 ;;  p               2   28[BANK0 ] int 
  4301 ;;  sign            2   26[BANK0 ] int 
  4302 ;;  d               2   24[BANK0 ] int 
  4303 ;;  m               2   18[BANK0 ] int 
  4304 ;;  ne              2   16[BANK0 ] int 
  4305 ;;  pp              2   14[BANK0 ] int 
  4306 ;;  t               2   12[BANK0 ] int 
  4307 ;;  mode            1   33[BANK0 ] unsigned char 
  4308 ;;  nmode           1   32[BANK0 ] unsigned char 
  4309 ;; Return value:  Size  Location     Type
  4310 ;;                  2   56[COMRAM] int 
  4311 ;; Registers used:
  4312 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4313 ;; Tracked objects:
  4314 ;;		On entry : 0/0
  4315 ;;		On exit  : 0/0
  4316 ;;		Unchanged: 0/0
  4317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4318 ;;      Params:         7       0       0       0       0       0       0       0       0
  4319 ;;      Locals:         0      56       0       0       0       0       0       0       0
  4320 ;;      Temps:          5       0       0       0       0       0       0       0       0
  4321 ;;      Totals:        12      56       0       0       0       0       0       0       0
  4322 ;;Total ram usage:       68 bytes
  4323 ;; Hardware stack levels used:    1
  4324 ;; Hardware stack levels required when called:    4
  4325 ;; This function calls:
  4326 ;;		___awdiv
  4327 ;;		___awmod
  4328 ;;		___fladd
  4329 ;;		___fldiv
  4330 ;;		___fleq
  4331 ;;		___flge
  4332 ;;		___flmul
  4333 ;;		___flneg
  4334 ;;		___flsub
  4335 ;;		___fltol
  4336 ;;		___fpclassifyf
  4337 ;;		_floorf
  4338 ;;		_isupper
  4339 ;;		_pad
  4340 ;;		_strcpy
  4341 ;;		_tolower
  4342 ;; This function is called by:
  4343 ;;		_vfpfcnvrt
  4344 ;; This function uses a non-reentrant model
  4345 ;;
  4346                           
  4347                           	psect	text11
  4348  00088A                     __ptext11:
  4349                           	callstack 0
  4350  00088A                     _efgtoa:
  4351                           	callstack 21
  4352  00088A                     
  4353                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 332: static int e
      +                          fgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.31\pic\sources\
      +                          c99\common\doprnt.c: 333: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\
      +                          doprnt.c: 334:     char mode, nmode;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c9
      +                          9\common\doprnt.c: 335:     int d, e, i, m, n, ne, p, pp, sign, t, w;;C:\Program Files\M
      +                          icrochip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 336:     long double g, h, l, ou, u;
  4354  00088A  0E00               	movlw	0
  4355  00088C  0100               	movlb	0	; () banked
  4356  00088E  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  4357  000890  0E00               	movlw	0
  4358  000892  6F7A               	movwf	efgtoa@sign& (0+255),b
  4359  000894                     
  4360                           ; BSR set to: 0
  4361                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 340:     g = f;
  4362  000894  C03B  F08C         	movff	efgtoa@f,efgtoa@g
  4363  000898  C03C  F08D         	movff	efgtoa@f+1,efgtoa@g+1
  4364  00089C  C03D  F08E         	movff	efgtoa@f+2,efgtoa@g+2
  4365  0008A0  C03E  F08F         	movff	efgtoa@f+3,efgtoa@g+3
  4366  0008A4                     
  4367                           ; BSR set to: 0
  4368                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 341:     if (g < 
      +                          0.0) {
  4369  0008A4  BF8F               	btfsc	(efgtoa@g+3)& (0+255),7,b
  4370  0008A6  EF59  F004         	goto	u4990
  4371  0008AA  EF57  F004         	goto	u4991
  4372  0008AE                     u4991:
  4373  0008AE  EF6F  F004         	goto	l4233
  4374  0008B2                     u4990:
  4375  0008B2                     
  4376                           ; BSR set to: 0
  4377                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 342:         sign
      +                           = 1;
  4378  0008B2  0E00               	movlw	0
  4379  0008B4  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  4380  0008B6  0E01               	movlw	1
  4381  0008B8  6F7A               	movwf	efgtoa@sign& (0+255),b
  4382  0008BA                     
  4383                           ; BSR set to: 0
  4384                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 343:         g = 
      +                          -g;
  4385  0008BA  C08C  F001         	movff	efgtoa@g,___flneg@f1
  4386  0008BE  C08D  F002         	movff	efgtoa@g+1,___flneg@f1+1
  4387  0008C2  C08E  F003         	movff	efgtoa@g+2,___flneg@f1+2
  4388  0008C6  C08F  F004         	movff	efgtoa@g+3,___flneg@f1+3
  4389  0008CA  EC84  F022         	call	___flneg	;wreg free
  4390  0008CE  C001  F08C         	movff	?___flneg,efgtoa@g
  4391  0008D2  C002  F08D         	movff	?___flneg+1,efgtoa@g+1
  4392  0008D6  C003  F08E         	movff	?___flneg+2,efgtoa@g+2
  4393  0008DA  C004  F08F         	movff	?___flneg+3,efgtoa@g+3
  4394  0008DE                     l4233:
  4395                           
  4396                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 347:     n = 0;
  4397  0008DE  0E00               	movlw	0
  4398  0008E0  0100               	movlb	0	; () banked
  4399  0008E2  6F93               	movwf	(efgtoa@n+1)& (0+255),b
  4400  0008E4  0E00               	movlw	0
  4401  0008E6  6F92               	movwf	efgtoa@n& (0+255),b
  4402  0008E8                     
  4403                           ; BSR set to: 0
  4404                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 348:     w = widt
      +                          h;
  4405  0008E8  C10A  F07E         	movff	_width,efgtoa@w
  4406  0008EC  C10B  F07F         	movff	_width+1,efgtoa@w+1
  4407  0008F0                     
  4408                           ; BSR set to: 0
  4409                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 349:     if (sign
      +                           || (flags & (1 << 2))) {
  4410  0008F0  517A               	movf	efgtoa@sign& (0+255),w,b
  4411  0008F2  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  4412  0008F4  A4D8               	btfss	status,2,c
  4413  0008F6  EF7F  F004         	goto	u5001
  4414  0008FA  EF81  F004         	goto	u5000
  4415  0008FE                     u5001:
  4416  0008FE  EF88  F004         	goto	l4241
  4417  000902                     u5000:
  4418  000902                     
  4419                           ; BSR set to: 0
  4420  000902  A5FC               	btfss	_flags& (0+255),2,b
  4421  000904  EF86  F004         	goto	u5011
  4422  000908  EF88  F004         	goto	u5010
  4423  00090C                     u5011:
  4424  00090C  EFA2  F004         	goto	l4253
  4425  000910                     u5010:
  4426  000910                     l4241:
  4427                           
  4428                           ; BSR set to: 0
  4429                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 350:         dbuf
      +                          [n] = sign ? '-' : '+';
  4430  000910  517A               	movf	efgtoa@sign& (0+255),w,b
  4431  000912  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  4432  000914  A4D8               	btfss	status,2,c
  4433  000916  EF8F  F004         	goto	u5021
  4434  00091A  EF91  F004         	goto	u5020
  4435  00091E                     u5021:
  4436  00091E  EF97  F004         	goto	l4245
  4437  000922                     u5020:
  4438  000922                     
  4439                           ; BSR set to: 0
  4440  000922  0E00               	movlw	0
  4441  000924  6F61               	movwf	(_efgtoa$1447+1)& (0+255),b
  4442  000926  0E2B               	movlw	43
  4443  000928  6F60               	movwf	_efgtoa$1447& (0+255),b
  4444  00092A  EF9B  F004         	goto	l4247
  4445  00092E                     l4245:
  4446                           
  4447                           ; BSR set to: 0
  4448  00092E  0E00               	movlw	0
  4449  000930  6F61               	movwf	(_efgtoa$1447+1)& (0+255),b
  4450  000932  0E2D               	movlw	45
  4451  000934  6F60               	movwf	_efgtoa$1447& (0+255),b
  4452  000936                     l4247:
  4453                           
  4454                           ; BSR set to: 0
  4455  000936  C060  F114         	movff	_efgtoa$1447,_dbuf
  4456  00093A                     
  4457                           ; BSR set to: 0
  4458                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 351:         ++n;
  4459  00093A  4B92               	infsnz	efgtoa@n& (0+255),f,b
  4460  00093C  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  4461  00093E                     
  4462                           ; BSR set to: 0
  4463                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 352:         --w;
  4464  00093E  077E               	decf	efgtoa@w& (0+255),f,b
  4465  000940  A0D8               	btfss	status,0,c
  4466  000942  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  4467  000944                     l4253:
  4468                           
  4469                           ; BSR set to: 0
  4470                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 357:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  4471  000944  C08C  F001         	movff	efgtoa@g,___fpclassifyf@x
  4472  000948  C08D  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  4473  00094C  C08E  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  4474  000950  C08F  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  4475  000954  EC16  F01C         	call	___fpclassifyf	;wreg free
  4476  000958  0401               	decf	?___fpclassifyf^0,w,c
  4477  00095A  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  4478  00095C  A4D8               	btfss	status,2,c
  4479  00095E  EFB3  F004         	goto	u5031
  4480  000962  EFB5  F004         	goto	u5030
  4481  000966                     u5031:
  4482  000966  EF0C  F005         	goto	l4271
  4483  00096A                     u5030:
  4484  00096A  0EBF               	movlw	191
  4485  00096C  6E40               	movwf	??_efgtoa^0,c
  4486  00096E  0EFF               	movlw	255
  4487  000970  6E41               	movwf	(??_efgtoa+1)^0,c
  4488  000972  503F               	movf	efgtoa@c^0,w,c
  4489  000974  6E42               	movwf	(??_efgtoa+2)^0,c
  4490  000976  6A43               	clrf	(??_efgtoa+3)^0,c
  4491  000978  5040               	movf	??_efgtoa^0,w,c
  4492  00097A  2642               	addwf	(??_efgtoa+2)^0,f,c
  4493  00097C  5041               	movf	(??_efgtoa+1)^0,w,c
  4494  00097E  2243               	addwfc	(??_efgtoa+3)^0,f,c
  4495  000980  5043               	movf	(??_efgtoa+3)^0,w,c
  4496  000982  E10A               	bnz	u5040
  4497  000984  0E1A               	movlw	26
  4498  000986  5C42               	subwf	(??_efgtoa+2)^0,w,c
  4499  000988  A0D8               	btfss	status,0,c
  4500  00098A  EFC9  F004         	goto	u5041
  4501  00098E  EFCC  F004         	goto	u5040
  4502  000992                     u5041:
  4503  000992  0E01               	movlw	1
  4504  000994  EFCD  F004         	goto	u5050
  4505  000998                     u5040:
  4506  000998  0E00               	movlw	0
  4507  00099A                     u5050:
  4508  00099A  0100               	movlb	0	; () banked
  4509  00099C  6F62               	movwf	_efgtoa$1448& (0+255),b
  4510  00099E  6B63               	clrf	(_efgtoa$1448+1)& (0+255),b
  4511  0009A0                     
  4512                           ; BSR set to: 0
  4513  0009A0  5162               	movf	_efgtoa$1448& (0+255),w,b
  4514  0009A2  1163               	iorwf	(_efgtoa$1448+1)& (0+255),w,b
  4515  0009A4  B4D8               	btfsc	status,2,c
  4516  0009A6  EFD7  F004         	goto	u5061
  4517  0009AA  EFD9  F004         	goto	u5060
  4518  0009AE                     u5061:
  4519  0009AE  EFE7  F004         	goto	l4263
  4520  0009B2                     u5060:
  4521  0009B2                     
  4522                           ; BSR set to: 0
  4523                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 358:             
      +                          strcpy(&dbuf[n], "INF");
  4524  0009B2  0E14               	movlw	low _dbuf
  4525  0009B4  2592               	addwf	efgtoa@n& (0+255),w,b
  4526  0009B6  6E01               	movwf	strcpy@dest^0,c
  4527  0009B8  0E01               	movlw	high _dbuf
  4528  0009BA  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4529  0009BC  6E02               	movwf	(strcpy@dest+1)^0,c
  4530  0009BE  0E72               	movlw	low STR_11
  4531  0009C0  6E03               	movwf	strcpy@src^0,c
  4532  0009C2  0E08               	movlw	high STR_11
  4533  0009C4  6E04               	movwf	(strcpy@src+1)^0,c
  4534  0009C6  EC6C  F020         	call	_strcpy	;wreg free
  4535                           
  4536                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 359:         } el
      +                          se {
  4537  0009CA  EFF3  F004         	goto	l4265
  4538  0009CE                     l4263:
  4539                           
  4540                           ; BSR set to: 0
  4541                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 360:             
      +                          strcpy(&dbuf[n], "inf");
  4542  0009CE  0E14               	movlw	low _dbuf
  4543  0009D0  2592               	addwf	efgtoa@n& (0+255),w,b
  4544  0009D2  6E01               	movwf	strcpy@dest^0,c
  4545  0009D4  0E01               	movlw	high _dbuf
  4546  0009D6  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4547  0009D8  6E02               	movwf	(strcpy@dest+1)^0,c
  4548  0009DA  0E7A               	movlw	low STR_12
  4549  0009DC  6E03               	movwf	strcpy@src^0,c
  4550  0009DE  0E08               	movlw	high STR_12
  4551  0009E0  6E04               	movwf	(strcpy@src+1)^0,c
  4552  0009E2  EC6C  F020         	call	_strcpy	;wreg free
  4553  0009E6                     l4265:
  4554                           
  4555                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 362:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  4556  0009E6  0100               	movlb	0	; () banked
  4557  0009E8  0EFD               	movlw	253
  4558  0009EA  277E               	addwf	efgtoa@w& (0+255),f,b
  4559  0009EC  0EFF               	movlw	255
  4560  0009EE  237F               	addwfc	(efgtoa@w+1)& (0+255),f,b
  4561  0009F0                     l4267:
  4562                           
  4563                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 363:         retu
      +                          rn pad(fp, &dbuf[0], w);
  4564  0009F0  C039  F011         	movff	efgtoa@fp,pad@fp
  4565  0009F4  C03A  F012         	movff	efgtoa@fp+1,pad@fp+1
  4566  0009F8  0E14               	movlw	low _dbuf
  4567  0009FA  6E13               	movwf	pad@buf^0,c
  4568  0009FC  0E01               	movlw	high _dbuf
  4569  0009FE  6E14               	movwf	(pad@buf+1)^0,c
  4570  000A00  C07E  F015         	movff	efgtoa@w,pad@p
  4571  000A04  C07F  F016         	movff	efgtoa@w+1,pad@p+1
  4572  000A08  EC65  F01D         	call	_pad	;wreg free
  4573  000A0C  C011  F039         	movff	?_pad,?_efgtoa
  4574  000A10  C012  F03A         	movff	?_pad+1,?_efgtoa+1
  4575  000A14  EF70  F00A         	goto	l1118
  4576  000A18                     l4271:
  4577                           
  4578                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 366:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  4579  000A18  C08C  F001         	movff	efgtoa@g,___fpclassifyf@x
  4580  000A1C  C08D  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  4581  000A20  C08E  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  4582  000A24  C08F  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  4583  000A28  EC16  F01C         	call	___fpclassifyf	;wreg free
  4584  000A2C  5001               	movf	?___fpclassifyf^0,w,c
  4585  000A2E  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  4586  000A30  A4D8               	btfss	status,2,c
  4587  000A32  EF1D  F005         	goto	u5071
  4588  000A36  EF1F  F005         	goto	u5070
  4589  000A3A                     u5071:
  4590  000A3A  EF5F  F005         	goto	l4289
  4591  000A3E                     u5070:
  4592  000A3E  0EBF               	movlw	191
  4593  000A40  6E40               	movwf	??_efgtoa^0,c
  4594  000A42  0EFF               	movlw	255
  4595  000A44  6E41               	movwf	(??_efgtoa+1)^0,c
  4596  000A46  503F               	movf	efgtoa@c^0,w,c
  4597  000A48  6E42               	movwf	(??_efgtoa+2)^0,c
  4598  000A4A  6A43               	clrf	(??_efgtoa+3)^0,c
  4599  000A4C  5040               	movf	??_efgtoa^0,w,c
  4600  000A4E  2642               	addwf	(??_efgtoa+2)^0,f,c
  4601  000A50  5041               	movf	(??_efgtoa+1)^0,w,c
  4602  000A52  2243               	addwfc	(??_efgtoa+3)^0,f,c
  4603  000A54  5043               	movf	(??_efgtoa+3)^0,w,c
  4604  000A56  E10A               	bnz	u5080
  4605  000A58  0E1A               	movlw	26
  4606  000A5A  5C42               	subwf	(??_efgtoa+2)^0,w,c
  4607  000A5C  A0D8               	btfss	status,0,c
  4608  000A5E  EF33  F005         	goto	u5081
  4609  000A62  EF36  F005         	goto	u5080
  4610  000A66                     u5081:
  4611  000A66  0E01               	movlw	1
  4612  000A68  EF37  F005         	goto	u5090
  4613  000A6C                     u5080:
  4614  000A6C  0E00               	movlw	0
  4615  000A6E                     u5090:
  4616  000A6E  0100               	movlb	0	; () banked
  4617  000A70  6F64               	movwf	_efgtoa$1453& (0+255),b
  4618  000A72  6B65               	clrf	(_efgtoa$1453+1)& (0+255),b
  4619  000A74                     
  4620                           ; BSR set to: 0
  4621  000A74  5164               	movf	_efgtoa$1453& (0+255),w,b
  4622  000A76  1165               	iorwf	(_efgtoa$1453+1)& (0+255),w,b
  4623  000A78  B4D8               	btfsc	status,2,c
  4624  000A7A  EF41  F005         	goto	u5101
  4625  000A7E  EF43  F005         	goto	u5100
  4626  000A82                     u5101:
  4627  000A82  EF51  F005         	goto	l4281
  4628  000A86                     u5100:
  4629  000A86                     
  4630                           ; BSR set to: 0
  4631                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 367:             
      +                          strcpy(&dbuf[n], "NAN");
  4632  000A86  0E14               	movlw	low _dbuf
  4633  000A88  2592               	addwf	efgtoa@n& (0+255),w,b
  4634  000A8A  6E01               	movwf	strcpy@dest^0,c
  4635  000A8C  0E01               	movlw	high _dbuf
  4636  000A8E  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4637  000A90  6E02               	movwf	(strcpy@dest+1)^0,c
  4638  000A92  0E76               	movlw	low STR_15
  4639  000A94  6E03               	movwf	strcpy@src^0,c
  4640  000A96  0E08               	movlw	high STR_15
  4641  000A98  6E04               	movwf	(strcpy@src+1)^0,c
  4642  000A9A  EC6C  F020         	call	_strcpy	;wreg free
  4643                           
  4644                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 368:         } el
      +                          se {
  4645  000A9E  EFF3  F004         	goto	l4265
  4646  000AA2                     l4281:
  4647                           
  4648                           ; BSR set to: 0
  4649                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 369:             
      +                          strcpy(&dbuf[n], "nan");
  4650  000AA2  0E14               	movlw	low _dbuf
  4651  000AA4  2592               	addwf	efgtoa@n& (0+255),w,b
  4652  000AA6  6E01               	movwf	strcpy@dest^0,c
  4653  000AA8  0E01               	movlw	high _dbuf
  4654  000AAA  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4655  000AAC  6E02               	movwf	(strcpy@dest+1)^0,c
  4656  000AAE  0E7E               	movlw	low STR_16
  4657  000AB0  6E03               	movwf	strcpy@src^0,c
  4658  000AB2  0E08               	movlw	high STR_16
  4659  000AB4  6E04               	movwf	(strcpy@src+1)^0,c
  4660  000AB6  EC6C  F020         	call	_strcpy	;wreg free
  4661  000ABA  EFF3  F004         	goto	l4265
  4662  000ABE                     l4289:
  4663                           
  4664                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 376:     u = 1.0;
  4665  000ABE  0E00               	movlw	0
  4666  000AC0  0100               	movlb	0	; () banked
  4667  000AC2  6F94               	movwf	efgtoa@u& (0+255),b
  4668  000AC4  0E00               	movlw	0
  4669  000AC6  6F95               	movwf	(efgtoa@u+1)& (0+255),b
  4670  000AC8  0E80               	movlw	128
  4671  000ACA  6F96               	movwf	(efgtoa@u+2)& (0+255),b
  4672  000ACC  0E3F               	movlw	63
  4673  000ACE  6F97               	movwf	(efgtoa@u+3)& (0+255),b
  4674                           
  4675                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 377:     e = 0;
  4676  000AD0  0E00               	movlw	0
  4677  000AD2  6F91               	movwf	(efgtoa@e+1)& (0+255),b
  4678  000AD4  0E00               	movlw	0
  4679  000AD6  6F90               	movwf	efgtoa@e& (0+255),b
  4680  000AD8                     
  4681                           ; BSR set to: 0
  4682                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 378:     if (!(g 
      +                          == 0.0)) {
  4683  000AD8  C08C  F001         	movff	efgtoa@g,___fleq@ff1
  4684  000ADC  C08D  F002         	movff	efgtoa@g+1,___fleq@ff1+1
  4685  000AE0  C08E  F003         	movff	efgtoa@g+2,___fleq@ff1+2
  4686  000AE4  C08F  F004         	movff	efgtoa@g+3,___fleq@ff1+3
  4687  000AE8  0E00               	movlw	0
  4688  000AEA  6E05               	movwf	___fleq@ff2^0,c
  4689  000AEC  0E00               	movlw	0
  4690  000AEE  6E06               	movwf	(___fleq@ff2+1)^0,c
  4691  000AF0  0E00               	movlw	0
  4692  000AF2  6E07               	movwf	(___fleq@ff2+2)^0,c
  4693  000AF4  0E00               	movlw	0
  4694  000AF6  6E08               	movwf	(___fleq@ff2+3)^0,c
  4695  000AF8  ECDD  F01E         	call	___fleq	;wreg free
  4696  000AFC  B0D8               	btfsc	status,0,c
  4697  000AFE  EF83  F005         	goto	u5111
  4698  000B02  EF85  F005         	goto	u5110
  4699  000B06                     u5111:
  4700  000B06  EF08  F006         	goto	l4307
  4701  000B0A                     u5110:
  4702  000B0A  EFA4  F005         	goto	l4299
  4703  000B0E                     l4295:
  4704                           
  4705                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 380:             
      +                          u = u*10.0;
  4706  000B0E  C094  F014         	movff	efgtoa@u,___flmul@b
  4707  000B12  C095  F015         	movff	efgtoa@u+1,___flmul@b+1
  4708  000B16  C096  F016         	movff	efgtoa@u+2,___flmul@b+2
  4709  000B1A  C097  F017         	movff	efgtoa@u+3,___flmul@b+3
  4710  000B1E  0E00               	movlw	0
  4711  000B20  6E18               	movwf	___flmul@a^0,c
  4712  000B22  0E00               	movlw	0
  4713  000B24  6E19               	movwf	(___flmul@a+1)^0,c
  4714  000B26  0E20               	movlw	32
  4715  000B28  6E1A               	movwf	(___flmul@a+2)^0,c
  4716  000B2A  0E41               	movlw	65
  4717  000B2C  6E1B               	movwf	(___flmul@a+3)^0,c
  4718  000B2E  ECE3  F012         	call	___flmul	;wreg free
  4719  000B32  C014  F094         	movff	?___flmul,efgtoa@u
  4720  000B36  C015  F095         	movff	?___flmul+1,efgtoa@u+1
  4721  000B3A  C016  F096         	movff	?___flmul+2,efgtoa@u+2
  4722  000B3E  C017  F097         	movff	?___flmul+3,efgtoa@u+3
  4723  000B42                     
  4724                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 381:             
      +                          ++e;
  4725  000B42  0100               	movlb	0	; () banked
  4726  000B44  4B90               	infsnz	efgtoa@e& (0+255),f,b
  4727  000B46  2B91               	incf	(efgtoa@e+1)& (0+255),f,b
  4728  000B48                     l4299:
  4729                           
  4730                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 379:         whil
      +                          e (!(g < (u*10.0))) {
  4731  000B48  C08C  F02D         	movff	efgtoa@g,___flge@ff1
  4732  000B4C  C08D  F02E         	movff	efgtoa@g+1,___flge@ff1+1
  4733  000B50  C08E  F02F         	movff	efgtoa@g+2,___flge@ff1+2
  4734  000B54  C08F  F030         	movff	efgtoa@g+3,___flge@ff1+3
  4735  000B58  0E00               	movlw	0
  4736  000B5A  6E18               	movwf	___flmul@a^0,c
  4737  000B5C  0E00               	movlw	0
  4738  000B5E  6E19               	movwf	(___flmul@a+1)^0,c
  4739  000B60  0E20               	movlw	32
  4740  000B62  6E1A               	movwf	(___flmul@a+2)^0,c
  4741  000B64  0E41               	movlw	65
  4742  000B66  6E1B               	movwf	(___flmul@a+3)^0,c
  4743  000B68  C094  F014         	movff	efgtoa@u,___flmul@b
  4744  000B6C  C095  F015         	movff	efgtoa@u+1,___flmul@b+1
  4745  000B70  C096  F016         	movff	efgtoa@u+2,___flmul@b+2
  4746  000B74  C097  F017         	movff	efgtoa@u+3,___flmul@b+3
  4747  000B78  ECE3  F012         	call	___flmul	;wreg free
  4748  000B7C  C014  F031         	movff	?___flmul,___flge@ff2
  4749  000B80  C015  F032         	movff	?___flmul+1,___flge@ff2+1
  4750  000B84  C016  F033         	movff	?___flmul+2,___flge@ff2+2
  4751  000B88  C017  F034         	movff	?___flmul+3,___flge@ff2+3
  4752  000B8C  EC94  F01B         	call	___flge	;wreg free
  4753  000B90  B0D8               	btfsc	status,0,c
  4754  000B92  EFCD  F005         	goto	u5121
  4755  000B96  EFCF  F005         	goto	u5120
  4756  000B9A                     u5121:
  4757  000B9A  EF87  F005         	goto	l4295
  4758  000B9E                     u5120:
  4759  000B9E  EFEF  F005         	goto	l4305
  4760  000BA2                     l4301:
  4761                           
  4762                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 384:             
      +                          u = u/10.0;
  4763  000BA2  C094  F001         	movff	efgtoa@u,___fldiv@b
  4764  000BA6  C095  F002         	movff	efgtoa@u+1,___fldiv@b+1
  4765  000BAA  C096  F003         	movff	efgtoa@u+2,___fldiv@b+2
  4766  000BAE  C097  F004         	movff	efgtoa@u+3,___fldiv@b+3
  4767  000BB2  0E00               	movlw	0
  4768  000BB4  6E05               	movwf	___fldiv@a^0,c
  4769  000BB6  0E00               	movlw	0
  4770  000BB8  6E06               	movwf	(___fldiv@a+1)^0,c
  4771  000BBA  0E20               	movlw	32
  4772  000BBC  6E07               	movwf	(___fldiv@a+2)^0,c
  4773  000BBE  0E41               	movlw	65
  4774  000BC0  6E08               	movwf	(___fldiv@a+3)^0,c
  4775  000BC2  ECF8  F014         	call	___fldiv	;wreg free
  4776  000BC6  C001  F094         	movff	?___fldiv,efgtoa@u
  4777  000BCA  C002  F095         	movff	?___fldiv+1,efgtoa@u+1
  4778  000BCE  C003  F096         	movff	?___fldiv+2,efgtoa@u+2
  4779  000BD2  C004  F097         	movff	?___fldiv+3,efgtoa@u+3
  4780  000BD6                     
  4781                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 385:             
      +                          --e;
  4782  000BD6  0100               	movlb	0	; () banked
  4783  000BD8  0790               	decf	efgtoa@e& (0+255),f,b
  4784  000BDA  A0D8               	btfss	status,0,c
  4785  000BDC  0791               	decf	(efgtoa@e+1)& (0+255),f,b
  4786  000BDE                     l4305:
  4787                           
  4788                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 383:         whil
      +                          e (g < u) {
  4789  000BDE  C08C  F02D         	movff	efgtoa@g,___flge@ff1
  4790  000BE2  C08D  F02E         	movff	efgtoa@g+1,___flge@ff1+1
  4791  000BE6  C08E  F02F         	movff	efgtoa@g+2,___flge@ff1+2
  4792  000BEA  C08F  F030         	movff	efgtoa@g+3,___flge@ff1+3
  4793  000BEE  C094  F031         	movff	efgtoa@u,___flge@ff2
  4794  000BF2  C095  F032         	movff	efgtoa@u+1,___flge@ff2+1
  4795  000BF6  C096  F033         	movff	efgtoa@u+2,___flge@ff2+2
  4796  000BFA  C097  F034         	movff	efgtoa@u+3,___flge@ff2+3
  4797  000BFE  EC94  F01B         	call	___flge	;wreg free
  4798  000C02  A0D8               	btfss	status,0,c
  4799  000C04  EF06  F006         	goto	u5131
  4800  000C08  EF08  F006         	goto	u5130
  4801  000C0C                     u5131:
  4802  000C0C  EFD1  F005         	goto	l4301
  4803  000C10                     u5130:
  4804  000C10                     l4307:
  4805                           
  4806                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 390:     mode = (
      +                          char)tolower((int)c);
  4807  000C10  C03F  F007         	movff	efgtoa@c,tolower@c
  4808  000C14  6A08               	clrf	(tolower@c+1)^0,c
  4809  000C16  EC0D  F020         	call	_tolower	;wreg free
  4810  000C1A  5007               	movf	?_tolower^0,w,c
  4811  000C1C  0100               	movlb	0	; () banked
  4812  000C1E  6F81               	movwf	efgtoa@mode& (0+255),b
  4813  000C20                     
  4814                           ; BSR set to: 0
  4815                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 391:     nmode = 
      +                          mode;
  4816  000C20  C081  F080         	movff	efgtoa@mode,efgtoa@nmode
  4817  000C24                     
  4818                           ; BSR set to: 0
  4819                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 392:     if (mode
      +                           == 'g') {
  4820  000C24  0E67               	movlw	103
  4821  000C26  1981               	xorwf	efgtoa@mode& (0+255),w,b
  4822  000C28  A4D8               	btfss	status,2,c
  4823  000C2A  EF19  F006         	goto	u5141
  4824  000C2E  EF1B  F006         	goto	u5140
  4825  000C32                     u5141:
  4826  000C32  EF41  F006         	goto	l4321
  4827  000C36                     u5140:
  4828  000C36                     
  4829                           ; BSR set to: 0
  4830                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 393:   if (prec =
      +                          = 0) {
  4831  000C36  51FA               	movf	_prec& (0+255),w,b
  4832  000C38  11FB               	iorwf	(_prec+1)& (0+255),w,b
  4833  000C3A  A4D8               	btfss	status,2,c
  4834  000C3C  EF22  F006         	goto	u5151
  4835  000C40  EF24  F006         	goto	u5150
  4836  000C44                     u5151:
  4837  000C44  EF28  F006         	goto	l4317
  4838  000C48                     u5150:
  4839  000C48                     
  4840                           ; BSR set to: 0
  4841                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 394:    prec = 1;
  4842  000C48  0E00               	movlw	0
  4843  000C4A  6FFB               	movwf	(_prec+1)& (0+255),b
  4844  000C4C  0E01               	movlw	1
  4845  000C4E  6FFA               	movwf	_prec& (0+255),b
  4846  000C50                     l4317:
  4847                           
  4848                           ; BSR set to: 0
  4849                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 396:         p = 
      +                          (0 < prec) ? prec : 6;
  4850  000C50  BFFB               	btfsc	(_prec+1)& (0+255),7,b
  4851  000C52  EF35  F006         	goto	u5160
  4852  000C56  51FB               	movf	(_prec+1)& (0+255),w,b
  4853  000C58  E106               	bnz	u5161
  4854  000C5A  05FA               	decf	_prec& (0+255),w,b
  4855  000C5C  B0D8               	btfsc	status,0,c
  4856  000C5E  EF33  F006         	goto	u5161
  4857  000C62  EF35  F006         	goto	u5160
  4858  000C66                     u5161:
  4859  000C66  EF3B  F006         	goto	l1136
  4860  000C6A                     u5160:
  4861  000C6A                     l4319:
  4862                           
  4863                           ; BSR set to: 0
  4864  000C6A  0E00               	movlw	0
  4865  000C6C  6F7D               	movwf	(efgtoa@p+1)& (0+255),b
  4866  000C6E  0E06               	movlw	6
  4867  000C70  6F7C               	movwf	efgtoa@p& (0+255),b
  4868  000C72  EF4A  F006         	goto	l4327
  4869  000C76                     l1136:
  4870                           
  4871                           ; BSR set to: 0
  4872  000C76  C0FA  F07C         	movff	_prec,efgtoa@p
  4873  000C7A  C0FB  F07D         	movff	_prec+1,efgtoa@p+1
  4874  000C7E  EF4A  F006         	goto	l4327
  4875  000C82                     l4321:
  4876                           
  4877                           ; BSR set to: 0
  4878                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 398:         p = 
      +                          (prec < 0) ? 6 : prec;
  4879  000C82  BFFB               	btfsc	(_prec+1)& (0+255),7,b
  4880  000C84  EF46  F006         	goto	u5171
  4881  000C88  EF48  F006         	goto	u5170
  4882  000C8C                     u5171:
  4883  000C8C  EF35  F006         	goto	l4319
  4884  000C90                     u5170:
  4885  000C90  EF3B  F006         	goto	l1136
  4886  000C94                     l4327:
  4887                           
  4888                           ; BSR set to: 0
  4889                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 402:     if (mode
      +                           == 'g') {
  4890  000C94  0E67               	movlw	103
  4891  000C96  1981               	xorwf	efgtoa@mode& (0+255),w,b
  4892  000C98  A4D8               	btfss	status,2,c
  4893  000C9A  EF51  F006         	goto	u5181
  4894  000C9E  EF53  F006         	goto	u5180
  4895  000CA2                     u5181:
  4896  000CA2  EF82  F006         	goto	l4337
  4897  000CA6                     u5180:
  4898  000CA6                     
  4899                           ; BSR set to: 0
  4900                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 403:         if (
      +                          !(e < -4) && !((p - 1) < e)) {
  4901  000CA6  AF91               	btfss	(efgtoa@e+1)& (0+255),7,b
  4902  000CA8  EF61  F006         	goto	u5190
  4903  000CAC  0EFC               	movlw	252
  4904  000CAE  5D90               	subwf	efgtoa@e& (0+255),w,b
  4905  000CB0  0EFF               	movlw	255
  4906  000CB2  5991               	subwfb	(efgtoa@e+1)& (0+255),w,b
  4907  000CB4  A0D8               	btfss	status,0,c
  4908  000CB6  EF5F  F006         	goto	u5191
  4909  000CBA  EF61  F006         	goto	u5190
  4910  000CBE                     u5191:
  4911  000CBE  EF80  F006         	goto	l4335
  4912  000CC2                     u5190:
  4913  000CC2                     
  4914                           ; BSR set to: 0
  4915  000CC2  0EFF               	movlw	255
  4916  000CC4  6E40               	movwf	??_efgtoa^0,c
  4917  000CC6  0EFF               	movlw	255
  4918  000CC8  6E41               	movwf	(??_efgtoa+1)^0,c
  4919  000CCA  C07C  F042         	movff	efgtoa@p,??_efgtoa+2
  4920  000CCE  C07D  F043         	movff	efgtoa@p+1,??_efgtoa+3
  4921  000CD2  5040               	movf	??_efgtoa^0,w,c
  4922  000CD4  2642               	addwf	(??_efgtoa+2)^0,f,c
  4923  000CD6  5041               	movf	(??_efgtoa+1)^0,w,c
  4924  000CD8  2243               	addwfc	(??_efgtoa+3)^0,f,c
  4925  000CDA  5190               	movf	efgtoa@e& (0+255),w,b
  4926  000CDC  5C42               	subwf	(??_efgtoa+2)^0,w,c
  4927  000CDE  5043               	movf	(??_efgtoa+3)^0,w,c
  4928  000CE0  0A80               	xorlw	128
  4929  000CE2  6E44               	movwf	(??_efgtoa+4)^0,c
  4930  000CE4  5191               	movf	(efgtoa@e+1)& (0+255),w,b
  4931  000CE6  0A80               	xorlw	128
  4932  000CE8  5844               	subwfb	(??_efgtoa+4)^0,w,c
  4933  000CEA  A0D8               	btfss	status,0,c
  4934  000CEC  EF7A  F006         	goto	u5201
  4935  000CF0  EF7C  F006         	goto	u5200
  4936  000CF4                     u5201:
  4937  000CF4  EF80  F006         	goto	l4335
  4938  000CF8                     u5200:
  4939  000CF8                     
  4940                           ; BSR set to: 0
  4941                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 404:             
      +                          nmode = 'f';
  4942  000CF8  0E66               	movlw	102
  4943  000CFA  6F80               	movwf	efgtoa@nmode& (0+255),b
  4944                           
  4945                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 405:         } el
      +                          se {
  4946  000CFC  EF82  F006         	goto	l4337
  4947  000D00                     l4335:
  4948                           
  4949                           ; BSR set to: 0
  4950                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 406:             
      +                          nmode = 'e';
  4951  000D00  0E65               	movlw	101
  4952  000D02  6F80               	movwf	efgtoa@nmode& (0+255),b
  4953  000D04                     l4337:
  4954                           
  4955                           ; BSR set to: 0
  4956                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 411:     m = p;
  4957  000D04  C07C  F072         	movff	efgtoa@p,efgtoa@m
  4958  000D08  C07D  F073         	movff	efgtoa@p+1,efgtoa@m+1
  4959  000D0C                     
  4960                           ; BSR set to: 0
  4961                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 412:     if (!(mo
      +                          de == 'g') || ((nmode == 'f') && (e < 0))) {
  4962  000D0C  0E67               	movlw	103
  4963  000D0E  1981               	xorwf	efgtoa@mode& (0+255),w,b
  4964  000D10  A4D8               	btfss	status,2,c
  4965  000D12  EF8D  F006         	goto	u5211
  4966  000D16  EF8F  F006         	goto	u5210
  4967  000D1A                     u5211:
  4968  000D1A  EF9F  F006         	goto	l4345
  4969  000D1E                     u5210:
  4970  000D1E                     
  4971                           ; BSR set to: 0
  4972  000D1E  0E66               	movlw	102
  4973  000D20  1980               	xorwf	efgtoa@nmode& (0+255),w,b
  4974  000D22  A4D8               	btfss	status,2,c
  4975  000D24  EF96  F006         	goto	u5221
  4976  000D28  EF98  F006         	goto	u5220
  4977  000D2C                     u5221:
  4978  000D2C  EFA1  F006         	goto	l4347
  4979  000D30                     u5220:
  4980  000D30                     
  4981                           ; BSR set to: 0
  4982  000D30  BF91               	btfsc	(efgtoa@e+1)& (0+255),7,b
  4983  000D32  EF9F  F006         	goto	u5230
  4984  000D36  EF9D  F006         	goto	u5231
  4985  000D3A                     u5231:
  4986  000D3A  EFA1  F006         	goto	l4347
  4987  000D3E                     u5230:
  4988  000D3E                     l4345:
  4989                           
  4990                           ; BSR set to: 0
  4991                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 413:         ++m;
  4992  000D3E  4B72               	infsnz	efgtoa@m& (0+255),f,b
  4993  000D40  2B73               	incf	(efgtoa@m+1)& (0+255),f,b
  4994  000D42                     l4347:
  4995                           
  4996                           ; BSR set to: 0
  4997                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 417:     if (nmod
      +                          e == 'f') {
  4998  000D42  0E66               	movlw	102
  4999  000D44  1980               	xorwf	efgtoa@nmode& (0+255),w,b
  5000  000D46  A4D8               	btfss	status,2,c
  5001  000D48  EFA8  F006         	goto	u5241
  5002  000D4C  EFAA  F006         	goto	u5240
  5003  000D50                     u5241:
  5004  000D50  EFCA  F006         	goto	l4357
  5005  000D54                     u5240:
  5006  000D54                     
  5007                           ; BSR set to: 0
  5008                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 418:         if (
      +                          e < 0) {
  5009  000D54  BF91               	btfsc	(efgtoa@e+1)& (0+255),7,b
  5010  000D56  EFB1  F006         	goto	u5250
  5011  000D5A  EFAF  F006         	goto	u5251
  5012  000D5E                     u5251:
  5013  000D5E  EFBD  F006         	goto	l4353
  5014  000D62                     u5250:
  5015  000D62                     
  5016                           ; BSR set to: 0
  5017                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 419:             
      +                          u = 1.0;
  5018  000D62  0E00               	movlw	0
  5019  000D64  6F94               	movwf	efgtoa@u& (0+255),b
  5020  000D66  0E00               	movlw	0
  5021  000D68  6F95               	movwf	(efgtoa@u+1)& (0+255),b
  5022  000D6A  0E80               	movlw	128
  5023  000D6C  6F96               	movwf	(efgtoa@u+2)& (0+255),b
  5024  000D6E  0E3F               	movlw	63
  5025  000D70  6F97               	movwf	(efgtoa@u+3)& (0+255),b
  5026                           
  5027                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 420:             
      +                          e = 0;
  5028  000D72  0E00               	movlw	0
  5029  000D74  6F91               	movwf	(efgtoa@e+1)& (0+255),b
  5030  000D76  0E00               	movlw	0
  5031  000D78  6F90               	movwf	efgtoa@e& (0+255),b
  5032  000D7A                     l4353:
  5033                           
  5034                           ; BSR set to: 0
  5035                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 422:         if (
      +                          !(mode == 'g')) {
  5036  000D7A  0E67               	movlw	103
  5037  000D7C  1981               	xorwf	efgtoa@mode& (0+255),w,b
  5038  000D7E  B4D8               	btfsc	status,2,c
  5039  000D80  EFC4  F006         	goto	u5261
  5040  000D84  EFC6  F006         	goto	u5260
  5041  000D88                     u5261:
  5042  000D88  EFCA  F006         	goto	l4357
  5043  000D8C                     u5260:
  5044  000D8C                     
  5045                           ; BSR set to: 0
  5046                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 423:             
      +                          m += e;
  5047  000D8C  5190               	movf	efgtoa@e& (0+255),w,b
  5048  000D8E  2772               	addwf	efgtoa@m& (0+255),f,b
  5049  000D90  5191               	movf	(efgtoa@e+1)& (0+255),w,b
  5050  000D92  2373               	addwfc	(efgtoa@m+1)& (0+255),f,b
  5051  000D94                     l4357:
  5052                           
  5053                           ; BSR set to: 0
  5054                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 428:     i = 0;
  5055  000D94  0E00               	movlw	0
  5056  000D96  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  5057  000D98  0E00               	movlw	0
  5058  000D9A  6F8A               	movwf	efgtoa@i& (0+255),b
  5059  000D9C                     
  5060                           ; BSR set to: 0
  5061                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 429:     h = g;
  5062  000D9C  C08C  F082         	movff	efgtoa@g,efgtoa@h
  5063  000DA0  C08D  F083         	movff	efgtoa@g+1,efgtoa@h+1
  5064  000DA4  C08E  F084         	movff	efgtoa@g+2,efgtoa@h+2
  5065  000DA8  C08F  F085         	movff	efgtoa@g+3,efgtoa@h+3
  5066  000DAC                     
  5067                           ; BSR set to: 0
  5068                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 430:     ou = u;
  5069  000DAC  C094  F074         	movff	efgtoa@u,efgtoa@ou
  5070  000DB0  C095  F075         	movff	efgtoa@u+1,efgtoa@ou+1
  5071  000DB4  C096  F076         	movff	efgtoa@u+2,efgtoa@ou+2
  5072  000DB8  C097  F077         	movff	efgtoa@u+3,efgtoa@ou+3
  5073                           
  5074                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  5075  000DBC  EF5B  F007         	goto	l4371
  5076  000DC0                     l4363:
  5077                           
  5078                           ; BSR set to: 0
  5079                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 432:         l = 
      +                          floorf(h/u);
  5080  000DC0  C082  F001         	movff	efgtoa@h,___fldiv@b
  5081  000DC4  C083  F002         	movff	efgtoa@h+1,___fldiv@b+1
  5082  000DC8  C084  F003         	movff	efgtoa@h+2,___fldiv@b+2
  5083  000DCC  C085  F004         	movff	efgtoa@h+3,___fldiv@b+3
  5084  000DD0  C094  F005         	movff	efgtoa@u,___fldiv@a
  5085  000DD4  C095  F006         	movff	efgtoa@u+1,___fldiv@a+1
  5086  000DD8  C096  F007         	movff	efgtoa@u+2,___fldiv@a+2
  5087  000DDC  C097  F008         	movff	efgtoa@u+3,___fldiv@a+3
  5088  000DE0  ECF8  F014         	call	___fldiv	;wreg free
  5089  000DE4  C001  F01A         	movff	?___fldiv,floorf@x
  5090  000DE8  C002  F01B         	movff	?___fldiv+1,floorf@x+1
  5091  000DEC  C003  F01C         	movff	?___fldiv+2,floorf@x+2
  5092  000DF0  C004  F01D         	movff	?___fldiv+3,floorf@x+3
  5093  000DF4  EC32  F018         	call	_floorf	;wreg free
  5094  000DF8  C01A  F086         	movff	?_floorf,efgtoa@l
  5095  000DFC  C01B  F087         	movff	?_floorf+1,efgtoa@l+1
  5096  000E00  C01C  F088         	movff	?_floorf+2,efgtoa@l+2
  5097  000E04  C01D  F089         	movff	?_floorf+3,efgtoa@l+3
  5098                           
  5099                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 433:         d = 
      +                          (int)l;
  5100  000E08  C086  F001         	movff	efgtoa@l,___fltol@f1
  5101  000E0C  C087  F002         	movff	efgtoa@l+1,___fltol@f1+1
  5102  000E10  C088  F003         	movff	efgtoa@l+2,___fltol@f1+2
  5103  000E14  C089  F004         	movff	efgtoa@l+3,___fltol@f1+3
  5104  000E18  EC11  F01B         	call	___fltol	;wreg free
  5105  000E1C  C001  F078         	movff	?___fltol,efgtoa@d
  5106  000E20  C002  F079         	movff	?___fltol+1,efgtoa@d+1
  5107  000E24                     
  5108                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 434:         h -=
      +                           l*u;
  5109  000E24  C082  F02D         	movff	efgtoa@h,___flsub@b
  5110  000E28  C083  F02E         	movff	efgtoa@h+1,___flsub@b+1
  5111  000E2C  C084  F02F         	movff	efgtoa@h+2,___flsub@b+2
  5112  000E30  C085  F030         	movff	efgtoa@h+3,___flsub@b+3
  5113  000E34  C094  F018         	movff	efgtoa@u,___flmul@a
  5114  000E38  C095  F019         	movff	efgtoa@u+1,___flmul@a+1
  5115  000E3C  C096  F01A         	movff	efgtoa@u+2,___flmul@a+2
  5116  000E40  C097  F01B         	movff	efgtoa@u+3,___flmul@a+3
  5117  000E44  C086  F014         	movff	efgtoa@l,___flmul@b
  5118  000E48  C087  F015         	movff	efgtoa@l+1,___flmul@b+1
  5119  000E4C  C088  F016         	movff	efgtoa@l+2,___flmul@b+2
  5120  000E50  C089  F017         	movff	efgtoa@l+3,___flmul@b+3
  5121  000E54  ECE3  F012         	call	___flmul	;wreg free
  5122  000E58  C014  F031         	movff	?___flmul,___flsub@a
  5123  000E5C  C015  F032         	movff	?___flmul+1,___flsub@a+1
  5124  000E60  C016  F033         	movff	?___flmul+2,___flsub@a+2
  5125  000E64  C017  F034         	movff	?___flmul+3,___flsub@a+3
  5126  000E68  EC6E  F021         	call	___flsub	;wreg free
  5127  000E6C  C02D  F082         	movff	?___flsub,efgtoa@h
  5128  000E70  C02E  F083         	movff	?___flsub+1,efgtoa@h+1
  5129  000E74  C02F  F084         	movff	?___flsub+2,efgtoa@h+2
  5130  000E78  C030  F085         	movff	?___flsub+3,efgtoa@h+3
  5131  000E7C                     
  5132                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 435:         u = 
      +                          u/10.0;
  5133  000E7C  C094  F001         	movff	efgtoa@u,___fldiv@b
  5134  000E80  C095  F002         	movff	efgtoa@u+1,___fldiv@b+1
  5135  000E84  C096  F003         	movff	efgtoa@u+2,___fldiv@b+2
  5136  000E88  C097  F004         	movff	efgtoa@u+3,___fldiv@b+3
  5137  000E8C  0E00               	movlw	0
  5138  000E8E  6E05               	movwf	___fldiv@a^0,c
  5139  000E90  0E00               	movlw	0
  5140  000E92  6E06               	movwf	(___fldiv@a+1)^0,c
  5141  000E94  0E20               	movlw	32
  5142  000E96  6E07               	movwf	(___fldiv@a+2)^0,c
  5143  000E98  0E41               	movlw	65
  5144  000E9A  6E08               	movwf	(___fldiv@a+3)^0,c
  5145  000E9C  ECF8  F014         	call	___fldiv	;wreg free
  5146  000EA0  C001  F094         	movff	?___fldiv,efgtoa@u
  5147  000EA4  C002  F095         	movff	?___fldiv+1,efgtoa@u+1
  5148  000EA8  C003  F096         	movff	?___fldiv+2,efgtoa@u+2
  5149  000EAC  C004  F097         	movff	?___fldiv+3,efgtoa@u+3
  5150  000EB0                     
  5151                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 436:         ++i;
  5152  000EB0  0100               	movlb	0	; () banked
  5153  000EB2  4B8A               	infsnz	efgtoa@i& (0+255),f,b
  5154  000EB4  2B8B               	incf	(efgtoa@i+1)& (0+255),f,b
  5155  000EB6                     l4371:
  5156                           
  5157                           ; BSR set to: 0
  5158                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  5159  000EB6  5172               	movf	efgtoa@m& (0+255),w,b
  5160  000EB8  5D8A               	subwf	efgtoa@i& (0+255),w,b
  5161  000EBA  518B               	movf	(efgtoa@i+1)& (0+255),w,b
  5162  000EBC  0A80               	xorlw	128
  5163  000EBE  6E40               	movwf	??_efgtoa^0,c
  5164  000EC0  5173               	movf	(efgtoa@m+1)& (0+255),w,b
  5165  000EC2  0A80               	xorlw	128
  5166  000EC4  5840               	subwfb	??_efgtoa^0,w,c
  5167  000EC6  A0D8               	btfss	status,0,c
  5168  000EC8  EF68  F007         	goto	u5271
  5169  000ECC  EF6A  F007         	goto	u5270
  5170  000ED0                     u5271:
  5171  000ED0  EFE0  F006         	goto	l4363
  5172  000ED4                     u5270:
  5173  000ED4                     
  5174                           ; BSR set to: 0
  5175                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 440:     l = u*5.
      +                          0;
  5176  000ED4  C094  F014         	movff	efgtoa@u,___flmul@b
  5177  000ED8  C095  F015         	movff	efgtoa@u+1,___flmul@b+1
  5178  000EDC  C096  F016         	movff	efgtoa@u+2,___flmul@b+2
  5179  000EE0  C097  F017         	movff	efgtoa@u+3,___flmul@b+3
  5180  000EE4  0E00               	movlw	0
  5181  000EE6  6E18               	movwf	___flmul@a^0,c
  5182  000EE8  0E00               	movlw	0
  5183  000EEA  6E19               	movwf	(___flmul@a+1)^0,c
  5184  000EEC  0EA0               	movlw	160
  5185  000EEE  6E1A               	movwf	(___flmul@a+2)^0,c
  5186  000EF0  0E40               	movlw	64
  5187  000EF2  6E1B               	movwf	(___flmul@a+3)^0,c
  5188  000EF4  ECE3  F012         	call	___flmul	;wreg free
  5189  000EF8  C014  F086         	movff	?___flmul,efgtoa@l
  5190  000EFC  C015  F087         	movff	?___flmul+1,efgtoa@l+1
  5191  000F00  C016  F088         	movff	?___flmul+2,efgtoa@l+2
  5192  000F04  C017  F089         	movff	?___flmul+3,efgtoa@l+3
  5193  000F08                     
  5194                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 441:     if (h < 
      +                          l) {
  5195  000F08  C082  F02D         	movff	efgtoa@h,___flge@ff1
  5196  000F0C  C083  F02E         	movff	efgtoa@h+1,___flge@ff1+1
  5197  000F10  C084  F02F         	movff	efgtoa@h+2,___flge@ff1+2
  5198  000F14  C085  F030         	movff	efgtoa@h+3,___flge@ff1+3
  5199  000F18  C086  F031         	movff	efgtoa@l,___flge@ff2
  5200  000F1C  C087  F032         	movff	efgtoa@l+1,___flge@ff2+1
  5201  000F20  C088  F033         	movff	efgtoa@l+2,___flge@ff2+2
  5202  000F24  C089  F034         	movff	efgtoa@l+3,___flge@ff2+3
  5203  000F28  EC94  F01B         	call	___flge	;wreg free
  5204  000F2C  B0D8               	btfsc	status,0,c
  5205  000F2E  EF9B  F007         	goto	u5281
  5206  000F32  EF9D  F007         	goto	u5280
  5207  000F36                     u5281:
  5208  000F36  EFA8  F007         	goto	l4379
  5209  000F3A                     u5280:
  5210  000F3A                     
  5211                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 442:         l = 
      +                          0.0;
  5212  000F3A  0E00               	movlw	0
  5213  000F3C  0100               	movlb	0	; () banked
  5214  000F3E  6F86               	movwf	efgtoa@l& (0+255),b
  5215  000F40  0E00               	movlw	0
  5216  000F42  6F87               	movwf	(efgtoa@l+1)& (0+255),b
  5217  000F44  0E00               	movlw	0
  5218  000F46  6F88               	movwf	(efgtoa@l+2)& (0+255),b
  5219  000F48  0E00               	movlw	0
  5220  000F4A  6F89               	movwf	(efgtoa@l+3)& (0+255),b
  5221                           
  5222                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 443:     } else {
  5223  000F4C  EFD1  F007         	goto	l4385
  5224  000F50                     l4379:
  5225                           
  5226                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 445:         if (
      +                          (h == l) && !(d % 2)) {
  5227  000F50  C082  F001         	movff	efgtoa@h,___fleq@ff1
  5228  000F54  C083  F002         	movff	efgtoa@h+1,___fleq@ff1+1
  5229  000F58  C084  F003         	movff	efgtoa@h+2,___fleq@ff1+2
  5230  000F5C  C085  F004         	movff	efgtoa@h+3,___fleq@ff1+3
  5231  000F60  C086  F005         	movff	efgtoa@l,___fleq@ff2
  5232  000F64  C087  F006         	movff	efgtoa@l+1,___fleq@ff2+1
  5233  000F68  C088  F007         	movff	efgtoa@l+2,___fleq@ff2+2
  5234  000F6C  C089  F008         	movff	efgtoa@l+3,___fleq@ff2+3
  5235  000F70  ECDD  F01E         	call	___fleq	;wreg free
  5236  000F74  A0D8               	btfss	status,0,c
  5237  000F76  EFBF  F007         	goto	u5291
  5238  000F7A  EFC1  F007         	goto	u5290
  5239  000F7E                     u5291:
  5240  000F7E  EFD1  F007         	goto	l4385
  5241  000F82                     u5290:
  5242  000F82  0100               	movlb	0	; () banked
  5243  000F84  B178               	btfsc	efgtoa@d& (0+255),0,b
  5244  000F86  EFC7  F007         	goto	u5301
  5245  000F8A  EFC9  F007         	goto	u5300
  5246  000F8E                     u5301:
  5247  000F8E  EFD1  F007         	goto	l4385
  5248  000F92                     u5300:
  5249  000F92                     
  5250                           ; BSR set to: 0
  5251                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 446:             
      +                          l = 0.0;
  5252  000F92  0E00               	movlw	0
  5253  000F94  6F86               	movwf	efgtoa@l& (0+255),b
  5254  000F96  0E00               	movlw	0
  5255  000F98  6F87               	movwf	(efgtoa@l+1)& (0+255),b
  5256  000F9A  0E00               	movlw	0
  5257  000F9C  6F88               	movwf	(efgtoa@l+2)& (0+255),b
  5258  000F9E  0E00               	movlw	0
  5259  000FA0  6F89               	movwf	(efgtoa@l+3)& (0+255),b
  5260  000FA2                     l4385:
  5261                           
  5262                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 451:     h = g + 
      +                          l;
  5263  000FA2  C08C  F001         	movff	efgtoa@g,___fladd@b
  5264  000FA6  C08D  F002         	movff	efgtoa@g+1,___fladd@b+1
  5265  000FAA  C08E  F003         	movff	efgtoa@g+2,___fladd@b+2
  5266  000FAE  C08F  F004         	movff	efgtoa@g+3,___fladd@b+3
  5267  000FB2  C086  F005         	movff	efgtoa@l,___fladd@a
  5268  000FB6  C087  F006         	movff	efgtoa@l+1,___fladd@a+1
  5269  000FBA  C088  F007         	movff	efgtoa@l+2,___fladd@a+2
  5270  000FBE  C089  F008         	movff	efgtoa@l+3,___fladd@a+3
  5271  000FC2  EC83  F010         	call	___fladd	;wreg free
  5272  000FC6  C001  F082         	movff	?___fladd,efgtoa@h
  5273  000FCA  C002  F083         	movff	?___fladd+1,efgtoa@h+1
  5274  000FCE  C003  F084         	movff	?___fladd+2,efgtoa@h+2
  5275  000FD2  C004  F085         	movff	?___fladd+3,efgtoa@h+3
  5276  000FD6                     
  5277                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 453:  if (h >= (o
      +                          u*10.0)) {
  5278  000FD6  C082  F02D         	movff	efgtoa@h,___flge@ff1
  5279  000FDA  C083  F02E         	movff	efgtoa@h+1,___flge@ff1+1
  5280  000FDE  C084  F02F         	movff	efgtoa@h+2,___flge@ff1+2
  5281  000FE2  C085  F030         	movff	efgtoa@h+3,___flge@ff1+3
  5282  000FE6  0E00               	movlw	0
  5283  000FE8  6E18               	movwf	___flmul@a^0,c
  5284  000FEA  0E00               	movlw	0
  5285  000FEC  6E19               	movwf	(___flmul@a+1)^0,c
  5286  000FEE  0E20               	movlw	32
  5287  000FF0  6E1A               	movwf	(___flmul@a+2)^0,c
  5288  000FF2  0E41               	movlw	65
  5289  000FF4  6E1B               	movwf	(___flmul@a+3)^0,c
  5290  000FF6  C074  F014         	movff	efgtoa@ou,___flmul@b
  5291  000FFA  C075  F015         	movff	efgtoa@ou+1,___flmul@b+1
  5292  000FFE  C076  F016         	movff	efgtoa@ou+2,___flmul@b+2
  5293  001002  C077  F017         	movff	efgtoa@ou+3,___flmul@b+3
  5294  001006  ECE3  F012         	call	___flmul	;wreg free
  5295  00100A  C014  F031         	movff	?___flmul,___flge@ff2
  5296  00100E  C015  F032         	movff	?___flmul+1,___flge@ff2+1
  5297  001012  C016  F033         	movff	?___flmul+2,___flge@ff2+2
  5298  001016  C017  F034         	movff	?___flmul+3,___flge@ff2+3
  5299  00101A  EC94  F01B         	call	___flge	;wreg free
  5300  00101E  A0D8               	btfss	status,0,c
  5301  001020  EF14  F008         	goto	u5311
  5302  001024  EF16  F008         	goto	u5310
  5303  001028                     u5311:
  5304  001028  EF3F  F008         	goto	l4397
  5305  00102C                     u5310:
  5306  00102C                     
  5307                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 454:   e++;
  5308  00102C  0100               	movlb	0	; () banked
  5309  00102E  4B90               	infsnz	efgtoa@e& (0+255),f,b
  5310  001030  2B91               	incf	(efgtoa@e+1)& (0+255),f,b
  5311  001032                     
  5312                           ; BSR set to: 0
  5313                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 455:   ou *= 10.0
      +                          ;
  5314  001032  C074  F014         	movff	efgtoa@ou,___flmul@b
  5315  001036  C075  F015         	movff	efgtoa@ou+1,___flmul@b+1
  5316  00103A  C076  F016         	movff	efgtoa@ou+2,___flmul@b+2
  5317  00103E  C077  F017         	movff	efgtoa@ou+3,___flmul@b+3
  5318  001042  0E00               	movlw	0
  5319  001044  6E18               	movwf	___flmul@a^0,c
  5320  001046  0E00               	movlw	0
  5321  001048  6E19               	movwf	(___flmul@a+1)^0,c
  5322  00104A  0E20               	movlw	32
  5323  00104C  6E1A               	movwf	(___flmul@a+2)^0,c
  5324  00104E  0E41               	movlw	65
  5325  001050  6E1B               	movwf	(___flmul@a+3)^0,c
  5326  001052  ECE3  F012         	call	___flmul	;wreg free
  5327  001056  C014  F074         	movff	?___flmul,efgtoa@ou
  5328  00105A  C015  F075         	movff	?___flmul+1,efgtoa@ou+1
  5329  00105E  C016  F076         	movff	?___flmul+2,efgtoa@ou+2
  5330  001062  C017  F077         	movff	?___flmul+3,efgtoa@ou+3
  5331  001066                     
  5332                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 456:   if (nmode 
      +                          == 'f') {
  5333  001066  0E66               	movlw	102
  5334  001068  0100               	movlb	0	; () banked
  5335  00106A  1980               	xorwf	efgtoa@nmode& (0+255),w,b
  5336  00106C  A4D8               	btfss	status,2,c
  5337  00106E  EF3B  F008         	goto	u5321
  5338  001072  EF3D  F008         	goto	u5320
  5339  001076                     u5321:
  5340  001076  EF3F  F008         	goto	l4397
  5341  00107A                     u5320:
  5342  00107A                     
  5343                           ; BSR set to: 0
  5344                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 458:    m++;
  5345  00107A  4B72               	infsnz	efgtoa@m& (0+255),f,b
  5346  00107C  2B73               	incf	(efgtoa@m+1)& (0+255),f,b
  5347  00107E                     l4397:
  5348                           
  5349                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 463:     u = ou;
  5350  00107E  C074  F094         	movff	efgtoa@ou,efgtoa@u
  5351  001082  C075  F095         	movff	efgtoa@ou+1,efgtoa@u+1
  5352  001086  C076  F096         	movff	efgtoa@ou+2,efgtoa@u+2
  5353  00108A  C077  F097         	movff	efgtoa@ou+3,efgtoa@u+3
  5354  00108E                     
  5355                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 464:     ne = (nm
      +                          ode == 'e') ? 0 : e;
  5356  00108E  0E65               	movlw	101
  5357  001090  0100               	movlb	0	; () banked
  5358  001092  1980               	xorwf	efgtoa@nmode& (0+255),w,b
  5359  001094  B4D8               	btfsc	status,2,c
  5360  001096  EF4F  F008         	goto	u5331
  5361  00109A  EF51  F008         	goto	u5330
  5362  00109E                     u5331:
  5363  00109E  EF57  F008         	goto	l4403
  5364  0010A2                     u5330:
  5365  0010A2                     
  5366                           ; BSR set to: 0
  5367  0010A2  C090  F070         	movff	efgtoa@e,efgtoa@ne
  5368  0010A6  C091  F071         	movff	efgtoa@e+1,efgtoa@ne+1
  5369  0010AA  EF5B  F008         	goto	l1164
  5370  0010AE                     l4403:
  5371                           
  5372                           ; BSR set to: 0
  5373  0010AE  0E00               	movlw	0
  5374  0010B0  6F71               	movwf	(efgtoa@ne+1)& (0+255),b
  5375  0010B2  0E00               	movlw	0
  5376  0010B4  6F70               	movwf	efgtoa@ne& (0+255),b
  5377  0010B6                     l1164:
  5378                           
  5379                           ; BSR set to: 0
  5380                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 465:     pp = 0;
  5381  0010B6  0E00               	movlw	0
  5382  0010B8  6F6F               	movwf	(efgtoa@pp+1)& (0+255),b
  5383  0010BA  0E00               	movlw	0
  5384  0010BC  6F6E               	movwf	efgtoa@pp& (0+255),b
  5385                           
  5386                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 466:     t = 0;
  5387  0010BE  0E00               	movlw	0
  5388  0010C0  6F6D               	movwf	(efgtoa@t+1)& (0+255),b
  5389  0010C2  0E00               	movlw	0
  5390  0010C4  6F6C               	movwf	efgtoa@t& (0+255),b
  5391                           
  5392                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 467:     i = 0;
  5393  0010C6  0E00               	movlw	0
  5394  0010C8  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  5395  0010CA  0E00               	movlw	0
  5396  0010CC  6F8A               	movwf	efgtoa@i& (0+255),b
  5397                           
  5398                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  5399  0010CE  EF56  F009         	goto	l4453
  5400  0010D2                     l4405:
  5401                           
  5402                           ; BSR set to: 0
  5403                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 469:         l = 
      +                          floorf(h/u);
  5404  0010D2  C082  F001         	movff	efgtoa@h,___fldiv@b
  5405  0010D6  C083  F002         	movff	efgtoa@h+1,___fldiv@b+1
  5406  0010DA  C084  F003         	movff	efgtoa@h+2,___fldiv@b+2
  5407  0010DE  C085  F004         	movff	efgtoa@h+3,___fldiv@b+3
  5408  0010E2  C094  F005         	movff	efgtoa@u,___fldiv@a
  5409  0010E6  C095  F006         	movff	efgtoa@u+1,___fldiv@a+1
  5410  0010EA  C096  F007         	movff	efgtoa@u+2,___fldiv@a+2
  5411  0010EE  C097  F008         	movff	efgtoa@u+3,___fldiv@a+3
  5412  0010F2  ECF8  F014         	call	___fldiv	;wreg free
  5413  0010F6  C001  F01A         	movff	?___fldiv,floorf@x
  5414  0010FA  C002  F01B         	movff	?___fldiv+1,floorf@x+1
  5415  0010FE  C003  F01C         	movff	?___fldiv+2,floorf@x+2
  5416  001102  C004  F01D         	movff	?___fldiv+3,floorf@x+3
  5417  001106  EC32  F018         	call	_floorf	;wreg free
  5418  00110A  C01A  F086         	movff	?_floorf,efgtoa@l
  5419  00110E  C01B  F087         	movff	?_floorf+1,efgtoa@l+1
  5420  001112  C01C  F088         	movff	?_floorf+2,efgtoa@l+2
  5421  001116  C01D  F089         	movff	?_floorf+3,efgtoa@l+3
  5422                           
  5423                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 470:         d = 
      +                          (int)l;
  5424  00111A  C086  F001         	movff	efgtoa@l,___fltol@f1
  5425  00111E  C087  F002         	movff	efgtoa@l+1,___fltol@f1+1
  5426  001122  C088  F003         	movff	efgtoa@l+2,___fltol@f1+2
  5427  001126  C089  F004         	movff	efgtoa@l+3,___fltol@f1+3
  5428  00112A  EC11  F01B         	call	___fltol	;wreg free
  5429  00112E  C001  F078         	movff	?___fltol,efgtoa@d
  5430  001132  C002  F079         	movff	?___fltol+1,efgtoa@d+1
  5431  001136                     
  5432                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 471:         if (
      +                          !(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  5433  001136  0100               	movlb	0	; () banked
  5434  001138  B9FC               	btfsc	_flags& (0+255),4,b
  5435  00113A  EFA1  F008         	goto	u5341
  5436  00113E  EFA3  F008         	goto	u5340
  5437  001142                     u5341:
  5438  001142  EFC0  F008         	goto	l4417
  5439  001146                     u5340:
  5440  001146                     
  5441                           ; BSR set to: 0
  5442  001146  5178               	movf	efgtoa@d& (0+255),w,b
  5443  001148  1179               	iorwf	(efgtoa@d+1)& (0+255),w,b
  5444  00114A  A4D8               	btfss	status,2,c
  5445  00114C  EFAA  F008         	goto	u5351
  5446  001150  EFAC  F008         	goto	u5350
  5447  001154                     u5351:
  5448  001154  EFC0  F008         	goto	l4417
  5449  001158                     u5350:
  5450  001158                     
  5451                           ; BSR set to: 0
  5452  001158  0E67               	movlw	103
  5453  00115A  1981               	xorwf	efgtoa@mode& (0+255),w,b
  5454  00115C  A4D8               	btfss	status,2,c
  5455  00115E  EFB3  F008         	goto	u5361
  5456  001162  EFB5  F008         	goto	u5360
  5457  001166                     u5361:
  5458  001166  EFC0  F008         	goto	l4417
  5459  00116A                     u5360:
  5460  00116A                     
  5461                           ; BSR set to: 0
  5462  00116A  BF71               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  5463  00116C  EFBC  F008         	goto	u5370
  5464  001170  EFBA  F008         	goto	u5371
  5465  001174                     u5371:
  5466  001174  EFC0  F008         	goto	l4417
  5467  001178                     u5370:
  5468  001178                     
  5469                           ; BSR set to: 0
  5470                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 472:             
      +                          ++t;
  5471  001178  4B6C               	infsnz	efgtoa@t& (0+255),f,b
  5472  00117A  2B6D               	incf	(efgtoa@t+1)& (0+255),f,b
  5473                           
  5474                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 473:         } el
      +                          se {
  5475  00117C  EF0A  F009         	goto	l4445
  5476  001180                     l4417:
  5477                           
  5478                           ; BSR set to: 0
  5479                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 474:             
      +                          if (!pp && (ne < 0)) {
  5480  001180  516E               	movf	efgtoa@pp& (0+255),w,b
  5481  001182  116F               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  5482  001184  A4D8               	btfss	status,2,c
  5483  001186  EFC7  F008         	goto	u5381
  5484  00118A  EFC9  F008         	goto	u5380
  5485  00118E                     u5381:
  5486  00118E  EFF3  F008         	goto	l4437
  5487  001192                     u5380:
  5488  001192                     
  5489                           ; BSR set to: 0
  5490  001192  BF71               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  5491  001194  EFD0  F008         	goto	u5390
  5492  001198  EFCE  F008         	goto	u5391
  5493  00119C                     u5391:
  5494  00119C  EFF3  F008         	goto	l4437
  5495  0011A0                     u5390:
  5496  0011A0                     
  5497                           ; BSR set to: 0
  5498                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 475:             
      +                              dbuf[n++] = '.';
  5499  0011A0  0E14               	movlw	low _dbuf
  5500  0011A2  2592               	addwf	efgtoa@n& (0+255),w,b
  5501  0011A4  6ED9               	movwf	fsr2l,c
  5502  0011A6  0E01               	movlw	high _dbuf
  5503  0011A8  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5504  0011AA  6EDA               	movwf	fsr2h,c
  5505  0011AC  0E2E               	movlw	46
  5506  0011AE  6EDF               	movwf	indf2,c
  5507  0011B0                     
  5508                           ; BSR set to: 0
  5509  0011B0  4B92               	infsnz	efgtoa@n& (0+255),f,b
  5510  0011B2  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  5511  0011B4                     
  5512                           ; BSR set to: 0
  5513                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 476:             
      +                              --w;
  5514  0011B4  077E               	decf	efgtoa@w& (0+255),f,b
  5515  0011B6  A0D8               	btfss	status,0,c
  5516  0011B8  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  5517  0011BA                     
  5518                           ; BSR set to: 0
  5519                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 477:             
      +                              pp = 1;
  5520  0011BA  0E00               	movlw	0
  5521  0011BC  6F6F               	movwf	(efgtoa@pp+1)& (0+255),b
  5522  0011BE  0E01               	movlw	1
  5523  0011C0  6F6E               	movwf	efgtoa@pp& (0+255),b
  5524  0011C2  EFF3  F008         	goto	l4437
  5525  0011C6                     l4429:
  5526                           
  5527                           ; BSR set to: 0
  5528                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 480:             
      +                              dbuf[n++] = '0';
  5529  0011C6  0E14               	movlw	low _dbuf
  5530  0011C8  2592               	addwf	efgtoa@n& (0+255),w,b
  5531  0011CA  6ED9               	movwf	fsr2l,c
  5532  0011CC  0E01               	movlw	high _dbuf
  5533  0011CE  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5534  0011D0  6EDA               	movwf	fsr2h,c
  5535  0011D2  0E30               	movlw	48
  5536  0011D4  6EDF               	movwf	indf2,c
  5537  0011D6                     
  5538                           ; BSR set to: 0
  5539  0011D6  4B92               	infsnz	efgtoa@n& (0+255),f,b
  5540  0011D8  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  5541  0011DA                     
  5542                           ; BSR set to: 0
  5543                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 481:             
      +                              --w;
  5544  0011DA  077E               	decf	efgtoa@w& (0+255),f,b
  5545  0011DC  A0D8               	btfss	status,0,c
  5546  0011DE  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  5547  0011E0                     
  5548                           ; BSR set to: 0
  5549                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 482:             
      +                              --t;
  5550  0011E0  076C               	decf	efgtoa@t& (0+255),f,b
  5551  0011E2  A0D8               	btfss	status,0,c
  5552  0011E4  076D               	decf	(efgtoa@t+1)& (0+255),f,b
  5553  0011E6                     l4437:
  5554                           
  5555                           ; BSR set to: 0
  5556                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 479:             
      +                          while (t) {
  5557  0011E6  516C               	movf	efgtoa@t& (0+255),w,b
  5558  0011E8  116D               	iorwf	(efgtoa@t+1)& (0+255),w,b
  5559  0011EA  A4D8               	btfss	status,2,c
  5560  0011EC  EFFA  F008         	goto	u5401
  5561  0011F0  EFFC  F008         	goto	u5400
  5562  0011F4                     u5401:
  5563  0011F4  EFE3  F008         	goto	l4429
  5564  0011F8                     u5400:
  5565  0011F8                     
  5566                           ; BSR set to: 0
  5567                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 484:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  5568  0011F8  0E14               	movlw	low _dbuf
  5569  0011FA  2592               	addwf	efgtoa@n& (0+255),w,b
  5570  0011FC  6ED9               	movwf	fsr2l,c
  5571  0011FE  0E01               	movlw	high _dbuf
  5572  001200  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5573  001202  6EDA               	movwf	fsr2h,c
  5574  001204  5178               	movf	efgtoa@d& (0+255),w,b
  5575  001206  0F30               	addlw	48
  5576  001208  6EDF               	movwf	indf2,c
  5577  00120A                     
  5578                           ; BSR set to: 0
  5579  00120A  4B92               	infsnz	efgtoa@n& (0+255),f,b
  5580  00120C  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  5581  00120E                     
  5582                           ; BSR set to: 0
  5583                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 485:             
      +                          --w;
  5584  00120E  077E               	decf	efgtoa@w& (0+255),f,b
  5585  001210  A0D8               	btfss	status,0,c
  5586  001212  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  5587  001214                     l4445:
  5588                           
  5589                           ; BSR set to: 0
  5590                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 487:         h -=
      +                           l*u;
  5591  001214  C082  F02D         	movff	efgtoa@h,___flsub@b
  5592  001218  C083  F02E         	movff	efgtoa@h+1,___flsub@b+1
  5593  00121C  C084  F02F         	movff	efgtoa@h+2,___flsub@b+2
  5594  001220  C085  F030         	movff	efgtoa@h+3,___flsub@b+3
  5595  001224  C094  F018         	movff	efgtoa@u,___flmul@a
  5596  001228  C095  F019         	movff	efgtoa@u+1,___flmul@a+1
  5597  00122C  C096  F01A         	movff	efgtoa@u+2,___flmul@a+2
  5598  001230  C097  F01B         	movff	efgtoa@u+3,___flmul@a+3
  5599  001234  C086  F014         	movff	efgtoa@l,___flmul@b
  5600  001238  C087  F015         	movff	efgtoa@l+1,___flmul@b+1
  5601  00123C  C088  F016         	movff	efgtoa@l+2,___flmul@b+2
  5602  001240  C089  F017         	movff	efgtoa@l+3,___flmul@b+3
  5603  001244  ECE3  F012         	call	___flmul	;wreg free
  5604  001248  C014  F031         	movff	?___flmul,___flsub@a
  5605  00124C  C015  F032         	movff	?___flmul+1,___flsub@a+1
  5606  001250  C016  F033         	movff	?___flmul+2,___flsub@a+2
  5607  001254  C017  F034         	movff	?___flmul+3,___flsub@a+3
  5608  001258  EC6E  F021         	call	___flsub	;wreg free
  5609  00125C  C02D  F082         	movff	?___flsub,efgtoa@h
  5610  001260  C02E  F083         	movff	?___flsub+1,efgtoa@h+1
  5611  001264  C02F  F084         	movff	?___flsub+2,efgtoa@h+2
  5612  001268  C030  F085         	movff	?___flsub+3,efgtoa@h+3
  5613  00126C                     
  5614                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 488:         u = 
      +                          u/10.0;
  5615  00126C  C094  F001         	movff	efgtoa@u,___fldiv@b
  5616  001270  C095  F002         	movff	efgtoa@u+1,___fldiv@b+1
  5617  001274  C096  F003         	movff	efgtoa@u+2,___fldiv@b+2
  5618  001278  C097  F004         	movff	efgtoa@u+3,___fldiv@b+3
  5619  00127C  0E00               	movlw	0
  5620  00127E  6E05               	movwf	___fldiv@a^0,c
  5621  001280  0E00               	movlw	0
  5622  001282  6E06               	movwf	(___fldiv@a+1)^0,c
  5623  001284  0E20               	movlw	32
  5624  001286  6E07               	movwf	(___fldiv@a+2)^0,c
  5625  001288  0E41               	movlw	65
  5626  00128A  6E08               	movwf	(___fldiv@a+3)^0,c
  5627  00128C  ECF8  F014         	call	___fldiv	;wreg free
  5628  001290  C001  F094         	movff	?___fldiv,efgtoa@u
  5629  001294  C002  F095         	movff	?___fldiv+1,efgtoa@u+1
  5630  001298  C003  F096         	movff	?___fldiv+2,efgtoa@u+2
  5631  00129C  C004  F097         	movff	?___fldiv+3,efgtoa@u+3
  5632  0012A0                     
  5633                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 489:         --ne
      +                          ;
  5634  0012A0  0100               	movlb	0	; () banked
  5635  0012A2  0770               	decf	efgtoa@ne& (0+255),f,b
  5636  0012A4  A0D8               	btfss	status,0,c
  5637  0012A6  0771               	decf	(efgtoa@ne+1)& (0+255),f,b
  5638  0012A8                     
  5639                           ; BSR set to: 0
  5640                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 490:         ++i;
  5641  0012A8  4B8A               	infsnz	efgtoa@i& (0+255),f,b
  5642  0012AA  2B8B               	incf	(efgtoa@i+1)& (0+255),f,b
  5643  0012AC                     l4453:
  5644                           
  5645                           ; BSR set to: 0
  5646                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  5647  0012AC  5172               	movf	efgtoa@m& (0+255),w,b
  5648  0012AE  5D8A               	subwf	efgtoa@i& (0+255),w,b
  5649  0012B0  518B               	movf	(efgtoa@i+1)& (0+255),w,b
  5650  0012B2  0A80               	xorlw	128
  5651  0012B4  6E40               	movwf	??_efgtoa^0,c
  5652  0012B6  5173               	movf	(efgtoa@m+1)& (0+255),w,b
  5653  0012B8  0A80               	xorlw	128
  5654  0012BA  5840               	subwfb	??_efgtoa^0,w,c
  5655  0012BC  B0D8               	btfsc	status,0,c
  5656  0012BE  EF63  F009         	goto	u5411
  5657  0012C2  EF65  F009         	goto	u5410
  5658  0012C6                     u5411:
  5659  0012C6  EF73  F009         	goto	l4457
  5660  0012CA                     u5410:
  5661  0012CA                     
  5662                           ; BSR set to: 0
  5663  0012CA  BF93               	btfsc	(efgtoa@n+1)& (0+255),7,b
  5664  0012CC  EF71  F009         	goto	u5421
  5665  0012D0  5193               	movf	(efgtoa@n+1)& (0+255),w,b
  5666  0012D2  E109               	bnz	u5420
  5667  0012D4  0E4B               	movlw	75
  5668  0012D6  5D92               	subwf	efgtoa@n& (0+255),w,b
  5669  0012D8  A0D8               	btfss	status,0,c
  5670  0012DA  EF71  F009         	goto	u5421
  5671  0012DE  EF73  F009         	goto	u5420
  5672  0012E2                     u5421:
  5673  0012E2  EF69  F008         	goto	l4405
  5674  0012E6                     u5420:
  5675  0012E6                     l4457:
  5676                           
  5677                           ; BSR set to: 0
  5678                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 492:     if (!pp 
      +                          && (flags & (1 << 4))) {
  5679  0012E6  516E               	movf	efgtoa@pp& (0+255),w,b
  5680  0012E8  116F               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  5681  0012EA  A4D8               	btfss	status,2,c
  5682  0012EC  EF7A  F009         	goto	u5431
  5683  0012F0  EF7C  F009         	goto	u5430
  5684  0012F4                     u5431:
  5685  0012F4  EF8D  F009         	goto	l4465
  5686  0012F8                     u5430:
  5687  0012F8                     
  5688                           ; BSR set to: 0
  5689  0012F8  A9FC               	btfss	_flags& (0+255),4,b
  5690  0012FA  EF81  F009         	goto	u5441
  5691  0012FE  EF83  F009         	goto	u5440
  5692  001302                     u5441:
  5693  001302  EF8D  F009         	goto	l4465
  5694  001306                     u5440:
  5695  001306                     
  5696                           ; BSR set to: 0
  5697                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 493:         dbuf
      +                          [n++] = '.';
  5698  001306  0E14               	movlw	low _dbuf
  5699  001308  2592               	addwf	efgtoa@n& (0+255),w,b
  5700  00130A  6ED9               	movwf	fsr2l,c
  5701  00130C  0E01               	movlw	high _dbuf
  5702  00130E  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5703  001310  6EDA               	movwf	fsr2h,c
  5704  001312  0E2E               	movlw	46
  5705  001314  6EDF               	movwf	indf2,c
  5706  001316                     
  5707                           ; BSR set to: 0
  5708  001316  4B92               	infsnz	efgtoa@n& (0+255),f,b
  5709  001318  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  5710  00131A                     l4465:
  5711                           
  5712                           ; BSR set to: 0
  5713                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 495:     dbuf[n] 
      +                          = '\0';
  5714  00131A  0E14               	movlw	low _dbuf
  5715  00131C  2592               	addwf	efgtoa@n& (0+255),w,b
  5716  00131E  6ED9               	movwf	fsr2l,c
  5717  001320  0E01               	movlw	high _dbuf
  5718  001322  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5719  001324  6EDA               	movwf	fsr2h,c
  5720  001326  0E00               	movlw	0
  5721  001328  6EDF               	movwf	indf2,c
  5722  00132A                     
  5723                           ; BSR set to: 0
  5724                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 498:     if (nmod
      +                          e == 'e') {
  5725  00132A  0E65               	movlw	101
  5726  00132C  1980               	xorwf	efgtoa@nmode& (0+255),w,b
  5727  00132E  A4D8               	btfss	status,2,c
  5728  001330  EF9C  F009         	goto	u5451
  5729  001334  EF9E  F009         	goto	u5450
  5730  001338                     u5451:
  5731  001338  EFF8  F004         	goto	l4267
  5732  00133C                     u5450:
  5733  00133C                     
  5734                           ; BSR set to: 0
  5735                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 499:         i = 
      +                          sizeof(dbuf) - 1;
  5736  00133C  0E00               	movlw	0
  5737  00133E  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  5738  001340  0E4F               	movlw	79
  5739  001342  6F8A               	movwf	efgtoa@i& (0+255),b
  5740  001344                     
  5741                           ; BSR set to: 0
  5742                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 500:         dbuf
      +                          [i] = '\0';
  5743  001344  0E14               	movlw	low _dbuf
  5744  001346  258A               	addwf	efgtoa@i& (0+255),w,b
  5745  001348  6ED9               	movwf	fsr2l,c
  5746  00134A  0E01               	movlw	high _dbuf
  5747  00134C  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5748  00134E  6EDA               	movwf	fsr2h,c
  5749  001350  0E00               	movlw	0
  5750  001352  6EDF               	movwf	indf2,c
  5751  001354                     
  5752                           ; BSR set to: 0
  5753                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 501:         sign
      +                           = 0;
  5754  001354  0E00               	movlw	0
  5755  001356  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  5756  001358  0E00               	movlw	0
  5757  00135A  6F7A               	movwf	efgtoa@sign& (0+255),b
  5758  00135C                     
  5759                           ; BSR set to: 0
  5760                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 502:         if (
      +                          e < 0) {
  5761  00135C  BF91               	btfsc	(efgtoa@e+1)& (0+255),7,b
  5762  00135E  EFB5  F009         	goto	u5460
  5763  001362  EFB3  F009         	goto	u5461
  5764  001366                     u5461:
  5765  001366  EFBD  F009         	goto	l4481
  5766  00136A                     u5460:
  5767  00136A                     
  5768                           ; BSR set to: 0
  5769                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 503:             
      +                          sign = 1;
  5770  00136A  0E00               	movlw	0
  5771  00136C  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  5772  00136E  0E01               	movlw	1
  5773  001370  6F7A               	movwf	efgtoa@sign& (0+255),b
  5774  001372                     
  5775                           ; BSR set to: 0
  5776                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 504:             
      +                          e = -e;
  5777  001372  6D90               	negf	efgtoa@e& (0+255),b
  5778  001374  1F91               	comf	(efgtoa@e+1)& (0+255),f,b
  5779  001376  B0D8               	btfsc	status,0,c
  5780  001378  2B91               	incf	(efgtoa@e+1)& (0+255),f,b
  5781  00137A                     l4481:
  5782                           
  5783                           ; BSR set to: 0
  5784                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 506:         p = 
      +                          2;
  5785  00137A  0E00               	movlw	0
  5786  00137C  6F7D               	movwf	(efgtoa@p+1)& (0+255),b
  5787  00137E  0E02               	movlw	2
  5788  001380  6F7C               	movwf	efgtoa@p& (0+255),b
  5789                           
  5790                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  5791  001382  EFEE  F009         	goto	l4493
  5792  001386                     l4483:
  5793                           
  5794                           ; BSR set to: 0
  5795                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 508:             
      +                          --i;
  5796  001386  078A               	decf	efgtoa@i& (0+255),f,b
  5797  001388  A0D8               	btfss	status,0,c
  5798  00138A  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  5799  00138C                     
  5800                           ; BSR set to: 0
  5801                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 509:             
      +                          dbuf[i] = '0' + (e % 10);
  5802  00138C  0E14               	movlw	low _dbuf
  5803  00138E  258A               	addwf	efgtoa@i& (0+255),w,b
  5804  001390  6ED9               	movwf	fsr2l,c
  5805  001392  0E01               	movlw	high _dbuf
  5806  001394  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5807  001396  6EDA               	movwf	fsr2h,c
  5808  001398  C090  F001         	movff	efgtoa@e,___awmod@dividend
  5809  00139C  C091  F002         	movff	efgtoa@e+1,___awmod@dividend+1
  5810  0013A0  0E00               	movlw	0
  5811  0013A2  6E04               	movwf	(___awmod@divisor+1)^0,c
  5812  0013A4  0E0A               	movlw	10
  5813  0013A6  6E03               	movwf	___awmod@divisor^0,c
  5814  0013A8  EC85  F01E         	call	___awmod	;wreg free
  5815  0013AC  5001               	movf	?___awmod^0,w,c
  5816  0013AE  0F30               	addlw	48
  5817  0013B0  6EDF               	movwf	indf2,c
  5818  0013B2                     
  5819                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 510:             
      +                          e = e / 10;
  5820  0013B2  C090  F001         	movff	efgtoa@e,___awdiv@dividend
  5821  0013B6  C091  F002         	movff	efgtoa@e+1,___awdiv@dividend+1
  5822  0013BA  0E00               	movlw	0
  5823  0013BC  6E04               	movwf	(___awdiv@divisor+1)^0,c
  5824  0013BE  0E0A               	movlw	10
  5825  0013C0  6E03               	movwf	___awdiv@divisor^0,c
  5826  0013C2  ECC8  F01D         	call	___awdiv	;wreg free
  5827  0013C6  C001  F090         	movff	?___awdiv,efgtoa@e
  5828  0013CA  C002  F091         	movff	?___awdiv+1,efgtoa@e+1
  5829  0013CE                     
  5830                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 511:             
      +                          --p;
  5831  0013CE  0100               	movlb	0	; () banked
  5832  0013D0  077C               	decf	efgtoa@p& (0+255),f,b
  5833  0013D2  A0D8               	btfss	status,0,c
  5834  0013D4  077D               	decf	(efgtoa@p+1)& (0+255),f,b
  5835  0013D6                     
  5836                           ; BSR set to: 0
  5837                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 512:             
      +                          --w;
  5838  0013D6  077E               	decf	efgtoa@w& (0+255),f,b
  5839  0013D8  A0D8               	btfss	status,0,c
  5840  0013DA  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  5841  0013DC                     l4493:
  5842                           
  5843                           ; BSR set to: 0
  5844                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  5845  0013DC  5190               	movf	efgtoa@e& (0+255),w,b
  5846  0013DE  1191               	iorwf	(efgtoa@e+1)& (0+255),w,b
  5847  0013E0  A4D8               	btfss	status,2,c
  5848  0013E2  EFF5  F009         	goto	u5471
  5849  0013E6  EFF7  F009         	goto	u5470
  5850  0013EA                     u5471:
  5851  0013EA  EFC3  F009         	goto	l4483
  5852  0013EE                     u5470:
  5853  0013EE                     
  5854                           ; BSR set to: 0
  5855  0013EE  BF7D               	btfsc	(efgtoa@p+1)& (0+255),7,b
  5856  0013F0  EF04  F00A         	goto	u5480
  5857  0013F4  517D               	movf	(efgtoa@p+1)& (0+255),w,b
  5858  0013F6  E106               	bnz	u5481
  5859  0013F8  057C               	decf	efgtoa@p& (0+255),w,b
  5860  0013FA  B0D8               	btfsc	status,0,c
  5861  0013FC  EF02  F00A         	goto	u5481
  5862  001400  EF04  F00A         	goto	u5480
  5863  001404                     u5481:
  5864  001404  EFC3  F009         	goto	l4483
  5865  001408                     u5480:
  5866  001408                     
  5867                           ; BSR set to: 0
  5868                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 514:         --i;
  5869  001408  078A               	decf	efgtoa@i& (0+255),f,b
  5870  00140A  A0D8               	btfss	status,0,c
  5871  00140C  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  5872  00140E                     
  5873                           ; BSR set to: 0
  5874                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 515:         dbuf
      +                          [i] = sign ? '-' : '+';
  5875  00140E  517A               	movf	efgtoa@sign& (0+255),w,b
  5876  001410  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  5877  001412  A4D8               	btfss	status,2,c
  5878  001414  EF0E  F00A         	goto	u5491
  5879  001418  EF10  F00A         	goto	u5490
  5880  00141C                     u5491:
  5881  00141C  EF16  F00A         	goto	l4503
  5882  001420                     u5490:
  5883  001420                     
  5884                           ; BSR set to: 0
  5885  001420  0E00               	movlw	0
  5886  001422  6F67               	movwf	(_efgtoa$1457+1)& (0+255),b
  5887  001424  0E2B               	movlw	43
  5888  001426  6F66               	movwf	_efgtoa$1457& (0+255),b
  5889  001428  EF1A  F00A         	goto	l4505
  5890  00142C                     l4503:
  5891                           
  5892                           ; BSR set to: 0
  5893  00142C  0E00               	movlw	0
  5894  00142E  6F67               	movwf	(_efgtoa$1457+1)& (0+255),b
  5895  001430  0E2D               	movlw	45
  5896  001432  6F66               	movwf	_efgtoa$1457& (0+255),b
  5897  001434                     l4505:
  5898                           
  5899                           ; BSR set to: 0
  5900  001434  0E14               	movlw	low _dbuf
  5901  001436  258A               	addwf	efgtoa@i& (0+255),w,b
  5902  001438  6ED9               	movwf	fsr2l,c
  5903  00143A  0E01               	movlw	high _dbuf
  5904  00143C  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5905  00143E  6EDA               	movwf	fsr2h,c
  5906  001440  C066  FFDF         	movff	_efgtoa$1457,indf2
  5907  001444                     
  5908                           ; BSR set to: 0
  5909                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 516:         --w;
  5910  001444  077E               	decf	efgtoa@w& (0+255),f,b
  5911  001446  A0D8               	btfss	status,0,c
  5912  001448  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  5913  00144A                     
  5914                           ; BSR set to: 0
  5915                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 518:         dbuf
      +                          [i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  5916  00144A  078A               	decf	efgtoa@i& (0+255),f,b
  5917  00144C  A0D8               	btfss	status,0,c
  5918  00144E  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  5919  001450                     
  5920                           ; BSR set to: 0
  5921  001450  0EBF               	movlw	191
  5922  001452  6E40               	movwf	??_efgtoa^0,c
  5923  001454  0EFF               	movlw	255
  5924  001456  6E41               	movwf	(??_efgtoa+1)^0,c
  5925  001458  503F               	movf	efgtoa@c^0,w,c
  5926  00145A  6E42               	movwf	(??_efgtoa+2)^0,c
  5927  00145C  6A43               	clrf	(??_efgtoa+3)^0,c
  5928  00145E  5040               	movf	??_efgtoa^0,w,c
  5929  001460  2642               	addwf	(??_efgtoa+2)^0,f,c
  5930  001462  5041               	movf	(??_efgtoa+1)^0,w,c
  5931  001464  2243               	addwfc	(??_efgtoa+3)^0,f,c
  5932  001466  5043               	movf	(??_efgtoa+3)^0,w,c
  5933  001468  E10A               	bnz	u5500
  5934  00146A  0E1A               	movlw	26
  5935  00146C  5C42               	subwf	(??_efgtoa+2)^0,w,c
  5936  00146E  A0D8               	btfss	status,0,c
  5937  001470  EF3C  F00A         	goto	u5501
  5938  001474  EF3F  F00A         	goto	u5500
  5939  001478                     u5501:
  5940  001478  0E01               	movlw	1
  5941  00147A  EF40  F00A         	goto	u5510
  5942  00147E                     u5500:
  5943  00147E  0E00               	movlw	0
  5944  001480                     u5510:
  5945  001480  6F6A               	movwf	_efgtoa$1459& (0+255),b
  5946  001482  6B6B               	clrf	(_efgtoa$1459+1)& (0+255),b
  5947  001484                     
  5948                           ; BSR set to: 0
  5949  001484  516A               	movf	_efgtoa$1459& (0+255),w,b
  5950  001486  116B               	iorwf	(_efgtoa$1459+1)& (0+255),w,b
  5951  001488  A4D8               	btfss	status,2,c
  5952  00148A  EF49  F00A         	goto	u5521
  5953  00148E  EF4B  F00A         	goto	u5520
  5954  001492                     u5521:
  5955  001492  EF51  F00A         	goto	l4519
  5956  001496                     u5520:
  5957  001496                     
  5958                           ; BSR set to: 0
  5959  001496  0E00               	movlw	0
  5960  001498  6F69               	movwf	(_efgtoa$1458+1)& (0+255),b
  5961  00149A  0E65               	movlw	101
  5962  00149C  6F68               	movwf	_efgtoa$1458& (0+255),b
  5963  00149E  EF55  F00A         	goto	l4521
  5964  0014A2                     l4519:
  5965                           
  5966                           ; BSR set to: 0
  5967  0014A2  0E00               	movlw	0
  5968  0014A4  6F69               	movwf	(_efgtoa$1458+1)& (0+255),b
  5969  0014A6  0E45               	movlw	69
  5970  0014A8  6F68               	movwf	_efgtoa$1458& (0+255),b
  5971  0014AA                     l4521:
  5972                           
  5973                           ; BSR set to: 0
  5974  0014AA  0E14               	movlw	low _dbuf
  5975  0014AC  258A               	addwf	efgtoa@i& (0+255),w,b
  5976  0014AE  6ED9               	movwf	fsr2l,c
  5977  0014B0  0E01               	movlw	high _dbuf
  5978  0014B2  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5979  0014B4  6EDA               	movwf	fsr2h,c
  5980  0014B6  C068  FFDF         	movff	_efgtoa$1458,indf2
  5981  0014BA                     
  5982                           ; BSR set to: 0
  5983                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 519:         --w;
  5984  0014BA  077E               	decf	efgtoa@w& (0+255),f,b
  5985  0014BC  A0D8               	btfss	status,0,c
  5986  0014BE  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  5987  0014C0                     
  5988                           ; BSR set to: 0
  5989                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 520:         strc
      +                          py(&dbuf[n], &dbuf[i]);
  5990  0014C0  0E14               	movlw	low _dbuf
  5991  0014C2  2592               	addwf	efgtoa@n& (0+255),w,b
  5992  0014C4  6E01               	movwf	strcpy@dest^0,c
  5993  0014C6  0E01               	movlw	high _dbuf
  5994  0014C8  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5995  0014CA  6E02               	movwf	(strcpy@dest+1)^0,c
  5996  0014CC  0E14               	movlw	low _dbuf
  5997  0014CE  258A               	addwf	efgtoa@i& (0+255),w,b
  5998  0014D0  6E03               	movwf	strcpy@src^0,c
  5999  0014D2  0E01               	movlw	high _dbuf
  6000  0014D4  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  6001  0014D6  6E04               	movwf	(strcpy@src+1)^0,c
  6002  0014D8  EC6C  F020         	call	_strcpy	;wreg free
  6003  0014DC  EFF8  F004         	goto	l4267
  6004  0014E0                     l1118:
  6005  0014E0  0012               	return		;funcret
  6006  0014E2                     __end_of_efgtoa:
  6007                           	callstack 0
  6008                           
  6009 ;; *************** function _tolower *****************
  6010 ;; Defined at:
  6011 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\tolower.c"
  6012 ;; Parameters:    Size  Location     Type
  6013 ;;  c               2    6[COMRAM] int 
  6014 ;; Auto vars:     Size  Location     Type
  6015 ;;		None
  6016 ;; Return value:  Size  Location     Type
  6017 ;;                  2    6[COMRAM] int 
  6018 ;; Registers used:
  6019 ;;		wreg, status,2, status,0
  6020 ;; Tracked objects:
  6021 ;;		On entry : 0/0
  6022 ;;		On exit  : 0/0
  6023 ;;		Unchanged: 0/0
  6024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6025 ;;      Params:         2       0       0       0       0       0       0       0       0
  6026 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6027 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6028 ;;      Totals:         8       0       0       0       0       0       0       0       0
  6029 ;;Total ram usage:        8 bytes
  6030 ;; Hardware stack levels used:    1
  6031 ;; Hardware stack levels required when called:    1
  6032 ;; This function calls:
  6033 ;;		_isupper
  6034 ;; This function is called by:
  6035 ;;		_efgtoa
  6036 ;;		_vfpfcnvrt
  6037 ;; This function uses a non-reentrant model
  6038 ;;
  6039                           
  6040                           	psect	text12
  6041  00401A                     __ptext12:
  6042                           	callstack 0
  6043  00401A                     _tolower:
  6044                           	callstack 24
  6045  00401A  0EBF               	movlw	191
  6046  00401C  6E09               	movwf	??_tolower^0,c
  6047  00401E  0EFF               	movlw	255
  6048  004020  6E0A               	movwf	(??_tolower+1)^0,c
  6049  004022  C007  F00B         	movff	tolower@c,??_tolower+2
  6050  004026  C008  F00C         	movff	tolower@c+1,??_tolower+3
  6051  00402A  5009               	movf	??_tolower^0,w,c
  6052  00402C  260B               	addwf	(??_tolower+2)^0,f,c
  6053  00402E  500A               	movf	(??_tolower+1)^0,w,c
  6054  004030  220C               	addwfc	(??_tolower+3)^0,f,c
  6055  004032  500C               	movf	(??_tolower+3)^0,w,c
  6056  004034  E10A               	bnz	u4680
  6057  004036  0E1A               	movlw	26
  6058  004038  5C0B               	subwf	(??_tolower+2)^0,w,c
  6059  00403A  A0D8               	btfss	status,0,c
  6060  00403C  EF22  F020         	goto	u4681
  6061  004040  EF25  F020         	goto	u4680
  6062  004044                     u4681:
  6063  004044  0E01               	movlw	1
  6064  004046  EF26  F020         	goto	u4690
  6065  00404A                     u4680:
  6066  00404A  0E00               	movlw	0
  6067  00404C                     u4690:
  6068  00404C  6E0D               	movwf	_tolower$1595^0,c
  6069  00404E  6A0E               	clrf	(_tolower$1595+1)^0,c
  6070  004050  500D               	movf	_tolower$1595^0,w,c
  6071  004052  100E               	iorwf	(_tolower$1595+1)^0,w,c
  6072  004054  B4D8               	btfsc	status,2,c
  6073  004056  EF2F  F020         	goto	u4701
  6074  00405A  EF31  F020         	goto	u4700
  6075  00405E                     u4701:
  6076  00405E  EF38  F020         	goto	l1342
  6077  004062                     u4700:
  6078  004062  0E20               	movlw	32
  6079  004064  1007               	iorwf	tolower@c^0,w,c
  6080  004066  6E07               	movwf	?_tolower^0,c
  6081  004068  5008               	movf	(tolower@c+1)^0,w,c
  6082  00406A  6E08               	movwf	(?_tolower+1)^0,c
  6083  00406C  EF3C  F020         	goto	l1347
  6084  004070                     l1342:
  6085  004070  C007  F007         	movff	tolower@c,?_tolower
  6086  004074  C008  F008         	movff	tolower@c+1,?_tolower+1
  6087  004078                     l1347:
  6088  004078  0012               	return		;funcret
  6089  00407A                     __end_of_tolower:
  6090                           	callstack 0
  6091                           
  6092 ;; *************** function _isupper *****************
  6093 ;; Defined at:
  6094 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\isupper.c"
  6095 ;; Parameters:    Size  Location     Type
  6096 ;;  c               2    0[COMRAM] int 
  6097 ;; Auto vars:     Size  Location     Type
  6098 ;;		None
  6099 ;; Return value:  Size  Location     Type
  6100 ;;                  2    0[COMRAM] int 
  6101 ;; Registers used:
  6102 ;;		wreg, status,2, status,0
  6103 ;; Tracked objects:
  6104 ;;		On entry : 0/0
  6105 ;;		On exit  : 0/0
  6106 ;;		Unchanged: 0/0
  6107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6108 ;;      Params:         2       0       0       0       0       0       0       0       0
  6109 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6110 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6111 ;;      Totals:         6       0       0       0       0       0       0       0       0
  6112 ;;Total ram usage:        6 bytes
  6113 ;; Hardware stack levels used:    1
  6114 ;; This function calls:
  6115 ;;		Nothing
  6116 ;; This function is called by:
  6117 ;;		_efgtoa
  6118 ;;		_xtoa
  6119 ;;		_vfpfcnvrt
  6120 ;;		_tolower
  6121 ;; This function uses a non-reentrant model
  6122 ;;
  6123                           
  6124                           	psect	text13
  6125  0044D0                     __ptext13:
  6126                           	callstack 0
  6127  0044D0                     _isupper:
  6128                           	callstack 24
  6129  0044D0  0EBF               	movlw	191
  6130  0044D2  6E03               	movwf	??_isupper^0,c
  6131  0044D4  0EFF               	movlw	255
  6132  0044D6  6E04               	movwf	(??_isupper+1)^0,c
  6133  0044D8  C001  F005         	movff	isupper@c,??_isupper+2
  6134  0044DC  C002  F006         	movff	isupper@c+1,??_isupper+3
  6135  0044E0  5003               	movf	??_isupper^0,w,c
  6136  0044E2  2605               	addwf	(??_isupper+2)^0,f,c
  6137  0044E4  5004               	movf	(??_isupper+1)^0,w,c
  6138  0044E6  2206               	addwfc	(??_isupper+3)^0,f,c
  6139  0044E8  5006               	movf	(??_isupper+3)^0,w,c
  6140  0044EA  E10A               	bnz	u3770
  6141  0044EC  0E1A               	movlw	26
  6142  0044EE  5C05               	subwf	(??_isupper+2)^0,w,c
  6143  0044F0  A0D8               	btfss	status,0,c
  6144  0044F2  EF7D  F022         	goto	u3771
  6145  0044F6  EF80  F022         	goto	u3770
  6146  0044FA                     u3771:
  6147  0044FA  0E01               	movlw	1
  6148  0044FC  EF81  F022         	goto	u3780
  6149  004500                     u3770:
  6150  004500  0E00               	movlw	0
  6151  004502                     u3780:
  6152  004502  6E01               	movwf	?_isupper^0,c
  6153  004504  6A02               	clrf	(?_isupper+1)^0,c
  6154  004506  0012               	return		;funcret
  6155  004508                     __end_of_isupper:
  6156                           	callstack 0
  6157                           
  6158 ;; *************** function _strcpy *****************
  6159 ;; Defined at:
  6160 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\strcpy.c"
  6161 ;; Parameters:    Size  Location     Type
  6162 ;;  dest            2    0[COMRAM] PTR unsigned char 
  6163 ;;		 -> dbuf(80), 
  6164 ;;  src             2    2[COMRAM] PTR const unsigned char 
  6165 ;;		 -> STR_16(4), STR_15(4), STR_12(4), STR_11(4), 
  6166 ;;		 -> dbuf(80), 
  6167 ;; Auto vars:     Size  Location     Type
  6168 ;;  d               2    8[COMRAM] PTR unsigned char 
  6169 ;;		 -> dbuf(80), 
  6170 ;;  s               2    6[COMRAM] PTR const unsigned char 
  6171 ;;		 -> STR_16(4), STR_15(4), STR_12(4), STR_11(4), 
  6172 ;;		 -> dbuf(80), 
  6173 ;; Return value:  Size  Location     Type
  6174 ;;                  2    0[COMRAM] PTR unsigned char 
  6175 ;; Registers used:
  6176 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  6177 ;; Tracked objects:
  6178 ;;		On entry : 0/0
  6179 ;;		On exit  : 0/0
  6180 ;;		Unchanged: 0/0
  6181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6182 ;;      Params:         4       0       0       0       0       0       0       0       0
  6183 ;;      Locals:         4       0       0       0       0       0       0       0       0
  6184 ;;      Temps:          2       0       0       0       0       0       0       0       0
  6185 ;;      Totals:        10       0       0       0       0       0       0       0       0
  6186 ;;Total ram usage:       10 bytes
  6187 ;; Hardware stack levels used:    1
  6188 ;; This function calls:
  6189 ;;		Nothing
  6190 ;; This function is called by:
  6191 ;;		_efgtoa
  6192 ;; This function uses a non-reentrant model
  6193 ;;
  6194                           
  6195                           	psect	text14
  6196  0040D8                     __ptext14:
  6197                           	callstack 0
  6198  0040D8                     _strcpy:
  6199                           	callstack 24
  6200  0040D8  C003  F007         	movff	strcpy@src,strcpy@s
  6201  0040DC  C004  F008         	movff	strcpy@src+1,strcpy@s+1
  6202  0040E0  C001  F009         	movff	strcpy@dest,strcpy@d
  6203  0040E4  C002  F00A         	movff	strcpy@dest+1,strcpy@d+1
  6204  0040E8                     l4125:
  6205  0040E8  5007               	movf	strcpy@s^0,w,c
  6206  0040EA  6E05               	movwf	??_strcpy^0,c
  6207  0040EC  5008               	movf	(strcpy@s+1)^0,w,c
  6208  0040EE  6E06               	movwf	(??_strcpy+1)^0,c
  6209  0040F0  4A07               	infsnz	strcpy@s^0,f,c
  6210  0040F2  2A08               	incf	(strcpy@s+1)^0,f,c
  6211  0040F4  C005  FFF6         	movff	??_strcpy,tblptrl
  6212  0040F8  C006  FFF7         	movff	??_strcpy+1,tblptrh
  6213  0040FC  6AF8               	clrf	tblptru,c
  6214  0040FE  C009  FFD9         	movff	strcpy@d,fsr2l
  6215  004102  C00A  FFDA         	movff	strcpy@d+1,fsr2h
  6216  004106  4A09               	infsnz	strcpy@d^0,f,c
  6217  004108  2A0A               	incf	(strcpy@d+1)^0,f,c
  6218  00410A  0E07               	movlw	(high __ramtop+-1)
  6219  00410C  64F7               	cpfsgt	tblptrh,c
  6220  00410E  D003               	bra	u4667
  6221  004110  0008               	tblrd		*
  6222  004112  50F5               	movf	tablat,w,c
  6223  004114  D005               	bra	u4660
  6224  004116                     u4667:
  6225  004116  CFF6 FFE1          	movff	tblptrl,fsr1l
  6226  00411A  CFF7 FFE2          	movff	tblptrh,fsr1h
  6227  00411E  50E7               	movf	indf1,w,c
  6228  004120                     u4660:
  6229  004120  6EDF               	movwf	indf2,c
  6230  004122  50DF               	movf	indf2,w,c
  6231  004124  A4D8               	btfss	status,2,c
  6232  004126  EF97  F020         	goto	u4671
  6233  00412A  EF99  F020         	goto	u4670
  6234  00412E                     u4671:
  6235  00412E  EF74  F020         	goto	l4125
  6236  004132                     u4670:
  6237  004132  0012               	return		;funcret
  6238  004134                     __end_of_strcpy:
  6239                           	callstack 0
  6240                           
  6241 ;; *************** function _pad *****************
  6242 ;; Defined at:
  6243 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  6244 ;; Parameters:    Size  Location     Type
  6245 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  6246 ;;		 -> sprintf@f(6), 
  6247 ;;  buf             2   18[COMRAM] PTR unsigned char 
  6248 ;;		 -> dbuf(80), 
  6249 ;;  p               2   20[COMRAM] int 
  6250 ;; Auto vars:     Size  Location     Type
  6251 ;;  w               2   25[COMRAM] int 
  6252 ;;  i               2   23[COMRAM] int 
  6253 ;; Return value:  Size  Location     Type
  6254 ;;                  2   16[COMRAM] int 
  6255 ;; Registers used:
  6256 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6257 ;; Tracked objects:
  6258 ;;		On entry : 0/0
  6259 ;;		On exit  : 0/0
  6260 ;;		Unchanged: 0/0
  6261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6262 ;;      Params:         6       0       0       0       0       0       0       0       0
  6263 ;;      Locals:         4       0       0       0       0       0       0       0       0
  6264 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6265 ;;      Totals:        11       0       0       0       0       0       0       0       0
  6266 ;;Total ram usage:       11 bytes
  6267 ;; Hardware stack levels used:    1
  6268 ;; Hardware stack levels required when called:    3
  6269 ;; This function calls:
  6270 ;;		_fputc
  6271 ;;		_fputs
  6272 ;;		_strlen
  6273 ;; This function is called by:
  6274 ;;		_efgtoa
  6275 ;;		_xtoa
  6276 ;; This function uses a non-reentrant model
  6277 ;;
  6278                           
  6279                           	psect	text15
  6280  003ACA                     __ptext15:
  6281                           	callstack 0
  6282  003ACA                     _pad:
  6283                           	callstack 21
  6284  003ACA                     
  6285                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  6286  003ACA  0100               	movlb	0	; () banked
  6287  003ACC  A1FC               	btfss	_flags& (0+255),0,b
  6288  003ACE  EF6B  F01D         	goto	u4551
  6289  003AD2  EF6D  F01D         	goto	u4550
  6290  003AD6                     u4551:
  6291  003AD6  EF77  F01D         	goto	l4083
  6292  003ADA                     u4550:
  6293  003ADA                     
  6294                           ; BSR set to: 0
  6295                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  6296  003ADA  C013  F00A         	movff	pad@buf,fputs@s
  6297  003ADE  C014  F00B         	movff	pad@buf+1,fputs@s+1
  6298  003AE2  C011  F00C         	movff	pad@fp,fputs@fp
  6299  003AE6  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  6300  003AEA  ECB4  F021         	call	_fputs	;wreg free
  6301  003AEE                     l4083:
  6302                           
  6303                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  6304  003AEE  BE16               	btfsc	(pad@p+1)^0,7,c
  6305  003AF0  EF7C  F01D         	goto	u4561
  6306  003AF4  EF7E  F01D         	goto	u4560
  6307  003AF8                     u4561:
  6308  003AF8  EF84  F01D         	goto	l4087
  6309  003AFC                     u4560:
  6310  003AFC  C015  F01A         	movff	pad@p,pad@w
  6311  003B00  C016  F01B         	movff	pad@p+1,pad@w+1
  6312  003B04  EF88  F01D         	goto	l1095
  6313  003B08                     l4087:
  6314  003B08  0E00               	movlw	0
  6315  003B0A  6E1B               	movwf	(pad@w+1)^0,c
  6316  003B0C  0E00               	movlw	0
  6317  003B0E  6E1A               	movwf	pad@w^0,c
  6318  003B10                     l1095:
  6319                           
  6320                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  6321  003B10  0E00               	movlw	0
  6322  003B12  6E19               	movwf	(pad@i+1)^0,c
  6323  003B14  0E00               	movlw	0
  6324  003B16  6E18               	movwf	pad@i^0,c
  6325                           
  6326                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  6327  003B18  EF9A  F01D         	goto	l4093
  6328  003B1C                     l4089:
  6329                           
  6330                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  6331  003B1C  0E00               	movlw	0
  6332  003B1E  6E02               	movwf	(fputc@c+1)^0,c
  6333  003B20  0E20               	movlw	32
  6334  003B22  6E01               	movwf	fputc@c^0,c
  6335  003B24  C011  F003         	movff	pad@fp,fputc@fp
  6336  003B28  C012  F004         	movff	pad@fp+1,fputc@fp+1
  6337  003B2C  EC00  F01D         	call	_fputc	;wreg free
  6338  003B30                     
  6339                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 86:         ++i;
  6340  003B30  4A18               	infsnz	pad@i^0,f,c
  6341  003B32  2A19               	incf	(pad@i+1)^0,f,c
  6342  003B34                     l4093:
  6343                           
  6344                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  6345  003B34  501A               	movf	pad@w^0,w,c
  6346  003B36  5C18               	subwf	pad@i^0,w,c
  6347  003B38  5019               	movf	(pad@i+1)^0,w,c
  6348  003B3A  0A80               	xorlw	128
  6349  003B3C  6E17               	movwf	??_pad^0,c
  6350  003B3E  501B               	movf	(pad@w+1)^0,w,c
  6351  003B40  0A80               	xorlw	128
  6352  003B42  5817               	subwfb	??_pad^0,w,c
  6353  003B44  A0D8               	btfss	status,0,c
  6354  003B46  EFA7  F01D         	goto	u4571
  6355  003B4A  EFA9  F01D         	goto	u4570
  6356  003B4E                     u4571:
  6357  003B4E  EF8E  F01D         	goto	l4089
  6358  003B52                     u4570:
  6359  003B52                     
  6360                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  6361  003B52  0100               	movlb	0	; () banked
  6362  003B54  B1FC               	btfsc	_flags& (0+255),0,b
  6363  003B56  EFAF  F01D         	goto	u4581
  6364  003B5A  EFB1  F01D         	goto	u4580
  6365  003B5E                     u4581:
  6366  003B5E  EFBB  F01D         	goto	l4097
  6367  003B62                     u4580:
  6368  003B62                     
  6369                           ; BSR set to: 0
  6370                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  6371  003B62  C013  F00A         	movff	pad@buf,fputs@s
  6372  003B66  C014  F00B         	movff	pad@buf+1,fputs@s+1
  6373  003B6A  C011  F00C         	movff	pad@fp,fputs@fp
  6374  003B6E  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  6375  003B72  ECB4  F021         	call	_fputs	;wreg free
  6376  003B76                     l4097:
  6377                           
  6378                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  6379  003B76  C013  F001         	movff	pad@buf,strlen@s
  6380  003B7A  C014  F002         	movff	pad@buf+1,strlen@s+1
  6381  003B7E  ECD8  F022         	call	_strlen	;wreg free
  6382  003B82  501A               	movf	pad@w^0,w,c
  6383  003B84  2401               	addwf	?_strlen^0,w,c
  6384  003B86  6E11               	movwf	?_pad^0,c
  6385  003B88  501B               	movf	(pad@w+1)^0,w,c
  6386  003B8A  2002               	addwfc	(?_strlen+1)^0,w,c
  6387  003B8C  6E12               	movwf	(?_pad+1)^0,c
  6388  003B8E  0012               	return		;funcret
  6389  003B90                     __end_of_pad:
  6390                           	callstack 0
  6391                           
  6392 ;; *************** function _strlen *****************
  6393 ;; Defined at:
  6394 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\strlen.c"
  6395 ;; Parameters:    Size  Location     Type
  6396 ;;  s               2    0[COMRAM] PTR const unsigned char 
  6397 ;;		 -> dbuf(80), 
  6398 ;; Auto vars:     Size  Location     Type
  6399 ;;  a               2    2[COMRAM] PTR const unsigned char 
  6400 ;;		 -> dbuf(80), 
  6401 ;; Return value:  Size  Location     Type
  6402 ;;                  2    0[COMRAM] unsigned int 
  6403 ;; Registers used:
  6404 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6405 ;; Tracked objects:
  6406 ;;		On entry : 0/0
  6407 ;;		On exit  : 0/0
  6408 ;;		Unchanged: 0/0
  6409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6410 ;;      Params:         2       0       0       0       0       0       0       0       0
  6411 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6412 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6413 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6414 ;;Total ram usage:        4 bytes
  6415 ;; Hardware stack levels used:    1
  6416 ;; This function calls:
  6417 ;;		Nothing
  6418 ;; This function is called by:
  6419 ;;		_pad
  6420 ;; This function uses a non-reentrant model
  6421 ;;
  6422                           
  6423                           	psect	text16
  6424  0045B0                     __ptext16:
  6425                           	callstack 0
  6426  0045B0                     _strlen:
  6427                           	callstack 23
  6428  0045B0  C001  F003         	movff	strlen@s,strlen@a
  6429  0045B4  C002  F004         	movff	strlen@s+1,strlen@a+1
  6430  0045B8  EFE0  F022         	goto	l3599
  6431  0045BC                     l3597:
  6432  0045BC  4A01               	infsnz	strlen@s^0,f,c
  6433  0045BE  2A02               	incf	(strlen@s+1)^0,f,c
  6434  0045C0                     l3599:
  6435  0045C0  C001  FFD9         	movff	strlen@s,fsr2l
  6436  0045C4  C002  FFDA         	movff	strlen@s+1,fsr2h
  6437  0045C8  50DF               	movf	indf2,w,c
  6438  0045CA  A4D8               	btfss	status,2,c
  6439  0045CC  EFEA  F022         	goto	u3761
  6440  0045D0  EFEC  F022         	goto	u3760
  6441  0045D4                     u3761:
  6442  0045D4  EFDE  F022         	goto	l3597
  6443  0045D8                     u3760:
  6444  0045D8  5003               	movf	strlen@a^0,w,c
  6445  0045DA  5C01               	subwf	strlen@s^0,w,c
  6446  0045DC  6E01               	movwf	?_strlen^0,c
  6447  0045DE  5004               	movf	(strlen@a+1)^0,w,c
  6448  0045E0  5802               	subwfb	(strlen@s+1)^0,w,c
  6449  0045E2  6E02               	movwf	(?_strlen+1)^0,c
  6450  0045E4  0012               	return		;funcret
  6451  0045E6                     __end_of_strlen:
  6452                           	callstack 0
  6453                           
  6454 ;; *************** function _fputs *****************
  6455 ;; Defined at:
  6456 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_fputs.c"
  6457 ;; Parameters:    Size  Location     Type
  6458 ;;  s               2    9[COMRAM] PTR const unsigned char 
  6459 ;;		 -> dbuf(80), 
  6460 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  6461 ;;		 -> sprintf@f(6), 
  6462 ;; Auto vars:     Size  Location     Type
  6463 ;;  i               2   14[COMRAM] int 
  6464 ;;  c               1   13[COMRAM] unsigned char 
  6465 ;; Return value:  Size  Location     Type
  6466 ;;                  2    9[COMRAM] int 
  6467 ;; Registers used:
  6468 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6469 ;; Tracked objects:
  6470 ;;		On entry : 0/0
  6471 ;;		On exit  : 0/0
  6472 ;;		Unchanged: 0/0
  6473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6474 ;;      Params:         4       0       0       0       0       0       0       0       0
  6475 ;;      Locals:         3       0       0       0       0       0       0       0       0
  6476 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6477 ;;      Totals:         7       0       0       0       0       0       0       0       0
  6478 ;;Total ram usage:        7 bytes
  6479 ;; Hardware stack levels used:    1
  6480 ;; Hardware stack levels required when called:    2
  6481 ;; This function calls:
  6482 ;;		_fputc
  6483 ;; This function is called by:
  6484 ;;		_pad
  6485 ;; This function uses a non-reentrant model
  6486 ;;
  6487                           
  6488                           	psect	text17
  6489  004368                     __ptext17:
  6490                           	callstack 0
  6491  004368                     _fputs:
  6492                           	callstack 21
  6493  004368  0E00               	movlw	0
  6494  00436A  6E10               	movwf	(fputs@i+1)^0,c
  6495  00436C  0E00               	movlw	0
  6496  00436E  6E0F               	movwf	fputs@i^0,c
  6497  004370  EFC5  F021         	goto	l3593
  6498  004374                     l3589:
  6499  004374  C00E  F001         	movff	fputs@c,fputc@c
  6500  004378  6A02               	clrf	(fputc@c+1)^0,c
  6501  00437A  C00C  F003         	movff	fputs@fp,fputc@fp
  6502  00437E  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  6503  004382  EC00  F01D         	call	_fputc	;wreg free
  6504  004386  4A0F               	infsnz	fputs@i^0,f,c
  6505  004388  2A10               	incf	(fputs@i+1)^0,f,c
  6506  00438A                     l3593:
  6507  00438A  500F               	movf	fputs@i^0,w,c
  6508  00438C  240A               	addwf	fputs@s^0,w,c
  6509  00438E  6ED9               	movwf	fsr2l,c
  6510  004390  5010               	movf	(fputs@i+1)^0,w,c
  6511  004392  200B               	addwfc	(fputs@s+1)^0,w,c
  6512  004394  6EDA               	movwf	fsr2h,c
  6513  004396  50DF               	movf	indf2,w,c
  6514  004398  6E0E               	movwf	fputs@c^0,c
  6515  00439A  500E               	movf	fputs@c^0,w,c
  6516  00439C  A4D8               	btfss	status,2,c
  6517  00439E  EFD3  F021         	goto	u3751
  6518  0043A2  EFD5  F021         	goto	u3750
  6519  0043A6                     u3751:
  6520  0043A6  EFBA  F021         	goto	l3589
  6521  0043AA                     u3750:
  6522  0043AA  0012               	return		;funcret
  6523  0043AC                     __end_of_fputs:
  6524                           	callstack 0
  6525                           
  6526 ;; *************** function _fputc *****************
  6527 ;; Defined at:
  6528 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_fputc.c"
  6529 ;; Parameters:    Size  Location     Type
  6530 ;;  c               2    0[COMRAM] int 
  6531 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  6532 ;;		 -> sprintf@f(6), 
  6533 ;; Auto vars:     Size  Location     Type
  6534 ;;		None
  6535 ;; Return value:  Size  Location     Type
  6536 ;;                  2    0[COMRAM] int 
  6537 ;; Registers used:
  6538 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6539 ;; Tracked objects:
  6540 ;;		On entry : 0/0
  6541 ;;		On exit  : 0/0
  6542 ;;		Unchanged: 0/0
  6543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6544 ;;      Params:         4       0       0       0       0       0       0       0       0
  6545 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6546 ;;      Temps:          5       0       0       0       0       0       0       0       0
  6547 ;;      Totals:         9       0       0       0       0       0       0       0       0
  6548 ;;Total ram usage:        9 bytes
  6549 ;; Hardware stack levels used:    1
  6550 ;; Hardware stack levels required when called:    1
  6551 ;; This function calls:
  6552 ;;		_putch
  6553 ;; This function is called by:
  6554 ;;		_pad
  6555 ;;		_vfpfcnvrt
  6556 ;;		_fputs
  6557 ;; This function uses a non-reentrant model
  6558 ;;
  6559                           
  6560                           	psect	text18
  6561  003A00                     __ptext18:
  6562                           	callstack 0
  6563  003A00                     _fputc:
  6564                           	callstack 21
  6565  003A00  5003               	movf	fputc@fp^0,w,c
  6566  003A02  1004               	iorwf	(fputc@fp+1)^0,w,c
  6567  003A04  B4D8               	btfsc	status,2,c
  6568  003A06  EF07  F01D         	goto	u3321
  6569  003A0A  EF09  F01D         	goto	u3320
  6570  003A0E                     u3321:
  6571  003A0E  EF12  F01D         	goto	l3375
  6572  003A12                     u3320:
  6573  003A12  5003               	movf	fputc@fp^0,w,c
  6574  003A14  1004               	iorwf	(fputc@fp+1)^0,w,c
  6575  003A16  A4D8               	btfss	status,2,c
  6576  003A18  EF10  F01D         	goto	u3331
  6577  003A1C  EF12  F01D         	goto	u3330
  6578  003A20                     u3331:
  6579  003A20  EF17  F01D         	goto	l3377
  6580  003A24                     u3330:
  6581  003A24                     l3375:
  6582  003A24  5001               	movf	fputc@c^0,w,c
  6583  003A26  ECAA  F023         	call	_putch
  6584  003A2A  EF64  F01D         	goto	l1305
  6585  003A2E                     l3377:
  6586  003A2E  EE20 F004          	lfsr	2,4
  6587  003A32  5003               	movf	fputc@fp^0,w,c
  6588  003A34  26D9               	addwf	fsr2l,f,c
  6589  003A36  5004               	movf	(fputc@fp+1)^0,w,c
  6590  003A38  22DA               	addwfc	fsr2h,f,c
  6591  003A3A  50DE               	movf	postinc2,w,c
  6592  003A3C  10DE               	iorwf	postinc2,w,c
  6593  003A3E  B4D8               	btfsc	status,2,c
  6594  003A40  EF24  F01D         	goto	u3341
  6595  003A44  EF26  F01D         	goto	u3340
  6596  003A48                     u3341:
  6597  003A48  EF41  F01D         	goto	l3381
  6598  003A4C                     u3340:
  6599  003A4C  EE20 F004          	lfsr	2,4
  6600  003A50  5003               	movf	fputc@fp^0,w,c
  6601  003A52  26D9               	addwf	fsr2l,f,c
  6602  003A54  5004               	movf	(fputc@fp+1)^0,w,c
  6603  003A56  22DA               	addwfc	fsr2h,f,c
  6604  003A58  EE10 F002          	lfsr	1,2
  6605  003A5C  5003               	movf	fputc@fp^0,w,c
  6606  003A5E  26E1               	addwf	fsr1l,f,c
  6607  003A60  5004               	movf	(fputc@fp+1)^0,w,c
  6608  003A62  22E2               	addwfc	fsr1h,f,c
  6609  003A64  50DE               	movf	postinc2,w,c
  6610  003A66  5CE6               	subwf	postinc1,w,c
  6611  003A68  50E6               	movf	postinc1,w,c
  6612  003A6A  0A80               	xorlw	128
  6613  003A6C  6E09               	movwf	(??_fputc+4)^0,c
  6614  003A6E  50DE               	movf	postinc2,w,c
  6615  003A70  0A80               	xorlw	128
  6616  003A72  5809               	subwfb	(??_fputc+4)^0,w,c
  6617  003A74  B0D8               	btfsc	status,0,c
  6618  003A76  EF3F  F01D         	goto	u3351
  6619  003A7A  EF41  F01D         	goto	u3350
  6620  003A7E                     u3351:
  6621  003A7E  EF64  F01D         	goto	l1305
  6622  003A82                     u3350:
  6623  003A82                     l3381:
  6624  003A82  EE20 F002          	lfsr	2,2
  6625  003A86  5003               	movf	fputc@fp^0,w,c
  6626  003A88  26D9               	addwf	fsr2l,f,c
  6627  003A8A  5004               	movf	(fputc@fp+1)^0,w,c
  6628  003A8C  22DA               	addwfc	fsr2h,f,c
  6629  003A8E  CFDE F005          	movff	postinc2,??_fputc
  6630  003A92  CFDD F006          	movff	postdec2,??_fputc+1
  6631  003A96  C003  FFD9         	movff	fputc@fp,fsr2l
  6632  003A9A  C004  FFDA         	movff	fputc@fp+1,fsr2h
  6633  003A9E  CFDE F007          	movff	postinc2,??_fputc+2
  6634  003AA2  CFDD F008          	movff	postdec2,??_fputc+3
  6635  003AA6  5005               	movf	??_fputc^0,w,c
  6636  003AA8  2407               	addwf	(??_fputc+2)^0,w,c
  6637  003AAA  6ED9               	movwf	fsr2l,c
  6638  003AAC  5006               	movf	(??_fputc+1)^0,w,c
  6639  003AAE  2008               	addwfc	(??_fputc+3)^0,w,c
  6640  003AB0  6EDA               	movwf	fsr2h,c
  6641  003AB2  C001  FFDF         	movff	fputc@c,indf2
  6642  003AB6  EE20 F002          	lfsr	2,2
  6643  003ABA  5003               	movf	fputc@fp^0,w,c
  6644  003ABC  26D9               	addwf	fsr2l,f,c
  6645  003ABE  5004               	movf	(fputc@fp+1)^0,w,c
  6646  003AC0  22DA               	addwfc	fsr2h,f,c
  6647  003AC2  2ADE               	incf	postinc2,f,c
  6648  003AC4  0E00               	movlw	0
  6649  003AC6  22DD               	addwfc	postdec2,f,c
  6650  003AC8                     l1305:
  6651  003AC8  0012               	return		;funcret
  6652  003ACA                     __end_of_fputc:
  6653                           	callstack 0
  6654                           
  6655 ;; *************** function _putch *****************
  6656 ;; Defined at:
  6657 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\putch.c"
  6658 ;; Parameters:    Size  Location     Type
  6659 ;;  c               1    wreg     unsigned char 
  6660 ;; Auto vars:     Size  Location     Type
  6661 ;;  c               1    0[COMRAM] unsigned char 
  6662 ;; Return value:  Size  Location     Type
  6663 ;;                  1    wreg      void 
  6664 ;; Registers used:
  6665 ;;		wreg
  6666 ;; Tracked objects:
  6667 ;;		On entry : 0/0
  6668 ;;		On exit  : 0/0
  6669 ;;		Unchanged: 0/0
  6670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6671 ;;      Params:         0       0       0       0       0       0       0       0       0
  6672 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6673 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6674 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6675 ;;Total ram usage:        0 bytes
  6676 ;; Hardware stack levels used:    1
  6677 ;; This function calls:
  6678 ;;		Nothing
  6679 ;; This function is called by:
  6680 ;;		_fputc
  6681 ;; This function uses a non-reentrant model
  6682 ;;
  6683                           
  6684                           	psect	text19
  6685  004754                     __ptext19:
  6686                           	callstack 0
  6687  004754                     _putch:
  6688                           	callstack 21
  6689  004754  0012               	return		;funcret
  6690  004756                     __end_of_putch:
  6691                           	callstack 0
  6692                           
  6693 ;; *************** function _floorf *****************
  6694 ;; Defined at:
  6695 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\floorf.c"
  6696 ;; Parameters:    Size  Location     Type
  6697 ;;  x               4   25[COMRAM] float 
  6698 ;; Auto vars:     Size  Location     Type
  6699 ;;  u               4   41[COMRAM] struct .
  6700 ;;  m               4   35[COMRAM] unsigned long 
  6701 ;;  e               2   39[COMRAM] int 
  6702 ;; Return value:  Size  Location     Type
  6703 ;;                  4   25[COMRAM] float 
  6704 ;; Registers used:
  6705 ;;		wreg, status,2, status,0
  6706 ;; Tracked objects:
  6707 ;;		On entry : 0/0
  6708 ;;		On exit  : 0/0
  6709 ;;		Unchanged: 0/0
  6710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6711 ;;      Params:         4       0       0       0       0       0       0       0       0
  6712 ;;      Locals:        10       0       0       0       0       0       0       0       0
  6713 ;;      Temps:          6       0       0       0       0       0       0       0       0
  6714 ;;      Totals:        20       0       0       0       0       0       0       0       0
  6715 ;;Total ram usage:       20 bytes
  6716 ;; Hardware stack levels used:    1
  6717 ;; This function calls:
  6718 ;;		Nothing
  6719 ;; This function is called by:
  6720 ;;		_efgtoa
  6721 ;; This function uses a non-reentrant model
  6722 ;;
  6723                           
  6724                           	psect	text20
  6725  003064                     __ptext20:
  6726                           	callstack 0
  6727  003064                     _floorf:
  6728                           	callstack 24
  6729  003064  C100  F02A         	movff	floorf@F527,floorf@u
  6730  003068  C101  F02B         	movff	floorf@F527+1,floorf@u+1
  6731  00306C  C102  F02C         	movff	floorf@F527+2,floorf@u+2
  6732  003070  C103  F02D         	movff	floorf@F527+3,floorf@u+3
  6733  003074  C01A  F02A         	movff	floorf@x,floorf@u
  6734  003078  C01B  F02B         	movff	floorf@x+1,floorf@u+1
  6735  00307C  C01C  F02C         	movff	floorf@x+2,floorf@u+2
  6736  003080  C01D  F02D         	movff	floorf@x+3,floorf@u+3
  6737  003084  0E81               	movlw	129
  6738  003086  6E1E               	movwf	??_floorf^0,c
  6739  003088  0EFF               	movlw	255
  6740  00308A  6E1F               	movwf	(??_floorf+1)^0,c
  6741  00308C  C02A  F020         	movff	floorf@u,??_floorf+2
  6742  003090  C02B  F021         	movff	floorf@u+1,??_floorf+3
  6743  003094  C02C  F022         	movff	floorf@u+2,??_floorf+4
  6744  003098  C02D  F023         	movff	floorf@u+3,??_floorf+5
  6745  00309C  0E18               	movlw	24
  6746  00309E  EF56  F018         	goto	u4710
  6747  0030A2                     u4715:
  6748  0030A2  90D8               	bcf	status,0,c
  6749  0030A4  3223               	rrcf	(??_floorf+5)^0,f,c
  6750  0030A6  3222               	rrcf	(??_floorf+4)^0,f,c
  6751  0030A8  3221               	rrcf	(??_floorf+3)^0,f,c
  6752  0030AA  3220               	rrcf	(??_floorf+2)^0,f,c
  6753  0030AC                     u4710:
  6754  0030AC  2EE8               	decfsz	wreg,f,c
  6755  0030AE  EF51  F018         	goto	u4715
  6756  0030B2  5020               	movf	(??_floorf+2)^0,w,c
  6757  0030B4  241E               	addwf	??_floorf^0,w,c
  6758  0030B6  6E28               	movwf	floorf@e^0,c
  6759  0030B8  0E00               	movlw	0
  6760  0030BA  201F               	addwfc	(??_floorf+1)^0,w,c
  6761  0030BC  6E29               	movwf	(floorf@e+1)^0,c
  6762  0030BE  BE29               	btfsc	(floorf@e+1)^0,7,c
  6763  0030C0  EF6B  F018         	goto	u4721
  6764  0030C4  5029               	movf	(floorf@e+1)^0,w,c
  6765  0030C6  E109               	bnz	u4720
  6766  0030C8  0E17               	movlw	23
  6767  0030CA  5C28               	subwf	floorf@e^0,w,c
  6768  0030CC  A0D8               	btfss	status,0,c
  6769  0030CE  EF6B  F018         	goto	u4721
  6770  0030D2  EF6D  F018         	goto	u4720
  6771  0030D6                     u4721:
  6772  0030D6  EF77  F018         	goto	l4143
  6773  0030DA                     u4720:
  6774  0030DA                     l4141:
  6775  0030DA  C01A  F01A         	movff	floorf@x,?_floorf
  6776  0030DE  C01B  F01B         	movff	floorf@x+1,?_floorf+1
  6777  0030E2  C01C  F01C         	movff	floorf@x+2,?_floorf+2
  6778  0030E6  C01D  F01D         	movff	floorf@x+3,?_floorf+3
  6779  0030EA  EF3A  F019         	goto	l1274
  6780  0030EE                     l4143:
  6781  0030EE  BE29               	btfsc	(floorf@e+1)^0,7,c
  6782  0030F0  EF7C  F018         	goto	u4731
  6783  0030F4  EF7E  F018         	goto	u4730
  6784  0030F8                     u4731:
  6785  0030F8  EFEE  F018         	goto	l4153
  6786  0030FC                     u4730:
  6787  0030FC  C028  F01E         	movff	floorf@e,??_floorf
  6788  003100  0EFF               	movlw	255
  6789  003102  6E1F               	movwf	(??_floorf+1)^0,c
  6790  003104  0EFF               	movlw	255
  6791  003106  6E20               	movwf	(??_floorf+2)^0,c
  6792  003108  0E7F               	movlw	127
  6793  00310A  6E21               	movwf	(??_floorf+3)^0,c
  6794  00310C  0E00               	movlw	0
  6795  00310E  6E22               	movwf	(??_floorf+4)^0,c
  6796  003110                     u4745:
  6797  003110  661E               	tstfsz	??_floorf^0,c
  6798  003112  EF8D  F018         	goto	u4746
  6799  003116  EF95  F018         	goto	u4747
  6800  00311A                     u4746:
  6801  00311A  3422               	rlcf	(??_floorf+4)^0,w,c
  6802  00311C  3222               	rrcf	(??_floorf+4)^0,f,c
  6803  00311E  3221               	rrcf	(??_floorf+3)^0,f,c
  6804  003120  3220               	rrcf	(??_floorf+2)^0,f,c
  6805  003122  321F               	rrcf	(??_floorf+1)^0,f,c
  6806  003124  2E1E               	decfsz	??_floorf^0,f,c
  6807  003126  EF88  F018         	goto	u4745
  6808  00312A                     u4747:
  6809  00312A  C01F  F024         	movff	??_floorf+1,floorf@m
  6810  00312E  C020  F025         	movff	??_floorf+2,floorf@m+1
  6811  003132  C021  F026         	movff	??_floorf+3,floorf@m+2
  6812  003136  C022  F027         	movff	??_floorf+4,floorf@m+3
  6813  00313A  5024               	movf	floorf@m^0,w,c
  6814  00313C  142A               	andwf	floorf@u^0,w,c
  6815  00313E  6E1E               	movwf	??_floorf^0,c
  6816  003140  5025               	movf	(floorf@m+1)^0,w,c
  6817  003142  142B               	andwf	(floorf@u+1)^0,w,c
  6818  003144  6E1F               	movwf	(??_floorf+1)^0,c
  6819  003146  5026               	movf	(floorf@m+2)^0,w,c
  6820  003148  142C               	andwf	(floorf@u+2)^0,w,c
  6821  00314A  6E20               	movwf	(??_floorf+2)^0,c
  6822  00314C  5027               	movf	(floorf@m+3)^0,w,c
  6823  00314E  142D               	andwf	(floorf@u+3)^0,w,c
  6824  003150  6E21               	movwf	(??_floorf+3)^0,c
  6825  003152  501E               	movf	??_floorf^0,w,c
  6826  003154  101F               	iorwf	(??_floorf+1)^0,w,c
  6827  003156  1020               	iorwf	(??_floorf+2)^0,w,c
  6828  003158  1021               	iorwf	(??_floorf+3)^0,w,c
  6829  00315A  A4D8               	btfss	status,2,c
  6830  00315C  EFB2  F018         	goto	u4751
  6831  003160  EFB4  F018         	goto	u4750
  6832  003164                     u4751:
  6833  003164  EFB6  F018         	goto	l4149
  6834  003168                     u4750:
  6835  003168  EF6D  F018         	goto	l4141
  6836  00316C                     l4149:
  6837  00316C  C02A  F01E         	movff	floorf@u,??_floorf
  6838  003170  C02B  F01F         	movff	floorf@u+1,??_floorf+1
  6839  003174  C02C  F020         	movff	floorf@u+2,??_floorf+2
  6840  003178  C02D  F021         	movff	floorf@u+3,??_floorf+3
  6841  00317C  0E20               	movlw	32
  6842  00317E  EFC6  F018         	goto	u4760
  6843  003182                     u4765:
  6844  003182  90D8               	bcf	status,0,c
  6845  003184  3221               	rrcf	(??_floorf+3)^0,f,c
  6846  003186  3220               	rrcf	(??_floorf+2)^0,f,c
  6847  003188  321F               	rrcf	(??_floorf+1)^0,f,c
  6848  00318A  321E               	rrcf	??_floorf^0,f,c
  6849  00318C                     u4760:
  6850  00318C  2EE8               	decfsz	wreg,f,c
  6851  00318E  EFC1  F018         	goto	u4765
  6852  003192  501E               	movf	??_floorf^0,w,c
  6853  003194  101F               	iorwf	(??_floorf+1)^0,w,c
  6854  003196  1020               	iorwf	(??_floorf+2)^0,w,c
  6855  003198  1021               	iorwf	(??_floorf+3)^0,w,c
  6856  00319A  B4D8               	btfsc	status,2,c
  6857  00319C  EFD2  F018         	goto	u4771
  6858  0031A0  EFD4  F018         	goto	u4770
  6859  0031A4                     u4771:
  6860  0031A4  EFDC  F018         	goto	l1277
  6861  0031A8                     u4770:
  6862  0031A8  5024               	movf	floorf@m^0,w,c
  6863  0031AA  262A               	addwf	floorf@u^0,f,c
  6864  0031AC  5025               	movf	(floorf@m+1)^0,w,c
  6865  0031AE  222B               	addwfc	(floorf@u+1)^0,f,c
  6866  0031B0  5026               	movf	(floorf@m+2)^0,w,c
  6867  0031B2  222C               	addwfc	(floorf@u+2)^0,f,c
  6868  0031B4  5027               	movf	(floorf@m+3)^0,w,c
  6869  0031B6  222D               	addwfc	(floorf@u+3)^0,f,c
  6870  0031B8                     l1277:
  6871  0031B8  1C24               	comf	floorf@m^0,w,c
  6872  0031BA  6E1E               	movwf	??_floorf^0,c
  6873  0031BC  1C25               	comf	(floorf@m+1)^0,w,c
  6874  0031BE  6E1F               	movwf	(??_floorf+1)^0,c
  6875  0031C0  1C26               	comf	(floorf@m+2)^0,w,c
  6876  0031C2  6E20               	movwf	(??_floorf+2)^0,c
  6877  0031C4  1C27               	comf	(floorf@m+3)^0,w,c
  6878  0031C6  6E21               	movwf	(??_floorf+3)^0,c
  6879  0031C8  501E               	movf	??_floorf^0,w,c
  6880  0031CA  162A               	andwf	floorf@u^0,f,c
  6881  0031CC  501F               	movf	(??_floorf+1)^0,w,c
  6882  0031CE  162B               	andwf	(floorf@u+1)^0,f,c
  6883  0031D0  5020               	movf	(??_floorf+2)^0,w,c
  6884  0031D2  162C               	andwf	(floorf@u+2)^0,f,c
  6885  0031D4  5021               	movf	(??_floorf+3)^0,w,c
  6886  0031D6  162D               	andwf	(floorf@u+3)^0,f,c
  6887  0031D8  EF32  F019         	goto	l4161
  6888  0031DC                     l4153:
  6889  0031DC  C02A  F01E         	movff	floorf@u,??_floorf
  6890  0031E0  C02B  F01F         	movff	floorf@u+1,??_floorf+1
  6891  0031E4  C02C  F020         	movff	floorf@u+2,??_floorf+2
  6892  0031E8  C02D  F021         	movff	floorf@u+3,??_floorf+3
  6893  0031EC  0E20               	movlw	32
  6894  0031EE  EFFE  F018         	goto	u4780
  6895  0031F2                     u4785:
  6896  0031F2  90D8               	bcf	status,0,c
  6897  0031F4  3221               	rrcf	(??_floorf+3)^0,f,c
  6898  0031F6  3220               	rrcf	(??_floorf+2)^0,f,c
  6899  0031F8  321F               	rrcf	(??_floorf+1)^0,f,c
  6900  0031FA  321E               	rrcf	??_floorf^0,f,c
  6901  0031FC                     u4780:
  6902  0031FC  2EE8               	decfsz	wreg,f,c
  6903  0031FE  EFF9  F018         	goto	u4785
  6904  003202  501E               	movf	??_floorf^0,w,c
  6905  003204  101F               	iorwf	(??_floorf+1)^0,w,c
  6906  003206  1020               	iorwf	(??_floorf+2)^0,w,c
  6907  003208  1021               	iorwf	(??_floorf+3)^0,w,c
  6908  00320A  A4D8               	btfss	status,2,c
  6909  00320C  EF0A  F019         	goto	u4791
  6910  003210  EF0C  F019         	goto	u4790
  6911  003214                     u4791:
  6912  003214  EF16  F019         	goto	l4157
  6913  003218                     u4790:
  6914  003218  0E00               	movlw	0
  6915  00321A  6E2A               	movwf	floorf@u^0,c
  6916  00321C  0E00               	movlw	0
  6917  00321E  6E2B               	movwf	(floorf@u+1)^0,c
  6918  003220  0E00               	movlw	0
  6919  003222  6E2C               	movwf	(floorf@u+2)^0,c
  6920  003224  0E00               	movlw	0
  6921  003226  6E2D               	movwf	(floorf@u+3)^0,c
  6922  003228  EF32  F019         	goto	l4161
  6923  00322C                     l4157:
  6924  00322C  90D8               	bcf	status,0,c
  6925  00322E  342A               	rlcf	floorf@u^0,w,c
  6926  003230  6E1E               	movwf	??_floorf^0,c
  6927  003232  342B               	rlcf	(floorf@u+1)^0,w,c
  6928  003234  6E1F               	movwf	(??_floorf+1)^0,c
  6929  003236  342C               	rlcf	(floorf@u+2)^0,w,c
  6930  003238  6E20               	movwf	(??_floorf+2)^0,c
  6931  00323A  342D               	rlcf	(floorf@u+3)^0,w,c
  6932  00323C  6E21               	movwf	(??_floorf+3)^0,c
  6933  00323E  501E               	movf	??_floorf^0,w,c
  6934  003240  101F               	iorwf	(??_floorf+1)^0,w,c
  6935  003242  1020               	iorwf	(??_floorf+2)^0,w,c
  6936  003244  1021               	iorwf	(??_floorf+3)^0,w,c
  6937  003246  B4D8               	btfsc	status,2,c
  6938  003248  EF28  F019         	goto	u4801
  6939  00324C  EF2A  F019         	goto	u4800
  6940  003250                     u4801:
  6941  003250  EF32  F019         	goto	l4161
  6942  003254                     u4800:
  6943  003254  0E00               	movlw	0
  6944  003256  6E2A               	movwf	floorf@u^0,c
  6945  003258  0E00               	movlw	0
  6946  00325A  6E2B               	movwf	(floorf@u+1)^0,c
  6947  00325C  0E80               	movlw	128
  6948  00325E  6E2C               	movwf	(floorf@u+2)^0,c
  6949  003260  0EBF               	movlw	191
  6950  003262  6E2D               	movwf	(floorf@u+3)^0,c
  6951  003264                     l4161:
  6952  003264  C02A  F01A         	movff	floorf@u,?_floorf
  6953  003268  C02B  F01B         	movff	floorf@u+1,?_floorf+1
  6954  00326C  C02C  F01C         	movff	floorf@u+2,?_floorf+2
  6955  003270  C02D  F01D         	movff	floorf@u+3,?_floorf+3
  6956  003274                     l1274:
  6957  003274  0012               	return		;funcret
  6958  003276                     __end_of_floorf:
  6959                           	callstack 0
  6960                           
  6961 ;; *************** function ___fpclassifyf *****************
  6962 ;; Defined at:
  6963 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\__fpclassifyf.c"
  6964 ;; Parameters:    Size  Location     Type
  6965 ;;  x               4    0[COMRAM] float 
  6966 ;; Auto vars:     Size  Location     Type
  6967 ;;  u               4   10[COMRAM] struct .
  6968 ;;  e               2    8[COMRAM] int 
  6969 ;; Return value:  Size  Location     Type
  6970 ;;                  2    0[COMRAM] int 
  6971 ;; Registers used:
  6972 ;;		wreg, status,2, status,0
  6973 ;; Tracked objects:
  6974 ;;		On entry : 0/0
  6975 ;;		On exit  : 0/0
  6976 ;;		Unchanged: 0/0
  6977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6978 ;;      Params:         4       0       0       0       0       0       0       0       0
  6979 ;;      Locals:         6       0       0       0       0       0       0       0       0
  6980 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6981 ;;      Totals:        14       0       0       0       0       0       0       0       0
  6982 ;;Total ram usage:       14 bytes
  6983 ;; Hardware stack levels used:    1
  6984 ;; This function calls:
  6985 ;;		Nothing
  6986 ;; This function is called by:
  6987 ;;		_efgtoa
  6988 ;; This function uses a non-reentrant model
  6989 ;;
  6990                           
  6991                           	psect	text21
  6992  00382C                     __ptext21:
  6993                           	callstack 0
  6994  00382C                     ___fpclassifyf:
  6995                           	callstack 24
  6996  00382C  C104  F00B         	movff	___fpclassifyf@F465,___fpclassifyf@u
  6997  003830  C105  F00C         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  6998  003834  C106  F00D         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  6999  003838  C107  F00E         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  7000  00383C  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  7001  003840  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  7002  003844  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  7003  003848  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  7004  00384C  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  7005  003850  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  7006  003854  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  7007  003858  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  7008  00385C  0E18               	movlw	24
  7009  00385E  EF36  F01C         	goto	u4590
  7010  003862                     u4595:
  7011  003862  90D8               	bcf	status,0,c
  7012  003864  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  7013  003866  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  7014  003868  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  7015  00386A  3205               	rrcf	??___fpclassifyf^0,f,c
  7016  00386C                     u4590:
  7017  00386C  2EE8               	decfsz	wreg,f,c
  7018  00386E  EF31  F01C         	goto	u4595
  7019  003872  5005               	movf	??___fpclassifyf^0,w,c
  7020  003874  6E09               	movwf	___fpclassifyf@e^0,c
  7021  003876  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  7022  003878  5009               	movf	___fpclassifyf@e^0,w,c
  7023  00387A  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  7024  00387C  A4D8               	btfss	status,2,c
  7025  00387E  EF43  F01C         	goto	u4601
  7026  003882  EF45  F01C         	goto	u4600
  7027  003886                     u4601:
  7028  003886  EF65  F01C         	goto	l4113
  7029  00388A                     u4600:
  7030  00388A  90D8               	bcf	status,0,c
  7031  00388C  340B               	rlcf	___fpclassifyf@u^0,w,c
  7032  00388E  6E05               	movwf	??___fpclassifyf^0,c
  7033  003890  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  7034  003892  6E06               	movwf	(??___fpclassifyf+1)^0,c
  7035  003894  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  7036  003896  6E07               	movwf	(??___fpclassifyf+2)^0,c
  7037  003898  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  7038  00389A  6E08               	movwf	(??___fpclassifyf+3)^0,c
  7039  00389C  5005               	movf	??___fpclassifyf^0,w,c
  7040  00389E  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  7041  0038A0  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  7042  0038A2  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  7043  0038A4  A4D8               	btfss	status,2,c
  7044  0038A6  EF57  F01C         	goto	u4611
  7045  0038AA  EF59  F01C         	goto	u4610
  7046  0038AE                     u4611:
  7047  0038AE  EF5F  F01C         	goto	l4109
  7048  0038B2                     u4610:
  7049  0038B2  0E00               	movlw	0
  7050  0038B4  6E02               	movwf	(?___fpclassifyf+1)^0,c
  7051  0038B6  0E02               	movlw	2
  7052  0038B8  6E01               	movwf	?___fpclassifyf^0,c
  7053  0038BA  EF94  F01C         	goto	l1267
  7054  0038BE                     l4109:
  7055  0038BE  0E00               	movlw	0
  7056  0038C0  6E02               	movwf	(?___fpclassifyf+1)^0,c
  7057  0038C2  0E03               	movlw	3
  7058  0038C4  6E01               	movwf	?___fpclassifyf^0,c
  7059  0038C6  EF94  F01C         	goto	l1267
  7060  0038CA                     l4113:
  7061  0038CA  2809               	incf	___fpclassifyf@e^0,w,c
  7062  0038CC  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  7063  0038CE  A4D8               	btfss	status,2,c
  7064  0038D0  EF6C  F01C         	goto	u4621
  7065  0038D4  EF6E  F01C         	goto	u4620
  7066  0038D8                     u4621:
  7067  0038D8  EF90  F01C         	goto	l4119
  7068  0038DC                     u4620:
  7069  0038DC  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  7070  0038E0  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  7071  0038E4  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  7072  0038E8  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  7073  0038EC  0E09               	movlw	9
  7074  0038EE                     u4635:
  7075  0038EE  90D8               	bcf	status,0,c
  7076  0038F0  3605               	rlcf	??___fpclassifyf^0,f,c
  7077  0038F2  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  7078  0038F4  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  7079  0038F6  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  7080  0038F8  2EE8               	decfsz	wreg,f,c
  7081  0038FA  EF77  F01C         	goto	u4635
  7082  0038FE  5005               	movf	??___fpclassifyf^0,w,c
  7083  003900  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  7084  003902  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  7085  003904  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  7086  003906  B4D8               	btfsc	status,2,c
  7087  003908  EF88  F01C         	goto	u4641
  7088  00390C  EF8B  F01C         	goto	u4640
  7089  003910                     u4641:
  7090  003910  0E01               	movlw	1
  7091  003912  EF8C  F01C         	goto	u4650
  7092  003916                     u4640:
  7093  003916  0E00               	movlw	0
  7094  003918                     u4650:
  7095  003918  6E01               	movwf	?___fpclassifyf^0,c
  7096  00391A  6A02               	clrf	(?___fpclassifyf+1)^0,c
  7097  00391C  EF94  F01C         	goto	l1267
  7098  003920                     l4119:
  7099  003920  0E00               	movlw	0
  7100  003922  6E02               	movwf	(?___fpclassifyf+1)^0,c
  7101  003924  0E04               	movlw	4
  7102  003926  6E01               	movwf	?___fpclassifyf^0,c
  7103  003928                     l1267:
  7104  003928  0012               	return		;funcret
  7105  00392A                     __end_of___fpclassifyf:
  7106                           	callstack 0
  7107                           
  7108 ;; *************** function ___fltol *****************
  7109 ;; Defined at:
  7110 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\fltol.c"
  7111 ;; Parameters:    Size  Location     Type
  7112 ;;  f1              4    0[COMRAM] int 
  7113 ;; Auto vars:     Size  Location     Type
  7114 ;;  exp1            1    9[COMRAM] unsigned char 
  7115 ;;  sign1           1    8[COMRAM] unsigned char 
  7116 ;; Return value:  Size  Location     Type
  7117 ;;                  4    0[COMRAM] long 
  7118 ;; Registers used:
  7119 ;;		wreg, status,2, status,0
  7120 ;; Tracked objects:
  7121 ;;		On entry : 0/0
  7122 ;;		On exit  : 0/0
  7123 ;;		Unchanged: 0/0
  7124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7125 ;;      Params:         4       0       0       0       0       0       0       0       0
  7126 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7127 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7128 ;;      Totals:        10       0       0       0       0       0       0       0       0
  7129 ;;Total ram usage:       10 bytes
  7130 ;; Hardware stack levels used:    1
  7131 ;; This function calls:
  7132 ;;		Nothing
  7133 ;; This function is called by:
  7134 ;;		_efgtoa
  7135 ;; This function uses a non-reentrant model
  7136 ;;
  7137                           
  7138                           	psect	text22
  7139  003622                     __ptext22:
  7140                           	callstack 0
  7141  003622                     ___fltol:
  7142                           	callstack 24
  7143  003622  3403               	rlcf	(___fltol@f1+2)^0,w,c
  7144  003624  3404               	rlcf	(___fltol@f1+3)^0,w,c
  7145  003626  6E0A               	movwf	___fltol@exp1^0,c
  7146  003628  500A               	movf	___fltol@exp1^0,w,c
  7147  00362A  A4D8               	btfss	status,2,c
  7148  00362C  EF1A  F01B         	goto	u4461
  7149  003630  EF1C  F01B         	goto	u4460
  7150  003634                     u4461:
  7151  003634  EF26  F01B         	goto	l4029
  7152  003638                     u4460:
  7153  003638                     l4025:
  7154  003638  0E00               	movlw	0
  7155  00363A  6E01               	movwf	?___fltol^0,c
  7156  00363C  0E00               	movlw	0
  7157  00363E  6E02               	movwf	(?___fltol+1)^0,c
  7158  003640  0E00               	movlw	0
  7159  003642  6E03               	movwf	(?___fltol+2)^0,c
  7160  003644  0E00               	movlw	0
  7161  003646  6E04               	movwf	(?___fltol+3)^0,c
  7162  003648  EF93  F01B         	goto	l624
  7163  00364C                     l4029:
  7164  00364C  C001  F005         	movff	___fltol@f1,??___fltol
  7165  003650  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  7166  003654  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  7167  003658  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  7168  00365C  0E20               	movlw	32
  7169  00365E  EF36  F01B         	goto	u4470
  7170  003662                     u4475:
  7171  003662  90D8               	bcf	status,0,c
  7172  003664  3208               	rrcf	(??___fltol+3)^0,f,c
  7173  003666  3207               	rrcf	(??___fltol+2)^0,f,c
  7174  003668  3206               	rrcf	(??___fltol+1)^0,f,c
  7175  00366A  3205               	rrcf	??___fltol^0,f,c
  7176  00366C                     u4470:
  7177  00366C  2EE8               	decfsz	wreg,f,c
  7178  00366E  EF31  F01B         	goto	u4475
  7179  003672  5005               	movf	??___fltol^0,w,c
  7180  003674  6E09               	movwf	___fltol@sign1^0,c
  7181  003676  8E03               	bsf	(___fltol@f1+2)^0,7,c
  7182  003678  0EFF               	movlw	255
  7183  00367A  1601               	andwf	___fltol@f1^0,f,c
  7184  00367C  0EFF               	movlw	255
  7185  00367E  1602               	andwf	(___fltol@f1+1)^0,f,c
  7186  003680  0EFF               	movlw	255
  7187  003682  1603               	andwf	(___fltol@f1+2)^0,f,c
  7188  003684  0E00               	movlw	0
  7189  003686  1604               	andwf	(___fltol@f1+3)^0,f,c
  7190  003688  0E96               	movlw	150
  7191  00368A  5E0A               	subwf	___fltol@exp1^0,f,c
  7192  00368C  BE0A               	btfsc	___fltol@exp1^0,7,c
  7193  00368E  EF4D  F01B         	goto	u4480
  7194  003692  EF4B  F01B         	goto	u4481
  7195  003696                     u4481:
  7196  003696  EF63  F01B         	goto	l4049
  7197  00369A                     u4480:
  7198  00369A  500A               	movf	___fltol@exp1^0,w,c
  7199  00369C  0A80               	xorlw	128
  7200  00369E  0F97               	addlw	151
  7201  0036A0  B0D8               	btfsc	status,0,c
  7202  0036A2  EF55  F01B         	goto	u4491
  7203  0036A6  EF57  F01B         	goto	u4490
  7204  0036AA                     u4491:
  7205  0036AA  EF59  F01B         	goto	l4045
  7206  0036AE                     u4490:
  7207  0036AE  EF1C  F01B         	goto	l4025
  7208  0036B2                     l4045:
  7209  0036B2  90D8               	bcf	status,0,c
  7210  0036B4  3204               	rrcf	(___fltol@f1+3)^0,f,c
  7211  0036B6  3203               	rrcf	(___fltol@f1+2)^0,f,c
  7212  0036B8  3202               	rrcf	(___fltol@f1+1)^0,f,c
  7213  0036BA  3201               	rrcf	___fltol@f1^0,f,c
  7214  0036BC  3E0A               	incfsz	___fltol@exp1^0,f,c
  7215  0036BE  EF59  F01B         	goto	l4045
  7216  0036C2  EF7B  F01B         	goto	l4059
  7217  0036C6                     l4049:
  7218  0036C6  0E1F               	movlw	31
  7219  0036C8  640A               	cpfsgt	___fltol@exp1^0,c
  7220  0036CA  EF69  F01B         	goto	u4501
  7221  0036CE  EF6B  F01B         	goto	u4500
  7222  0036D2                     u4501:
  7223  0036D2  EF73  F01B         	goto	l4057
  7224  0036D6                     u4500:
  7225  0036D6  EF1C  F01B         	goto	l4025
  7226  0036DA                     l4055:
  7227  0036DA  90D8               	bcf	status,0,c
  7228  0036DC  3601               	rlcf	___fltol@f1^0,f,c
  7229  0036DE  3602               	rlcf	(___fltol@f1+1)^0,f,c
  7230  0036E0  3603               	rlcf	(___fltol@f1+2)^0,f,c
  7231  0036E2  3604               	rlcf	(___fltol@f1+3)^0,f,c
  7232  0036E4  060A               	decf	___fltol@exp1^0,f,c
  7233  0036E6                     l4057:
  7234  0036E6  500A               	movf	___fltol@exp1^0,w,c
  7235  0036E8  A4D8               	btfss	status,2,c
  7236  0036EA  EF79  F01B         	goto	u4511
  7237  0036EE  EF7B  F01B         	goto	u4510
  7238  0036F2                     u4511:
  7239  0036F2  EF6D  F01B         	goto	l4055
  7240  0036F6                     u4510:
  7241  0036F6                     l4059:
  7242  0036F6  5009               	movf	___fltol@sign1^0,w,c
  7243  0036F8  B4D8               	btfsc	status,2,c
  7244  0036FA  EF81  F01B         	goto	u4521
  7245  0036FE  EF83  F01B         	goto	u4520
  7246  003702                     u4521:
  7247  003702  EF8B  F01B         	goto	l4063
  7248  003706                     u4520:
  7249  003706  1E04               	comf	(___fltol@f1+3)^0,f,c
  7250  003708  1E03               	comf	(___fltol@f1+2)^0,f,c
  7251  00370A  1E02               	comf	(___fltol@f1+1)^0,f,c
  7252  00370C  6C01               	negf	___fltol@f1^0,c
  7253  00370E  0E00               	movlw	0
  7254  003710  2202               	addwfc	(___fltol@f1+1)^0,f,c
  7255  003712  2203               	addwfc	(___fltol@f1+2)^0,f,c
  7256  003714  2204               	addwfc	(___fltol@f1+3)^0,f,c
  7257  003716                     l4063:
  7258  003716  C001  F001         	movff	___fltol@f1,?___fltol
  7259  00371A  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  7260  00371E  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  7261  003722  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  7262  003726                     l624:
  7263  003726  0012               	return		;funcret
  7264  003728                     __end_of___fltol:
  7265                           	callstack 0
  7266                           
  7267 ;; *************** function ___flsub *****************
  7268 ;; Defined at:
  7269 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\sprcadd.c"
  7270 ;; Parameters:    Size  Location     Type
  7271 ;;  b               4   44[COMRAM] long 
  7272 ;;  a               4   48[COMRAM] long 
  7273 ;; Auto vars:     Size  Location     Type
  7274 ;;		None
  7275 ;; Return value:  Size  Location     Type
  7276 ;;                  4   44[COMRAM] long 
  7277 ;; Registers used:
  7278 ;;		wreg, status,2, status,0, cstack
  7279 ;; Tracked objects:
  7280 ;;		On entry : 0/0
  7281 ;;		On exit  : 0/0
  7282 ;;		Unchanged: 0/0
  7283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7284 ;;      Params:         8       0       0       0       0       0       0       0       0
  7285 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7286 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7287 ;;      Totals:         8       0       0       0       0       0       0       0       0
  7288 ;;Total ram usage:        8 bytes
  7289 ;; Hardware stack levels used:    1
  7290 ;; Hardware stack levels required when called:    1
  7291 ;; This function calls:
  7292 ;;		___fladd
  7293 ;; This function is called by:
  7294 ;;		_efgtoa
  7295 ;; This function uses a non-reentrant model
  7296 ;;
  7297                           
  7298                           	psect	text23
  7299  0042DC                     __ptext23:
  7300                           	callstack 0
  7301  0042DC                     ___flsub:
  7302                           	callstack 23
  7303  0042DC  0E00               	movlw	0
  7304  0042DE  1A31               	xorwf	___flsub@a^0,f,c
  7305  0042E0  0E00               	movlw	0
  7306  0042E2  1A32               	xorwf	(___flsub@a+1)^0,f,c
  7307  0042E4  0E00               	movlw	0
  7308  0042E6  1A33               	xorwf	(___flsub@a+2)^0,f,c
  7309  0042E8  0E80               	movlw	128
  7310  0042EA  1A34               	xorwf	(___flsub@a+3)^0,f,c
  7311  0042EC  C02D  F001         	movff	___flsub@b,___fladd@b
  7312  0042F0  C02E  F002         	movff	___flsub@b+1,___fladd@b+1
  7313  0042F4  C02F  F003         	movff	___flsub@b+2,___fladd@b+2
  7314  0042F8  C030  F004         	movff	___flsub@b+3,___fladd@b+3
  7315  0042FC  C031  F005         	movff	___flsub@a,___fladd@a
  7316  004300  C032  F006         	movff	___flsub@a+1,___fladd@a+1
  7317  004304  C033  F007         	movff	___flsub@a+2,___fladd@a+2
  7318  004308  C034  F008         	movff	___flsub@a+3,___fladd@a+3
  7319  00430C  EC83  F010         	call	___fladd	;wreg free
  7320  004310  C001  F02D         	movff	?___fladd,?___flsub
  7321  004314  C002  F02E         	movff	?___fladd+1,?___flsub+1
  7322  004318  C003  F02F         	movff	?___fladd+2,?___flsub+2
  7323  00431C  C004  F030         	movff	?___fladd+3,?___flsub+3
  7324  004320  0012               	return		;funcret
  7325  004322                     __end_of___flsub:
  7326                           	callstack 0
  7327                           
  7328 ;; *************** function ___fladd *****************
  7329 ;; Defined at:
  7330 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\sprcadd.c"
  7331 ;; Parameters:    Size  Location     Type
  7332 ;;  b               4    0[COMRAM] long 
  7333 ;;  a               4    4[COMRAM] long 
  7334 ;; Auto vars:     Size  Location     Type
  7335 ;;  grs             1   15[COMRAM] unsigned char 
  7336 ;;  bexp            1   14[COMRAM] unsigned char 
  7337 ;;  aexp            1   13[COMRAM] unsigned char 
  7338 ;;  signs           1   12[COMRAM] unsigned char 
  7339 ;; Return value:  Size  Location     Type
  7340 ;;                  4    0[COMRAM] unsigned char 
  7341 ;; Registers used:
  7342 ;;		wreg, status,2, status,0
  7343 ;; Tracked objects:
  7344 ;;		On entry : 0/0
  7345 ;;		On exit  : 0/0
  7346 ;;		Unchanged: 0/0
  7347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7348 ;;      Params:         8       0       0       0       0       0       0       0       0
  7349 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7350 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7351 ;;      Totals:        16       0       0       0       0       0       0       0       0
  7352 ;;Total ram usage:       16 bytes
  7353 ;; Hardware stack levels used:    1
  7354 ;; This function calls:
  7355 ;;		Nothing
  7356 ;; This function is called by:
  7357 ;;		___flsub
  7358 ;;		_efgtoa
  7359 ;; This function uses a non-reentrant model
  7360 ;;
  7361                           
  7362                           	psect	text24
  7363  002106                     __ptext24:
  7364                           	callstack 0
  7365  002106                     ___fladd:
  7366                           	callstack 23
  7367  002106  5004               	movf	(___fladd@b+3)^0,w,c
  7368  002108  0B80               	andlw	128
  7369  00210A  6E0D               	movwf	___fladd@signs^0,c
  7370  00210C  5004               	movf	(___fladd@b+3)^0,w,c
  7371  00210E  2404               	addwf	(___fladd@b+3)^0,w,c
  7372  002110  6E0F               	movwf	___fladd@bexp^0,c
  7373  002112  AE03               	btfss	(___fladd@b+2)^0,7,c
  7374  002114  EF8E  F010         	goto	u3361
  7375  002118  EF90  F010         	goto	u3360
  7376  00211C                     u3361:
  7377  00211C  EF91  F010         	goto	l3391
  7378  002120                     u3360:
  7379  002120  800F               	bsf	___fladd@bexp^0,0,c
  7380  002122                     l3391:
  7381  002122  500F               	movf	___fladd@bexp^0,w,c
  7382  002124  B4D8               	btfsc	status,2,c
  7383  002126  EF97  F010         	goto	u3371
  7384  00212A  EF99  F010         	goto	u3370
  7385  00212E                     u3371:
  7386  00212E  EFAE  F010         	goto	l3401
  7387  002132                     u3370:
  7388  002132  280F               	incf	___fladd@bexp^0,w,c
  7389  002134  A4D8               	btfss	status,2,c
  7390  002136  EF9F  F010         	goto	u3381
  7391  00213A  EFA1  F010         	goto	u3380
  7392  00213E                     u3381:
  7393  00213E  EFA9  F010         	goto	l3397
  7394  002142                     u3380:
  7395  002142  0E00               	movlw	0
  7396  002144  6E01               	movwf	___fladd@b^0,c
  7397  002146  0E00               	movlw	0
  7398  002148  6E02               	movwf	(___fladd@b+1)^0,c
  7399  00214A  0E00               	movlw	0
  7400  00214C  6E03               	movwf	(___fladd@b+2)^0,c
  7401  00214E  0E00               	movlw	0
  7402  002150  6E04               	movwf	(___fladd@b+3)^0,c
  7403  002152                     l3397:
  7404  002152  8E03               	bsf	(___fladd@b+2)^0,7,c
  7405  002154  0E00               	movlw	0
  7406  002156  6E04               	movwf	(___fladd@b+3)^0,c
  7407  002158  EFB6  F010         	goto	l3403
  7408  00215C                     l3401:
  7409  00215C  0E00               	movlw	0
  7410  00215E  6E01               	movwf	___fladd@b^0,c
  7411  002160  0E00               	movlw	0
  7412  002162  6E02               	movwf	(___fladd@b+1)^0,c
  7413  002164  0E00               	movlw	0
  7414  002166  6E03               	movwf	(___fladd@b+2)^0,c
  7415  002168  0E00               	movlw	0
  7416  00216A  6E04               	movwf	(___fladd@b+3)^0,c
  7417  00216C                     l3403:
  7418  00216C  5008               	movf	(___fladd@a+3)^0,w,c
  7419  00216E  0B80               	andlw	128
  7420  002170  6E0E               	movwf	___fladd@aexp^0,c
  7421  002172  500D               	movf	___fladd@signs^0,w,c
  7422  002174  180E               	xorwf	___fladd@aexp^0,w,c
  7423  002176  B4D8               	btfsc	status,2,c
  7424  002178  EFC0  F010         	goto	u3391
  7425  00217C  EFC2  F010         	goto	u3390
  7426  002180                     u3391:
  7427  002180  EFC3  F010         	goto	l3409
  7428  002184                     u3390:
  7429  002184  8C0D               	bsf	___fladd@signs^0,6,c
  7430  002186                     l3409:
  7431  002186  5008               	movf	(___fladd@a+3)^0,w,c
  7432  002188  2408               	addwf	(___fladd@a+3)^0,w,c
  7433  00218A  6E0E               	movwf	___fladd@aexp^0,c
  7434  00218C  AE07               	btfss	(___fladd@a+2)^0,7,c
  7435  00218E  EFCB  F010         	goto	u3401
  7436  002192  EFCD  F010         	goto	u3400
  7437  002196                     u3401:
  7438  002196  EFCE  F010         	goto	l3415
  7439  00219A                     u3400:
  7440  00219A  800E               	bsf	___fladd@aexp^0,0,c
  7441  00219C                     l3415:
  7442  00219C  500E               	movf	___fladd@aexp^0,w,c
  7443  00219E  B4D8               	btfsc	status,2,c
  7444  0021A0  EFD4  F010         	goto	u3411
  7445  0021A4  EFD6  F010         	goto	u3410
  7446  0021A8                     u3411:
  7447  0021A8  EFEB  F010         	goto	l3425
  7448  0021AC                     u3410:
  7449  0021AC  280E               	incf	___fladd@aexp^0,w,c
  7450  0021AE  A4D8               	btfss	status,2,c
  7451  0021B0  EFDC  F010         	goto	u3421
  7452  0021B4  EFDE  F010         	goto	u3420
  7453  0021B8                     u3421:
  7454  0021B8  EFE6  F010         	goto	l3421
  7455  0021BC                     u3420:
  7456  0021BC  0E00               	movlw	0
  7457  0021BE  6E05               	movwf	___fladd@a^0,c
  7458  0021C0  0E00               	movlw	0
  7459  0021C2  6E06               	movwf	(___fladd@a+1)^0,c
  7460  0021C4  0E00               	movlw	0
  7461  0021C6  6E07               	movwf	(___fladd@a+2)^0,c
  7462  0021C8  0E00               	movlw	0
  7463  0021CA  6E08               	movwf	(___fladd@a+3)^0,c
  7464  0021CC                     l3421:
  7465  0021CC  8E07               	bsf	(___fladd@a+2)^0,7,c
  7466  0021CE  0E00               	movlw	0
  7467  0021D0  6E08               	movwf	(___fladd@a+3)^0,c
  7468  0021D2  EFF3  F010         	goto	l3427
  7469  0021D6                     l3425:
  7470  0021D6  0E00               	movlw	0
  7471  0021D8  6E05               	movwf	___fladd@a^0,c
  7472  0021DA  0E00               	movlw	0
  7473  0021DC  6E06               	movwf	(___fladd@a+1)^0,c
  7474  0021DE  0E00               	movlw	0
  7475  0021E0  6E07               	movwf	(___fladd@a+2)^0,c
  7476  0021E2  0E00               	movlw	0
  7477  0021E4  6E08               	movwf	(___fladd@a+3)^0,c
  7478  0021E6                     l3427:
  7479  0021E6  500F               	movf	___fladd@bexp^0,w,c
  7480  0021E8  5C0E               	subwf	___fladd@aexp^0,w,c
  7481  0021EA  B0D8               	btfsc	status,0,c
  7482  0021EC  EFFA  F010         	goto	u3431
  7483  0021F0  EFFC  F010         	goto	u3430
  7484  0021F4                     u3431:
  7485  0021F4  EF23  F011         	goto	l3463
  7486  0021F8                     u3430:
  7487  0021F8  AC0D               	btfss	___fladd@signs^0,6,c
  7488  0021FA  EF01  F011         	goto	u3441
  7489  0021FE  EF03  F011         	goto	u3440
  7490  002202                     u3441:
  7491  002202  EF05  F011         	goto	l3433
  7492  002206                     u3440:
  7493  002206  0E80               	movlw	128
  7494  002208  1A0D               	xorwf	___fladd@signs^0,f,c
  7495  00220A                     l3433:
  7496  00220A  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  7497  00220E  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  7498  002212  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  7499  002216  C001  F010         	movff	___fladd@b,___fladd@grs
  7500  00221A  C005  F001         	movff	___fladd@a,___fladd@b
  7501  00221E  C010  F005         	movff	___fladd@grs,___fladd@a
  7502  002222  C002  F010         	movff	___fladd@b+1,___fladd@grs
  7503  002226  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  7504  00222A  C010  F006         	movff	___fladd@grs,___fladd@a+1
  7505  00222E  C003  F010         	movff	___fladd@b+2,___fladd@grs
  7506  002232  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  7507  002236  C010  F007         	movff	___fladd@grs,___fladd@a+2
  7508  00223A  C004  F010         	movff	___fladd@b+3,___fladd@grs
  7509  00223E  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  7510  002242  C010  F008         	movff	___fladd@grs,___fladd@a+3
  7511  002246                     l3463:
  7512  002246  0E00               	movlw	0
  7513  002248  6E10               	movwf	___fladd@grs^0,c
  7514  00224A  500F               	movf	___fladd@bexp^0,w,c
  7515  00224C  C00E  F009         	movff	___fladd@aexp,??___fladd
  7516  002250  6A0A               	clrf	(??___fladd+1)^0,c
  7517  002252  5E09               	subwf	??___fladd^0,f,c
  7518  002254  0E00               	movlw	0
  7519  002256  5A0A               	subwfb	(??___fladd+1)^0,f,c
  7520  002258  BE0A               	btfsc	(??___fladd+1)^0,7,c
  7521  00225A  EF38  F011         	goto	u3451
  7522  00225E  500A               	movf	(??___fladd+1)^0,w,c
  7523  002260  E109               	bnz	u3450
  7524  002262  0E1A               	movlw	26
  7525  002264  5C09               	subwf	??___fladd^0,w,c
  7526  002266  A0D8               	btfss	status,0,c
  7527  002268  EF38  F011         	goto	u3451
  7528  00226C  EF3A  F011         	goto	u3450
  7529  002270                     u3451:
  7530  002270  EF71  F011         	goto	l856
  7531  002274                     u3450:
  7532  002274  5001               	movf	___fladd@b^0,w,c
  7533  002276  1002               	iorwf	(___fladd@b+1)^0,w,c
  7534  002278  1003               	iorwf	(___fladd@b+2)^0,w,c
  7535  00227A  1004               	iorwf	(___fladd@b+3)^0,w,c
  7536  00227C  A4D8               	btfss	status,2,c
  7537  00227E  EF43  F011         	goto	u3461
  7538  002282  EF46  F011         	goto	u3460
  7539  002286                     u3461:
  7540  002286  0E01               	movlw	1
  7541  002288  EF47  F011         	goto	u3470
  7542  00228C                     u3460:
  7543  00228C  0E00               	movlw	0
  7544  00228E                     u3470:
  7545  00228E  6E10               	movwf	___fladd@grs^0,c
  7546  002290  0E00               	movlw	0
  7547  002292  6E01               	movwf	___fladd@b^0,c
  7548  002294  0E00               	movlw	0
  7549  002296  6E02               	movwf	(___fladd@b+1)^0,c
  7550  002298  0E00               	movlw	0
  7551  00229A  6E03               	movwf	(___fladd@b+2)^0,c
  7552  00229C  0E00               	movlw	0
  7553  00229E  6E04               	movwf	(___fladd@b+3)^0,c
  7554  0022A0  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  7555  0022A4  EF7A  F011         	goto	l855
  7556  0022A8                     l857:
  7557  0022A8  A010               	btfss	___fladd@grs^0,0,c
  7558  0022AA  EF59  F011         	goto	u3481
  7559  0022AE  EF5B  F011         	goto	u3480
  7560  0022B2                     u3481:
  7561  0022B2  EF61  F011         	goto	l3475
  7562  0022B6                     u3480:
  7563  0022B6  90D8               	bcf	status,0,c
  7564  0022B8  3010               	rrcf	___fladd@grs^0,w,c
  7565  0022BA  0901               	iorlw	1
  7566  0022BC  6E10               	movwf	___fladd@grs^0,c
  7567  0022BE  EF63  F011         	goto	l3477
  7568  0022C2                     l3475:
  7569  0022C2  90D8               	bcf	status,0,c
  7570  0022C4  3210               	rrcf	___fladd@grs^0,f,c
  7571  0022C6                     l3477:
  7572  0022C6  A001               	btfss	___fladd@b^0,0,c
  7573  0022C8  EF68  F011         	goto	u3491
  7574  0022CC  EF6A  F011         	goto	u3490
  7575  0022D0                     u3491:
  7576  0022D0  EF6B  F011         	goto	l3481
  7577  0022D4                     u3490:
  7578  0022D4  8E10               	bsf	___fladd@grs^0,7,c
  7579  0022D6                     l3481:
  7580  0022D6  3404               	rlcf	(___fladd@b+3)^0,w,c
  7581  0022D8  3204               	rrcf	(___fladd@b+3)^0,f,c
  7582  0022DA  3203               	rrcf	(___fladd@b+2)^0,f,c
  7583  0022DC  3202               	rrcf	(___fladd@b+1)^0,f,c
  7584  0022DE  3201               	rrcf	___fladd@b^0,f,c
  7585  0022E0  2A0F               	incf	___fladd@bexp^0,f,c
  7586  0022E2                     l856:
  7587  0022E2  500E               	movf	___fladd@aexp^0,w,c
  7588  0022E4  5C0F               	subwf	___fladd@bexp^0,w,c
  7589  0022E6  A0D8               	btfss	status,0,c
  7590  0022E8  EF78  F011         	goto	u3501
  7591  0022EC  EF7A  F011         	goto	u3500
  7592  0022F0                     u3501:
  7593  0022F0  EF54  F011         	goto	l857
  7594  0022F4                     u3500:
  7595  0022F4                     l855:
  7596  0022F4  BC0D               	btfsc	___fladd@signs^0,6,c
  7597  0022F6  EF7F  F011         	goto	u3511
  7598  0022FA  EF81  F011         	goto	u3510
  7599  0022FE                     u3511:
  7600  0022FE  EFC1  F011         	goto	l3509
  7601  002302                     u3510:
  7602  002302  500F               	movf	___fladd@bexp^0,w,c
  7603  002304  A4D8               	btfss	status,2,c
  7604  002306  EF87  F011         	goto	u3521
  7605  00230A  EF89  F011         	goto	u3520
  7606  00230E                     u3521:
  7607  00230E  EF93  F011         	goto	l3491
  7608  002312                     u3520:
  7609  002312  0E00               	movlw	0
  7610  002314  6E01               	movwf	?___fladd^0,c
  7611  002316  0E00               	movlw	0
  7612  002318  6E02               	movwf	(?___fladd+1)^0,c
  7613  00231A  0E00               	movlw	0
  7614  00231C  6E03               	movwf	(?___fladd+2)^0,c
  7615  00231E  0E00               	movlw	0
  7616  002320  6E04               	movwf	(?___fladd+3)^0,c
  7617  002322  EFE2  F012         	goto	l864
  7618  002326                     l3491:
  7619  002326  5005               	movf	___fladd@a^0,w,c
  7620  002328  2601               	addwf	___fladd@b^0,f,c
  7621  00232A  5006               	movf	(___fladd@a+1)^0,w,c
  7622  00232C  2202               	addwfc	(___fladd@b+1)^0,f,c
  7623  00232E  5007               	movf	(___fladd@a+2)^0,w,c
  7624  002330  2203               	addwfc	(___fladd@b+2)^0,f,c
  7625  002332  5008               	movf	(___fladd@a+3)^0,w,c
  7626  002334  2204               	addwfc	(___fladd@b+3)^0,f,c
  7627  002336  A004               	btfss	(___fladd@b+3)^0,0,c
  7628  002338  EFA0  F011         	goto	u3531
  7629  00233C  EFA2  F011         	goto	u3530
  7630  002340                     u3531:
  7631  002340  EF4E  F012         	goto	l3545
  7632  002344                     u3530:
  7633  002344  A010               	btfss	___fladd@grs^0,0,c
  7634  002346  EFA7  F011         	goto	u3541
  7635  00234A  EFA9  F011         	goto	u3540
  7636  00234E                     u3541:
  7637  00234E  EFAF  F011         	goto	l3499
  7638  002352                     u3540:
  7639  002352  90D8               	bcf	status,0,c
  7640  002354  3010               	rrcf	___fladd@grs^0,w,c
  7641  002356  0901               	iorlw	1
  7642  002358  6E10               	movwf	___fladd@grs^0,c
  7643  00235A  EFB1  F011         	goto	l3501
  7644  00235E                     l3499:
  7645  00235E  90D8               	bcf	status,0,c
  7646  002360  3210               	rrcf	___fladd@grs^0,f,c
  7647  002362                     l3501:
  7648  002362  A001               	btfss	___fladd@b^0,0,c
  7649  002364  EFB6  F011         	goto	u3551
  7650  002368  EFB8  F011         	goto	u3550
  7651  00236C                     u3551:
  7652  00236C  EFB9  F011         	goto	l3505
  7653  002370                     u3550:
  7654  002370  8E10               	bsf	___fladd@grs^0,7,c
  7655  002372                     l3505:
  7656  002372  3404               	rlcf	(___fladd@b+3)^0,w,c
  7657  002374  3204               	rrcf	(___fladd@b+3)^0,f,c
  7658  002376  3203               	rrcf	(___fladd@b+2)^0,f,c
  7659  002378  3202               	rrcf	(___fladd@b+1)^0,f,c
  7660  00237A  3201               	rrcf	___fladd@b^0,f,c
  7661  00237C  2A0F               	incf	___fladd@bexp^0,f,c
  7662  00237E  EF4E  F012         	goto	l3545
  7663  002382                     l3509:
  7664  002382  5005               	movf	___fladd@a^0,w,c
  7665  002384  5C01               	subwf	___fladd@b^0,w,c
  7666  002386  5006               	movf	(___fladd@a+1)^0,w,c
  7667  002388  5802               	subwfb	(___fladd@b+1)^0,w,c
  7668  00238A  5007               	movf	(___fladd@a+2)^0,w,c
  7669  00238C  5803               	subwfb	(___fladd@b+2)^0,w,c
  7670  00238E  5004               	movf	(___fladd@b+3)^0,w,c
  7671  002390  0A80               	xorlw	128
  7672  002392  6E09               	movwf	??___fladd^0,c
  7673  002394  5008               	movf	(___fladd@a+3)^0,w,c
  7674  002396  0A80               	xorlw	128
  7675  002398  5809               	subwfb	??___fladd^0,w,c
  7676  00239A  B0D8               	btfsc	status,0,c
  7677  00239C  EFD2  F011         	goto	u3561
  7678  0023A0  EFD4  F011         	goto	u3560
  7679  0023A4                     u3561:
  7680  0023A4  EFFF  F011         	goto	l3519
  7681  0023A8                     u3560:
  7682  0023A8  5001               	movf	___fladd@b^0,w,c
  7683  0023AA  5C05               	subwf	___fladd@a^0,w,c
  7684  0023AC  6E09               	movwf	??___fladd^0,c
  7685  0023AE  5002               	movf	(___fladd@b+1)^0,w,c
  7686  0023B0  5806               	subwfb	(___fladd@a+1)^0,w,c
  7687  0023B2  6E0A               	movwf	(??___fladd+1)^0,c
  7688  0023B4  5003               	movf	(___fladd@b+2)^0,w,c
  7689  0023B6  5807               	subwfb	(___fladd@a+2)^0,w,c
  7690  0023B8  6E0B               	movwf	(??___fladd+2)^0,c
  7691  0023BA  5004               	movf	(___fladd@b+3)^0,w,c
  7692  0023BC  5808               	subwfb	(___fladd@a+3)^0,w,c
  7693  0023BE  6E0C               	movwf	(??___fladd+3)^0,c
  7694  0023C0  0EFF               	movlw	255
  7695  0023C2  2409               	addwf	??___fladd^0,w,c
  7696  0023C4  6E01               	movwf	___fladd@b^0,c
  7697  0023C6  0EFF               	movlw	255
  7698  0023C8  200A               	addwfc	(??___fladd+1)^0,w,c
  7699  0023CA  6E02               	movwf	(___fladd@b+1)^0,c
  7700  0023CC  0EFF               	movlw	255
  7701  0023CE  200B               	addwfc	(??___fladd+2)^0,w,c
  7702  0023D0  6E03               	movwf	(___fladd@b+2)^0,c
  7703  0023D2  0EFF               	movlw	255
  7704  0023D4  200C               	addwfc	(??___fladd+3)^0,w,c
  7705  0023D6  6E04               	movwf	(___fladd@b+3)^0,c
  7706  0023D8  0E80               	movlw	128
  7707  0023DA  1A0D               	xorwf	___fladd@signs^0,f,c
  7708  0023DC  6C10               	negf	___fladd@grs^0,c
  7709  0023DE  5010               	movf	___fladd@grs^0,w,c
  7710  0023E0  A4D8               	btfss	status,2,c
  7711  0023E2  EFF5  F011         	goto	u3571
  7712  0023E6  EFF7  F011         	goto	u3570
  7713  0023EA                     u3571:
  7714  0023EA  EF07  F012         	goto	l872
  7715  0023EE                     u3570:
  7716  0023EE  0E01               	movlw	1
  7717  0023F0  2601               	addwf	___fladd@b^0,f,c
  7718  0023F2  0E00               	movlw	0
  7719  0023F4  2202               	addwfc	(___fladd@b+1)^0,f,c
  7720  0023F6  2203               	addwfc	(___fladd@b+2)^0,f,c
  7721  0023F8  2204               	addwfc	(___fladd@b+3)^0,f,c
  7722  0023FA  EF07  F012         	goto	l872
  7723  0023FE                     l3519:
  7724  0023FE  5005               	movf	___fladd@a^0,w,c
  7725  002400  5E01               	subwf	___fladd@b^0,f,c
  7726  002402  5006               	movf	(___fladd@a+1)^0,w,c
  7727  002404  5A02               	subwfb	(___fladd@b+1)^0,f,c
  7728  002406  5007               	movf	(___fladd@a+2)^0,w,c
  7729  002408  5A03               	subwfb	(___fladd@b+2)^0,f,c
  7730  00240A  5008               	movf	(___fladd@a+3)^0,w,c
  7731  00240C  5A04               	subwfb	(___fladd@b+3)^0,f,c
  7732  00240E                     l872:
  7733  00240E  5001               	movf	___fladd@b^0,w,c
  7734  002410  1002               	iorwf	(___fladd@b+1)^0,w,c
  7735  002412  1003               	iorwf	(___fladd@b+2)^0,w,c
  7736  002414  1004               	iorwf	(___fladd@b+3)^0,w,c
  7737  002416  A4D8               	btfss	status,2,c
  7738  002418  EF10  F012         	goto	u3581
  7739  00241C  EF12  F012         	goto	u3580
  7740  002420                     u3581:
  7741  002420  EF47  F012         	goto	l3543
  7742  002424                     u3580:
  7743  002424  5010               	movf	___fladd@grs^0,w,c
  7744  002426  A4D8               	btfss	status,2,c
  7745  002428  EF18  F012         	goto	u3591
  7746  00242C  EF1A  F012         	goto	u3590
  7747  002430                     u3591:
  7748  002430  EF47  F012         	goto	l3543
  7749  002434                     u3590:
  7750  002434  0E00               	movlw	0
  7751  002436  6E01               	movwf	?___fladd^0,c
  7752  002438  0E00               	movlw	0
  7753  00243A  6E02               	movwf	(?___fladd+1)^0,c
  7754  00243C  0E00               	movlw	0
  7755  00243E  6E03               	movwf	(?___fladd+2)^0,c
  7756  002440  0E00               	movlw	0
  7757  002442  6E04               	movwf	(?___fladd+3)^0,c
  7758  002444  EFE2  F012         	goto	l864
  7759  002448                     l3527:
  7760  002448  90D8               	bcf	status,0,c
  7761  00244A  3601               	rlcf	___fladd@b^0,f,c
  7762  00244C  3602               	rlcf	(___fladd@b+1)^0,f,c
  7763  00244E  3603               	rlcf	(___fladd@b+2)^0,f,c
  7764  002450  3604               	rlcf	(___fladd@b+3)^0,f,c
  7765  002452  AE10               	btfss	___fladd@grs^0,7,c
  7766  002454  EF2E  F012         	goto	u3601
  7767  002458  EF30  F012         	goto	u3600
  7768  00245C                     u3601:
  7769  00245C  EF31  F012         	goto	l3533
  7770  002460                     u3600:
  7771  002460  8001               	bsf	___fladd@b^0,0,c
  7772  002462                     l3533:
  7773  002462  A010               	btfss	___fladd@grs^0,0,c
  7774  002464  EF36  F012         	goto	u3611
  7775  002468  EF38  F012         	goto	u3610
  7776  00246C                     u3611:
  7777  00246C  EF3C  F012         	goto	l3537
  7778  002470                     u3610:
  7779  002470  80D8               	bsf	status,0,c
  7780  002472  3610               	rlcf	___fladd@grs^0,f,c
  7781  002474  EF3E  F012         	goto	l3539
  7782  002478                     l3537:
  7783  002478  90D8               	bcf	status,0,c
  7784  00247A  3610               	rlcf	___fladd@grs^0,f,c
  7785  00247C                     l3539:
  7786  00247C  500F               	movf	___fladd@bexp^0,w,c
  7787  00247E  B4D8               	btfsc	status,2,c
  7788  002480  EF44  F012         	goto	u3621
  7789  002484  EF46  F012         	goto	u3620
  7790  002488                     u3621:
  7791  002488  EF47  F012         	goto	l3543
  7792  00248C                     u3620:
  7793  00248C  060F               	decf	___fladd@bexp^0,f,c
  7794  00248E                     l3543:
  7795  00248E  AE03               	btfss	(___fladd@b+2)^0,7,c
  7796  002490  EF4C  F012         	goto	u3631
  7797  002494  EF4E  F012         	goto	u3630
  7798  002498                     u3631:
  7799  002498  EF24  F012         	goto	l3527
  7800  00249C                     u3630:
  7801  00249C                     l3545:
  7802  00249C  0E00               	movlw	0
  7803  00249E  6E0E               	movwf	___fladd@aexp^0,c
  7804  0024A0  AE10               	btfss	___fladd@grs^0,7,c
  7805  0024A2  EF55  F012         	goto	u3641
  7806  0024A6  EF57  F012         	goto	u3640
  7807  0024AA                     u3641:
  7808  0024AA  EF6F  F012         	goto	l881
  7809  0024AE                     u3640:
  7810  0024AE  C010  F009         	movff	___fladd@grs,??___fladd
  7811  0024B2  0E7F               	movlw	127
  7812  0024B4  1609               	andwf	??___fladd^0,f,c
  7813  0024B6  B4D8               	btfsc	status,2,c
  7814  0024B8  EF60  F012         	goto	u3651
  7815  0024BC  EF62  F012         	goto	u3650
  7816  0024C0                     u3651:
  7817  0024C0  EF66  F012         	goto	l882
  7818  0024C4                     u3650:
  7819  0024C4                     l3551:
  7820  0024C4  0E01               	movlw	1
  7821  0024C6  6E0E               	movwf	___fladd@aexp^0,c
  7822  0024C8  EF6F  F012         	goto	l881
  7823  0024CC                     l882:
  7824  0024CC  A001               	btfss	___fladd@b^0,0,c
  7825  0024CE  EF6B  F012         	goto	u3661
  7826  0024D2  EF6D  F012         	goto	u3660
  7827  0024D6                     u3661:
  7828  0024D6  EF6F  F012         	goto	l881
  7829  0024DA                     u3660:
  7830  0024DA  EF62  F012         	goto	l3551
  7831  0024DE                     l881:
  7832  0024DE  500E               	movf	___fladd@aexp^0,w,c
  7833  0024E0  B4D8               	btfsc	status,2,c
  7834  0024E2  EF75  F012         	goto	u3671
  7835  0024E6  EF77  F012         	goto	u3670
  7836  0024EA                     u3671:
  7837  0024EA  EFA2  F012         	goto	l3563
  7838  0024EE                     u3670:
  7839  0024EE  0E01               	movlw	1
  7840  0024F0  2601               	addwf	___fladd@b^0,f,c
  7841  0024F2  0E00               	movlw	0
  7842  0024F4  2202               	addwfc	(___fladd@b+1)^0,f,c
  7843  0024F6  2203               	addwfc	(___fladd@b+2)^0,f,c
  7844  0024F8  2204               	addwfc	(___fladd@b+3)^0,f,c
  7845  0024FA  A004               	btfss	(___fladd@b+3)^0,0,c
  7846  0024FC  EF82  F012         	goto	u3681
  7847  002500  EF84  F012         	goto	u3680
  7848  002504                     u3681:
  7849  002504  EFA2  F012         	goto	l3563
  7850  002508                     u3680:
  7851  002508  C001  F009         	movff	___fladd@b,??___fladd
  7852  00250C  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  7853  002510  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  7854  002514  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  7855  002518  340C               	rlcf	(??___fladd+3)^0,w,c
  7856  00251A  320C               	rrcf	(??___fladd+3)^0,f,c
  7857  00251C  320B               	rrcf	(??___fladd+2)^0,f,c
  7858  00251E  320A               	rrcf	(??___fladd+1)^0,f,c
  7859  002520  3209               	rrcf	??___fladd^0,f,c
  7860  002522  C009  F001         	movff	??___fladd,___fladd@b
  7861  002526  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  7862  00252A  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  7863  00252E  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  7864  002532  280F               	incf	___fladd@bexp^0,w,c
  7865  002534  B4D8               	btfsc	status,2,c
  7866  002536  EF9F  F012         	goto	u3691
  7867  00253A  EFA1  F012         	goto	u3690
  7868  00253E                     u3691:
  7869  00253E  EFA2  F012         	goto	l3563
  7870  002542                     u3690:
  7871  002542  2A0F               	incf	___fladd@bexp^0,f,c
  7872  002544                     l3563:
  7873  002544  280F               	incf	___fladd@bexp^0,w,c
  7874  002546  B4D8               	btfsc	status,2,c
  7875  002548  EFA8  F012         	goto	u3701
  7876  00254C  EFAA  F012         	goto	u3700
  7877  002550                     u3701:
  7878  002550  EFB2  F012         	goto	l3567
  7879  002554                     u3700:
  7880  002554  500F               	movf	___fladd@bexp^0,w,c
  7881  002556  A4D8               	btfss	status,2,c
  7882  002558  EFB0  F012         	goto	u3711
  7883  00255C  EFB2  F012         	goto	u3710
  7884  002560                     u3711:
  7885  002560  EFC4  F012         	goto	l3571
  7886  002564                     u3710:
  7887  002564                     l3567:
  7888  002564  0E00               	movlw	0
  7889  002566  6E01               	movwf	___fladd@b^0,c
  7890  002568  0E00               	movlw	0
  7891  00256A  6E02               	movwf	(___fladd@b+1)^0,c
  7892  00256C  0E00               	movlw	0
  7893  00256E  6E03               	movwf	(___fladd@b+2)^0,c
  7894  002570  0E00               	movlw	0
  7895  002572  6E04               	movwf	(___fladd@b+3)^0,c
  7896  002574  500F               	movf	___fladd@bexp^0,w,c
  7897  002576  A4D8               	btfss	status,2,c
  7898  002578  EFC0  F012         	goto	u3721
  7899  00257C  EFC2  F012         	goto	u3720
  7900  002580                     u3721:
  7901  002580  EFC4  F012         	goto	l3571
  7902  002584                     u3720:
  7903  002584  0E00               	movlw	0
  7904  002586  6E0D               	movwf	___fladd@signs^0,c
  7905  002588                     l3571:
  7906  002588  A00F               	btfss	___fladd@bexp^0,0,c
  7907  00258A  EFC9  F012         	goto	u3731
  7908  00258E  EFCB  F012         	goto	u3730
  7909  002592                     u3731:
  7910  002592  EFCE  F012         	goto	l3575
  7911  002596                     u3730:
  7912  002596  8E03               	bsf	(___fladd@b+2)^0,7,c
  7913  002598  EFCF  F012         	goto	l3577
  7914  00259C                     l3575:
  7915  00259C  9E03               	bcf	(___fladd@b+2)^0,7,c
  7916  00259E                     l3577:
  7917  00259E  90D8               	bcf	status,0,c
  7918  0025A0  300F               	rrcf	___fladd@bexp^0,w,c
  7919  0025A2  6E04               	movwf	(___fladd@b+3)^0,c
  7920  0025A4  AE0D               	btfss	___fladd@signs^0,7,c
  7921  0025A6  EFD7  F012         	goto	u3741
  7922  0025AA  EFD9  F012         	goto	u3740
  7923  0025AE                     u3741:
  7924  0025AE  EFDA  F012         	goto	l3583
  7925  0025B2                     u3740:
  7926  0025B2  8E04               	bsf	(___fladd@b+3)^0,7,c
  7927  0025B4                     l3583:
  7928  0025B4  C001  F001         	movff	___fladd@b,?___fladd
  7929  0025B8  C002  F002         	movff	___fladd@b+1,?___fladd+1
  7930  0025BC  C003  F003         	movff	___fladd@b+2,?___fladd+2
  7931  0025C0  C004  F004         	movff	___fladd@b+3,?___fladd+3
  7932  0025C4                     l864:
  7933  0025C4  0012               	return		;funcret
  7934  0025C6                     __end_of___fladd:
  7935                           	callstack 0
  7936                           
  7937 ;; *************** function ___flneg *****************
  7938 ;; Defined at:
  7939 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\flneg.c"
  7940 ;; Parameters:    Size  Location     Type
  7941 ;;  f1              4    0[COMRAM] unsigned char 
  7942 ;; Auto vars:     Size  Location     Type
  7943 ;;		None
  7944 ;; Return value:  Size  Location     Type
  7945 ;;                  4    0[COMRAM] unsigned char 
  7946 ;; Registers used:
  7947 ;;		wreg, status,2, status,0
  7948 ;; Tracked objects:
  7949 ;;		On entry : 0/0
  7950 ;;		On exit  : 0/0
  7951 ;;		Unchanged: 0/0
  7952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7953 ;;      Params:         4       0       0       0       0       0       0       0       0
  7954 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7955 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7956 ;;      Totals:         4       0       0       0       0       0       0       0       0
  7957 ;;Total ram usage:        4 bytes
  7958 ;; Hardware stack levels used:    1
  7959 ;; This function calls:
  7960 ;;		Nothing
  7961 ;; This function is called by:
  7962 ;;		_efgtoa
  7963 ;; This function uses a non-reentrant model
  7964 ;;
  7965                           
  7966                           	psect	text25
  7967  004508                     __ptext25:
  7968                           	callstack 0
  7969  004508                     ___flneg:
  7970                           	callstack 24
  7971  004508  5001               	movf	___flneg@f1^0,w,c
  7972  00450A  1002               	iorwf	(___flneg@f1+1)^0,w,c
  7973  00450C  1003               	iorwf	(___flneg@f1+2)^0,w,c
  7974  00450E  1004               	iorwf	(___flneg@f1+3)^0,w,c
  7975  004510  B4D8               	btfsc	status,2,c
  7976  004512  EF8D  F022         	goto	u4451
  7977  004516  EF8F  F022         	goto	u4450
  7978  00451A                     u4451:
  7979  00451A  EF97  F022         	goto	l4019
  7980  00451E                     u4450:
  7981  00451E  0E00               	movlw	0
  7982  004520  1A01               	xorwf	___flneg@f1^0,f,c
  7983  004522  0E00               	movlw	0
  7984  004524  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  7985  004526  0E00               	movlw	0
  7986  004528  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  7987  00452A  0E80               	movlw	128
  7988  00452C  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  7989  00452E                     l4019:
  7990  00452E  C001  F001         	movff	___flneg@f1,?___flneg
  7991  004532  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  7992  004536  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  7993  00453A  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  7994  00453E  0012               	return		;funcret
  7995  004540                     __end_of___flneg:
  7996                           	callstack 0
  7997                           
  7998 ;; *************** function ___flmul *****************
  7999 ;; Defined at:
  8000 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\sprcmul.c"
  8001 ;; Parameters:    Size  Location     Type
  8002 ;;  b               4   19[COMRAM] unsigned char 
  8003 ;;  a               4   23[COMRAM] unsigned char 
  8004 ;; Auto vars:     Size  Location     Type
  8005 ;;  prod            4   38[COMRAM] struct .
  8006 ;;  grs             4   32[COMRAM] unsigned long 
  8007 ;;  temp            2   42[COMRAM] struct .
  8008 ;;  bexp            1   37[COMRAM] unsigned char 
  8009 ;;  aexp            1   36[COMRAM] unsigned char 
  8010 ;;  sign            1   31[COMRAM] unsigned char 
  8011 ;; Return value:  Size  Location     Type
  8012 ;;                  4   19[COMRAM] unsigned char 
  8013 ;; Registers used:
  8014 ;;		wreg, status,2, status,0, prodl, prodh
  8015 ;; Tracked objects:
  8016 ;;		On entry : 0/0
  8017 ;;		On exit  : 0/0
  8018 ;;		Unchanged: 0/0
  8019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8020 ;;      Params:         8       0       0       0       0       0       0       0       0
  8021 ;;      Locals:        13       0       0       0       0       0       0       0       0
  8022 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8023 ;;      Totals:        25       0       0       0       0       0       0       0       0
  8024 ;;Total ram usage:       25 bytes
  8025 ;; Hardware stack levels used:    1
  8026 ;; This function calls:
  8027 ;;		Nothing
  8028 ;; This function is called by:
  8029 ;;		_activar_seguridad
  8030 ;;		_efgtoa
  8031 ;; This function uses a non-reentrant model
  8032 ;;
  8033                           
  8034                           	psect	text26
  8035  0025C6                     __ptext26:
  8036                           	callstack 0
  8037  0025C6                     ___flmul:
  8038                           	callstack 24
  8039  0025C6  5017               	movf	(___flmul@b+3)^0,w,c
  8040  0025C8  0B80               	andlw	128
  8041  0025CA  6E20               	movwf	___flmul@sign^0,c
  8042  0025CC  5017               	movf	(___flmul@b+3)^0,w,c
  8043  0025CE  2417               	addwf	(___flmul@b+3)^0,w,c
  8044  0025D0  6E26               	movwf	___flmul@bexp^0,c
  8045  0025D2  AE16               	btfss	(___flmul@b+2)^0,7,c
  8046  0025D4  EFEE  F012         	goto	u4061
  8047  0025D8  EFF0  F012         	goto	u4060
  8048  0025DC                     u4061:
  8049  0025DC  EFF1  F012         	goto	l3767
  8050  0025E0                     u4060:
  8051  0025E0  8026               	bsf	___flmul@bexp^0,0,c
  8052  0025E2                     l3767:
  8053  0025E2  5026               	movf	___flmul@bexp^0,w,c
  8054  0025E4  B4D8               	btfsc	status,2,c
  8055  0025E6  EFF7  F012         	goto	u4071
  8056  0025EA  EFF9  F012         	goto	u4070
  8057  0025EE                     u4071:
  8058  0025EE  EF0C  F013         	goto	l3775
  8059  0025F2                     u4070:
  8060  0025F2  2826               	incf	___flmul@bexp^0,w,c
  8061  0025F4  A4D8               	btfss	status,2,c
  8062  0025F6  EFFF  F012         	goto	u4081
  8063  0025FA  EF01  F013         	goto	u4080
  8064  0025FE                     u4081:
  8065  0025FE  EF09  F013         	goto	l3773
  8066  002602                     u4080:
  8067  002602  0E00               	movlw	0
  8068  002604  6E14               	movwf	___flmul@b^0,c
  8069  002606  0E00               	movlw	0
  8070  002608  6E15               	movwf	(___flmul@b+1)^0,c
  8071  00260A  0E00               	movlw	0
  8072  00260C  6E16               	movwf	(___flmul@b+2)^0,c
  8073  00260E  0E00               	movlw	0
  8074  002610  6E17               	movwf	(___flmul@b+3)^0,c
  8075  002612                     l3773:
  8076  002612  8E16               	bsf	(___flmul@b+2)^0,7,c
  8077  002614  EF14  F013         	goto	l3777
  8078  002618                     l3775:
  8079  002618  0E00               	movlw	0
  8080  00261A  6E14               	movwf	___flmul@b^0,c
  8081  00261C  0E00               	movlw	0
  8082  00261E  6E15               	movwf	(___flmul@b+1)^0,c
  8083  002620  0E00               	movlw	0
  8084  002622  6E16               	movwf	(___flmul@b+2)^0,c
  8085  002624  0E00               	movlw	0
  8086  002626  6E17               	movwf	(___flmul@b+3)^0,c
  8087  002628                     l3777:
  8088  002628  501B               	movf	(___flmul@a+3)^0,w,c
  8089  00262A  0B80               	andlw	128
  8090  00262C  1A20               	xorwf	___flmul@sign^0,f,c
  8091  00262E  501B               	movf	(___flmul@a+3)^0,w,c
  8092  002630  241B               	addwf	(___flmul@a+3)^0,w,c
  8093  002632  6E25               	movwf	___flmul@aexp^0,c
  8094  002634  AE1A               	btfss	(___flmul@a+2)^0,7,c
  8095  002636  EF1F  F013         	goto	u4091
  8096  00263A  EF21  F013         	goto	u4090
  8097  00263E                     u4091:
  8098  00263E  EF22  F013         	goto	l3785
  8099  002642                     u4090:
  8100  002642  8025               	bsf	___flmul@aexp^0,0,c
  8101  002644                     l3785:
  8102  002644  5025               	movf	___flmul@aexp^0,w,c
  8103  002646  B4D8               	btfsc	status,2,c
  8104  002648  EF28  F013         	goto	u4101
  8105  00264C  EF2A  F013         	goto	u4100
  8106  002650                     u4101:
  8107  002650  EF3D  F013         	goto	l3793
  8108  002654                     u4100:
  8109  002654  2825               	incf	___flmul@aexp^0,w,c
  8110  002656  A4D8               	btfss	status,2,c
  8111  002658  EF30  F013         	goto	u4111
  8112  00265C  EF32  F013         	goto	u4110
  8113  002660                     u4111:
  8114  002660  EF3A  F013         	goto	l3791
  8115  002664                     u4110:
  8116  002664  0E00               	movlw	0
  8117  002666  6E18               	movwf	___flmul@a^0,c
  8118  002668  0E00               	movlw	0
  8119  00266A  6E19               	movwf	(___flmul@a+1)^0,c
  8120  00266C  0E00               	movlw	0
  8121  00266E  6E1A               	movwf	(___flmul@a+2)^0,c
  8122  002670  0E00               	movlw	0
  8123  002672  6E1B               	movwf	(___flmul@a+3)^0,c
  8124  002674                     l3791:
  8125  002674  8E1A               	bsf	(___flmul@a+2)^0,7,c
  8126  002676  EF45  F013         	goto	l941
  8127  00267A                     l3793:
  8128  00267A  0E00               	movlw	0
  8129  00267C  6E18               	movwf	___flmul@a^0,c
  8130  00267E  0E00               	movlw	0
  8131  002680  6E19               	movwf	(___flmul@a+1)^0,c
  8132  002682  0E00               	movlw	0
  8133  002684  6E1A               	movwf	(___flmul@a+2)^0,c
  8134  002686  0E00               	movlw	0
  8135  002688  6E1B               	movwf	(___flmul@a+3)^0,c
  8136  00268A                     l941:
  8137  00268A  5025               	movf	___flmul@aexp^0,w,c
  8138  00268C  B4D8               	btfsc	status,2,c
  8139  00268E  EF4B  F013         	goto	u4121
  8140  002692  EF4D  F013         	goto	u4120
  8141  002696                     u4121:
  8142  002696  EF55  F013         	goto	l3797
  8143  00269A                     u4120:
  8144  00269A  5026               	movf	___flmul@bexp^0,w,c
  8145  00269C  A4D8               	btfss	status,2,c
  8146  00269E  EF53  F013         	goto	u4131
  8147  0026A2  EF55  F013         	goto	u4130
  8148  0026A6                     u4131:
  8149  0026A6  EF5F  F013         	goto	l3801
  8150  0026AA                     u4130:
  8151  0026AA                     l3797:
  8152  0026AA  0E00               	movlw	0
  8153  0026AC  6E14               	movwf	?___flmul^0,c
  8154  0026AE  0E00               	movlw	0
  8155  0026B0  6E15               	movwf	(?___flmul+1)^0,c
  8156  0026B2  0E00               	movlw	0
  8157  0026B4  6E16               	movwf	(?___flmul+2)^0,c
  8158  0026B6  0E00               	movlw	0
  8159  0026B8  6E17               	movwf	(?___flmul+3)^0,c
  8160  0026BA  EFF7  F014         	goto	l945
  8161  0026BE                     l3801:
  8162  0026BE  501A               	movf	(___flmul@a+2)^0,w,c
  8163  0026C0  0214               	mulwf	___flmul@b^0,c
  8164  0026C2  CFF3 F02B          	movff	prodl,___flmul@temp
  8165  0026C6  CFF4 F02C          	movff	prodh,___flmul@temp+1
  8166  0026CA  502B               	movf	___flmul@temp^0,w,c
  8167  0026CC  6E21               	movwf	___flmul@grs^0,c
  8168  0026CE  6A22               	clrf	(___flmul@grs+1)^0,c
  8169  0026D0  6A23               	clrf	(___flmul@grs+2)^0,c
  8170  0026D2  6A24               	clrf	(___flmul@grs+3)^0,c
  8171  0026D4  502C               	movf	(___flmul@temp+1)^0,w,c
  8172  0026D6  6E27               	movwf	___flmul@prod^0,c
  8173  0026D8  6A28               	clrf	(___flmul@prod+1)^0,c
  8174  0026DA  6A29               	clrf	(___flmul@prod+2)^0,c
  8175  0026DC  6A2A               	clrf	(___flmul@prod+3)^0,c
  8176  0026DE  5019               	movf	(___flmul@a+1)^0,w,c
  8177  0026E0  0215               	mulwf	(___flmul@b+1)^0,c
  8178  0026E2  CFF3 F02B          	movff	prodl,___flmul@temp
  8179  0026E6  CFF4 F02C          	movff	prodh,___flmul@temp+1
  8180  0026EA  502B               	movf	___flmul@temp^0,w,c
  8181  0026EC  2621               	addwf	___flmul@grs^0,f,c
  8182  0026EE  0E00               	movlw	0
  8183  0026F0  2222               	addwfc	(___flmul@grs+1)^0,f,c
  8184  0026F2  2223               	addwfc	(___flmul@grs+2)^0,f,c
  8185  0026F4  2224               	addwfc	(___flmul@grs+3)^0,f,c
  8186  0026F6  502C               	movf	(___flmul@temp+1)^0,w,c
  8187  0026F8  2627               	addwf	___flmul@prod^0,f,c
  8188  0026FA  0E00               	movlw	0
  8189  0026FC  2228               	addwfc	(___flmul@prod+1)^0,f,c
  8190  0026FE  2229               	addwfc	(___flmul@prod+2)^0,f,c
  8191  002700  222A               	addwfc	(___flmul@prod+3)^0,f,c
  8192  002702  5018               	movf	___flmul@a^0,w,c
  8193  002704  0216               	mulwf	(___flmul@b+2)^0,c
  8194  002706  CFF3 F02B          	movff	prodl,___flmul@temp
  8195  00270A  CFF4 F02C          	movff	prodh,___flmul@temp+1
  8196  00270E  502B               	movf	___flmul@temp^0,w,c
  8197  002710  2621               	addwf	___flmul@grs^0,f,c
  8198  002712  0E00               	movlw	0
  8199  002714  2222               	addwfc	(___flmul@grs+1)^0,f,c
  8200  002716  2223               	addwfc	(___flmul@grs+2)^0,f,c
  8201  002718  2224               	addwfc	(___flmul@grs+3)^0,f,c
  8202  00271A  502C               	movf	(___flmul@temp+1)^0,w,c
  8203  00271C  2627               	addwf	___flmul@prod^0,f,c
  8204  00271E  0E00               	movlw	0
  8205  002720  2228               	addwfc	(___flmul@prod+1)^0,f,c
  8206  002722  2229               	addwfc	(___flmul@prod+2)^0,f,c
  8207  002724  222A               	addwfc	(___flmul@prod+3)^0,f,c
  8208  002726  C023  F024         	movff	___flmul@grs+2,___flmul@grs+3
  8209  00272A  C022  F023         	movff	___flmul@grs+1,___flmul@grs+2
  8210  00272E  C021  F022         	movff	___flmul@grs,___flmul@grs+1
  8211  002732  6A21               	clrf	___flmul@grs^0,c
  8212  002734  5018               	movf	___flmul@a^0,w,c
  8213  002736  0215               	mulwf	(___flmul@b+1)^0,c
  8214  002738  CFF3 F02B          	movff	prodl,___flmul@temp
  8215  00273C  CFF4 F02C          	movff	prodh,___flmul@temp+1
  8216  002740  502B               	movf	___flmul@temp^0,w,c
  8217  002742  2621               	addwf	___flmul@grs^0,f,c
  8218  002744  502C               	movf	(___flmul@temp+1)^0,w,c
  8219  002746  2222               	addwfc	(___flmul@grs+1)^0,f,c
  8220  002748  0E00               	movlw	0
  8221  00274A  2223               	addwfc	(___flmul@grs+2)^0,f,c
  8222  00274C  0E00               	movlw	0
  8223  00274E  2224               	addwfc	(___flmul@grs+3)^0,f,c
  8224  002750  5019               	movf	(___flmul@a+1)^0,w,c
  8225  002752  0214               	mulwf	___flmul@b^0,c
  8226  002754  CFF3 F02B          	movff	prodl,___flmul@temp
  8227  002758  CFF4 F02C          	movff	prodh,___flmul@temp+1
  8228  00275C  502B               	movf	___flmul@temp^0,w,c
  8229  00275E  2621               	addwf	___flmul@grs^0,f,c
  8230  002760  502C               	movf	(___flmul@temp+1)^0,w,c
  8231  002762  2222               	addwfc	(___flmul@grs+1)^0,f,c
  8232  002764  0E00               	movlw	0
  8233  002766  2223               	addwfc	(___flmul@grs+2)^0,f,c
  8234  002768  0E00               	movlw	0
  8235  00276A  2224               	addwfc	(___flmul@grs+3)^0,f,c
  8236  00276C  C023  F024         	movff	___flmul@grs+2,___flmul@grs+3
  8237  002770  C022  F023         	movff	___flmul@grs+1,___flmul@grs+2
  8238  002774  C021  F022         	movff	___flmul@grs,___flmul@grs+1
  8239  002778  6A21               	clrf	___flmul@grs^0,c
  8240  00277A  5018               	movf	___flmul@a^0,w,c
  8241  00277C  0214               	mulwf	___flmul@b^0,c
  8242  00277E  CFF3 F02B          	movff	prodl,___flmul@temp
  8243  002782  CFF4 F02C          	movff	prodh,___flmul@temp+1
  8244  002786  502B               	movf	___flmul@temp^0,w,c
  8245  002788  2621               	addwf	___flmul@grs^0,f,c
  8246  00278A  502C               	movf	(___flmul@temp+1)^0,w,c
  8247  00278C  2222               	addwfc	(___flmul@grs+1)^0,f,c
  8248  00278E  0E00               	movlw	0
  8249  002790  2223               	addwfc	(___flmul@grs+2)^0,f,c
  8250  002792  0E00               	movlw	0
  8251  002794  2224               	addwfc	(___flmul@grs+3)^0,f,c
  8252  002796  501A               	movf	(___flmul@a+2)^0,w,c
  8253  002798  0215               	mulwf	(___flmul@b+1)^0,c
  8254  00279A  CFF3 F02B          	movff	prodl,___flmul@temp
  8255  00279E  CFF4 F02C          	movff	prodh,___flmul@temp+1
  8256  0027A2  502B               	movf	___flmul@temp^0,w,c
  8257  0027A4  2627               	addwf	___flmul@prod^0,f,c
  8258  0027A6  502C               	movf	(___flmul@temp+1)^0,w,c
  8259  0027A8  2228               	addwfc	(___flmul@prod+1)^0,f,c
  8260  0027AA  0E00               	movlw	0
  8261  0027AC  2229               	addwfc	(___flmul@prod+2)^0,f,c
  8262  0027AE  0E00               	movlw	0
  8263  0027B0  222A               	addwfc	(___flmul@prod+3)^0,f,c
  8264  0027B2  5019               	movf	(___flmul@a+1)^0,w,c
  8265  0027B4  0216               	mulwf	(___flmul@b+2)^0,c
  8266  0027B6  CFF3 F02B          	movff	prodl,___flmul@temp
  8267  0027BA  CFF4 F02C          	movff	prodh,___flmul@temp+1
  8268  0027BE  502B               	movf	___flmul@temp^0,w,c
  8269  0027C0  2627               	addwf	___flmul@prod^0,f,c
  8270  0027C2  502C               	movf	(___flmul@temp+1)^0,w,c
  8271  0027C4  2228               	addwfc	(___flmul@prod+1)^0,f,c
  8272  0027C6  0E00               	movlw	0
  8273  0027C8  2229               	addwfc	(___flmul@prod+2)^0,f,c
  8274  0027CA  0E00               	movlw	0
  8275  0027CC  222A               	addwfc	(___flmul@prod+3)^0,f,c
  8276  0027CE  501A               	movf	(___flmul@a+2)^0,w,c
  8277  0027D0  0216               	mulwf	(___flmul@b+2)^0,c
  8278  0027D2  CFF3 F02B          	movff	prodl,___flmul@temp
  8279  0027D6  CFF4 F02C          	movff	prodh,___flmul@temp+1
  8280  0027DA  502B               	movf	___flmul@temp^0,w,c
  8281  0027DC  6E1C               	movwf	??___flmul^0,c
  8282  0027DE  502C               	movf	(___flmul@temp+1)^0,w,c
  8283  0027E0  6E1D               	movwf	(??___flmul+1)^0,c
  8284  0027E2  6A1E               	clrf	(??___flmul+2)^0,c
  8285  0027E4  6A1F               	clrf	(??___flmul+3)^0,c
  8286  0027E6  C01E  F01F         	movff	??___flmul+2,??___flmul+3
  8287  0027EA  C01D  F01E         	movff	??___flmul+1,??___flmul+2
  8288  0027EE  C01C  F01D         	movff	??___flmul,??___flmul+1
  8289  0027F2  6A1C               	clrf	??___flmul^0,c
  8290  0027F4  501C               	movf	??___flmul^0,w,c
  8291  0027F6  2627               	addwf	___flmul@prod^0,f,c
  8292  0027F8  501D               	movf	(??___flmul+1)^0,w,c
  8293  0027FA  2228               	addwfc	(___flmul@prod+1)^0,f,c
  8294  0027FC  501E               	movf	(??___flmul+2)^0,w,c
  8295  0027FE  2229               	addwfc	(___flmul@prod+2)^0,f,c
  8296  002800  501F               	movf	(??___flmul+3)^0,w,c
  8297  002802  222A               	addwfc	(___flmul@prod+3)^0,f,c
  8298  002804  C021  F01C         	movff	___flmul@grs,??___flmul
  8299  002808  C022  F01D         	movff	___flmul@grs+1,??___flmul+1
  8300  00280C  C023  F01E         	movff	___flmul@grs+2,??___flmul+2
  8301  002810  C024  F01F         	movff	___flmul@grs+3,??___flmul+3
  8302  002814  0E19               	movlw	25
  8303  002816  EF12  F014         	goto	u4140
  8304  00281A                     u4145:
  8305  00281A  90D8               	bcf	status,0,c
  8306  00281C  321F               	rrcf	(??___flmul+3)^0,f,c
  8307  00281E  321E               	rrcf	(??___flmul+2)^0,f,c
  8308  002820  321D               	rrcf	(??___flmul+1)^0,f,c
  8309  002822  321C               	rrcf	??___flmul^0,f,c
  8310  002824                     u4140:
  8311  002824  2EE8               	decfsz	wreg,f,c
  8312  002826  EF0D  F014         	goto	u4145
  8313  00282A  501C               	movf	??___flmul^0,w,c
  8314  00282C  2627               	addwf	___flmul@prod^0,f,c
  8315  00282E  501D               	movf	(??___flmul+1)^0,w,c
  8316  002830  2228               	addwfc	(___flmul@prod+1)^0,f,c
  8317  002832  501E               	movf	(??___flmul+2)^0,w,c
  8318  002834  2229               	addwfc	(___flmul@prod+2)^0,f,c
  8319  002836  501F               	movf	(??___flmul+3)^0,w,c
  8320  002838  222A               	addwfc	(___flmul@prod+3)^0,f,c
  8321  00283A  C023  F024         	movff	___flmul@grs+2,___flmul@grs+3
  8322  00283E  C022  F023         	movff	___flmul@grs+1,___flmul@grs+2
  8323  002842  C021  F022         	movff	___flmul@grs,___flmul@grs+1
  8324  002846  6A21               	clrf	___flmul@grs^0,c
  8325  002848  5025               	movf	___flmul@aexp^0,w,c
  8326  00284A  C026  F01C         	movff	___flmul@bexp,??___flmul
  8327  00284E  6A1D               	clrf	(??___flmul+1)^0,c
  8328  002850  261C               	addwf	??___flmul^0,f,c
  8329  002852  0E00               	movlw	0
  8330  002854  221D               	addwfc	(??___flmul+1)^0,f,c
  8331  002856  0E82               	movlw	130
  8332  002858  241C               	addwf	??___flmul^0,w,c
  8333  00285A  6E2B               	movwf	___flmul@temp^0,c
  8334  00285C  0EFF               	movlw	255
  8335  00285E  201D               	addwfc	(??___flmul+1)^0,w,c
  8336  002860  6E2C               	movwf	(___flmul@temp+1)^0,c
  8337  002862  EF48  F014         	goto	l3849
  8338  002866                     l3843:
  8339  002866  90D8               	bcf	status,0,c
  8340  002868  3627               	rlcf	___flmul@prod^0,f,c
  8341  00286A  3628               	rlcf	(___flmul@prod+1)^0,f,c
  8342  00286C  3629               	rlcf	(___flmul@prod+2)^0,f,c
  8343  00286E  362A               	rlcf	(___flmul@prod+3)^0,f,c
  8344  002870  AE24               	btfss	(___flmul@grs+3)^0,7,c
  8345  002872  EF3D  F014         	goto	u4151
  8346  002876  EF3F  F014         	goto	u4150
  8347  00287A                     u4151:
  8348  00287A  EF40  F014         	goto	l948
  8349  00287E                     u4150:
  8350  00287E  8027               	bsf	___flmul@prod^0,0,c
  8351  002880                     l948:
  8352  002880  90D8               	bcf	status,0,c
  8353  002882  3621               	rlcf	___flmul@grs^0,f,c
  8354  002884  3622               	rlcf	(___flmul@grs+1)^0,f,c
  8355  002886  3623               	rlcf	(___flmul@grs+2)^0,f,c
  8356  002888  3624               	rlcf	(___flmul@grs+3)^0,f,c
  8357  00288A  062B               	decf	___flmul@temp^0,f,c
  8358  00288C  A0D8               	btfss	status,0,c
  8359  00288E  062C               	decf	(___flmul@temp+1)^0,f,c
  8360  002890                     l3849:
  8361  002890  AE29               	btfss	(___flmul@prod+2)^0,7,c
  8362  002892  EF4D  F014         	goto	u4161
  8363  002896  EF4F  F014         	goto	u4160
  8364  00289A                     u4161:
  8365  00289A  EF33  F014         	goto	l3843
  8366  00289E                     u4160:
  8367  00289E  0E00               	movlw	0
  8368  0028A0  6E25               	movwf	___flmul@aexp^0,c
  8369  0028A2  AE24               	btfss	(___flmul@grs+3)^0,7,c
  8370  0028A4  EF56  F014         	goto	u4171
  8371  0028A8  EF58  F014         	goto	u4170
  8372  0028AC                     u4171:
  8373  0028AC  EF7C  F014         	goto	l950
  8374  0028B0                     u4170:
  8375  0028B0  0EFF               	movlw	255
  8376  0028B2  1421               	andwf	___flmul@grs^0,w,c
  8377  0028B4  6E1C               	movwf	??___flmul^0,c
  8378  0028B6  0EFF               	movlw	255
  8379  0028B8  1422               	andwf	(___flmul@grs+1)^0,w,c
  8380  0028BA  6E1D               	movwf	(??___flmul+1)^0,c
  8381  0028BC  0EFF               	movlw	255
  8382  0028BE  1423               	andwf	(___flmul@grs+2)^0,w,c
  8383  0028C0  6E1E               	movwf	(??___flmul+2)^0,c
  8384  0028C2  0E7F               	movlw	127
  8385  0028C4  1424               	andwf	(___flmul@grs+3)^0,w,c
  8386  0028C6  6E1F               	movwf	(??___flmul+3)^0,c
  8387  0028C8  501C               	movf	??___flmul^0,w,c
  8388  0028CA  101D               	iorwf	(??___flmul+1)^0,w,c
  8389  0028CC  101E               	iorwf	(??___flmul+2)^0,w,c
  8390  0028CE  101F               	iorwf	(??___flmul+3)^0,w,c
  8391  0028D0  B4D8               	btfsc	status,2,c
  8392  0028D2  EF6D  F014         	goto	u4181
  8393  0028D6  EF6F  F014         	goto	u4180
  8394  0028DA                     u4181:
  8395  0028DA  EF73  F014         	goto	l951
  8396  0028DE                     u4180:
  8397  0028DE                     l3857:
  8398  0028DE  0E01               	movlw	1
  8399  0028E0  6E25               	movwf	___flmul@aexp^0,c
  8400  0028E2  EF7C  F014         	goto	l950
  8401  0028E6                     l951:
  8402  0028E6  A027               	btfss	___flmul@prod^0,0,c
  8403  0028E8  EF78  F014         	goto	u4191
  8404  0028EC  EF7A  F014         	goto	u4190
  8405  0028F0                     u4191:
  8406  0028F0  EF7C  F014         	goto	l950
  8407  0028F4                     u4190:
  8408  0028F4  EF6F  F014         	goto	l3857
  8409  0028F8                     l950:
  8410  0028F8  5025               	movf	___flmul@aexp^0,w,c
  8411  0028FA  B4D8               	btfsc	status,2,c
  8412  0028FC  EF82  F014         	goto	u4201
  8413  002900  EF84  F014         	goto	u4200
  8414  002904                     u4201:
  8415  002904  EFA8  F014         	goto	l3869
  8416  002908                     u4200:
  8417  002908  0E01               	movlw	1
  8418  00290A  2627               	addwf	___flmul@prod^0,f,c
  8419  00290C  0E00               	movlw	0
  8420  00290E  2228               	addwfc	(___flmul@prod+1)^0,f,c
  8421  002910  2229               	addwfc	(___flmul@prod+2)^0,f,c
  8422  002912  222A               	addwfc	(___flmul@prod+3)^0,f,c
  8423  002914  A02A               	btfss	(___flmul@prod+3)^0,0,c
  8424  002916  EF8F  F014         	goto	u4211
  8425  00291A  EF91  F014         	goto	u4210
  8426  00291E                     u4211:
  8427  00291E  EFA8  F014         	goto	l3869
  8428  002922                     u4210:
  8429  002922  C027  F01C         	movff	___flmul@prod,??___flmul
  8430  002926  C028  F01D         	movff	___flmul@prod+1,??___flmul+1
  8431  00292A  C029  F01E         	movff	___flmul@prod+2,??___flmul+2
  8432  00292E  C02A  F01F         	movff	___flmul@prod+3,??___flmul+3
  8433  002932  341F               	rlcf	(??___flmul+3)^0,w,c
  8434  002934  321F               	rrcf	(??___flmul+3)^0,f,c
  8435  002936  321E               	rrcf	(??___flmul+2)^0,f,c
  8436  002938  321D               	rrcf	(??___flmul+1)^0,f,c
  8437  00293A  321C               	rrcf	??___flmul^0,f,c
  8438  00293C  C01C  F027         	movff	??___flmul,___flmul@prod
  8439  002940  C01D  F028         	movff	??___flmul+1,___flmul@prod+1
  8440  002944  C01E  F029         	movff	??___flmul+2,___flmul@prod+2
  8441  002948  C01F  F02A         	movff	??___flmul+3,___flmul@prod+3
  8442  00294C  4A2B               	infsnz	___flmul@temp^0,f,c
  8443  00294E  2A2C               	incf	(___flmul@temp+1)^0,f,c
  8444  002950                     l3869:
  8445  002950  BE2C               	btfsc	(___flmul@temp+1)^0,7,c
  8446  002952  EFB3  F014         	goto	u4221
  8447  002956  502C               	movf	(___flmul@temp+1)^0,w,c
  8448  002958  E108               	bnz	u4220
  8449  00295A  282B               	incf	___flmul@temp^0,w,c
  8450  00295C  A0D8               	btfss	status,0,c
  8451  00295E  EFB3  F014         	goto	u4221
  8452  002962  EFB5  F014         	goto	u4220
  8453  002966                     u4221:
  8454  002966  EFBF  F014         	goto	l3873
  8455  00296A                     u4220:
  8456  00296A  0E00               	movlw	0
  8457  00296C  6E27               	movwf	___flmul@prod^0,c
  8458  00296E  0E00               	movlw	0
  8459  002970  6E28               	movwf	(___flmul@prod+1)^0,c
  8460  002972  0E80               	movlw	128
  8461  002974  6E29               	movwf	(___flmul@prod+2)^0,c
  8462  002976  0E7F               	movlw	127
  8463  002978  6E2A               	movwf	(___flmul@prod+3)^0,c
  8464  00297A  EFED  F014         	goto	l3885
  8465  00297E                     l3873:
  8466  00297E  BE2C               	btfsc	(___flmul@temp+1)^0,7,c
  8467  002980  EFCC  F014         	goto	u4230
  8468  002984  502C               	movf	(___flmul@temp+1)^0,w,c
  8469  002986  E106               	bnz	u4231
  8470  002988  042B               	decf	___flmul@temp^0,w,c
  8471  00298A  B0D8               	btfsc	status,0,c
  8472  00298C  EFCA  F014         	goto	u4231
  8473  002990  EFCC  F014         	goto	u4230
  8474  002994                     u4231:
  8475  002994  EFD8  F014         	goto	l958
  8476  002998                     u4230:
  8477  002998  0E00               	movlw	0
  8478  00299A  6E27               	movwf	___flmul@prod^0,c
  8479  00299C  0E00               	movlw	0
  8480  00299E  6E28               	movwf	(___flmul@prod+1)^0,c
  8481  0029A0  0E00               	movlw	0
  8482  0029A2  6E29               	movwf	(___flmul@prod+2)^0,c
  8483  0029A4  0E00               	movlw	0
  8484  0029A6  6E2A               	movwf	(___flmul@prod+3)^0,c
  8485  0029A8  0E00               	movlw	0
  8486  0029AA  6E20               	movwf	___flmul@sign^0,c
  8487  0029AC  EFED  F014         	goto	l3885
  8488  0029B0                     l958:
  8489  0029B0  C02B  F026         	movff	___flmul@temp,___flmul@bexp
  8490  0029B4  0EFF               	movlw	255
  8491  0029B6  1627               	andwf	___flmul@prod^0,f,c
  8492  0029B8  0EFF               	movlw	255
  8493  0029BA  1628               	andwf	(___flmul@prod+1)^0,f,c
  8494  0029BC  0E7F               	movlw	127
  8495  0029BE  1629               	andwf	(___flmul@prod+2)^0,f,c
  8496  0029C0  0E00               	movlw	0
  8497  0029C2  162A               	andwf	(___flmul@prod+3)^0,f,c
  8498  0029C4  A026               	btfss	___flmul@bexp^0,0,c
  8499  0029C6  EFE7  F014         	goto	u4241
  8500  0029CA  EFE9  F014         	goto	u4240
  8501  0029CE                     u4241:
  8502  0029CE  EFEA  F014         	goto	l3883
  8503  0029D2                     u4240:
  8504  0029D2  8E29               	bsf	(___flmul@prod+2)^0,7,c
  8505  0029D4                     l3883:
  8506  0029D4  90D8               	bcf	status,0,c
  8507  0029D6  3026               	rrcf	___flmul@bexp^0,w,c
  8508  0029D8  6E2A               	movwf	(___flmul@prod+3)^0,c
  8509  0029DA                     l3885:
  8510  0029DA  5020               	movf	___flmul@sign^0,w,c
  8511  0029DC  122A               	iorwf	(___flmul@prod+3)^0,f,c
  8512  0029DE  C027  F014         	movff	___flmul@prod,?___flmul
  8513  0029E2  C028  F015         	movff	___flmul@prod+1,?___flmul+1
  8514  0029E6  C029  F016         	movff	___flmul@prod+2,?___flmul+2
  8515  0029EA  C02A  F017         	movff	___flmul@prod+3,?___flmul+3
  8516  0029EE                     l945:
  8517  0029EE  0012               	return		;funcret
  8518  0029F0                     __end_of___flmul:
  8519                           	callstack 0
  8520                           
  8521 ;; *************** function ___flge *****************
  8522 ;; Defined at:
  8523 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\flge.c"
  8524 ;; Parameters:    Size  Location     Type
  8525 ;;  ff1             4   44[COMRAM] unsigned char 
  8526 ;;  ff2             4   48[COMRAM] unsigned char 
  8527 ;; Auto vars:     Size  Location     Type
  8528 ;;		None
  8529 ;; Return value:  Size  Location     Type
  8530 ;;		None               void
  8531 ;; Registers used:
  8532 ;;		wreg, status,2, status,0
  8533 ;; Tracked objects:
  8534 ;;		On entry : 0/0
  8535 ;;		On exit  : 0/0
  8536 ;;		Unchanged: 0/0
  8537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8538 ;;      Params:         8       0       0       0       0       0       0       0       0
  8539 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8540 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8541 ;;      Totals:        12       0       0       0       0       0       0       0       0
  8542 ;;Total ram usage:       12 bytes
  8543 ;; Hardware stack levels used:    1
  8544 ;; This function calls:
  8545 ;;		Nothing
  8546 ;; This function is called by:
  8547 ;;		_activar_seguridad
  8548 ;;		_efgtoa
  8549 ;; This function uses a non-reentrant model
  8550 ;;
  8551                           
  8552                           	psect	text27
  8553  003728                     __ptext27:
  8554                           	callstack 0
  8555  003728                     ___flge:
  8556                           	callstack 24
  8557  003728  0E00               	movlw	0
  8558  00372A  142D               	andwf	___flge@ff1^0,w,c
  8559  00372C  6E35               	movwf	??___flge^0,c
  8560  00372E  0E00               	movlw	0
  8561  003730  142E               	andwf	(___flge@ff1+1)^0,w,c
  8562  003732  6E36               	movwf	(??___flge+1)^0,c
  8563  003734  0E80               	movlw	128
  8564  003736  142F               	andwf	(___flge@ff1+2)^0,w,c
  8565  003738  6E37               	movwf	(??___flge+2)^0,c
  8566  00373A  0E7F               	movlw	127
  8567  00373C  1430               	andwf	(___flge@ff1+3)^0,w,c
  8568  00373E  6E38               	movwf	(??___flge+3)^0,c
  8569  003740  5035               	movf	??___flge^0,w,c
  8570  003742  1036               	iorwf	(??___flge+1)^0,w,c
  8571  003744  1037               	iorwf	(??___flge+2)^0,w,c
  8572  003746  1038               	iorwf	(??___flge+3)^0,w,c
  8573  003748  A4D8               	btfss	status,2,c
  8574  00374A  EFA9  F01B         	goto	u4401
  8575  00374E  EFAB  F01B         	goto	u4400
  8576  003752                     u4401:
  8577  003752  EFB3  F01B         	goto	l3997
  8578  003756                     u4400:
  8579  003756  0E00               	movlw	0
  8580  003758  6E2D               	movwf	___flge@ff1^0,c
  8581  00375A  0E00               	movlw	0
  8582  00375C  6E2E               	movwf	(___flge@ff1+1)^0,c
  8583  00375E  0E00               	movlw	0
  8584  003760  6E2F               	movwf	(___flge@ff1+2)^0,c
  8585  003762  0E00               	movlw	0
  8586  003764  6E30               	movwf	(___flge@ff1+3)^0,c
  8587  003766                     l3997:
  8588  003766  0E00               	movlw	0
  8589  003768  1431               	andwf	___flge@ff2^0,w,c
  8590  00376A  6E35               	movwf	??___flge^0,c
  8591  00376C  0E00               	movlw	0
  8592  00376E  1432               	andwf	(___flge@ff2+1)^0,w,c
  8593  003770  6E36               	movwf	(??___flge+1)^0,c
  8594  003772  0E80               	movlw	128
  8595  003774  1433               	andwf	(___flge@ff2+2)^0,w,c
  8596  003776  6E37               	movwf	(??___flge+2)^0,c
  8597  003778  0E7F               	movlw	127
  8598  00377A  1434               	andwf	(___flge@ff2+3)^0,w,c
  8599  00377C  6E38               	movwf	(??___flge+3)^0,c
  8600  00377E  5035               	movf	??___flge^0,w,c
  8601  003780  1036               	iorwf	(??___flge+1)^0,w,c
  8602  003782  1037               	iorwf	(??___flge+2)^0,w,c
  8603  003784  1038               	iorwf	(??___flge+3)^0,w,c
  8604  003786  A4D8               	btfss	status,2,c
  8605  003788  EFC8  F01B         	goto	u4411
  8606  00378C  EFCA  F01B         	goto	u4410
  8607  003790                     u4411:
  8608  003790  EFD2  F01B         	goto	l4001
  8609  003794                     u4410:
  8610  003794  0E00               	movlw	0
  8611  003796  6E31               	movwf	___flge@ff2^0,c
  8612  003798  0E00               	movlw	0
  8613  00379A  6E32               	movwf	(___flge@ff2+1)^0,c
  8614  00379C  0E00               	movlw	0
  8615  00379E  6E33               	movwf	(___flge@ff2+2)^0,c
  8616  0037A0  0E00               	movlw	0
  8617  0037A2  6E34               	movwf	(___flge@ff2+3)^0,c
  8618  0037A4                     l4001:
  8619  0037A4  AE30               	btfss	(___flge@ff1+3)^0,7,c
  8620  0037A6  EFD7  F01B         	goto	u4421
  8621  0037AA  EFD9  F01B         	goto	u4420
  8622  0037AE                     u4421:
  8623  0037AE  EFE2  F01B         	goto	l4005
  8624  0037B2                     u4420:
  8625  0037B2  6C2D               	negf	___flge@ff1^0,c
  8626  0037B4  1E2E               	comf	(___flge@ff1+1)^0,f,c
  8627  0037B6  B0D8               	btfsc	status,0,c
  8628  0037B8  2A2E               	incf	(___flge@ff1+1)^0,f,c
  8629  0037BA  1E2F               	comf	(___flge@ff1+2)^0,f,c
  8630  0037BC  B0D8               	btfsc	status,0,c
  8631  0037BE  2A2F               	incf	(___flge@ff1+2)^0,f,c
  8632  0037C0  0E80               	movlw	128
  8633  0037C2  5630               	subfwb	(___flge@ff1+3)^0,f,c
  8634  0037C4                     l4005:
  8635  0037C4  AE34               	btfss	(___flge@ff2+3)^0,7,c
  8636  0037C6  EFE7  F01B         	goto	u4431
  8637  0037CA  EFE9  F01B         	goto	u4430
  8638  0037CE                     u4431:
  8639  0037CE  EFF2  F01B         	goto	l592
  8640  0037D2                     u4430:
  8641  0037D2  6C31               	negf	___flge@ff2^0,c
  8642  0037D4  1E32               	comf	(___flge@ff2+1)^0,f,c
  8643  0037D6  B0D8               	btfsc	status,0,c
  8644  0037D8  2A32               	incf	(___flge@ff2+1)^0,f,c
  8645  0037DA  1E33               	comf	(___flge@ff2+2)^0,f,c
  8646  0037DC  B0D8               	btfsc	status,0,c
  8647  0037DE  2A33               	incf	(___flge@ff2+2)^0,f,c
  8648  0037E0  0E80               	movlw	128
  8649  0037E2  5634               	subfwb	(___flge@ff2+3)^0,f,c
  8650  0037E4                     l592:
  8651  0037E4  0E00               	movlw	0
  8652  0037E6  1A2D               	xorwf	___flge@ff1^0,f,c
  8653  0037E8  0E00               	movlw	0
  8654  0037EA  1A2E               	xorwf	(___flge@ff1+1)^0,f,c
  8655  0037EC  0E00               	movlw	0
  8656  0037EE  1A2F               	xorwf	(___flge@ff1+2)^0,f,c
  8657  0037F0  0E80               	movlw	128
  8658  0037F2  1A30               	xorwf	(___flge@ff1+3)^0,f,c
  8659  0037F4  0E00               	movlw	0
  8660  0037F6  1A31               	xorwf	___flge@ff2^0,f,c
  8661  0037F8  0E00               	movlw	0
  8662  0037FA  1A32               	xorwf	(___flge@ff2+1)^0,f,c
  8663  0037FC  0E00               	movlw	0
  8664  0037FE  1A33               	xorwf	(___flge@ff2+2)^0,f,c
  8665  003800  0E80               	movlw	128
  8666  003802  1A34               	xorwf	(___flge@ff2+3)^0,f,c
  8667  003804  5031               	movf	___flge@ff2^0,w,c
  8668  003806  5C2D               	subwf	___flge@ff1^0,w,c
  8669  003808  5032               	movf	(___flge@ff2+1)^0,w,c
  8670  00380A  582E               	subwfb	(___flge@ff1+1)^0,w,c
  8671  00380C  5033               	movf	(___flge@ff2+2)^0,w,c
  8672  00380E  582F               	subwfb	(___flge@ff1+2)^0,w,c
  8673  003810  5034               	movf	(___flge@ff2+3)^0,w,c
  8674  003812  5830               	subwfb	(___flge@ff1+3)^0,w,c
  8675  003814  B0D8               	btfsc	status,0,c
  8676  003816  EF0F  F01C         	goto	u4441
  8677  00381A  EF11  F01C         	goto	u4440
  8678  00381E                     u4441:
  8679  00381E  EF14  F01C         	goto	l4011
  8680  003822                     u4440:
  8681  003822  90D8               	bcf	status,0,c
  8682  003824  EF15  F01C         	goto	l597
  8683  003828                     l4011:
  8684  003828  80D8               	bsf	status,0,c
  8685  00382A                     l597:
  8686  00382A  0012               	return		;funcret
  8687  00382C                     __end_of___flge:
  8688                           	callstack 0
  8689                           
  8690 ;; *************** function ___fleq *****************
  8691 ;; Defined at:
  8692 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\fleq.c"
  8693 ;; Parameters:    Size  Location     Type
  8694 ;;  ff1             4    0[COMRAM] unsigned char 
  8695 ;;  ff2             4    4[COMRAM] unsigned char 
  8696 ;; Auto vars:     Size  Location     Type
  8697 ;;		None
  8698 ;; Return value:  Size  Location     Type
  8699 ;;		None               void
  8700 ;; Registers used:
  8701 ;;		wreg, status,2, status,0
  8702 ;; Tracked objects:
  8703 ;;		On entry : 0/0
  8704 ;;		On exit  : 0/0
  8705 ;;		Unchanged: 0/0
  8706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8707 ;;      Params:         8       0       0       0       0       0       0       0       0
  8708 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8709 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8710 ;;      Totals:        12       0       0       0       0       0       0       0       0
  8711 ;;Total ram usage:       12 bytes
  8712 ;; Hardware stack levels used:    1
  8713 ;; This function calls:
  8714 ;;		Nothing
  8715 ;; This function is called by:
  8716 ;;		_efgtoa
  8717 ;; This function uses a non-reentrant model
  8718 ;;
  8719                           
  8720                           	psect	text28
  8721  003DBA                     __ptext28:
  8722                           	callstack 0
  8723  003DBA                     ___fleq:
  8724                           	callstack 24
  8725  003DBA  0E00               	movlw	0
  8726  003DBC  1401               	andwf	___fleq@ff1^0,w,c
  8727  003DBE  6E09               	movwf	??___fleq^0,c
  8728  003DC0  0E00               	movlw	0
  8729  003DC2  1402               	andwf	(___fleq@ff1+1)^0,w,c
  8730  003DC4  6E0A               	movwf	(??___fleq+1)^0,c
  8731  003DC6  0E80               	movlw	128
  8732  003DC8  1403               	andwf	(___fleq@ff1+2)^0,w,c
  8733  003DCA  6E0B               	movwf	(??___fleq+2)^0,c
  8734  003DCC  0E7F               	movlw	127
  8735  003DCE  1404               	andwf	(___fleq@ff1+3)^0,w,c
  8736  003DD0  6E0C               	movwf	(??___fleq+3)^0,c
  8737  003DD2  5009               	movf	??___fleq^0,w,c
  8738  003DD4  100A               	iorwf	(??___fleq+1)^0,w,c
  8739  003DD6  100B               	iorwf	(??___fleq+2)^0,w,c
  8740  003DD8  100C               	iorwf	(??___fleq+3)^0,w,c
  8741  003DDA  A4D8               	btfss	status,2,c
  8742  003DDC  EFF2  F01E         	goto	u4371
  8743  003DE0  EFF4  F01E         	goto	u4370
  8744  003DE4                     u4371:
  8745  003DE4  EFFC  F01E         	goto	l3981
  8746  003DE8                     u4370:
  8747  003DE8  0E00               	movlw	0
  8748  003DEA  6E01               	movwf	___fleq@ff1^0,c
  8749  003DEC  0E00               	movlw	0
  8750  003DEE  6E02               	movwf	(___fleq@ff1+1)^0,c
  8751  003DF0  0E00               	movlw	0
  8752  003DF2  6E03               	movwf	(___fleq@ff1+2)^0,c
  8753  003DF4  0E00               	movlw	0
  8754  003DF6  6E04               	movwf	(___fleq@ff1+3)^0,c
  8755  003DF8                     l3981:
  8756  003DF8  0E00               	movlw	0
  8757  003DFA  1405               	andwf	___fleq@ff2^0,w,c
  8758  003DFC  6E09               	movwf	??___fleq^0,c
  8759  003DFE  0E00               	movlw	0
  8760  003E00  1406               	andwf	(___fleq@ff2+1)^0,w,c
  8761  003E02  6E0A               	movwf	(??___fleq+1)^0,c
  8762  003E04  0E80               	movlw	128
  8763  003E06  1407               	andwf	(___fleq@ff2+2)^0,w,c
  8764  003E08  6E0B               	movwf	(??___fleq+2)^0,c
  8765  003E0A  0E7F               	movlw	127
  8766  003E0C  1408               	andwf	(___fleq@ff2+3)^0,w,c
  8767  003E0E  6E0C               	movwf	(??___fleq+3)^0,c
  8768  003E10  5009               	movf	??___fleq^0,w,c
  8769  003E12  100A               	iorwf	(??___fleq+1)^0,w,c
  8770  003E14  100B               	iorwf	(??___fleq+2)^0,w,c
  8771  003E16  100C               	iorwf	(??___fleq+3)^0,w,c
  8772  003E18  A4D8               	btfss	status,2,c
  8773  003E1A  EF11  F01F         	goto	u4381
  8774  003E1E  EF13  F01F         	goto	u4380
  8775  003E22                     u4381:
  8776  003E22  EF1B  F01F         	goto	l3985
  8777  003E26                     u4380:
  8778  003E26  0E00               	movlw	0
  8779  003E28  6E05               	movwf	___fleq@ff2^0,c
  8780  003E2A  0E00               	movlw	0
  8781  003E2C  6E06               	movwf	(___fleq@ff2+1)^0,c
  8782  003E2E  0E00               	movlw	0
  8783  003E30  6E07               	movwf	(___fleq@ff2+2)^0,c
  8784  003E32  0E00               	movlw	0
  8785  003E34  6E08               	movwf	(___fleq@ff2+3)^0,c
  8786  003E36                     l3985:
  8787  003E36  5005               	movf	___fleq@ff2^0,w,c
  8788  003E38  1801               	xorwf	___fleq@ff1^0,w,c
  8789  003E3A  E10F               	bnz	u4390
  8790  003E3C  5006               	movf	(___fleq@ff2+1)^0,w,c
  8791  003E3E  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  8792  003E40  E10C               	bnz	u4390
  8793  003E42  5007               	movf	(___fleq@ff2+2)^0,w,c
  8794  003E44  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  8795  003E46  E109               	bnz	u4390
  8796  003E48  5008               	movf	(___fleq@ff2+3)^0,w,c
  8797  003E4A  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  8798  003E4C  B4D8               	btfsc	status,2,c
  8799  003E4E  EF2B  F01F         	goto	u4391
  8800  003E52  EF2D  F01F         	goto	u4390
  8801  003E56                     u4391:
  8802  003E56  EF30  F01F         	goto	l3989
  8803  003E5A                     u4390:
  8804  003E5A  90D8               	bcf	status,0,c
  8805  003E5C  EF31  F01F         	goto	l586
  8806  003E60                     l3989:
  8807  003E60  80D8               	bsf	status,0,c
  8808  003E62                     l586:
  8809  003E62  0012               	return		;funcret
  8810  003E64                     __end_of___fleq:
  8811                           	callstack 0
  8812                           
  8813 ;; *************** function ___fldiv *****************
  8814 ;; Defined at:
  8815 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\sprcdiv.c"
  8816 ;; Parameters:    Size  Location     Type
  8817 ;;  b               4    0[COMRAM] unsigned char 
  8818 ;;  a               4    4[COMRAM] unsigned char 
  8819 ;; Auto vars:     Size  Location     Type
  8820 ;;  grs             4   19[COMRAM] unsigned long 
  8821 ;;  rem             4   12[COMRAM] unsigned long 
  8822 ;;  new_exp         2   17[COMRAM] short 
  8823 ;;  aexp            1   24[COMRAM] unsigned char 
  8824 ;;  bexp            1   23[COMRAM] unsigned char 
  8825 ;;  sign            1   16[COMRAM] unsigned char 
  8826 ;; Return value:  Size  Location     Type
  8827 ;;                  4    0[COMRAM] unsigned char 
  8828 ;; Registers used:
  8829 ;;		wreg, status,2, status,0
  8830 ;; Tracked objects:
  8831 ;;		On entry : 0/0
  8832 ;;		On exit  : 0/0
  8833 ;;		Unchanged: 0/0
  8834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8835 ;;      Params:         8       0       0       0       0       0       0       0       0
  8836 ;;      Locals:        13       0       0       0       0       0       0       0       0
  8837 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8838 ;;      Totals:        25       0       0       0       0       0       0       0       0
  8839 ;;Total ram usage:       25 bytes
  8840 ;; Hardware stack levels used:    1
  8841 ;; This function calls:
  8842 ;;		Nothing
  8843 ;; This function is called by:
  8844 ;;		_efgtoa
  8845 ;; This function uses a non-reentrant model
  8846 ;;
  8847                           
  8848                           	psect	text29
  8849  0029F0                     __ptext29:
  8850                           	callstack 0
  8851  0029F0                     ___fldiv:
  8852                           	callstack 24
  8853  0029F0  5004               	movf	(___fldiv@b+3)^0,w,c
  8854  0029F2  0B80               	andlw	128
  8855  0029F4  6E11               	movwf	___fldiv@sign^0,c
  8856  0029F6  5004               	movf	(___fldiv@b+3)^0,w,c
  8857  0029F8  2404               	addwf	(___fldiv@b+3)^0,w,c
  8858  0029FA  6E18               	movwf	___fldiv@bexp^0,c
  8859  0029FC  AE03               	btfss	(___fldiv@b+2)^0,7,c
  8860  0029FE  EF03  F015         	goto	u3831
  8861  002A02  EF05  F015         	goto	u3830
  8862  002A06                     u3831:
  8863  002A06  EF06  F015         	goto	l3629
  8864  002A0A                     u3830:
  8865  002A0A  8018               	bsf	___fldiv@bexp^0,0,c
  8866  002A0C                     l3629:
  8867  002A0C  5018               	movf	___fldiv@bexp^0,w,c
  8868  002A0E  B4D8               	btfsc	status,2,c
  8869  002A10  EF0C  F015         	goto	u3841
  8870  002A14  EF0E  F015         	goto	u3840
  8871  002A18                     u3841:
  8872  002A18  EF23  F015         	goto	l3639
  8873  002A1C                     u3840:
  8874  002A1C  2818               	incf	___fldiv@bexp^0,w,c
  8875  002A1E  A4D8               	btfss	status,2,c
  8876  002A20  EF14  F015         	goto	u3851
  8877  002A24  EF16  F015         	goto	u3850
  8878  002A28                     u3851:
  8879  002A28  EF1E  F015         	goto	l3635
  8880  002A2C                     u3850:
  8881  002A2C  0E00               	movlw	0
  8882  002A2E  6E01               	movwf	___fldiv@b^0,c
  8883  002A30  0E00               	movlw	0
  8884  002A32  6E02               	movwf	(___fldiv@b+1)^0,c
  8885  002A34  0E00               	movlw	0
  8886  002A36  6E03               	movwf	(___fldiv@b+2)^0,c
  8887  002A38  0E00               	movlw	0
  8888  002A3A  6E04               	movwf	(___fldiv@b+3)^0,c
  8889  002A3C                     l3635:
  8890  002A3C  8E03               	bsf	(___fldiv@b+2)^0,7,c
  8891  002A3E  0E00               	movlw	0
  8892  002A40  6E04               	movwf	(___fldiv@b+3)^0,c
  8893  002A42  EF2B  F015         	goto	l3641
  8894  002A46                     l3639:
  8895  002A46  0E00               	movlw	0
  8896  002A48  6E01               	movwf	___fldiv@b^0,c
  8897  002A4A  0E00               	movlw	0
  8898  002A4C  6E02               	movwf	(___fldiv@b+1)^0,c
  8899  002A4E  0E00               	movlw	0
  8900  002A50  6E03               	movwf	(___fldiv@b+2)^0,c
  8901  002A52  0E00               	movlw	0
  8902  002A54  6E04               	movwf	(___fldiv@b+3)^0,c
  8903  002A56                     l3641:
  8904  002A56  5008               	movf	(___fldiv@a+3)^0,w,c
  8905  002A58  0B80               	andlw	128
  8906  002A5A  1A11               	xorwf	___fldiv@sign^0,f,c
  8907  002A5C  5008               	movf	(___fldiv@a+3)^0,w,c
  8908  002A5E  2408               	addwf	(___fldiv@a+3)^0,w,c
  8909  002A60  6E19               	movwf	___fldiv@aexp^0,c
  8910  002A62  AE07               	btfss	(___fldiv@a+2)^0,7,c
  8911  002A64  EF36  F015         	goto	u3861
  8912  002A68  EF38  F015         	goto	u3860
  8913  002A6C                     u3861:
  8914  002A6C  EF39  F015         	goto	l3649
  8915  002A70                     u3860:
  8916  002A70  8019               	bsf	___fldiv@aexp^0,0,c
  8917  002A72                     l3649:
  8918  002A72  5019               	movf	___fldiv@aexp^0,w,c
  8919  002A74  B4D8               	btfsc	status,2,c
  8920  002A76  EF3F  F015         	goto	u3871
  8921  002A7A  EF41  F015         	goto	u3870
  8922  002A7E                     u3871:
  8923  002A7E  EF56  F015         	goto	l3659
  8924  002A82                     u3870:
  8925  002A82  2819               	incf	___fldiv@aexp^0,w,c
  8926  002A84  A4D8               	btfss	status,2,c
  8927  002A86  EF47  F015         	goto	u3881
  8928  002A8A  EF49  F015         	goto	u3880
  8929  002A8E                     u3881:
  8930  002A8E  EF51  F015         	goto	l3655
  8931  002A92                     u3880:
  8932  002A92  0E00               	movlw	0
  8933  002A94  6E05               	movwf	___fldiv@a^0,c
  8934  002A96  0E00               	movlw	0
  8935  002A98  6E06               	movwf	(___fldiv@a+1)^0,c
  8936  002A9A  0E00               	movlw	0
  8937  002A9C  6E07               	movwf	(___fldiv@a+2)^0,c
  8938  002A9E  0E00               	movlw	0
  8939  002AA0  6E08               	movwf	(___fldiv@a+3)^0,c
  8940  002AA2                     l3655:
  8941  002AA2  8E07               	bsf	(___fldiv@a+2)^0,7,c
  8942  002AA4  0E00               	movlw	0
  8943  002AA6  6E08               	movwf	(___fldiv@a+3)^0,c
  8944  002AA8  EF5E  F015         	goto	l3661
  8945  002AAC                     l3659:
  8946  002AAC  0E00               	movlw	0
  8947  002AAE  6E05               	movwf	___fldiv@a^0,c
  8948  002AB0  0E00               	movlw	0
  8949  002AB2  6E06               	movwf	(___fldiv@a+1)^0,c
  8950  002AB4  0E00               	movlw	0
  8951  002AB6  6E07               	movwf	(___fldiv@a+2)^0,c
  8952  002AB8  0E00               	movlw	0
  8953  002ABA  6E08               	movwf	(___fldiv@a+3)^0,c
  8954  002ABC                     l3661:
  8955  002ABC  5005               	movf	___fldiv@a^0,w,c
  8956  002ABE  1006               	iorwf	(___fldiv@a+1)^0,w,c
  8957  002AC0  1007               	iorwf	(___fldiv@a+2)^0,w,c
  8958  002AC2  1008               	iorwf	(___fldiv@a+3)^0,w,c
  8959  002AC4  A4D8               	btfss	status,2,c
  8960  002AC6  EF67  F015         	goto	u3891
  8961  002ACA  EF69  F015         	goto	u3890
  8962  002ACE                     u3891:
  8963  002ACE  EF81  F015         	goto	l3673
  8964  002AD2                     u3890:
  8965  002AD2  0E00               	movlw	0
  8966  002AD4  6E01               	movwf	___fldiv@b^0,c
  8967  002AD6  0E00               	movlw	0
  8968  002AD8  6E02               	movwf	(___fldiv@b+1)^0,c
  8969  002ADA  0E00               	movlw	0
  8970  002ADC  6E03               	movwf	(___fldiv@b+2)^0,c
  8971  002ADE  0E00               	movlw	0
  8972  002AE0  6E04               	movwf	(___fldiv@b+3)^0,c
  8973  002AE2  0E80               	movlw	128
  8974  002AE4  1203               	iorwf	(___fldiv@b+2)^0,f,c
  8975  002AE6  0E7F               	movlw	127
  8976  002AE8  1204               	iorwf	(___fldiv@b+3)^0,f,c
  8977  002AEA                     l3667:
  8978  002AEA  5011               	movf	___fldiv@sign^0,w,c
  8979  002AEC  1204               	iorwf	(___fldiv@b+3)^0,f,c
  8980  002AEE  C001  F001         	movff	___fldiv@b,?___fldiv
  8981  002AF2  C002  F002         	movff	___fldiv@b+1,?___fldiv+1
  8982  002AF6  C003  F003         	movff	___fldiv@b+2,?___fldiv+2
  8983  002AFA  C004  F004         	movff	___fldiv@b+3,?___fldiv+3
  8984  002AFE  EFC4  F016         	goto	l909
  8985  002B02                     l3673:
  8986  002B02  5018               	movf	___fldiv@bexp^0,w,c
  8987  002B04  A4D8               	btfss	status,2,c
  8988  002B06  EF87  F015         	goto	u3901
  8989  002B0A  EF89  F015         	goto	u3900
  8990  002B0E                     u3901:
  8991  002B0E  EF93  F015         	goto	l3681
  8992  002B12                     u3900:
  8993  002B12  0E00               	movlw	0
  8994  002B14  6E01               	movwf	?___fldiv^0,c
  8995  002B16  0E00               	movlw	0
  8996  002B18  6E02               	movwf	(?___fldiv+1)^0,c
  8997  002B1A  0E00               	movlw	0
  8998  002B1C  6E03               	movwf	(?___fldiv+2)^0,c
  8999  002B1E  0E00               	movlw	0
  9000  002B20  6E04               	movwf	(?___fldiv+3)^0,c
  9001  002B22  EFC4  F016         	goto	l909
  9002  002B26                     l3681:
  9003  002B26  5019               	movf	___fldiv@aexp^0,w,c
  9004  002B28  C018  F009         	movff	___fldiv@bexp,??___fldiv
  9005  002B2C  6A0A               	clrf	(??___fldiv+1)^0,c
  9006  002B2E  5E09               	subwf	??___fldiv^0,f,c
  9007  002B30  0E00               	movlw	0
  9008  002B32  5A0A               	subwfb	(??___fldiv+1)^0,f,c
  9009  002B34  0E7F               	movlw	127
  9010  002B36  2409               	addwf	??___fldiv^0,w,c
  9011  002B38  6E12               	movwf	___fldiv@new_exp^0,c
  9012  002B3A  0E00               	movlw	0
  9013  002B3C  200A               	addwfc	(??___fldiv+1)^0,w,c
  9014  002B3E  6E13               	movwf	(___fldiv@new_exp+1)^0,c
  9015  002B40  C001  F00D         	movff	___fldiv@b,___fldiv@rem
  9016  002B44  C002  F00E         	movff	___fldiv@b+1,___fldiv@rem+1
  9017  002B48  C003  F00F         	movff	___fldiv@b+2,___fldiv@rem+2
  9018  002B4C  C004  F010         	movff	___fldiv@b+3,___fldiv@rem+3
  9019  002B50  0E00               	movlw	0
  9020  002B52  6E01               	movwf	___fldiv@b^0,c
  9021  002B54  0E00               	movlw	0
  9022  002B56  6E02               	movwf	(___fldiv@b+1)^0,c
  9023  002B58  0E00               	movlw	0
  9024  002B5A  6E03               	movwf	(___fldiv@b+2)^0,c
  9025  002B5C  0E00               	movlw	0
  9026  002B5E  6E04               	movwf	(___fldiv@b+3)^0,c
  9027  002B60  0E00               	movlw	0
  9028  002B62  6E14               	movwf	___fldiv@grs^0,c
  9029  002B64  0E00               	movlw	0
  9030  002B66  6E15               	movwf	(___fldiv@grs+1)^0,c
  9031  002B68  0E00               	movlw	0
  9032  002B6A  6E16               	movwf	(___fldiv@grs+2)^0,c
  9033  002B6C  0E00               	movlw	0
  9034  002B6E  6E17               	movwf	(___fldiv@grs+3)^0,c
  9035  002B70  0E00               	movlw	0
  9036  002B72  6E19               	movwf	___fldiv@aexp^0,c
  9037  002B74  EFF4  F015         	goto	l911
  9038  002B78                     l3691:
  9039  002B78  5019               	movf	___fldiv@aexp^0,w,c
  9040  002B7A  B4D8               	btfsc	status,2,c
  9041  002B7C  EFC2  F015         	goto	u3911
  9042  002B80  EFC4  F015         	goto	u3910
  9043  002B84                     u3911:
  9044  002B84  EFDB  F015         	goto	l3699
  9045  002B88                     u3910:
  9046  002B88  90D8               	bcf	status,0,c
  9047  002B8A  360D               	rlcf	___fldiv@rem^0,f,c
  9048  002B8C  360E               	rlcf	(___fldiv@rem+1)^0,f,c
  9049  002B8E  360F               	rlcf	(___fldiv@rem+2)^0,f,c
  9050  002B90  3610               	rlcf	(___fldiv@rem+3)^0,f,c
  9051  002B92  90D8               	bcf	status,0,c
  9052  002B94  3601               	rlcf	___fldiv@b^0,f,c
  9053  002B96  3602               	rlcf	(___fldiv@b+1)^0,f,c
  9054  002B98  3603               	rlcf	(___fldiv@b+2)^0,f,c
  9055  002B9A  3604               	rlcf	(___fldiv@b+3)^0,f,c
  9056  002B9C  AE17               	btfss	(___fldiv@grs+3)^0,7,c
  9057  002B9E  EFD3  F015         	goto	u3921
  9058  002BA2  EFD5  F015         	goto	u3920
  9059  002BA6                     u3921:
  9060  002BA6  EFD6  F015         	goto	l914
  9061  002BAA                     u3920:
  9062  002BAA  8001               	bsf	___fldiv@b^0,0,c
  9063  002BAC                     l914:
  9064  002BAC  90D8               	bcf	status,0,c
  9065  002BAE  3614               	rlcf	___fldiv@grs^0,f,c
  9066  002BB0  3615               	rlcf	(___fldiv@grs+1)^0,f,c
  9067  002BB2  3616               	rlcf	(___fldiv@grs+2)^0,f,c
  9068  002BB4  3617               	rlcf	(___fldiv@grs+3)^0,f,c
  9069  002BB6                     l3699:
  9070  002BB6  5005               	movf	___fldiv@a^0,w,c
  9071  002BB8  5C0D               	subwf	___fldiv@rem^0,w,c
  9072  002BBA  5006               	movf	(___fldiv@a+1)^0,w,c
  9073  002BBC  580E               	subwfb	(___fldiv@rem+1)^0,w,c
  9074  002BBE  5007               	movf	(___fldiv@a+2)^0,w,c
  9075  002BC0  580F               	subwfb	(___fldiv@rem+2)^0,w,c
  9076  002BC2  5008               	movf	(___fldiv@a+3)^0,w,c
  9077  002BC4  5810               	subwfb	(___fldiv@rem+3)^0,w,c
  9078  002BC6  A0D8               	btfss	status,0,c
  9079  002BC8  EFE8  F015         	goto	u3931
  9080  002BCC  EFEA  F015         	goto	u3930
  9081  002BD0                     u3931:
  9082  002BD0  EFF3  F015         	goto	l3705
  9083  002BD4                     u3930:
  9084  002BD4  8C17               	bsf	(___fldiv@grs+3)^0,6,c
  9085  002BD6  5005               	movf	___fldiv@a^0,w,c
  9086  002BD8  5E0D               	subwf	___fldiv@rem^0,f,c
  9087  002BDA  5006               	movf	(___fldiv@a+1)^0,w,c
  9088  002BDC  5A0E               	subwfb	(___fldiv@rem+1)^0,f,c
  9089  002BDE  5007               	movf	(___fldiv@a+2)^0,w,c
  9090  002BE0  5A0F               	subwfb	(___fldiv@rem+2)^0,f,c
  9091  002BE2  5008               	movf	(___fldiv@a+3)^0,w,c
  9092  002BE4  5A10               	subwfb	(___fldiv@rem+3)^0,f,c
  9093  002BE6                     l3705:
  9094  002BE6  2A19               	incf	___fldiv@aexp^0,f,c
  9095  002BE8                     l911:
  9096  002BE8  0E19               	movlw	25
  9097  002BEA  6419               	cpfsgt	___fldiv@aexp^0,c
  9098  002BEC  EFFA  F015         	goto	u3941
  9099  002BF0  EFFC  F015         	goto	u3940
  9100  002BF4                     u3941:
  9101  002BF4  EFBC  F015         	goto	l3691
  9102  002BF8                     u3940:
  9103  002BF8  500D               	movf	___fldiv@rem^0,w,c
  9104  002BFA  100E               	iorwf	(___fldiv@rem+1)^0,w,c
  9105  002BFC  100F               	iorwf	(___fldiv@rem+2)^0,w,c
  9106  002BFE  1010               	iorwf	(___fldiv@rem+3)^0,w,c
  9107  002C00  B4D8               	btfsc	status,2,c
  9108  002C02  EF05  F016         	goto	u3951
  9109  002C06  EF07  F016         	goto	u3950
  9110  002C0A                     u3951:
  9111  002C0A  EF1F  F016         	goto	l3717
  9112  002C0E                     u3950:
  9113  002C0E  8014               	bsf	___fldiv@grs^0,0,c
  9114  002C10  EF1F  F016         	goto	l3717
  9115  002C14                     l3711:
  9116  002C14  90D8               	bcf	status,0,c
  9117  002C16  3601               	rlcf	___fldiv@b^0,f,c
  9118  002C18  3602               	rlcf	(___fldiv@b+1)^0,f,c
  9119  002C1A  3603               	rlcf	(___fldiv@b+2)^0,f,c
  9120  002C1C  3604               	rlcf	(___fldiv@b+3)^0,f,c
  9121  002C1E  AE17               	btfss	(___fldiv@grs+3)^0,7,c
  9122  002C20  EF14  F016         	goto	u3961
  9123  002C24  EF16  F016         	goto	u3960
  9124  002C28                     u3961:
  9125  002C28  EF17  F016         	goto	l920
  9126  002C2C                     u3960:
  9127  002C2C  8001               	bsf	___fldiv@b^0,0,c
  9128  002C2E                     l920:
  9129  002C2E  90D8               	bcf	status,0,c
  9130  002C30  3614               	rlcf	___fldiv@grs^0,f,c
  9131  002C32  3615               	rlcf	(___fldiv@grs+1)^0,f,c
  9132  002C34  3616               	rlcf	(___fldiv@grs+2)^0,f,c
  9133  002C36  3617               	rlcf	(___fldiv@grs+3)^0,f,c
  9134  002C38  0612               	decf	___fldiv@new_exp^0,f,c
  9135  002C3A  A0D8               	btfss	status,0,c
  9136  002C3C  0613               	decf	(___fldiv@new_exp+1)^0,f,c
  9137  002C3E                     l3717:
  9138  002C3E  AE03               	btfss	(___fldiv@b+2)^0,7,c
  9139  002C40  EF24  F016         	goto	u3971
  9140  002C44  EF26  F016         	goto	u3970
  9141  002C48                     u3971:
  9142  002C48  EF0A  F016         	goto	l3711
  9143  002C4C                     u3970:
  9144  002C4C  0E00               	movlw	0
  9145  002C4E  6E19               	movwf	___fldiv@aexp^0,c
  9146  002C50  AE17               	btfss	(___fldiv@grs+3)^0,7,c
  9147  002C52  EF2D  F016         	goto	u3981
  9148  002C56  EF2F  F016         	goto	u3980
  9149  002C5A                     u3981:
  9150  002C5A  EF53  F016         	goto	l922
  9151  002C5E                     u3980:
  9152  002C5E  0EFF               	movlw	255
  9153  002C60  1414               	andwf	___fldiv@grs^0,w,c
  9154  002C62  6E09               	movwf	??___fldiv^0,c
  9155  002C64  0EFF               	movlw	255
  9156  002C66  1415               	andwf	(___fldiv@grs+1)^0,w,c
  9157  002C68  6E0A               	movwf	(??___fldiv+1)^0,c
  9158  002C6A  0EFF               	movlw	255
  9159  002C6C  1416               	andwf	(___fldiv@grs+2)^0,w,c
  9160  002C6E  6E0B               	movwf	(??___fldiv+2)^0,c
  9161  002C70  0E7F               	movlw	127
  9162  002C72  1417               	andwf	(___fldiv@grs+3)^0,w,c
  9163  002C74  6E0C               	movwf	(??___fldiv+3)^0,c
  9164  002C76  5009               	movf	??___fldiv^0,w,c
  9165  002C78  100A               	iorwf	(??___fldiv+1)^0,w,c
  9166  002C7A  100B               	iorwf	(??___fldiv+2)^0,w,c
  9167  002C7C  100C               	iorwf	(??___fldiv+3)^0,w,c
  9168  002C7E  B4D8               	btfsc	status,2,c
  9169  002C80  EF44  F016         	goto	u3991
  9170  002C84  EF46  F016         	goto	u3990
  9171  002C88                     u3991:
  9172  002C88  EF4A  F016         	goto	l923
  9173  002C8C                     u3990:
  9174  002C8C                     l3725:
  9175  002C8C  0E01               	movlw	1
  9176  002C8E  6E19               	movwf	___fldiv@aexp^0,c
  9177  002C90  EF53  F016         	goto	l922
  9178  002C94                     l923:
  9179  002C94  A001               	btfss	___fldiv@b^0,0,c
  9180  002C96  EF4F  F016         	goto	u4001
  9181  002C9A  EF51  F016         	goto	u4000
  9182  002C9E                     u4001:
  9183  002C9E  EF53  F016         	goto	l922
  9184  002CA2                     u4000:
  9185  002CA2  EF46  F016         	goto	l3725
  9186  002CA6                     l922:
  9187  002CA6  5019               	movf	___fldiv@aexp^0,w,c
  9188  002CA8  B4D8               	btfsc	status,2,c
  9189  002CAA  EF59  F016         	goto	u4011
  9190  002CAE  EF5B  F016         	goto	u4010
  9191  002CB2                     u4011:
  9192  002CB2  EF7F  F016         	goto	l3737
  9193  002CB6                     u4010:
  9194  002CB6  0E01               	movlw	1
  9195  002CB8  2601               	addwf	___fldiv@b^0,f,c
  9196  002CBA  0E00               	movlw	0
  9197  002CBC  2202               	addwfc	(___fldiv@b+1)^0,f,c
  9198  002CBE  2203               	addwfc	(___fldiv@b+2)^0,f,c
  9199  002CC0  2204               	addwfc	(___fldiv@b+3)^0,f,c
  9200  002CC2  A004               	btfss	(___fldiv@b+3)^0,0,c
  9201  002CC4  EF66  F016         	goto	u4021
  9202  002CC8  EF68  F016         	goto	u4020
  9203  002CCC                     u4021:
  9204  002CCC  EF7F  F016         	goto	l3737
  9205  002CD0                     u4020:
  9206  002CD0  C001  F009         	movff	___fldiv@b,??___fldiv
  9207  002CD4  C002  F00A         	movff	___fldiv@b+1,??___fldiv+1
  9208  002CD8  C003  F00B         	movff	___fldiv@b+2,??___fldiv+2
  9209  002CDC  C004  F00C         	movff	___fldiv@b+3,??___fldiv+3
  9210  002CE0  340C               	rlcf	(??___fldiv+3)^0,w,c
  9211  002CE2  320C               	rrcf	(??___fldiv+3)^0,f,c
  9212  002CE4  320B               	rrcf	(??___fldiv+2)^0,f,c
  9213  002CE6  320A               	rrcf	(??___fldiv+1)^0,f,c
  9214  002CE8  3209               	rrcf	??___fldiv^0,f,c
  9215  002CEA  C009  F001         	movff	??___fldiv,___fldiv@b
  9216  002CEE  C00A  F002         	movff	??___fldiv+1,___fldiv@b+1
  9217  002CF2  C00B  F003         	movff	??___fldiv+2,___fldiv@b+2
  9218  002CF6  C00C  F004         	movff	??___fldiv+3,___fldiv@b+3
  9219  002CFA  4A12               	infsnz	___fldiv@new_exp^0,f,c
  9220  002CFC  2A13               	incf	(___fldiv@new_exp+1)^0,f,c
  9221  002CFE                     l3737:
  9222  002CFE  BE13               	btfsc	(___fldiv@new_exp+1)^0,7,c
  9223  002D00  EF8A  F016         	goto	u4031
  9224  002D04  5013               	movf	(___fldiv@new_exp+1)^0,w,c
  9225  002D06  E108               	bnz	u4030
  9226  002D08  2812               	incf	___fldiv@new_exp^0,w,c
  9227  002D0A  A0D8               	btfss	status,0,c
  9228  002D0C  EF8A  F016         	goto	u4031
  9229  002D10  EF8C  F016         	goto	u4030
  9230  002D14                     u4031:
  9231  002D14  EF97  F016         	goto	l3741
  9232  002D18                     u4030:
  9233  002D18  0E00               	movlw	0
  9234  002D1A  6E13               	movwf	(___fldiv@new_exp+1)^0,c
  9235  002D1C  6812               	setf	___fldiv@new_exp^0,c
  9236  002D1E  0E00               	movlw	0
  9237  002D20  6E01               	movwf	___fldiv@b^0,c
  9238  002D22  0E00               	movlw	0
  9239  002D24  6E02               	movwf	(___fldiv@b+1)^0,c
  9240  002D26  0E00               	movlw	0
  9241  002D28  6E03               	movwf	(___fldiv@b+2)^0,c
  9242  002D2A  0E00               	movlw	0
  9243  002D2C  6E04               	movwf	(___fldiv@b+3)^0,c
  9244  002D2E                     l3741:
  9245  002D2E  BE13               	btfsc	(___fldiv@new_exp+1)^0,7,c
  9246  002D30  EFA4  F016         	goto	u4040
  9247  002D34  5013               	movf	(___fldiv@new_exp+1)^0,w,c
  9248  002D36  E106               	bnz	u4041
  9249  002D38  0412               	decf	___fldiv@new_exp^0,w,c
  9250  002D3A  B0D8               	btfsc	status,0,c
  9251  002D3C  EFA2  F016         	goto	u4041
  9252  002D40  EFA4  F016         	goto	u4040
  9253  002D44                     u4041:
  9254  002D44  EFB2  F016         	goto	l3745
  9255  002D48                     u4040:
  9256  002D48  0E00               	movlw	0
  9257  002D4A  6E13               	movwf	(___fldiv@new_exp+1)^0,c
  9258  002D4C  0E00               	movlw	0
  9259  002D4E  6E12               	movwf	___fldiv@new_exp^0,c
  9260  002D50  0E00               	movlw	0
  9261  002D52  6E01               	movwf	___fldiv@b^0,c
  9262  002D54  0E00               	movlw	0
  9263  002D56  6E02               	movwf	(___fldiv@b+1)^0,c
  9264  002D58  0E00               	movlw	0
  9265  002D5A  6E03               	movwf	(___fldiv@b+2)^0,c
  9266  002D5C  0E00               	movlw	0
  9267  002D5E  6E04               	movwf	(___fldiv@b+3)^0,c
  9268  002D60  0E00               	movlw	0
  9269  002D62  6E11               	movwf	___fldiv@sign^0,c
  9270  002D64                     l3745:
  9271  002D64  C012  F018         	movff	___fldiv@new_exp,___fldiv@bexp
  9272  002D68  A018               	btfss	___fldiv@bexp^0,0,c
  9273  002D6A  EFB9  F016         	goto	u4051
  9274  002D6E  EFBB  F016         	goto	u4050
  9275  002D72                     u4051:
  9276  002D72  EFBE  F016         	goto	l3751
  9277  002D76                     u4050:
  9278  002D76  8E03               	bsf	(___fldiv@b+2)^0,7,c
  9279  002D78  EFBF  F016         	goto	l3753
  9280  002D7C                     l3751:
  9281  002D7C  9E03               	bcf	(___fldiv@b+2)^0,7,c
  9282  002D7E                     l3753:
  9283  002D7E  90D8               	bcf	status,0,c
  9284  002D80  3018               	rrcf	___fldiv@bexp^0,w,c
  9285  002D82  6E04               	movwf	(___fldiv@b+3)^0,c
  9286  002D84  EF75  F015         	goto	l3667
  9287  002D88                     l909:
  9288  002D88  0012               	return		;funcret
  9289  002D8A                     __end_of___fldiv:
  9290                           	callstack 0
  9291                           
  9292 ;; *************** function ___awmod *****************
  9293 ;; Defined at:
  9294 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\awmod.c"
  9295 ;; Parameters:    Size  Location     Type
  9296 ;;  dividend        2    0[COMRAM] int 
  9297 ;;  divisor         2    2[COMRAM] int 
  9298 ;; Auto vars:     Size  Location     Type
  9299 ;;  sign            1    5[COMRAM] unsigned char 
  9300 ;;  counter         1    4[COMRAM] unsigned char 
  9301 ;; Return value:  Size  Location     Type
  9302 ;;                  2    0[COMRAM] int 
  9303 ;; Registers used:
  9304 ;;		wreg, status,2, status,0
  9305 ;; Tracked objects:
  9306 ;;		On entry : 0/0
  9307 ;;		On exit  : 0/0
  9308 ;;		Unchanged: 0/0
  9309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9310 ;;      Params:         4       0       0       0       0       0       0       0       0
  9311 ;;      Locals:         2       0       0       0       0       0       0       0       0
  9312 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9313 ;;      Totals:         6       0       0       0       0       0       0       0       0
  9314 ;;Total ram usage:        6 bytes
  9315 ;; Hardware stack levels used:    1
  9316 ;; This function calls:
  9317 ;;		Nothing
  9318 ;; This function is called by:
  9319 ;;		_efgtoa
  9320 ;; This function uses a non-reentrant model
  9321 ;;
  9322                           
  9323                           	psect	text30
  9324  003D0A                     __ptext30:
  9325                           	callstack 0
  9326  003D0A                     ___awmod:
  9327                           	callstack 24
  9328  003D0A  0E00               	movlw	0
  9329  003D0C  6E06               	movwf	___awmod@sign^0,c
  9330  003D0E  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  9331  003D10  EF8E  F01E         	goto	u4310
  9332  003D14  EF8C  F01E         	goto	u4311
  9333  003D18                     u4311:
  9334  003D18  EF94  F01E         	goto	l3949
  9335  003D1C                     u4310:
  9336  003D1C  6C01               	negf	___awmod@dividend^0,c
  9337  003D1E  1E02               	comf	(___awmod@dividend+1)^0,f,c
  9338  003D20  B0D8               	btfsc	status,0,c
  9339  003D22  2A02               	incf	(___awmod@dividend+1)^0,f,c
  9340  003D24  0E01               	movlw	1
  9341  003D26  6E06               	movwf	___awmod@sign^0,c
  9342  003D28                     l3949:
  9343  003D28  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  9344  003D2A  EF9B  F01E         	goto	u4320
  9345  003D2E  EF99  F01E         	goto	u4321
  9346  003D32                     u4321:
  9347  003D32  EF9F  F01E         	goto	l3953
  9348  003D36                     u4320:
  9349  003D36  6C03               	negf	___awmod@divisor^0,c
  9350  003D38  1E04               	comf	(___awmod@divisor+1)^0,f,c
  9351  003D3A  B0D8               	btfsc	status,0,c
  9352  003D3C  2A04               	incf	(___awmod@divisor+1)^0,f,c
  9353  003D3E                     l3953:
  9354  003D3E  5003               	movf	___awmod@divisor^0,w,c
  9355  003D40  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  9356  003D42  B4D8               	btfsc	status,2,c
  9357  003D44  EFA6  F01E         	goto	u4331
  9358  003D48  EFA8  F01E         	goto	u4330
  9359  003D4C                     u4331:
  9360  003D4C  EFCC  F01E         	goto	l3969
  9361  003D50                     u4330:
  9362  003D50  0E01               	movlw	1
  9363  003D52  6E05               	movwf	___awmod@counter^0,c
  9364  003D54  EFB0  F01E         	goto	l3959
  9365  003D58                     l3957:
  9366  003D58  90D8               	bcf	status,0,c
  9367  003D5A  3603               	rlcf	___awmod@divisor^0,f,c
  9368  003D5C  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  9369  003D5E  2A05               	incf	___awmod@counter^0,f,c
  9370  003D60                     l3959:
  9371  003D60  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  9372  003D62  EFB5  F01E         	goto	u4341
  9373  003D66  EFB7  F01E         	goto	u4340
  9374  003D6A                     u4341:
  9375  003D6A  EFAC  F01E         	goto	l3957
  9376  003D6E                     u4340:
  9377  003D6E                     l3961:
  9378  003D6E  5003               	movf	___awmod@divisor^0,w,c
  9379  003D70  5C01               	subwf	___awmod@dividend^0,w,c
  9380  003D72  5004               	movf	(___awmod@divisor+1)^0,w,c
  9381  003D74  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  9382  003D76  A0D8               	btfss	status,0,c
  9383  003D78  EFC0  F01E         	goto	u4351
  9384  003D7C  EFC2  F01E         	goto	u4350
  9385  003D80                     u4351:
  9386  003D80  EFC6  F01E         	goto	l3965
  9387  003D84                     u4350:
  9388  003D84  5003               	movf	___awmod@divisor^0,w,c
  9389  003D86  5E01               	subwf	___awmod@dividend^0,f,c
  9390  003D88  5004               	movf	(___awmod@divisor+1)^0,w,c
  9391  003D8A  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  9392  003D8C                     l3965:
  9393  003D8C  90D8               	bcf	status,0,c
  9394  003D8E  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  9395  003D90  3203               	rrcf	___awmod@divisor^0,f,c
  9396  003D92  2E05               	decfsz	___awmod@counter^0,f,c
  9397  003D94  EFB7  F01E         	goto	l3961
  9398  003D98                     l3969:
  9399  003D98  5006               	movf	___awmod@sign^0,w,c
  9400  003D9A  B4D8               	btfsc	status,2,c
  9401  003D9C  EFD2  F01E         	goto	u4361
  9402  003DA0  EFD4  F01E         	goto	u4360
  9403  003DA4                     u4361:
  9404  003DA4  EFD8  F01E         	goto	l3973
  9405  003DA8                     u4360:
  9406  003DA8  6C01               	negf	___awmod@dividend^0,c
  9407  003DAA  1E02               	comf	(___awmod@dividend+1)^0,f,c
  9408  003DAC  B0D8               	btfsc	status,0,c
  9409  003DAE  2A02               	incf	(___awmod@dividend+1)^0,f,c
  9410  003DB0                     l3973:
  9411  003DB0  C001  F001         	movff	___awmod@dividend,?___awmod
  9412  003DB4  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  9413  003DB8  0012               	return		;funcret
  9414  003DBA                     __end_of___awmod:
  9415                           	callstack 0
  9416                           
  9417 ;; *************** function ___awdiv *****************
  9418 ;; Defined at:
  9419 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\awdiv.c"
  9420 ;; Parameters:    Size  Location     Type
  9421 ;;  dividend        2    0[COMRAM] int 
  9422 ;;  divisor         2    2[COMRAM] int 
  9423 ;; Auto vars:     Size  Location     Type
  9424 ;;  quotient        2    6[COMRAM] int 
  9425 ;;  sign            1    5[COMRAM] unsigned char 
  9426 ;;  counter         1    4[COMRAM] unsigned char 
  9427 ;; Return value:  Size  Location     Type
  9428 ;;                  2    0[COMRAM] int 
  9429 ;; Registers used:
  9430 ;;		wreg, status,2, status,0
  9431 ;; Tracked objects:
  9432 ;;		On entry : 0/0
  9433 ;;		On exit  : 0/0
  9434 ;;		Unchanged: 0/0
  9435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9436 ;;      Params:         4       0       0       0       0       0       0       0       0
  9437 ;;      Locals:         4       0       0       0       0       0       0       0       0
  9438 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9439 ;;      Totals:         8       0       0       0       0       0       0       0       0
  9440 ;;Total ram usage:        8 bytes
  9441 ;; Hardware stack levels used:    1
  9442 ;; This function calls:
  9443 ;;		Nothing
  9444 ;; This function is called by:
  9445 ;;		_efgtoa
  9446 ;; This function uses a non-reentrant model
  9447 ;;
  9448                           
  9449                           	psect	text31
  9450  003B90                     __ptext31:
  9451                           	callstack 0
  9452  003B90                     ___awdiv:
  9453                           	callstack 24
  9454  003B90  0E00               	movlw	0
  9455  003B92  6E06               	movwf	___awdiv@sign^0,c
  9456  003B94  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  9457  003B96  EFD1  F01D         	goto	u4250
  9458  003B9A  EFCF  F01D         	goto	u4251
  9459  003B9E                     u4251:
  9460  003B9E  EFD7  F01D         	goto	l3905
  9461  003BA2                     u4250:
  9462  003BA2  6C03               	negf	___awdiv@divisor^0,c
  9463  003BA4  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  9464  003BA6  B0D8               	btfsc	status,0,c
  9465  003BA8  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  9466  003BAA  0E01               	movlw	1
  9467  003BAC  6E06               	movwf	___awdiv@sign^0,c
  9468  003BAE                     l3905:
  9469  003BAE  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  9470  003BB0  EFDE  F01D         	goto	u4260
  9471  003BB4  EFDC  F01D         	goto	u4261
  9472  003BB8                     u4261:
  9473  003BB8  EFE4  F01D         	goto	l3911
  9474  003BBC                     u4260:
  9475  003BBC  6C01               	negf	___awdiv@dividend^0,c
  9476  003BBE  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  9477  003BC0  B0D8               	btfsc	status,0,c
  9478  003BC2  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  9479  003BC4  0E01               	movlw	1
  9480  003BC6  1A06               	xorwf	___awdiv@sign^0,f,c
  9481  003BC8                     l3911:
  9482  003BC8  0E00               	movlw	0
  9483  003BCA  6E08               	movwf	(___awdiv@quotient+1)^0,c
  9484  003BCC  0E00               	movlw	0
  9485  003BCE  6E07               	movwf	___awdiv@quotient^0,c
  9486  003BD0  5003               	movf	___awdiv@divisor^0,w,c
  9487  003BD2  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  9488  003BD4  B4D8               	btfsc	status,2,c
  9489  003BD6  EFEF  F01D         	goto	u4271
  9490  003BDA  EFF1  F01D         	goto	u4270
  9491  003BDE                     u4271:
  9492  003BDE  EF19  F01E         	goto	l3933
  9493  003BE2                     u4270:
  9494  003BE2  0E01               	movlw	1
  9495  003BE4  6E05               	movwf	___awdiv@counter^0,c
  9496  003BE6  EFF9  F01D         	goto	l3919
  9497  003BEA                     l3917:
  9498  003BEA  90D8               	bcf	status,0,c
  9499  003BEC  3603               	rlcf	___awdiv@divisor^0,f,c
  9500  003BEE  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  9501  003BF0  2A05               	incf	___awdiv@counter^0,f,c
  9502  003BF2                     l3919:
  9503  003BF2  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  9504  003BF4  EFFE  F01D         	goto	u4281
  9505  003BF8  EF00  F01E         	goto	u4280
  9506  003BFC                     u4281:
  9507  003BFC  EFF5  F01D         	goto	l3917
  9508  003C00                     u4280:
  9509  003C00                     l3921:
  9510  003C00  90D8               	bcf	status,0,c
  9511  003C02  3607               	rlcf	___awdiv@quotient^0,f,c
  9512  003C04  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  9513  003C06  5003               	movf	___awdiv@divisor^0,w,c
  9514  003C08  5C01               	subwf	___awdiv@dividend^0,w,c
  9515  003C0A  5004               	movf	(___awdiv@divisor+1)^0,w,c
  9516  003C0C  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  9517  003C0E  A0D8               	btfss	status,0,c
  9518  003C10  EF0C  F01E         	goto	u4291
  9519  003C14  EF0E  F01E         	goto	u4290
  9520  003C18                     u4291:
  9521  003C18  EF13  F01E         	goto	l3929
  9522  003C1C                     u4290:
  9523  003C1C  5003               	movf	___awdiv@divisor^0,w,c
  9524  003C1E  5E01               	subwf	___awdiv@dividend^0,f,c
  9525  003C20  5004               	movf	(___awdiv@divisor+1)^0,w,c
  9526  003C22  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  9527  003C24  8007               	bsf	___awdiv@quotient^0,0,c
  9528  003C26                     l3929:
  9529  003C26  90D8               	bcf	status,0,c
  9530  003C28  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  9531  003C2A  3203               	rrcf	___awdiv@divisor^0,f,c
  9532  003C2C  2E05               	decfsz	___awdiv@counter^0,f,c
  9533  003C2E  EF00  F01E         	goto	l3921
  9534  003C32                     l3933:
  9535  003C32  5006               	movf	___awdiv@sign^0,w,c
  9536  003C34  B4D8               	btfsc	status,2,c
  9537  003C36  EF1F  F01E         	goto	u4301
  9538  003C3A  EF21  F01E         	goto	u4300
  9539  003C3E                     u4301:
  9540  003C3E  EF25  F01E         	goto	l3937
  9541  003C42                     u4300:
  9542  003C42  6C07               	negf	___awdiv@quotient^0,c
  9543  003C44  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  9544  003C46  B0D8               	btfsc	status,0,c
  9545  003C48  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  9546  003C4A                     l3937:
  9547  003C4A  C007  F001         	movff	___awdiv@quotient,?___awdiv
  9548  003C4E  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  9549  003C52  0012               	return		;funcret
  9550  003C54                     __end_of___awdiv:
  9551                           	callstack 0
  9552                           
  9553 ;; *************** function _atoi *****************
  9554 ;; Defined at:
  9555 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\atoi.c"
  9556 ;; Parameters:    Size  Location     Type
  9557 ;;  s               2    7[COMRAM] PTR const unsigned char 
  9558 ;;		 -> STR_8(5), STR_7(9), STR_6(4), STR_5(4), 
  9559 ;;		 -> aux_contrasenia(4), 
  9560 ;; Auto vars:     Size  Location     Type
  9561 ;;  n               2   20[COMRAM] int 
  9562 ;;  neg             2   13[COMRAM] int 
  9563 ;; Return value:  Size  Location     Type
  9564 ;;                  2    7[COMRAM] int 
  9565 ;; Registers used:
  9566 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9567 ;; Tracked objects:
  9568 ;;		On entry : 0/0
  9569 ;;		On exit  : 0/0
  9570 ;;		Unchanged: 0/0
  9571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9572 ;;      Params:         2       0       0       0       0       0       0       0       0
  9573 ;;      Locals:         9       0       0       0       0       0       0       0       0
  9574 ;;      Temps:          4       0       0       0       0       0       0       0       0
  9575 ;;      Totals:        15       0       0       0       0       0       0       0       0
  9576 ;;Total ram usage:       15 bytes
  9577 ;; Hardware stack levels used:    1
  9578 ;; Hardware stack levels required when called:    1
  9579 ;; This function calls:
  9580 ;;		___wmul
  9581 ;;		_isdigit
  9582 ;;		_isspace
  9583 ;; This function is called by:
  9584 ;;		_activar_seguridad
  9585 ;;		_vfpfcnvrt
  9586 ;; This function uses a non-reentrant model
  9587 ;;
  9588                           
  9589                           	psect	text32
  9590  003276                     __ptext32:
  9591                           	callstack 0
  9592  003276                     _atoi:
  9593                           	callstack 24
  9594  003276  0E00               	movlw	0
  9595  003278  6E16               	movwf	(atoi@n+1)^0,c
  9596  00327A  0E00               	movlw	0
  9597  00327C  6E15               	movwf	atoi@n^0,c
  9598  00327E  0E00               	movlw	0
  9599  003280  6E0F               	movwf	(atoi@neg+1)^0,c
  9600  003282  0E00               	movlw	0
  9601  003284  6E0E               	movwf	atoi@neg^0,c
  9602  003286  EF47  F019         	goto	l4185
  9603  00328A                     l4183:
  9604  00328A  4A08               	infsnz	atoi@s^0,f,c
  9605  00328C  2A09               	incf	(atoi@s+1)^0,f,c
  9606  00328E                     l4185:
  9607  00328E  0E01               	movlw	1
  9608  003290  6E14               	movwf	_atoi$1299^0,c
  9609  003292  C008  FFF6         	movff	atoi@s,tblptrl
  9610  003296  C009  FFF7         	movff	atoi@s+1,tblptrh
  9611  00329A  6AF8               	clrf	tblptru,c
  9612  00329C  0E07               	movlw	(high __ramtop+-1)
  9613  00329E  64F7               	cpfsgt	tblptrh,c
  9614  0032A0  D003               	bra	u4877
  9615  0032A2  0008               	tblrd		*
  9616  0032A4  50F5               	movf	tablat,w,c
  9617  0032A6  D005               	bra	u4870
  9618  0032A8                     u4877:
  9619  0032A8  CFF6 FFE1          	movff	tblptrl,fsr1l
  9620  0032AC  CFF7 FFE2          	movff	tblptrh,fsr1h
  9621  0032B0  50E7               	movf	indf1,w,c
  9622  0032B2                     u4870:
  9623  0032B2  0A20               	xorlw	32
  9624  0032B4  B4D8               	btfsc	status,2,c
  9625  0032B6  EF5F  F019         	goto	u4881
  9626  0032BA  EF61  F019         	goto	u4880
  9627  0032BE                     u4881:
  9628  0032BE  EF88  F019         	goto	l4193
  9629  0032C2                     u4880:
  9630  0032C2  0EF7               	movlw	247
  9631  0032C4  6E0A               	movwf	??_atoi^0,c
  9632  0032C6  0EFF               	movlw	255
  9633  0032C8  6E0B               	movwf	(??_atoi+1)^0,c
  9634  0032CA  C008  FFF6         	movff	atoi@s,tblptrl
  9635  0032CE  C009  FFF7         	movff	atoi@s+1,tblptrh
  9636  0032D2  6AF8               	clrf	tblptru,c
  9637  0032D4  0E07               	movlw	(high __ramtop+-1)
  9638  0032D6  64F7               	cpfsgt	tblptrh,c
  9639  0032D8  D003               	bra	u4897
  9640  0032DA  0008               	tblrd		*
  9641  0032DC  50F5               	movf	tablat,w,c
  9642  0032DE  D005               	bra	u4890
  9643  0032E0                     u4897:
  9644  0032E0  CFF6 FFE1          	movff	tblptrl,fsr1l
  9645  0032E4  CFF7 FFE2          	movff	tblptrh,fsr1h
  9646  0032E8  50E7               	movf	indf1,w,c
  9647  0032EA                     u4890:
  9648  0032EA  6E0C               	movwf	(??_atoi+2)^0,c
  9649  0032EC  6A0D               	clrf	(??_atoi+3)^0,c
  9650  0032EE  500A               	movf	??_atoi^0,w,c
  9651  0032F0  260C               	addwf	(??_atoi+2)^0,f,c
  9652  0032F2  500B               	movf	(??_atoi+1)^0,w,c
  9653  0032F4  220D               	addwfc	(??_atoi+3)^0,f,c
  9654  0032F6  500D               	movf	(??_atoi+3)^0,w,c
  9655  0032F8  E109               	bnz	u4900
  9656  0032FA  0E05               	movlw	5
  9657  0032FC  5C0C               	subwf	(??_atoi+2)^0,w,c
  9658  0032FE  A0D8               	btfss	status,0,c
  9659  003300  EF84  F019         	goto	u4901
  9660  003304  EF86  F019         	goto	u4900
  9661  003308                     u4901:
  9662  003308  EF88  F019         	goto	l4193
  9663  00330C                     u4900:
  9664  00330C  0E00               	movlw	0
  9665  00330E  6E14               	movwf	_atoi$1299^0,c
  9666  003310                     l4193:
  9667  003310  C014  F010         	movff	_atoi$1299,_atoi$1298
  9668  003314  6A11               	clrf	(_atoi$1298+1)^0,c
  9669  003316  5010               	movf	_atoi$1298^0,w,c
  9670  003318  1011               	iorwf	(_atoi$1298+1)^0,w,c
  9671  00331A  A4D8               	btfss	status,2,c
  9672  00331C  EF92  F019         	goto	u4911
  9673  003320  EF94  F019         	goto	u4910
  9674  003324                     u4911:
  9675  003324  EF45  F019         	goto	l4183
  9676  003328                     u4910:
  9677  003328  EF9E  F019         	goto	l4203
  9678  00332C                     l4199:
  9679  00332C  0E00               	movlw	0
  9680  00332E  6E0F               	movwf	(atoi@neg+1)^0,c
  9681  003330  0E01               	movlw	1
  9682  003332  6E0E               	movwf	atoi@neg^0,c
  9683  003334                     l4201:
  9684  003334  4A08               	infsnz	atoi@s^0,f,c
  9685  003336  2A09               	incf	(atoi@s+1)^0,f,c
  9686  003338  EFE9  F019         	goto	l4209
  9687  00333C                     l4203:
  9688  00333C  C008  FFF6         	movff	atoi@s,tblptrl
  9689  003340  C009  FFF7         	movff	atoi@s+1,tblptrh
  9690  003344  6AF8               	clrf	tblptru,c
  9691  003346  0E07               	movlw	(high __ramtop+-1)
  9692  003348  64F7               	cpfsgt	tblptrh,c
  9693  00334A  D003               	bra	u4927
  9694  00334C  0008               	tblrd		*
  9695  00334E  50F5               	movf	tablat,w,c
  9696  003350  D005               	bra	u4920
  9697  003352                     u4927:
  9698  003352  CFF6 FFE1          	movff	tblptrl,fsr1l
  9699  003356  CFF7 FFE2          	movff	tblptrh,fsr1h
  9700  00335A  50E7               	movf	indf1,w,c
  9701  00335C                     u4920:
  9702  00335C  6E0A               	movwf	??_atoi^0,c
  9703  00335E  6A0B               	clrf	(??_atoi+1)^0,c
  9704                           
  9705                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9706                           ; Switch size 1, requested type "simple"
  9707                           ; Number of cases is 1, Range of values is 0 to 0
  9708                           ; switch strategies available:
  9709                           ; Name         Instructions Cycles
  9710                           ; simple_byte            4     3 (average)
  9711                           ;	Chosen strategy is simple_byte
  9712  003360  500B               	movf	(??_atoi+1)^0,w,c
  9713  003362  0A00               	xorlw	0	; case 0
  9714  003364  B4D8               	btfsc	status,2,c
  9715  003366  EFB7  F019         	goto	l5385
  9716  00336A  EFE9  F019         	goto	l4209
  9717  00336E                     l5385:
  9718                           
  9719                           ; Switch size 1, requested type "simple"
  9720                           ; Number of cases is 2, Range of values is 43 to 45
  9721                           ; switch strategies available:
  9722                           ; Name         Instructions Cycles
  9723                           ; simple_byte            7     4 (average)
  9724                           ;	Chosen strategy is simple_byte
  9725  00336E  500A               	movf	??_atoi^0,w,c
  9726  003370  0A2B               	xorlw	43	; case 43
  9727  003372  B4D8               	btfsc	status,2,c
  9728  003374  EF9A  F019         	goto	l4201
  9729  003378  0A06               	xorlw	6	; case 45
  9730  00337A  B4D8               	btfsc	status,2,c
  9731  00337C  EF96  F019         	goto	l4199
  9732  003380  EFE9  F019         	goto	l4209
  9733  003384                     l4205:
  9734  003384  C015  F001         	movff	atoi@n,___wmul@multiplier
  9735  003388  C016  F002         	movff	atoi@n+1,___wmul@multiplier+1
  9736  00338C  0E00               	movlw	0
  9737  00338E  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  9738  003390  0E0A               	movlw	10
  9739  003392  6E03               	movwf	___wmul@multiplicand^0,c
  9740  003394  EC38  F023         	call	___wmul	;wreg free
  9741  003398  C008  FFF6         	movff	atoi@s,tblptrl
  9742  00339C  C009  FFF7         	movff	atoi@s+1,tblptrh
  9743  0033A0  6AF8               	clrf	tblptru,c
  9744  0033A2  0E07               	movlw	(high __ramtop+-1)
  9745  0033A4  64F7               	cpfsgt	tblptrh,c
  9746  0033A6  D003               	bra	u4937
  9747  0033A8  0008               	tblrd		*
  9748  0033AA  50F5               	movf	tablat,w,c
  9749  0033AC  D005               	bra	u4930
  9750  0033AE                     u4937:
  9751  0033AE  CFF6 FFE1          	movff	tblptrl,fsr1l
  9752  0033B2  CFF7 FFE2          	movff	tblptrh,fsr1h
  9753  0033B6  50E7               	movf	indf1,w,c
  9754  0033B8                     u4930:
  9755  0033B8  6E0A               	movwf	??_atoi^0,c
  9756  0033BA  500A               	movf	??_atoi^0,w,c
  9757  0033BC  5E01               	subwf	?___wmul^0,f,c
  9758  0033BE  0E00               	movlw	0
  9759  0033C0  5A02               	subwfb	(?___wmul+1)^0,f,c
  9760  0033C2  0E30               	movlw	48
  9761  0033C4  2401               	addwf	?___wmul^0,w,c
  9762  0033C6  6E15               	movwf	atoi@n^0,c
  9763  0033C8  0E00               	movlw	0
  9764  0033CA  2002               	addwfc	(?___wmul+1)^0,w,c
  9765  0033CC  6E16               	movwf	(atoi@n+1)^0,c
  9766  0033CE  EF9A  F019         	goto	l4201
  9767  0033D2                     l4209:
  9768  0033D2  0ED0               	movlw	208
  9769  0033D4  6E0A               	movwf	??_atoi^0,c
  9770  0033D6  0EFF               	movlw	255
  9771  0033D8  6E0B               	movwf	(??_atoi+1)^0,c
  9772  0033DA  C008  FFF6         	movff	atoi@s,tblptrl
  9773  0033DE  C009  FFF7         	movff	atoi@s+1,tblptrh
  9774  0033E2  6AF8               	clrf	tblptru,c
  9775  0033E4  0E07               	movlw	(high __ramtop+-1)
  9776  0033E6  64F7               	cpfsgt	tblptrh,c
  9777  0033E8  D003               	bra	u4947
  9778  0033EA  0008               	tblrd		*
  9779  0033EC  50F5               	movf	tablat,w,c
  9780  0033EE  D005               	bra	u4940
  9781  0033F0                     u4947:
  9782  0033F0  CFF6 FFE1          	movff	tblptrl,fsr1l
  9783  0033F4  CFF7 FFE2          	movff	tblptrh,fsr1h
  9784  0033F8  50E7               	movf	indf1,w,c
  9785  0033FA                     u4940:
  9786  0033FA  6E0C               	movwf	(??_atoi+2)^0,c
  9787  0033FC  6A0D               	clrf	(??_atoi+3)^0,c
  9788  0033FE  500A               	movf	??_atoi^0,w,c
  9789  003400  260C               	addwf	(??_atoi+2)^0,f,c
  9790  003402  500B               	movf	(??_atoi+1)^0,w,c
  9791  003404  220D               	addwfc	(??_atoi+3)^0,f,c
  9792  003406  500D               	movf	(??_atoi+3)^0,w,c
  9793  003408  E10A               	bnz	u4950
  9794  00340A  0E0A               	movlw	10
  9795  00340C  5C0C               	subwf	(??_atoi+2)^0,w,c
  9796  00340E  A0D8               	btfss	status,0,c
  9797  003410  EF0C  F01A         	goto	u4951
  9798  003414  EF0F  F01A         	goto	u4950
  9799  003418                     u4951:
  9800  003418  0E01               	movlw	1
  9801  00341A  EF10  F01A         	goto	u4960
  9802  00341E                     u4950:
  9803  00341E  0E00               	movlw	0
  9804  003420                     u4960:
  9805  003420  6E12               	movwf	_atoi$1300^0,c
  9806  003422  6A13               	clrf	(_atoi$1300+1)^0,c
  9807  003424  5012               	movf	_atoi$1300^0,w,c
  9808  003426  1013               	iorwf	(_atoi$1300+1)^0,w,c
  9809  003428  A4D8               	btfss	status,2,c
  9810  00342A  EF19  F01A         	goto	u4971
  9811  00342E  EF1B  F01A         	goto	u4970
  9812  003432                     u4971:
  9813  003432  EFC2  F019         	goto	l4205
  9814  003436                     u4970:
  9815  003436  500E               	movf	atoi@neg^0,w,c
  9816  003438  100F               	iorwf	(atoi@neg+1)^0,w,c
  9817  00343A  A4D8               	btfss	status,2,c
  9818  00343C  EF22  F01A         	goto	u4981
  9819  003440  EF24  F01A         	goto	u4980
  9820  003444                     u4981:
  9821  003444  EF32  F01A         	goto	l1026
  9822  003448                     u4980:
  9823  003448  C015  F00A         	movff	atoi@n,??_atoi
  9824  00344C  C016  F00B         	movff	atoi@n+1,??_atoi+1
  9825  003450  1E0A               	comf	??_atoi^0,f,c
  9826  003452  1E0B               	comf	(??_atoi+1)^0,f,c
  9827  003454  4A0A               	infsnz	??_atoi^0,f,c
  9828  003456  2A0B               	incf	(??_atoi+1)^0,f,c
  9829  003458  C00A  F008         	movff	??_atoi,?_atoi
  9830  00345C  C00B  F009         	movff	??_atoi+1,?_atoi+1
  9831  003460  EF36  F01A         	goto	l1029
  9832  003464                     l1026:
  9833  003464  C015  F008         	movff	atoi@n,?_atoi
  9834  003468  C016  F009         	movff	atoi@n+1,?_atoi+1
  9835  00346C                     l1029:
  9836  00346C  0012               	return		;funcret
  9837  00346E                     __end_of_atoi:
  9838                           	callstack 0
  9839                           
  9840 ;; *************** function _isspace *****************
  9841 ;; Defined at:
  9842 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\isspace.c"
  9843 ;; Parameters:    Size  Location     Type
  9844 ;;  c               2    0[COMRAM] int 
  9845 ;; Auto vars:     Size  Location     Type
  9846 ;;		None
  9847 ;; Return value:  Size  Location     Type
  9848 ;;                  2    0[COMRAM] int 
  9849 ;; Registers used:
  9850 ;;		wreg, status,2, status,0
  9851 ;; Tracked objects:
  9852 ;;		On entry : 0/0
  9853 ;;		On exit  : 0/0
  9854 ;;		Unchanged: 0/0
  9855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9856 ;;      Params:         2       0       0       0       0       0       0       0       0
  9857 ;;      Locals:         1       0       0       0       0       0       0       0       0
  9858 ;;      Temps:          4       0       0       0       0       0       0       0       0
  9859 ;;      Totals:         7       0       0       0       0       0       0       0       0
  9860 ;;Total ram usage:        7 bytes
  9861 ;; Hardware stack levels used:    1
  9862 ;; This function calls:
  9863 ;;		Nothing
  9864 ;; This function is called by:
  9865 ;;		_atoi
  9866 ;; This function uses a non-reentrant model
  9867 ;;
  9868                           
  9869                           	psect	text33
  9870  004238                     __ptext33:
  9871                           	callstack 0
  9872  004238                     _isspace:
  9873                           	callstack 24
  9874  004238  0E01               	movlw	1
  9875  00423A  6E07               	movwf	_isspace$1316^0,c
  9876  00423C  0E20               	movlw	32
  9877  00423E  1801               	xorwf	isspace@c^0,w,c
  9878  004240  1002               	iorwf	(isspace@c+1)^0,w,c
  9879  004242  B4D8               	btfsc	status,2,c
  9880  004244  EF26  F021         	goto	u4531
  9881  004248  EF28  F021         	goto	u4530
  9882  00424C                     u4531:
  9883  00424C  EF41  F021         	goto	l4075
  9884  004250                     u4530:
  9885  004250  0EF7               	movlw	247
  9886  004252  6E03               	movwf	??_isspace^0,c
  9887  004254  0EFF               	movlw	255
  9888  004256  6E04               	movwf	(??_isspace+1)^0,c
  9889  004258  C001  F005         	movff	isspace@c,??_isspace+2
  9890  00425C  C002  F006         	movff	isspace@c+1,??_isspace+3
  9891  004260  5003               	movf	??_isspace^0,w,c
  9892  004262  2605               	addwf	(??_isspace+2)^0,f,c
  9893  004264  5004               	movf	(??_isspace+1)^0,w,c
  9894  004266  2206               	addwfc	(??_isspace+3)^0,f,c
  9895  004268  5006               	movf	(??_isspace+3)^0,w,c
  9896  00426A  E109               	bnz	u4540
  9897  00426C  0E05               	movlw	5
  9898  00426E  5C05               	subwf	(??_isspace+2)^0,w,c
  9899  004270  A0D8               	btfss	status,0,c
  9900  004272  EF3D  F021         	goto	u4541
  9901  004276  EF3F  F021         	goto	u4540
  9902  00427A                     u4541:
  9903  00427A  EF41  F021         	goto	l4075
  9904  00427E                     u4540:
  9905  00427E  0E00               	movlw	0
  9906  004280  6E07               	movwf	_isspace$1316^0,c
  9907  004282                     l4075:
  9908  004282  C007  F001         	movff	_isspace$1316,?_isspace
  9909  004286  6A02               	clrf	(?_isspace+1)^0,c
  9910  004288  0012               	return		;funcret
  9911  00428A                     __end_of_isspace:
  9912                           	callstack 0
  9913                           
  9914 ;; *************** function _isdigit *****************
  9915 ;; Defined at:
  9916 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\isdigit.c"
  9917 ;; Parameters:    Size  Location     Type
  9918 ;;  c               2    0[COMRAM] int 
  9919 ;; Auto vars:     Size  Location     Type
  9920 ;;		None
  9921 ;; Return value:  Size  Location     Type
  9922 ;;                  2    0[COMRAM] int 
  9923 ;; Registers used:
  9924 ;;		wreg, status,2, status,0
  9925 ;; Tracked objects:
  9926 ;;		On entry : 0/0
  9927 ;;		On exit  : 0/0
  9928 ;;		Unchanged: 0/0
  9929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9930 ;;      Params:         2       0       0       0       0       0       0       0       0
  9931 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9932 ;;      Temps:          4       0       0       0       0       0       0       0       0
  9933 ;;      Totals:         6       0       0       0       0       0       0       0       0
  9934 ;;Total ram usage:        6 bytes
  9935 ;; Hardware stack levels used:    1
  9936 ;; This function calls:
  9937 ;;		Nothing
  9938 ;; This function is called by:
  9939 ;;		_activar_seguridad
  9940 ;;		_atoi
  9941 ;;		_vfpfcnvrt
  9942 ;; This function uses a non-reentrant model
  9943 ;;
  9944                           
  9945                           	psect	text34
  9946  004540                     __ptext34:
  9947                           	callstack 0
  9948  004540                     _isdigit:
  9949                           	callstack 25
  9950  004540  0ED0               	movlw	208
  9951  004542  6E03               	movwf	??_isdigit^0,c
  9952  004544  0EFF               	movlw	255
  9953  004546  6E04               	movwf	(??_isdigit+1)^0,c
  9954  004548  C001  F005         	movff	isdigit@c,??_isdigit+2
  9955  00454C  C002  F006         	movff	isdigit@c+1,??_isdigit+3
  9956  004550  5003               	movf	??_isdigit^0,w,c
  9957  004552  2605               	addwf	(??_isdigit+2)^0,f,c
  9958  004554  5004               	movf	(??_isdigit+1)^0,w,c
  9959  004556  2206               	addwfc	(??_isdigit+3)^0,f,c
  9960  004558  5006               	movf	(??_isdigit+3)^0,w,c
  9961  00455A  E10A               	bnz	u3810
  9962  00455C  0E0A               	movlw	10
  9963  00455E  5C05               	subwf	(??_isdigit+2)^0,w,c
  9964  004560  A0D8               	btfss	status,0,c
  9965  004562  EFB5  F022         	goto	u3811
  9966  004566  EFB8  F022         	goto	u3810
  9967  00456A                     u3811:
  9968  00456A  0E01               	movlw	1
  9969  00456C  EFB9  F022         	goto	u3820
  9970  004570                     u3810:
  9971  004570  0E00               	movlw	0
  9972  004572                     u3820:
  9973  004572  6E01               	movwf	?_isdigit^0,c
  9974  004574  6A02               	clrf	(?_isdigit+1)^0,c
  9975  004576  0012               	return		;funcret
  9976  004578                     __end_of_isdigit:
  9977                           	callstack 0
  9978                           
  9979 ;; *************** function ___wmul *****************
  9980 ;; Defined at:
  9981 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\Umul16.c"
  9982 ;; Parameters:    Size  Location     Type
  9983 ;;  multiplier      2    0[COMRAM] unsigned int 
  9984 ;;  multiplicand    2    2[COMRAM] unsigned int 
  9985 ;; Auto vars:     Size  Location     Type
  9986 ;;  product         2    4[COMRAM] unsigned int 
  9987 ;; Return value:  Size  Location     Type
  9988 ;;                  2    0[COMRAM] unsigned int 
  9989 ;; Registers used:
  9990 ;;		wreg, status,2, status,0, prodl, prodh
  9991 ;; Tracked objects:
  9992 ;;		On entry : 0/0
  9993 ;;		On exit  : 0/0
  9994 ;;		Unchanged: 0/0
  9995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9996 ;;      Params:         4       0       0       0       0       0       0       0       0
  9997 ;;      Locals:         2       0       0       0       0       0       0       0       0
  9998 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9999 ;;      Totals:         6       0       0       0       0       0       0       0       0
 10000 ;;Total ram usage:        6 bytes
 10001 ;; Hardware stack levels used:    1
 10002 ;; This function calls:
 10003 ;;		Nothing
 10004 ;; This function is called by:
 10005 ;;		_atoi
 10006 ;; This function uses a non-reentrant model
 10007 ;;
 10008                           
 10009                           	psect	text35
 10010  004670                     __ptext35:
 10011                           	callstack 0
 10012  004670                     ___wmul:
 10013                           	callstack 24
 10014  004670  5001               	movf	___wmul@multiplier^0,w,c
 10015  004672  0203               	mulwf	___wmul@multiplicand^0,c
 10016  004674  CFF3 F005          	movff	prodl,___wmul@product
 10017  004678  CFF4 F006          	movff	prodh,___wmul@product+1
 10018  00467C  5001               	movf	___wmul@multiplier^0,w,c
 10019  00467E  0204               	mulwf	(___wmul@multiplicand+1)^0,c
 10020  004680  50F3               	movf	243,w,c
 10021  004682  2606               	addwf	(___wmul@product+1)^0,f,c
 10022  004684  5002               	movf	(___wmul@multiplier+1)^0,w,c
 10023  004686  0203               	mulwf	___wmul@multiplicand^0,c
 10024  004688  50F3               	movf	243,w,c
 10025  00468A  2606               	addwf	(___wmul@product+1)^0,f,c
 10026  00468C  C005  F001         	movff	___wmul@product,?___wmul
 10027  004690  C006  F002         	movff	___wmul@product+1,?___wmul+1
 10028  004694  0012               	return		;funcret
 10029  004696                     __end_of___wmul:
 10030                           	callstack 0
 10031                           
 10032 ;; *************** function _getCad *****************
 10033 ;; Defined at:
 10034 ;;		line 49 in file "main.c"
 10035 ;; Parameters:    Size  Location     Type
 10036 ;;  canal           1    wreg     unsigned char 
 10037 ;; Auto vars:     Size  Location     Type
 10038 ;;  canal           1    4[COMRAM] unsigned char 
 10039 ;; Return value:  Size  Location     Type
 10040 ;;                  2    0[COMRAM] short 
 10041 ;; Registers used:
 10042 ;;		wreg, status,2, status,0
 10043 ;; Tracked objects:
 10044 ;;		On entry : 0/0
 10045 ;;		On exit  : 0/0
 10046 ;;		Unchanged: 0/0
 10047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10048 ;;      Params:         2       0       0       0       0       0       0       0       0
 10049 ;;      Locals:         1       0       0       0       0       0       0       0       0
 10050 ;;      Temps:          2       0       0       0       0       0       0       0       0
 10051 ;;      Totals:         5       0       0       0       0       0       0       0       0
 10052 ;;Total ram usage:        5 bytes
 10053 ;; Hardware stack levels used:    1
 10054 ;; This function calls:
 10055 ;;		Nothing
 10056 ;; This function is called by:
 10057 ;;		_activar_seguridad
 10058 ;; This function uses a non-reentrant model
 10059 ;;
 10060                           
 10061                           	psect	text36
 10062  00428A                     __ptext36:
 10063                           	callstack 0
 10064  00428A                     _getCad:
 10065                           	callstack 28
 10066                           
 10067                           ;incstack = 0
 10068                           ;getCad@canal stored from wreg
 10069  00428A  6E05               	movwf	getCad@canal^0,c
 10070  00428C                     
 10071                           ;main.c: 50:     ADCON1 = 0b00001100;
 10072  00428C  0E0C               	movlw	12
 10073  00428E  6EC1               	movwf	193,c	;volatile
 10074                           
 10075                           ;main.c: 51:     switch (canal) {
 10076  004290  EF4E  F021         	goto	l4869
 10077  004294                     l4865:
 10078                           
 10079                           ;main.c: 53:             ADCON0 = 0b00000010;
 10080  004294  0E02               	movlw	2
 10081  004296  6EC2               	movwf	194,c	;volatile
 10082                           
 10083                           ;main.c: 54:             break;
 10084  004298  EF5F  F021         	goto	l4871
 10085  00429C                     l4869:
 10086  00429C  5005               	movf	getCad@canal^0,w,c
 10087  00429E  6E03               	movwf	??_getCad^0,c
 10088  0042A0  6A04               	clrf	(??_getCad+1)^0,c
 10089                           
 10090                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10091                           ; Switch size 1, requested type "simple"
 10092                           ; Number of cases is 1, Range of values is 0 to 0
 10093                           ; switch strategies available:
 10094                           ; Name         Instructions Cycles
 10095                           ; simple_byte            4     3 (average)
 10096                           ;	Chosen strategy is simple_byte
 10097  0042A2  5004               	movf	(??_getCad+1)^0,w,c
 10098  0042A4  0A00               	xorlw	0	; case 0
 10099  0042A6  B4D8               	btfsc	status,2,c
 10100  0042A8  EF58  F021         	goto	l5387
 10101  0042AC  EF5F  F021         	goto	l4871
 10102  0042B0                     l5387:
 10103                           
 10104                           ; Switch size 1, requested type "simple"
 10105                           ; Number of cases is 1, Range of values is 0 to 0
 10106                           ; switch strategies available:
 10107                           ; Name         Instructions Cycles
 10108                           ; simple_byte            4     3 (average)
 10109                           ;	Chosen strategy is simple_byte
 10110  0042B0  5003               	movf	??_getCad^0,w,c
 10111  0042B2  0A00               	xorlw	0	; case 0
 10112  0042B4  B4D8               	btfsc	status,2,c
 10113  0042B6  EF4A  F021         	goto	l4865
 10114  0042BA  EF5F  F021         	goto	l4871
 10115  0042BE                     l4871:
 10116                           
 10117                           ;main.c: 56:     ADCON2 = 0b00101001;
 10118  0042BE  0E29               	movlw	41
 10119  0042C0  6EC0               	movwf	192,c	;volatile
 10120  0042C2                     
 10121                           ;main.c: 57:     ADON = 1;
 10122  0042C2  80C2               	bsf	4034,0,c	;volatile
 10123  0042C4                     
 10124                           ;main.c: 58:     GO_DONE = 1;
 10125  0042C4  82C2               	bsf	4034,1,c	;volatile
 10126  0042C6                     l235:
 10127  0042C6  B2C2               	btfsc	4034,1,c	;volatile
 10128  0042C8  EF68  F021         	goto	u6111
 10129  0042CC  EF6A  F021         	goto	u6110
 10130  0042D0                     u6111:
 10131  0042D0  EF63  F021         	goto	l235
 10132  0042D4                     u6110:
 10133  0042D4                     
 10134                           ;main.c: 62:     return ADRESH;
 10135  0042D4  CFC4 F001          	movff	4036,?_getCad	;volatile
 10136  0042D8  6A02               	clrf	(?_getCad+1)^0,c
 10137  0042DA  0012               	return		;funcret
 10138  0042DC                     __end_of_getCad:
 10139                           	callstack 0
 10140                           
 10141 ;; *************** function ___xxtofl *****************
 10142 ;; Defined at:
 10143 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\xxtofl.c"
 10144 ;; Parameters:    Size  Location     Type
 10145 ;;  sign            1    wreg     unsigned char 
 10146 ;;  val             4    5[COMRAM] long 
 10147 ;; Auto vars:     Size  Location     Type
 10148 ;;  sign            1   13[COMRAM] unsigned char 
 10149 ;;  arg             4   15[COMRAM] unsigned long 
 10150 ;;  exp             1   14[COMRAM] unsigned char 
 10151 ;; Return value:  Size  Location     Type
 10152 ;;                  4    5[COMRAM] unsigned char 
 10153 ;; Registers used:
 10154 ;;		wreg, status,2, status,0
 10155 ;; Tracked objects:
 10156 ;;		On entry : 0/0
 10157 ;;		On exit  : 0/0
 10158 ;;		Unchanged: 0/0
 10159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10160 ;;      Params:         4       0       0       0       0       0       0       0       0
 10161 ;;      Locals:         6       0       0       0       0       0       0       0       0
 10162 ;;      Temps:          4       0       0       0       0       0       0       0       0
 10163 ;;      Totals:        14       0       0       0       0       0       0       0       0
 10164 ;;Total ram usage:       14 bytes
 10165 ;; Hardware stack levels used:    1
 10166 ;; This function calls:
 10167 ;;		Nothing
 10168 ;; This function is called by:
 10169 ;;		_activar_seguridad
 10170 ;; This function uses a non-reentrant model
 10171 ;;
 10172                           
 10173                           	psect	text37
 10174  00346E                     __ptext37:
 10175                           	callstack 0
 10176  00346E                     ___xxtofl:
 10177                           	callstack 28
 10178                           
 10179                           ;incstack = 0
 10180                           ;___xxtofl@sign stored from wreg
 10181  00346E  6E0E               	movwf	___xxtofl@sign^0,c
 10182  003470  500E               	movf	___xxtofl@sign^0,w,c
 10183  003472  B4D8               	btfsc	status,2,c
 10184  003474  EF3E  F01A         	goto	u6181
 10185  003478  EF40  F01A         	goto	u6180
 10186  00347C                     u6181:
 10187  00347C  EF62  F01A         	goto	l982
 10188  003480                     u6180:
 10189  003480  BE09               	btfsc	(___xxtofl@val+3)^0,7,c
 10190  003482  EF47  F01A         	goto	u6190
 10191  003486  EF45  F01A         	goto	u6191
 10192  00348A                     u6191:
 10193  00348A  EF62  F01A         	goto	l982
 10194  00348E                     u6190:
 10195  00348E  C006  F00A         	movff	___xxtofl@val,??___xxtofl
 10196  003492  C007  F00B         	movff	___xxtofl@val+1,??___xxtofl+1
 10197  003496  C008  F00C         	movff	___xxtofl@val+2,??___xxtofl+2
 10198  00349A  C009  F00D         	movff	___xxtofl@val+3,??___xxtofl+3
 10199  00349E  1E0A               	comf	??___xxtofl^0,f,c
 10200  0034A0  1E0B               	comf	(??___xxtofl+1)^0,f,c
 10201  0034A2  1E0C               	comf	(??___xxtofl+2)^0,f,c
 10202  0034A4  1E0D               	comf	(??___xxtofl+3)^0,f,c
 10203  0034A6  2A0A               	incf	??___xxtofl^0,f,c
 10204  0034A8  0E00               	movlw	0
 10205  0034AA  220B               	addwfc	(??___xxtofl+1)^0,f,c
 10206  0034AC  220C               	addwfc	(??___xxtofl+2)^0,f,c
 10207  0034AE  220D               	addwfc	(??___xxtofl+3)^0,f,c
 10208  0034B0  C00A  F010         	movff	??___xxtofl,___xxtofl@arg
 10209  0034B4  C00B  F011         	movff	??___xxtofl+1,___xxtofl@arg+1
 10210  0034B8  C00C  F012         	movff	??___xxtofl+2,___xxtofl@arg+2
 10211  0034BC  C00D  F013         	movff	??___xxtofl+3,___xxtofl@arg+3
 10212  0034C0  EF6A  F01A         	goto	l4951
 10213  0034C4                     l982:
 10214  0034C4  C006  F010         	movff	___xxtofl@val,___xxtofl@arg
 10215  0034C8  C007  F011         	movff	___xxtofl@val+1,___xxtofl@arg+1
 10216  0034CC  C008  F012         	movff	___xxtofl@val+2,___xxtofl@arg+2
 10217  0034D0  C009  F013         	movff	___xxtofl@val+3,___xxtofl@arg+3
 10218  0034D4                     l4951:
 10219  0034D4  5006               	movf	___xxtofl@val^0,w,c
 10220  0034D6  1007               	iorwf	(___xxtofl@val+1)^0,w,c
 10221  0034D8  1008               	iorwf	(___xxtofl@val+2)^0,w,c
 10222  0034DA  1009               	iorwf	(___xxtofl@val+3)^0,w,c
 10223  0034DC  A4D8               	btfss	status,2,c
 10224  0034DE  EF73  F01A         	goto	u6201
 10225  0034E2  EF75  F01A         	goto	u6200
 10226  0034E6                     u6201:
 10227  0034E6  EF7F  F01A         	goto	l4957
 10228  0034EA                     u6200:
 10229  0034EA  0E00               	movlw	0
 10230  0034EC  6E06               	movwf	?___xxtofl^0,c
 10231  0034EE  0E00               	movlw	0
 10232  0034F0  6E07               	movwf	(?___xxtofl+1)^0,c
 10233  0034F2  0E00               	movlw	0
 10234  0034F4  6E08               	movwf	(?___xxtofl+2)^0,c
 10235  0034F6  0E00               	movlw	0
 10236  0034F8  6E09               	movwf	(?___xxtofl+3)^0,c
 10237  0034FA  EF10  F01B         	goto	l985
 10238  0034FE                     l4957:
 10239  0034FE  0E96               	movlw	150
 10240  003500  6E0F               	movwf	___xxtofl@exp^0,c
 10241  003502  EF89  F01A         	goto	l4961
 10242  003506                     l4959:
 10243  003506  2A0F               	incf	___xxtofl@exp^0,f,c
 10244  003508  90D8               	bcf	status,0,c
 10245  00350A  3213               	rrcf	(___xxtofl@arg+3)^0,f,c
 10246  00350C  3212               	rrcf	(___xxtofl@arg+2)^0,f,c
 10247  00350E  3211               	rrcf	(___xxtofl@arg+1)^0,f,c
 10248  003510  3210               	rrcf	___xxtofl@arg^0,f,c
 10249  003512                     l4961:
 10250  003512  0E00               	movlw	0
 10251  003514  1410               	andwf	___xxtofl@arg^0,w,c
 10252  003516  6E0A               	movwf	??___xxtofl^0,c
 10253  003518  0E00               	movlw	0
 10254  00351A  1411               	andwf	(___xxtofl@arg+1)^0,w,c
 10255  00351C  6E0B               	movwf	(??___xxtofl+1)^0,c
 10256  00351E  0E00               	movlw	0
 10257  003520  1412               	andwf	(___xxtofl@arg+2)^0,w,c
 10258  003522  6E0C               	movwf	(??___xxtofl+2)^0,c
 10259  003524  0EFE               	movlw	254
 10260  003526  1413               	andwf	(___xxtofl@arg+3)^0,w,c
 10261  003528  6E0D               	movwf	(??___xxtofl+3)^0,c
 10262  00352A  500A               	movf	??___xxtofl^0,w,c
 10263  00352C  100B               	iorwf	(??___xxtofl+1)^0,w,c
 10264  00352E  100C               	iorwf	(??___xxtofl+2)^0,w,c
 10265  003530  100D               	iorwf	(??___xxtofl+3)^0,w,c
 10266  003532  A4D8               	btfss	status,2,c
 10267  003534  EF9E  F01A         	goto	u6211
 10268  003538  EFA0  F01A         	goto	u6210
 10269  00353C                     u6211:
 10270  00353C  EF83  F01A         	goto	l4959
 10271  003540                     u6210:
 10272  003540  EFAE  F01A         	goto	l989
 10273  003544                     l4963:
 10274  003544  2A0F               	incf	___xxtofl@exp^0,f,c
 10275  003546  0E01               	movlw	1
 10276  003548  2610               	addwf	___xxtofl@arg^0,f,c
 10277  00354A  0E00               	movlw	0
 10278  00354C  2211               	addwfc	(___xxtofl@arg+1)^0,f,c
 10279  00354E  2212               	addwfc	(___xxtofl@arg+2)^0,f,c
 10280  003550  2213               	addwfc	(___xxtofl@arg+3)^0,f,c
 10281  003552  90D8               	bcf	status,0,c
 10282  003554  3213               	rrcf	(___xxtofl@arg+3)^0,f,c
 10283  003556  3212               	rrcf	(___xxtofl@arg+2)^0,f,c
 10284  003558  3211               	rrcf	(___xxtofl@arg+1)^0,f,c
 10285  00355A  3210               	rrcf	___xxtofl@arg^0,f,c
 10286  00355C                     l989:
 10287  00355C  0E00               	movlw	0
 10288  00355E  1410               	andwf	___xxtofl@arg^0,w,c
 10289  003560  6E0A               	movwf	??___xxtofl^0,c
 10290  003562  0E00               	movlw	0
 10291  003564  1411               	andwf	(___xxtofl@arg+1)^0,w,c
 10292  003566  6E0B               	movwf	(??___xxtofl+1)^0,c
 10293  003568  0E00               	movlw	0
 10294  00356A  1412               	andwf	(___xxtofl@arg+2)^0,w,c
 10295  00356C  6E0C               	movwf	(??___xxtofl+2)^0,c
 10296  00356E  0EFF               	movlw	255
 10297  003570  1413               	andwf	(___xxtofl@arg+3)^0,w,c
 10298  003572  6E0D               	movwf	(??___xxtofl+3)^0,c
 10299  003574  500A               	movf	??___xxtofl^0,w,c
 10300  003576  100B               	iorwf	(??___xxtofl+1)^0,w,c
 10301  003578  100C               	iorwf	(??___xxtofl+2)^0,w,c
 10302  00357A  100D               	iorwf	(??___xxtofl+3)^0,w,c
 10303  00357C  A4D8               	btfss	status,2,c
 10304  00357E  EFC3  F01A         	goto	u6221
 10305  003582  EFC5  F01A         	goto	u6220
 10306  003586                     u6221:
 10307  003586  EFA2  F01A         	goto	l4963
 10308  00358A                     u6220:
 10309  00358A  EFCD  F01A         	goto	l4971
 10310  00358E                     l4969:
 10311  00358E  060F               	decf	___xxtofl@exp^0,f,c
 10312  003590  90D8               	bcf	status,0,c
 10313  003592  3610               	rlcf	___xxtofl@arg^0,f,c
 10314  003594  3611               	rlcf	(___xxtofl@arg+1)^0,f,c
 10315  003596  3612               	rlcf	(___xxtofl@arg+2)^0,f,c
 10316  003598  3613               	rlcf	(___xxtofl@arg+3)^0,f,c
 10317  00359A                     l4971:
 10318  00359A  BE12               	btfsc	(___xxtofl@arg+2)^0,7,c
 10319  00359C  EFD2  F01A         	goto	u6231
 10320  0035A0  EFD4  F01A         	goto	u6230
 10321  0035A4                     u6231:
 10322  0035A4  EFDC  F01A         	goto	l996
 10323  0035A8                     u6230:
 10324  0035A8  0E02               	movlw	2
 10325  0035AA  600F               	cpfslt	___xxtofl@exp^0,c
 10326  0035AC  EFDA  F01A         	goto	u6241
 10327  0035B0  EFDC  F01A         	goto	u6240
 10328  0035B4                     u6241:
 10329  0035B4  EFC7  F01A         	goto	l4969
 10330  0035B8                     u6240:
 10331  0035B8                     l996:
 10332  0035B8  B00F               	btfsc	___xxtofl@exp^0,0,c
 10333  0035BA  EFE1  F01A         	goto	u6251
 10334  0035BE  EFE3  F01A         	goto	u6250
 10335  0035C2                     u6251:
 10336  0035C2  EFE4  F01A         	goto	l4977
 10337  0035C6                     u6250:
 10338  0035C6  9E12               	bcf	(___xxtofl@arg+2)^0,7,c
 10339  0035C8                     l4977:
 10340  0035C8  90D8               	bcf	status,0,c
 10341  0035CA  320F               	rrcf	___xxtofl@exp^0,f,c
 10342  0035CC  C00F  F00A         	movff	___xxtofl@exp,??___xxtofl
 10343  0035D0  6A0B               	clrf	(??___xxtofl+1)^0,c
 10344  0035D2  6A0C               	clrf	(??___xxtofl+2)^0,c
 10345  0035D4  6A0D               	clrf	(??___xxtofl+3)^0,c
 10346  0035D6  C00A  F00D         	movff	??___xxtofl,??___xxtofl+3
 10347  0035DA  6A0C               	clrf	(??___xxtofl+2)^0,c
 10348  0035DC  6A0B               	clrf	(??___xxtofl+1)^0,c
 10349  0035DE  6A0A               	clrf	??___xxtofl^0,c
 10350  0035E0  500A               	movf	??___xxtofl^0,w,c
 10351  0035E2  1210               	iorwf	___xxtofl@arg^0,f,c
 10352  0035E4  500B               	movf	(??___xxtofl+1)^0,w,c
 10353  0035E6  1211               	iorwf	(___xxtofl@arg+1)^0,f,c
 10354  0035E8  500C               	movf	(??___xxtofl+2)^0,w,c
 10355  0035EA  1212               	iorwf	(___xxtofl@arg+2)^0,f,c
 10356  0035EC  500D               	movf	(??___xxtofl+3)^0,w,c
 10357  0035EE  1213               	iorwf	(___xxtofl@arg+3)^0,f,c
 10358  0035F0  500E               	movf	___xxtofl@sign^0,w,c
 10359  0035F2  B4D8               	btfsc	status,2,c
 10360  0035F4  EFFE  F01A         	goto	u6261
 10361  0035F8  EF00  F01B         	goto	u6260
 10362  0035FC                     u6261:
 10363  0035FC  EF08  F01B         	goto	l4987
 10364  003600                     u6260:
 10365  003600  BE09               	btfsc	(___xxtofl@val+3)^0,7,c
 10366  003602  EF07  F01B         	goto	u6270
 10367  003606  EF05  F01B         	goto	u6271
 10368  00360A                     u6271:
 10369  00360A  EF08  F01B         	goto	l4987
 10370  00360E                     u6270:
 10371  00360E  8E13               	bsf	(___xxtofl@arg+3)^0,7,c
 10372  003610                     l4987:
 10373  003610  C010  F006         	movff	___xxtofl@arg,?___xxtofl
 10374  003614  C011  F007         	movff	___xxtofl@arg+1,?___xxtofl+1
 10375  003618  C012  F008         	movff	___xxtofl@arg+2,?___xxtofl+2
 10376  00361C  C013  F009         	movff	___xxtofl@arg+3,?___xxtofl+3
 10377  003620                     l985:
 10378  003620  0012               	return		;funcret
 10379  003622                     __end_of___xxtofl:
 10380                           	callstack 0
 10381                           
 10382 ;; *************** function _RTC_Read_Clock *****************
 10383 ;; Defined at:
 10384 ;;		line 65 in file "main.c"
 10385 ;; Parameters:    Size  Location     Type
 10386 ;;  read_clock_a    1    wreg     unsigned char 
 10387 ;; Auto vars:     Size  Location     Type
 10388 ;;  read_clock_a    1    3[COMRAM] unsigned char 
 10389 ;; Return value:  Size  Location     Type
 10390 ;;                  1    wreg      void 
 10391 ;; Registers used:
 10392 ;;		wreg, status,2, status,0, cstack
 10393 ;; Tracked objects:
 10394 ;;		On entry : 0/0
 10395 ;;		On exit  : 0/0
 10396 ;;		Unchanged: 0/0
 10397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10398 ;;      Params:         0       0       0       0       0       0       0       0       0
 10399 ;;      Locals:         1       0       0       0       0       0       0       0       0
 10400 ;;      Temps:          1       0       0       0       0       0       0       0       0
 10401 ;;      Totals:         2       0       0       0       0       0       0       0       0
 10402 ;;Total ram usage:        2 bytes
 10403 ;; Hardware stack levels used:    1
 10404 ;; Hardware stack levels required when called:    3
 10405 ;; This function calls:
 10406 ;;		_I2C_Read
 10407 ;;		_I2C_Repeated_Start
 10408 ;;		_I2C_Start
 10409 ;;		_I2C_Write
 10410 ;; This function is called by:
 10411 ;;		_activar_seguridad
 10412 ;; This function uses a non-reentrant model
 10413 ;;
 10414                           
 10415                           	psect	text38
 10416  004322                     __ptext38:
 10417                           	callstack 0
 10418  004322                     _RTC_Read_Clock:
 10419                           	callstack 25
 10420                           
 10421                           ;incstack = 0
 10422                           ;RTC_Read_Clock@read_clock_address stored from wreg
 10423  004322  6E04               	movwf	RTC_Read_Clock@read_clock_address^0,c
 10424  004324                     
 10425                           ;main.c: 66:     I2C_Start(0xD0);
 10426  004324  0ED0               	movlw	208
 10427  004326  ECF3  F022         	call	_I2C_Start
 10428                           
 10429                           ;main.c: 67:     I2C_Write(read_clock_address);
 10430  00432A  5004               	movf	RTC_Read_Clock@read_clock_address^0,w,c
 10431  00432C  EC4B  F023         	call	_I2C_Write
 10432                           
 10433                           ;main.c: 68:     I2C_Repeated_Start(0xD1);
 10434  004330  0ED1               	movlw	209
 10435  004332  EC0A  F023         	call	_I2C_Repeated_Start
 10436  004336                     
 10437                           ;main.c: 69:     sec = I2C_Read(0);
 10438  004336  0E00               	movlw	0
 10439  004338  EC13  F022         	call	_I2C_Read
 10440  00433C  6E03               	movwf	??_RTC_Read_Clock^0,c
 10441  00433E  5003               	movf	??_RTC_Read_Clock^0,w,c
 10442  004340  0101               	movlb	1	; () banked
 10443  004342  6F12               	movwf	_sec& (0+255),b
 10444  004344  6B13               	clrf	(_sec+1)& (0+255),b
 10445  004346                     
 10446                           ; BSR set to: 1
 10447                           ;main.c: 70:     min = I2C_Read(0);
 10448  004346  0E00               	movlw	0
 10449  004348  EC13  F022         	call	_I2C_Read
 10450  00434C  6E03               	movwf	??_RTC_Read_Clock^0,c
 10451  00434E  5003               	movf	??_RTC_Read_Clock^0,w,c
 10452  004350  0101               	movlb	1	; () banked
 10453  004352  6F10               	movwf	_min& (0+255),b
 10454  004354  6B11               	clrf	(_min+1)& (0+255),b
 10455  004356                     
 10456                           ; BSR set to: 1
 10457                           ;main.c: 71:     hour = I2C_Read(1);
 10458  004356  0E01               	movlw	1
 10459  004358  EC13  F022         	call	_I2C_Read
 10460  00435C  6E03               	movwf	??_RTC_Read_Clock^0,c
 10461  00435E  5003               	movf	??_RTC_Read_Clock^0,w,c
 10462  004360  0101               	movlb	1	; () banked
 10463  004362  6F0E               	movwf	_hour& (0+255),b
 10464  004364  6B0F               	clrf	(_hour+1)& (0+255),b
 10465  004366                     
 10466                           ; BSR set to: 1
 10467  004366  0012               	return		;funcret
 10468  004368                     __end_of_RTC_Read_Clock:
 10469                           	callstack 0
 10470                           
 10471 ;; *************** function _I2C_Start *****************
 10472 ;; Defined at:
 10473 ;;		line 87 in file "./I2C_Master_File.h"
 10474 ;; Parameters:    Size  Location     Type
 10475 ;;  slave_write_    1    wreg     unsigned char 
 10476 ;; Auto vars:     Size  Location     Type
 10477 ;;  slave_write_    1    1[COMRAM] unsigned char 
 10478 ;; Return value:  Size  Location     Type
 10479 ;;                  1    wreg      unsigned char 
 10480 ;; Registers used:
 10481 ;;		wreg, status,2, cstack
 10482 ;; Tracked objects:
 10483 ;;		On entry : 0/0
 10484 ;;		On exit  : 0/0
 10485 ;;		Unchanged: 0/0
 10486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10487 ;;      Params:         0       0       0       0       0       0       0       0       0
 10488 ;;      Locals:         1       0       0       0       0       0       0       0       0
 10489 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10490 ;;      Totals:         1       0       0       0       0       0       0       0       0
 10491 ;;Total ram usage:        1 bytes
 10492 ;; Hardware stack levels used:    1
 10493 ;; Hardware stack levels required when called:    2
 10494 ;; This function calls:
 10495 ;;		_I2C_Write
 10496 ;; This function is called by:
 10497 ;;		_RTC_Read_Clock
 10498 ;; This function uses a non-reentrant model
 10499 ;;
 10500                           
 10501                           	psect	text39
 10502  0045E6                     __ptext39:
 10503                           	callstack 0
 10504  0045E6                     _I2C_Start:
 10505                           	callstack 25
 10506                           
 10507                           ; BSR set to: 1
 10508                           ;incstack = 0
 10509                           ;I2C_Start@slave_write_address stored from wreg
 10510  0045E6  6E02               	movwf	I2C_Start@slave_write_address^0,c
 10511  0045E8                     
 10512                           ;./I2C_Master_File.h: 87: char I2C_Start(char slave_write_address);./I2C_Master_File.h: 
      +                          88: {;./I2C_Master_File.h: 89:     SSPCON2bits.SEN=1;
 10513  0045E8  80C5               	bsf	197,0,c	;volatile
 10514  0045EA                     l168:
 10515  0045EA  B0C5               	btfsc	197,0,c	;volatile
 10516  0045EC  EFFA  F022         	goto	u6001
 10517  0045F0  EFFC  F022         	goto	u6000
 10518  0045F4                     u6001:
 10519  0045F4  EFF5  F022         	goto	l168
 10520  0045F8                     u6000:
 10521  0045F8                     
 10522                           ;./I2C_Master_File.h: 91:  SSPIF=0;
 10523  0045F8  969E               	bcf	3998,3,c	;volatile
 10524                           
 10525                           ;./I2C_Master_File.h: 92:     if(!SSPSTATbits.S)
 10526  0045FA  B6C7               	btfsc	199,3,c	;volatile
 10527  0045FC  EF02  F023         	goto	u6011
 10528  004600  EF04  F023         	goto	u6010
 10529  004604                     u6011:
 10530  004604  EF06  F023         	goto	l4803
 10531  004608                     u6010:
 10532  004608  EF09  F023         	goto	l172
 10533  00460C                     l4803:
 10534                           
 10535                           ;./I2C_Master_File.h: 94:     return (I2C_Write(slave_write_address));;	Return value of 
      +                          _I2C_Start is never used
 10536  00460C  5002               	movf	I2C_Start@slave_write_address^0,w,c
 10537  00460E  EC4B  F023         	call	_I2C_Write
 10538  004612                     l172:
 10539  004612  0012               	return		;funcret
 10540  004614                     __end_of_I2C_Start:
 10541                           	callstack 0
 10542                           
 10543 ;; *************** function _I2C_Repeated_Start *****************
 10544 ;; Defined at:
 10545 ;;		line 98 in file "./I2C_Master_File.h"
 10546 ;; Parameters:    Size  Location     Type
 10547 ;;  slave_read_a    1    wreg     unsigned char 
 10548 ;; Auto vars:     Size  Location     Type
 10549 ;;  slave_read_a    1    1[COMRAM] unsigned char 
 10550 ;; Return value:  Size  Location     Type
 10551 ;;                  1    wreg      unsigned char 
 10552 ;; Registers used:
 10553 ;;		wreg, status,2, cstack
 10554 ;; Tracked objects:
 10555 ;;		On entry : 0/0
 10556 ;;		On exit  : 0/0
 10557 ;;		Unchanged: 0/0
 10558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10559 ;;      Params:         0       0       0       0       0       0       0       0       0
 10560 ;;      Locals:         1       0       0       0       0       0       0       0       0
 10561 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10562 ;;      Totals:         1       0       0       0       0       0       0       0       0
 10563 ;;Total ram usage:        1 bytes
 10564 ;; Hardware stack levels used:    1
 10565 ;; Hardware stack levels required when called:    2
 10566 ;; This function calls:
 10567 ;;		_I2C_Write
 10568 ;; This function is called by:
 10569 ;;		_RTC_Read_Clock
 10570 ;; This function uses a non-reentrant model
 10571 ;;
 10572                           
 10573                           	psect	text40
 10574  004614                     __ptext40:
 10575                           	callstack 0
 10576  004614                     _I2C_Repeated_Start:
 10577                           	callstack 25
 10578                           
 10579                           ;incstack = 0
 10580                           ;I2C_Repeated_Start@slave_read_address stored from wreg
 10581  004614  6E02               	movwf	I2C_Repeated_Start@slave_read_address^0,c
 10582  004616                     
 10583                           ;./I2C_Master_File.h: 98: char I2C_Repeated_Start(char slave_read_address);./I2C_Master_
      +                          File.h: 99: {;./I2C_Master_File.h: 100:     RSEN = 1;
 10584  004616  82C5               	bsf	4037,1,c	;volatile
 10585  004618                     l175:
 10586  004618  B2C5               	btfsc	4037,1,c	;volatile
 10587  00461A  EF11  F023         	goto	u6021
 10588  00461E  EF13  F023         	goto	u6020
 10589  004622                     u6021:
 10590  004622  EF0C  F023         	goto	l175
 10591  004626                     u6020:
 10592  004626                     
 10593                           ;./I2C_Master_File.h: 102:     SSPIF = 0;
 10594  004626  969E               	bcf	3998,3,c	;volatile
 10595                           
 10596                           ;./I2C_Master_File.h: 103:  if(!SSPSTATbits.S)
 10597  004628  B6C7               	btfsc	199,3,c	;volatile
 10598  00462A  EF19  F023         	goto	u6031
 10599  00462E  EF1B  F023         	goto	u6030
 10600  004632                     u6031:
 10601  004632  EF1D  F023         	goto	l4811
 10602  004636                     u6030:
 10603  004636  EF20  F023         	goto	l179
 10604  00463A                     l4811:
 10605                           
 10606                           ;./I2C_Master_File.h: 105:     I2C_Write(slave_read_address);
 10607  00463A  5002               	movf	I2C_Repeated_Start@slave_read_address^0,w,c
 10608  00463C  EC4B  F023         	call	_I2C_Write
 10609  004640                     l179:
 10610  004640  0012               	return		;funcret
 10611  004642                     __end_of_I2C_Repeated_Start:
 10612                           	callstack 0
 10613                           
 10614 ;; *************** function _I2C_Write *****************
 10615 ;; Defined at:
 10616 ;;		line 120 in file "./I2C_Master_File.h"
 10617 ;; Parameters:    Size  Location     Type
 10618 ;;  data            1    wreg     unsigned char 
 10619 ;; Auto vars:     Size  Location     Type
 10620 ;;  data            1    0[COMRAM] unsigned char 
 10621 ;; Return value:  Size  Location     Type
 10622 ;;                  1    wreg      unsigned char 
 10623 ;; Registers used:
 10624 ;;		wreg, cstack
 10625 ;; Tracked objects:
 10626 ;;		On entry : 0/0
 10627 ;;		On exit  : 0/0
 10628 ;;		Unchanged: 0/0
 10629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10630 ;;      Params:         0       0       0       0       0       0       0       0       0
 10631 ;;      Locals:         1       0       0       0       0       0       0       0       0
 10632 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10633 ;;      Totals:         1       0       0       0       0       0       0       0       0
 10634 ;;Total ram usage:        1 bytes
 10635 ;; Hardware stack levels used:    1
 10636 ;; Hardware stack levels required when called:    1
 10637 ;; This function calls:
 10638 ;;		_I2C_Ready
 10639 ;; This function is called by:
 10640 ;;		_I2C_Start
 10641 ;;		_I2C_Repeated_Start
 10642 ;;		_RTC_Read_Clock
 10643 ;;		_I2C_Start_Wait
 10644 ;; This function uses a non-reentrant model
 10645 ;;
 10646                           
 10647                           	psect	text41
 10648  004696                     __ptext41:
 10649                           	callstack 0
 10650  004696                     _I2C_Write:
 10651                           	callstack 26
 10652                           
 10653                           ;incstack = 0
 10654                           ;I2C_Write@data stored from wreg
 10655  004696  6E01               	movwf	I2C_Write@data^0,c
 10656  004698                     
 10657                           ;./I2C_Master_File.h: 120: char I2C_Write(unsigned char data);./I2C_Master_File.h: 121: 
      +                          {;./I2C_Master_File.h: 122:       SSPBUF = data;
 10658  004698  C001  FFC9         	movff	I2C_Write@data,4041	;volatile
 10659  00469C                     
 10660                           ;./I2C_Master_File.h: 123:       I2C_Ready();
 10661  00469C  EC97  F023         	call	_I2C_Ready	;wreg free
 10662  0046A0                     
 10663                           ;./I2C_Master_File.h: 124:       if (ACKSTAT)
 10664  0046A0  ACC5               	btfss	4037,6,c	;volatile
 10665  0046A2  EF55  F023         	goto	u5811
 10666  0046A6  EF57  F023         	goto	u5810
 10667  0046AA                     u5811:
 10668  0046AA  EF5A  F023         	goto	l4649
 10669  0046AE                     u5810:
 10670  0046AE                     
 10671                           ;./I2C_Master_File.h: 125:         return 1;
 10672  0046AE  0E01               	movlw	1
 10673  0046B0  EF5B  F023         	goto	l192
 10674  0046B4                     l4649:
 10675                           
 10676                           ;./I2C_Master_File.h: 127:         return 2;
 10677  0046B4  0E02               	movlw	2
 10678  0046B6                     l192:
 10679  0046B6  0012               	return		;funcret
 10680  0046B8                     __end_of_I2C_Write:
 10681                           	callstack 0
 10682                           
 10683 ;; *************** function _I2C_Read *****************
 10684 ;; Defined at:
 10685 ;;		line 31 in file "./I2C_Master_File.h"
 10686 ;; Parameters:    Size  Location     Type
 10687 ;;  flag            1    wreg     unsigned char 
 10688 ;; Auto vars:     Size  Location     Type
 10689 ;;  flag            1    0[COMRAM] unsigned char 
 10690 ;;  buffer          1    1[COMRAM] unsigned char 
 10691 ;; Return value:  Size  Location     Type
 10692 ;;                  1    wreg      unsigned char 
 10693 ;; Registers used:
 10694 ;;		wreg, status,2, cstack
 10695 ;; Tracked objects:
 10696 ;;		On entry : 0/0
 10697 ;;		On exit  : 0/0
 10698 ;;		Unchanged: 0/0
 10699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10700 ;;      Params:         0       0       0       0       0       0       0       0       0
 10701 ;;      Locals:         2       0       0       0       0       0       0       0       0
 10702 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10703 ;;      Totals:         2       0       0       0       0       0       0       0       0
 10704 ;;Total ram usage:        2 bytes
 10705 ;; Hardware stack levels used:    1
 10706 ;; Hardware stack levels required when called:    1
 10707 ;; This function calls:
 10708 ;;		_I2C_Ack
 10709 ;;		_I2C_Nack
 10710 ;;		_I2C_Ready
 10711 ;; This function is called by:
 10712 ;;		_RTC_Read_Clock
 10713 ;; This function uses a non-reentrant model
 10714 ;;
 10715                           
 10716                           	psect	text42
 10717  004426                     __ptext42:
 10718                           	callstack 0
 10719  004426                     _I2C_Read:
 10720                           	callstack 26
 10721                           
 10722                           ;incstack = 0
 10723                           ;I2C_Read@flag stored from wreg
 10724  004426  6E01               	movwf	I2C_Read@flag^0,c
 10725  004428                     
 10726                           ;./I2C_Master_File.h: 31: char I2C_Read(char flag);./I2C_Master_File.h: 33: {;./I2C_Mast
      +                          er_File.h: 34:         char buffer;;./I2C_Master_File.h: 35:         RCEN = 1;
 10727  004428  86C5               	bsf	4037,3,c	;volatile
 10728  00442A                     l140:
 10729  00442A  A0C7               	btfss	199,0,c	;volatile
 10730  00442C  EF1A  F022         	goto	u5981
 10731  004430  EF1C  F022         	goto	u5980
 10732  004434                     u5981:
 10733  004434  EF15  F022         	goto	l140
 10734  004438                     u5980:
 10735  004438                     
 10736                           ;./I2C_Master_File.h: 38:         buffer = SSPBUF;
 10737  004438  CFC9 F002          	movff	4041,I2C_Read@buffer	;volatile
 10738  00443C                     
 10739                           ;./I2C_Master_File.h: 40:         if(flag==0)
 10740  00443C  5001               	movf	I2C_Read@flag^0,w,c
 10741  00443E  A4D8               	btfss	status,2,c
 10742  004440  EF24  F022         	goto	u5991
 10743  004444  EF26  F022         	goto	u5990
 10744  004448                     u5991:
 10745  004448  EF2A  F022         	goto	l4793
 10746  00444C                     u5990:
 10747  00444C                     
 10748                           ;./I2C_Master_File.h: 41:             I2C_Ack();
 10749  00444C  EC83  F023         	call	_I2C_Ack	;wreg free
 10750  004450  EF2C  F022         	goto	l144
 10751  004454                     l4793:
 10752                           
 10753                           ;./I2C_Master_File.h: 43:             I2C_Nack();
 10754  004454  EC79  F023         	call	_I2C_Nack	;wreg free
 10755  004458                     l144:
 10756                           
 10757                           ;./I2C_Master_File.h: 44:         I2C_Ready();
 10758  004458  EC97  F023         	call	_I2C_Ready	;wreg free
 10759  00445C                     
 10760                           ;./I2C_Master_File.h: 45:         return(buffer);
 10761  00445C  5002               	movf	I2C_Read@buffer^0,w,c
 10762  00445E  0012               	return		;funcret
 10763  004460                     __end_of_I2C_Read:
 10764                           	callstack 0
 10765                           
 10766 ;; *************** function _I2C_Ready *****************
 10767 ;; Defined at:
 10768 ;;		line 62 in file "./I2C_Master_File.h"
 10769 ;; Parameters:    Size  Location     Type
 10770 ;;		None
 10771 ;; Auto vars:     Size  Location     Type
 10772 ;;		None
 10773 ;; Return value:  Size  Location     Type
 10774 ;;                  1    wreg      void 
 10775 ;; Registers used:
 10776 ;;		None
 10777 ;; Tracked objects:
 10778 ;;		On entry : 0/0
 10779 ;;		On exit  : 0/0
 10780 ;;		Unchanged: 0/0
 10781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10782 ;;      Params:         0       0       0       0       0       0       0       0       0
 10783 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10784 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10785 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10786 ;;Total ram usage:        0 bytes
 10787 ;; Hardware stack levels used:    1
 10788 ;; This function calls:
 10789 ;;		Nothing
 10790 ;; This function is called by:
 10791 ;;		_I2C_Read
 10792 ;;		_I2C_Write
 10793 ;; This function uses a non-reentrant model
 10794 ;;
 10795                           
 10796                           	psect	text43
 10797  00472E                     __ptext43:
 10798                           	callstack 0
 10799  00472E                     _I2C_Ready:
 10800                           	callstack 26
 10801  00472E                     l151:
 10802  00472E  A69E               	btfss	3998,3,c	;volatile
 10803  004730  EF9C  F023         	goto	u4861
 10804  004734  EF9E  F023         	goto	u4860
 10805  004738                     u4861:
 10806  004738  EF97  F023         	goto	l151
 10807  00473C                     u4860:
 10808  00473C                     
 10809                           ;./I2C_Master_File.h: 65:     SSPIF=0;
 10810  00473C  969E               	bcf	3998,3,c	;volatile
 10811  00473E  0012               	return		;funcret
 10812  004740                     __end_of_I2C_Ready:
 10813                           	callstack 0
 10814                           
 10815 ;; *************** function _I2C_Nack *****************
 10816 ;; Defined at:
 10817 ;;		line 137 in file "./I2C_Master_File.h"
 10818 ;; Parameters:    Size  Location     Type
 10819 ;;		None
 10820 ;; Auto vars:     Size  Location     Type
 10821 ;;		None
 10822 ;; Return value:  Size  Location     Type
 10823 ;;                  1    wreg      void 
 10824 ;; Registers used:
 10825 ;;		None
 10826 ;; Tracked objects:
 10827 ;;		On entry : 0/0
 10828 ;;		On exit  : 0/0
 10829 ;;		Unchanged: 0/0
 10830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10831 ;;      Params:         0       0       0       0       0       0       0       0       0
 10832 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10833 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10834 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10835 ;;Total ram usage:        0 bytes
 10836 ;; Hardware stack levels used:    1
 10837 ;; This function calls:
 10838 ;;		Nothing
 10839 ;; This function is called by:
 10840 ;;		_I2C_Read
 10841 ;; This function uses a non-reentrant model
 10842 ;;
 10843                           
 10844                           	psect	text44
 10845  0046F2                     __ptext44:
 10846                           	callstack 0
 10847  0046F2                     _I2C_Nack:
 10848                           	callstack 26
 10849  0046F2                     
 10850                           ;./I2C_Master_File.h: 139:     ACKDT=1;
 10851  0046F2  8AC5               	bsf	4037,5,c	;volatile
 10852                           
 10853                           ;./I2C_Master_File.h: 140:  ACKEN=1;
 10854  0046F4  88C5               	bsf	4037,4,c	;volatile
 10855  0046F6                     l202:
 10856  0046F6  B8C5               	btfsc	4037,4,c	;volatile
 10857  0046F8  EF80  F023         	goto	u5801
 10858  0046FC  EF82  F023         	goto	u5800
 10859  004700                     u5801:
 10860  004700  EF7B  F023         	goto	l202
 10861  004704                     u5800:
 10862  004704  0012               	return		;funcret
 10863  004706                     __end_of_I2C_Nack:
 10864                           	callstack 0
 10865                           
 10866 ;; *************** function _I2C_Ack *****************
 10867 ;; Defined at:
 10868 ;;		line 130 in file "./I2C_Master_File.h"
 10869 ;; Parameters:    Size  Location     Type
 10870 ;;		None
 10871 ;; Auto vars:     Size  Location     Type
 10872 ;;		None
 10873 ;; Return value:  Size  Location     Type
 10874 ;;                  1    wreg      void 
 10875 ;; Registers used:
 10876 ;;		None
 10877 ;; Tracked objects:
 10878 ;;		On entry : 0/0
 10879 ;;		On exit  : 0/0
 10880 ;;		Unchanged: 0/0
 10881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10882 ;;      Params:         0       0       0       0       0       0       0       0       0
 10883 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10884 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10885 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10886 ;;Total ram usage:        0 bytes
 10887 ;; Hardware stack levels used:    1
 10888 ;; This function calls:
 10889 ;;		Nothing
 10890 ;; This function is called by:
 10891 ;;		_I2C_Read
 10892 ;; This function uses a non-reentrant model
 10893 ;;
 10894                           
 10895                           	psect	text45
 10896  004706                     __ptext45:
 10897                           	callstack 0
 10898  004706                     _I2C_Ack:
 10899                           	callstack 26
 10900  004706                     
 10901                           ;./I2C_Master_File.h: 132:     ACKDT=0;
 10902  004706  9AC5               	bcf	4037,5,c	;volatile
 10903                           
 10904                           ;./I2C_Master_File.h: 133:  ACKEN=1;
 10905  004708  88C5               	bsf	4037,4,c	;volatile
 10906  00470A                     l196:
 10907  00470A  B8C5               	btfsc	4037,4,c	;volatile
 10908  00470C  EF8A  F023         	goto	u5791
 10909  004710  EF8C  F023         	goto	u5790
 10910  004714                     u5791:
 10911  004714  EF85  F023         	goto	l196
 10912  004718                     u5790:
 10913  004718  0012               	return		;funcret
 10914  00471A                     __end_of_I2C_Ack:
 10915                           	callstack 0
 10916                           
 10917 ;; *************** function _Lcd_Write_String *****************
 10918 ;; Defined at:
 10919 ;;		line 97 in file "./lcd.h"
 10920 ;; Parameters:    Size  Location     Type
 10921 ;;  a               2    4[COMRAM] PTR unsigned char 
 10922 ;;		 -> STR_10(8), STR_9(20), activar_seguridad@Temperatura(10), activar_seguridad@hours(10), 
 10923 ;;		 -> activar_seguridad@mins(10), activar_seguridad@secs(10), STR_4(13), STR_3(20), 
 10924 ;;		 -> STR_2(7), STR_1(21), 
 10925 ;; Auto vars:     Size  Location     Type
 10926 ;;  i               2    8[COMRAM] int 
 10927 ;; Return value:  Size  Location     Type
 10928 ;;                  1    wreg      void 
 10929 ;; Registers used:
 10930 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10931 ;; Tracked objects:
 10932 ;;		On entry : 0/0
 10933 ;;		On exit  : 0/0
 10934 ;;		Unchanged: 0/0
 10935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10936 ;;      Params:         2       0       0       0       0       0       0       0       0
 10937 ;;      Locals:         2       0       0       0       0       0       0       0       0
 10938 ;;      Temps:          2       0       0       0       0       0       0       0       0
 10939 ;;      Totals:         6       0       0       0       0       0       0       0       0
 10940 ;;Total ram usage:        6 bytes
 10941 ;; Hardware stack levels used:    1
 10942 ;; Hardware stack levels required when called:    2
 10943 ;; This function calls:
 10944 ;;		_Lcd_Write_Char
 10945 ;; This function is called by:
 10946 ;;		_activar_seguridad
 10947 ;;		_main
 10948 ;; This function uses a non-reentrant model
 10949 ;;
 10950                           
 10951                           	psect	text46
 10952  003E64                     __ptext46:
 10953                           	callstack 0
 10954  003E64                     _Lcd_Write_String:
 10955                           	callstack 26
 10956  003E64                     
 10957                           ;./lcd.h: 97: void Lcd_Write_String(char *a);./lcd.h: 98: {;./lcd.h: 99:  int i;;./lcd.h
      +                          : 100:  for(i=0;a[i]!='\0';i++)
 10958  003E64  0E00               	movlw	0
 10959  003E66  6E0A               	movwf	(Lcd_Write_String@i+1)^0,c
 10960  003E68  0E00               	movlw	0
 10961  003E6A  6E09               	movwf	Lcd_Write_String@i^0,c
 10962  003E6C  EF52  F01F         	goto	l4851
 10963  003E70                     l4847:
 10964                           
 10965                           ;./lcd.h: 101:     Lcd_Write_Char(a[i]);
 10966  003E70  5009               	movf	Lcd_Write_String@i^0,w,c
 10967  003E72  2405               	addwf	Lcd_Write_String@a^0,w,c
 10968  003E74  6E07               	movwf	??_Lcd_Write_String^0,c
 10969  003E76  500A               	movf	(Lcd_Write_String@i+1)^0,w,c
 10970  003E78  2006               	addwfc	(Lcd_Write_String@a+1)^0,w,c
 10971  003E7A  6E08               	movwf	(??_Lcd_Write_String+1)^0,c
 10972  003E7C  C007  FFF6         	movff	??_Lcd_Write_String,tblptrl
 10973  003E80  C008  FFF7         	movff	??_Lcd_Write_String+1,tblptrh
 10974  003E84  6AF8               	clrf	tblptru,c
 10975  003E86  0E07               	movlw	(high __ramtop+-1)
 10976  003E88  64F7               	cpfsgt	tblptrh,c
 10977  003E8A  D003               	bra	u6077
 10978  003E8C  0008               	tblrd		*
 10979  003E8E  50F5               	movf	tablat,w,c
 10980  003E90  D005               	bra	u6070
 10981  003E92                     u6077:
 10982  003E92  CFF6 FFE1          	movff	tblptrl,fsr1l
 10983  003E96  CFF7 FFE2          	movff	tblptrh,fsr1h
 10984  003E9A  50E7               	movf	indf1,w,c
 10985  003E9C                     u6070:
 10986  003E9C  ECBC  F022         	call	_Lcd_Write_Char
 10987  003EA0  4A09               	infsnz	Lcd_Write_String@i^0,f,c
 10988  003EA2  2A0A               	incf	(Lcd_Write_String@i+1)^0,f,c
 10989  003EA4                     l4851:
 10990  003EA4  5009               	movf	Lcd_Write_String@i^0,w,c
 10991  003EA6  2405               	addwf	Lcd_Write_String@a^0,w,c
 10992  003EA8  6E07               	movwf	??_Lcd_Write_String^0,c
 10993  003EAA  500A               	movf	(Lcd_Write_String@i+1)^0,w,c
 10994  003EAC  2006               	addwfc	(Lcd_Write_String@a+1)^0,w,c
 10995  003EAE  6E08               	movwf	(??_Lcd_Write_String+1)^0,c
 10996  003EB0  C007  FFF6         	movff	??_Lcd_Write_String,tblptrl
 10997  003EB4  C008  FFF7         	movff	??_Lcd_Write_String+1,tblptrh
 10998  003EB8  6AF8               	clrf	tblptru,c
 10999  003EBA  0E07               	movlw	(high __ramtop+-1)
 11000  003EBC  64F7               	cpfsgt	tblptrh,c
 11001  003EBE  D003               	bra	u6087
 11002  003EC0  0008               	tblrd		*
 11003  003EC2  50F5               	movf	tablat,w,c
 11004  003EC4  D005               	bra	u6080
 11005  003EC6                     u6087:
 11006  003EC6  CFF6 FFE1          	movff	tblptrl,fsr1l
 11007  003ECA  CFF7 FFE2          	movff	tblptrh,fsr1h
 11008  003ECE  50E7               	movf	indf1,w,c
 11009  003ED0                     u6080:
 11010  003ED0  0900               	iorlw	0
 11011  003ED2  A4D8               	btfss	status,2,c
 11012  003ED4  EF6E  F01F         	goto	u6091
 11013  003ED8  EF70  F01F         	goto	u6090
 11014  003EDC                     u6091:
 11015  003EDC  EF38  F01F         	goto	l4847
 11016  003EE0                     u6090:
 11017  003EE0  0012               	return		;funcret
 11018  003EE2                     __end_of_Lcd_Write_String:
 11019                           	callstack 0
 11020                           
 11021 ;; *************** function _Lcd_Write_Char *****************
 11022 ;; Defined at:
 11023 ;;		line 81 in file "./lcd.h"
 11024 ;; Parameters:    Size  Location     Type
 11025 ;;  a               1    wreg     unsigned char 
 11026 ;; Auto vars:     Size  Location     Type
 11027 ;;  a               1    3[COMRAM] unsigned char 
 11028 ;;  y               1    2[COMRAM] unsigned char 
 11029 ;;  temp            1    1[COMRAM] unsigned char 
 11030 ;; Return value:  Size  Location     Type
 11031 ;;                  1    wreg      void 
 11032 ;; Registers used:
 11033 ;;		wreg, status,2, status,0, cstack
 11034 ;; Tracked objects:
 11035 ;;		On entry : 0/0
 11036 ;;		On exit  : 0/0
 11037 ;;		Unchanged: 0/0
 11038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11039 ;;      Params:         0       0       0       0       0       0       0       0       0
 11040 ;;      Locals:         3       0       0       0       0       0       0       0       0
 11041 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11042 ;;      Totals:         3       0       0       0       0       0       0       0       0
 11043 ;;Total ram usage:        3 bytes
 11044 ;; Hardware stack levels used:    1
 11045 ;; Hardware stack levels required when called:    1
 11046 ;; This function calls:
 11047 ;;		_Lcd_Port
 11048 ;; This function is called by:
 11049 ;;		_Lcd_Write_String
 11050 ;;		_activar_seguridad
 11051 ;; This function uses a non-reentrant model
 11052 ;;
 11053                           
 11054                           	psect	text47
 11055  004578                     __ptext47:
 11056                           	callstack 0
 11057  004578                     _Lcd_Write_Char:
 11058                           	callstack 26
 11059                           
 11060                           ;incstack = 0
 11061                           ;Lcd_Write_Char@a stored from wreg
 11062  004578  6E04               	movwf	Lcd_Write_Char@a^0,c
 11063  00457A                     
 11064                           ;./lcd.h: 81: void Lcd_Write_Char(char a);./lcd.h: 82: {;./lcd.h: 83:    char temp,y;;./
      +                          lcd.h: 84:    temp = a&0x0F;
 11065  00457A  5004               	movf	Lcd_Write_Char@a^0,w,c
 11066  00457C  0B0F               	andlw	15
 11067  00457E  6E02               	movwf	Lcd_Write_Char@temp^0,c
 11068                           
 11069                           ;./lcd.h: 85:    y = a&0xF0;
 11070  004580  5004               	movf	Lcd_Write_Char@a^0,w,c
 11071  004582  0BF0               	andlw	240
 11072  004584  6E03               	movwf	Lcd_Write_Char@y^0,c
 11073  004586                     
 11074                           ;./lcd.h: 86:    PORTBbits.RB2 = 1;
 11075  004586  8481               	bsf	129,2,c	;volatile
 11076  004588                     
 11077                           ;./lcd.h: 87:    Lcd_Port(y>>4);
 11078  004588  3803               	swapf	Lcd_Write_Char@y^0,w,c
 11079  00458A  0B0F               	andlw	15
 11080  00458C  EC9A  F020         	call	_Lcd_Port
 11081  004590                     
 11082                           ;./lcd.h: 88:    PORTBbits.RB3 = 1;
 11083  004590  8681               	bsf	129,3,c	;volatile
 11084  004592                     
 11085                           ;./lcd.h: 89:    _delay((unsigned long)((40)*(8000000/4000000.0)));
 11086  004592  0E1A               	movlw	26
 11087  004594                     u6707:
 11088  004594  2EE8               	decfsz	wreg,f,c
 11089  004596  D7FE               	bra	u6707
 11090  004598  D000               	nop2	
 11091  00459A                     
 11092                           ;./lcd.h: 90:    PORTBbits.RB3 = 0;
 11093  00459A  9681               	bcf	129,3,c	;volatile
 11094  00459C                     
 11095                           ;./lcd.h: 91:    Lcd_Port(temp);
 11096  00459C  5002               	movf	Lcd_Write_Char@temp^0,w,c
 11097  00459E  EC9A  F020         	call	_Lcd_Port
 11098  0045A2                     
 11099                           ;./lcd.h: 92:    PORTBbits.RB3 = 1;
 11100  0045A2  8681               	bsf	129,3,c	;volatile
 11101  0045A4                     
 11102                           ;./lcd.h: 93:    _delay((unsigned long)((40)*(8000000/4000000.0)));
 11103  0045A4  0E1A               	movlw	26
 11104  0045A6                     u6717:
 11105  0045A6  2EE8               	decfsz	wreg,f,c
 11106  0045A8  D7FE               	bra	u6717
 11107  0045AA  D000               	nop2	
 11108  0045AC                     
 11109                           ;./lcd.h: 94:    PORTBbits.RB3 = 0;
 11110  0045AC  9681               	bcf	129,3,c	;volatile
 11111  0045AE  0012               	return		;funcret
 11112  0045B0                     __end_of_Lcd_Write_Char:
 11113                           	callstack 0
 11114                           
 11115 ;; *************** function _Lcd_Set_Cursor *****************
 11116 ;; Defined at:
 11117 ;;		line 41 in file "./lcd.h"
 11118 ;; Parameters:    Size  Location     Type
 11119 ;;  a               1    wreg     unsigned char 
 11120 ;;  b               1    3[COMRAM] unsigned char 
 11121 ;; Auto vars:     Size  Location     Type
 11122 ;;  a               1    4[COMRAM] unsigned char 
 11123 ;;  temp            1    7[COMRAM] unsigned char 
 11124 ;;  y               1    6[COMRAM] unsigned char 
 11125 ;;  z               1    5[COMRAM] unsigned char 
 11126 ;; Return value:  Size  Location     Type
 11127 ;;                  1    wreg      void 
 11128 ;; Registers used:
 11129 ;;		wreg, status,2, status,0, cstack
 11130 ;; Tracked objects:
 11131 ;;		On entry : 0/0
 11132 ;;		On exit  : 0/0
 11133 ;;		Unchanged: 0/0
 11134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11135 ;;      Params:         1       0       0       0       0       0       0       0       0
 11136 ;;      Locals:         4       0       0       0       0       0       0       0       0
 11137 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11138 ;;      Totals:         5       0       0       0       0       0       0       0       0
 11139 ;;Total ram usage:        5 bytes
 11140 ;; Hardware stack levels used:    1
 11141 ;; Hardware stack levels required when called:    2
 11142 ;; This function calls:
 11143 ;;		_Lcd_Cmd
 11144 ;; This function is called by:
 11145 ;;		_activar_seguridad
 11146 ;;		_main
 11147 ;; This function uses a non-reentrant model
 11148 ;;
 11149                           
 11150                           	psect	text48
 11151  003F52                     __ptext48:
 11152                           	callstack 0
 11153  003F52                     _Lcd_Set_Cursor:
 11154                           	callstack 26
 11155                           
 11156                           ;incstack = 0
 11157                           ;Lcd_Set_Cursor@a stored from wreg
 11158  003F52  6E05               	movwf	Lcd_Set_Cursor@a^0,c
 11159  003F54                     
 11160                           ;./lcd.h: 41: void Lcd_Set_Cursor(char a, char b);./lcd.h: 42: {;./lcd.h: 43:  char temp
      +                          ,z,y;;./lcd.h: 44:  if(a == 1)
 11161  003F54  0405               	decf	Lcd_Set_Cursor@a^0,w,c
 11162  003F56  A4D8               	btfss	status,2,c
 11163  003F58  EFB0  F01F         	goto	u6051
 11164  003F5C  EFB2  F01F         	goto	u6050
 11165  003F60                     u6051:
 11166  003F60  EFC3  F01F         	goto	l4837
 11167  003F64                     u6050:
 11168  003F64                     
 11169                           ;./lcd.h: 45:  {;./lcd.h: 46:    temp = 0x80 + b - 1;
 11170  003F64  5004               	movf	Lcd_Set_Cursor@b^0,w,c
 11171  003F66  0F7F               	addlw	127
 11172  003F68  6E08               	movwf	Lcd_Set_Cursor@temp^0,c
 11173                           
 11174                           ;./lcd.h: 47:   z = temp>>4;
 11175  003F6A  3808               	swapf	Lcd_Set_Cursor@temp^0,w,c
 11176  003F6C  0B0F               	andlw	15
 11177  003F6E  6E06               	movwf	Lcd_Set_Cursor@z^0,c
 11178                           
 11179                           ;./lcd.h: 48:   y = temp & 0x0F;
 11180  003F70  5008               	movf	Lcd_Set_Cursor@temp^0,w,c
 11181  003F72  0B0F               	andlw	15
 11182  003F74  6E07               	movwf	Lcd_Set_Cursor@y^0,c
 11183  003F76                     
 11184                           ;./lcd.h: 49:   Lcd_Cmd(z);
 11185  003F76  5006               	movf	Lcd_Set_Cursor@z^0,w,c
 11186  003F78  EC5C  F023         	call	_Lcd_Cmd
 11187  003F7C                     
 11188                           ;./lcd.h: 50:   Lcd_Cmd(y);
 11189  003F7C  5007               	movf	Lcd_Set_Cursor@y^0,w,c
 11190  003F7E  EC5C  F023         	call	_Lcd_Cmd
 11191                           
 11192                           ;./lcd.h: 51:  }
 11193  003F82  EFDB  F01F         	goto	l119
 11194  003F86                     l4837:
 11195  003F86  0E02               	movlw	2
 11196  003F88  1805               	xorwf	Lcd_Set_Cursor@a^0,w,c
 11197  003F8A  A4D8               	btfss	status,2,c
 11198  003F8C  EFCA  F01F         	goto	u6061
 11199  003F90  EFCC  F01F         	goto	u6060
 11200  003F94                     u6061:
 11201  003F94  EFDB  F01F         	goto	l119
 11202  003F98                     u6060:
 11203  003F98                     
 11204                           ;./lcd.h: 53:  {;./lcd.h: 54:   temp = 0xC0 + b - 1;
 11205  003F98  5004               	movf	Lcd_Set_Cursor@b^0,w,c
 11206  003F9A  0FBF               	addlw	191
 11207  003F9C  6E08               	movwf	Lcd_Set_Cursor@temp^0,c
 11208                           
 11209                           ;./lcd.h: 55:   z = temp>>4;
 11210  003F9E  3808               	swapf	Lcd_Set_Cursor@temp^0,w,c
 11211  003FA0  0B0F               	andlw	15
 11212  003FA2  6E06               	movwf	Lcd_Set_Cursor@z^0,c
 11213                           
 11214                           ;./lcd.h: 56:   y = temp & 0x0F;
 11215  003FA4  5008               	movf	Lcd_Set_Cursor@temp^0,w,c
 11216  003FA6  0B0F               	andlw	15
 11217  003FA8  6E07               	movwf	Lcd_Set_Cursor@y^0,c
 11218  003FAA                     
 11219                           ;./lcd.h: 57:   Lcd_Cmd(z);
 11220  003FAA  5006               	movf	Lcd_Set_Cursor@z^0,w,c
 11221  003FAC  EC5C  F023         	call	_Lcd_Cmd
 11222  003FB0                     
 11223                           ;./lcd.h: 58:   Lcd_Cmd(y);
 11224  003FB0  5007               	movf	Lcd_Set_Cursor@y^0,w,c
 11225  003FB2  EC5C  F023         	call	_Lcd_Cmd
 11226  003FB6                     l119:
 11227  003FB6  0012               	return		;funcret
 11228  003FB8                     __end_of_Lcd_Set_Cursor:
 11229                           	callstack 0
 11230                           
 11231 ;; *************** function _Lcd_Clear *****************
 11232 ;; Defined at:
 11233 ;;		line 35 in file "./lcd.h"
 11234 ;; Parameters:    Size  Location     Type
 11235 ;;		None
 11236 ;; Auto vars:     Size  Location     Type
 11237 ;;		None
 11238 ;; Return value:  Size  Location     Type
 11239 ;;                  2  112[None  ] int 
 11240 ;; Registers used:
 11241 ;;		wreg, status,2, cstack
 11242 ;; Tracked objects:
 11243 ;;		On entry : 0/0
 11244 ;;		On exit  : 0/0
 11245 ;;		Unchanged: 0/0
 11246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11247 ;;      Params:         0       0       0       0       0       0       0       0       0
 11248 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11249 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11250 ;;      Totals:         0       0       0       0       0       0       0       0       0
 11251 ;;Total ram usage:        0 bytes
 11252 ;; Hardware stack levels used:    1
 11253 ;; Hardware stack levels required when called:    2
 11254 ;; This function calls:
 11255 ;;		_Lcd_Cmd
 11256 ;; This function is called by:
 11257 ;;		_activar_seguridad
 11258 ;;		_main
 11259 ;; This function uses a non-reentrant model
 11260 ;;
 11261                           
 11262                           	psect	text49
 11263  004740                     __ptext49:
 11264                           	callstack 0
 11265  004740                     _Lcd_Clear:
 11266                           	callstack 26
 11267  004740                     
 11268                           ;./lcd.h: 37:  Lcd_Cmd(0);
 11269  004740  0E00               	movlw	0
 11270  004742  EC5C  F023         	call	_Lcd_Cmd
 11271                           
 11272                           ;./lcd.h: 38:  Lcd_Cmd(1);
 11273  004746  0E01               	movlw	1
 11274  004748  EC5C  F023         	call	_Lcd_Cmd
 11275  00474C  0012               	return		;funcret
 11276  00474E                     __end_of_Lcd_Clear:
 11277                           	callstack 0
 11278                           
 11279 ;; *************** function _Keypad_Key_Press *****************
 11280 ;; Defined at:
 11281 ;;		line 82 in file "main.c"
 11282 ;; Parameters:    Size  Location     Type
 11283 ;;		None
 11284 ;; Auto vars:     Size  Location     Type
 11285 ;;  keypad_deco    17    0[COMRAM] const unsigned char [17]
 11286 ;;  fila            2   19[COMRAM] unsigned int 
 11287 ;;  tec             2   17[COMRAM] unsigned int 
 11288 ;; Return value:  Size  Location     Type
 11289 ;;                  1    wreg      unsigned char 
 11290 ;; Registers used:
 11291 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 11292 ;; Tracked objects:
 11293 ;;		On entry : 0/0
 11294 ;;		On exit  : 0/0
 11295 ;;		Unchanged: 0/0
 11296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11297 ;;      Params:         0       0       0       0       0       0       0       0       0
 11298 ;;      Locals:        21       0       0       0       0       0       0       0       0
 11299 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11300 ;;      Totals:        21       0       0       0       0       0       0       0       0
 11301 ;;Total ram usage:       21 bytes
 11302 ;; Hardware stack levels used:    1
 11303 ;; This function calls:
 11304 ;;		Nothing
 11305 ;; This function is called by:
 11306 ;;		_activar_seguridad
 11307 ;; This function uses a non-reentrant model
 11308 ;;
 11309                           
 11310                           	psect	text50
 11311  003C54                     __ptext50:
 11312                           	callstack 0
 11313  003C54                     _Keypad_Key_Press:
 11314                           	callstack 28
 11315  003C54                     
 11316                           ;main.c: 83:     const unsigned char keypad_deco[17] = {'7', '8', '9', '/', '4', '5', '6
      +                          ', '*', '1', '2', '3', '-', 13, '0', '=', '+', 0};
 11317  003C54  0E01               	movlw	low Keypad_Key_Press@F3795
 11318  003C56  6EF6               	movwf	tblptrl,c
 11319  003C58                     	if	1	;There is more than 1 active tblptr byte
 11320  003C58  0E08               	movlw	high Keypad_Key_Press@F3795
 11321  003C5A  6EF7               	movwf	tblptrh,c
 11322  003C5C                     	endif
 11323  003C5C                     	if	0	;There are less than 3 active tblptr bytes
 11324  003C5C                     	endif
 11325  003C5C  EE20  F001         	lfsr	2,Keypad_Key_Press@keypad_deco
 11326  003C60  0E10               	movlw	16
 11327  003C62                     u6120:
 11328  003C62  0009               	tblrd		*+
 11329  003C64  CFF5 FFDE          	movff	tablat,postinc2
 11330  003C68  06E8               	decf	wreg,f,c
 11331  003C6A  E2FB               	bc	u6120
 11332  003C6C                     
 11333                           ;main.c: 84:     unsigned int tec = 0, fila;
 11334  003C6C  0E00               	movlw	0
 11335  003C6E  6E13               	movwf	(Keypad_Key_Press@tec+1)^0,c
 11336  003C70  0E00               	movlw	0
 11337  003C72  6E12               	movwf	Keypad_Key_Press@tec^0,c
 11338  003C74                     
 11339                           ;main.c: 86:     for (fila = 0b00000001; fila < 0b00010000; fila <<= 1) {
 11340  003C74  0E00               	movlw	0
 11341  003C76  6E15               	movwf	(Keypad_Key_Press@fila+1)^0,c
 11342  003C78  0E01               	movlw	1
 11343  003C7A  6E14               	movwf	Keypad_Key_Press@fila^0,c
 11344  003C7C                     l4899:
 11345                           
 11346                           ;main.c: 87:         LATD = fila << 4;
 11347  003C7C  3814               	swapf	Keypad_Key_Press@fila^0,w,c
 11348  003C7E  0BF0               	andlw	240
 11349  003C80  6E8C               	movwf	140,c	;volatile
 11350  003C82                     
 11351                           ;main.c: 88:         if (PORTDbits.RD0 == 1) break;
 11352  003C82  A083               	btfss	131,0,c	;volatile
 11353  003C84  EF46  F01E         	goto	u6131
 11354  003C88  EF48  F01E         	goto	u6130
 11355  003C8C                     u6131:
 11356  003C8C  EF4A  F01E         	goto	l4905
 11357  003C90                     u6130:
 11358  003C90  EF7B  F01E         	goto	l4927
 11359  003C94                     l4905:
 11360                           
 11361                           ;main.c: 89:         tec++;
 11362  003C94  4A12               	infsnz	Keypad_Key_Press@tec^0,f,c
 11363  003C96  2A13               	incf	(Keypad_Key_Press@tec+1)^0,f,c
 11364  003C98                     
 11365                           ;main.c: 90:         if (PORTDbits.RD1 == 1) break;
 11366  003C98  A283               	btfss	131,1,c	;volatile
 11367  003C9A  EF51  F01E         	goto	u6141
 11368  003C9E  EF53  F01E         	goto	u6140
 11369  003CA2                     u6141:
 11370  003CA2  EF55  F01E         	goto	l4911
 11371  003CA6                     u6140:
 11372  003CA6  EF7B  F01E         	goto	l4927
 11373  003CAA                     l4911:
 11374                           
 11375                           ;main.c: 91:         tec++;
 11376  003CAA  4A12               	infsnz	Keypad_Key_Press@tec^0,f,c
 11377  003CAC  2A13               	incf	(Keypad_Key_Press@tec+1)^0,f,c
 11378  003CAE                     
 11379                           ;main.c: 92:         if (PORTDbits.RD2 == 1) break;
 11380  003CAE  A483               	btfss	131,2,c	;volatile
 11381  003CB0  EF5C  F01E         	goto	u6151
 11382  003CB4  EF5E  F01E         	goto	u6150
 11383  003CB8                     u6151:
 11384  003CB8  EF60  F01E         	goto	l4917
 11385  003CBC                     u6150:
 11386  003CBC  EF7B  F01E         	goto	l4927
 11387  003CC0                     l4917:
 11388                           
 11389                           ;main.c: 93:         tec++;
 11390  003CC0  4A12               	infsnz	Keypad_Key_Press@tec^0,f,c
 11391  003CC2  2A13               	incf	(Keypad_Key_Press@tec+1)^0,f,c
 11392  003CC4                     
 11393                           ;main.c: 94:         if (PORTDbits.RD3 == 1) break;
 11394  003CC4  A683               	btfss	131,3,c	;volatile
 11395  003CC6  EF67  F01E         	goto	u6161
 11396  003CCA  EF69  F01E         	goto	u6160
 11397  003CCE                     u6161:
 11398  003CCE  EF6B  F01E         	goto	l4923
 11399  003CD2                     u6160:
 11400  003CD2  EF7B  F01E         	goto	l4927
 11401  003CD6                     l4923:
 11402                           
 11403                           ;main.c: 95:         tec++;
 11404  003CD6  4A12               	infsnz	Keypad_Key_Press@tec^0,f,c
 11405  003CD8  2A13               	incf	(Keypad_Key_Press@tec+1)^0,f,c
 11406                           
 11407                           ;main.c: 96:     }
 11408  003CDA  90D8               	bcf	status,0,c
 11409  003CDC  3614               	rlcf	Keypad_Key_Press@fila^0,f,c
 11410  003CDE  3615               	rlcf	(Keypad_Key_Press@fila+1)^0,f,c
 11411  003CE0  5015               	movf	(Keypad_Key_Press@fila+1)^0,w,c
 11412  003CE2  E109               	bnz	u6170
 11413  003CE4  0E10               	movlw	16
 11414  003CE6  5C14               	subwf	Keypad_Key_Press@fila^0,w,c
 11415  003CE8  A0D8               	btfss	status,0,c
 11416  003CEA  EF79  F01E         	goto	u6171
 11417  003CEE  EF7B  F01E         	goto	u6170
 11418  003CF2                     u6171:
 11419  003CF2  EF3E  F01E         	goto	l4899
 11420  003CF6                     u6170:
 11421  003CF6                     l4927:
 11422                           
 11423                           ;main.c: 97:     PORTD = 0x00;
 11424  003CF6  0E00               	movlw	0
 11425  003CF8  6E83               	movwf	131,c	;volatile
 11426  003CFA                     
 11427                           ;main.c: 98:     return keypad_deco[tec];
 11428  003CFA  0E01               	movlw	low Keypad_Key_Press@keypad_deco
 11429  003CFC  2412               	addwf	Keypad_Key_Press@tec^0,w,c
 11430  003CFE  6ED9               	movwf	fsr2l,c
 11431  003D00  0E00               	movlw	high Keypad_Key_Press@keypad_deco
 11432  003D02  2013               	addwfc	(Keypad_Key_Press@tec+1)^0,w,c
 11433  003D04  6EDA               	movwf	fsr2h,c
 11434  003D06  50DF               	movf	indf2,w,c
 11435  003D08  0012               	return		;funcret
 11436  003D0A                     __end_of_Keypad_Key_Press:
 11437                           	callstack 0
 11438                           
 11439 ;; *************** function _I2C_Stop *****************
 11440 ;; Defined at:
 11441 ;;		line 112 in file "./I2C_Master_File.h"
 11442 ;; Parameters:    Size  Location     Type
 11443 ;;		None
 11444 ;; Auto vars:     Size  Location     Type
 11445 ;;		None
 11446 ;; Return value:  Size  Location     Type
 11447 ;;                  1    wreg      unsigned char 
 11448 ;; Registers used:
 11449 ;;		wreg
 11450 ;; Tracked objects:
 11451 ;;		On entry : 0/0
 11452 ;;		On exit  : 0/0
 11453 ;;		Unchanged: 0/0
 11454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11455 ;;      Params:         0       0       0       0       0       0       0       0       0
 11456 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11457 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11458 ;;      Totals:         0       0       0       0       0       0       0       0       0
 11459 ;;Total ram usage:        0 bytes
 11460 ;; Hardware stack levels used:    1
 11461 ;; This function calls:
 11462 ;;		Nothing
 11463 ;; This function is called by:
 11464 ;;		_activar_seguridad
 11465 ;;		_I2C_Start_Wait
 11466 ;; This function uses a non-reentrant model
 11467 ;;
 11468                           
 11469                           	psect	text51
 11470  00471A                     __ptext51:
 11471                           	callstack 0
 11472  00471A                     _I2C_Stop:
 11473                           	callstack 28
 11474  00471A                     
 11475                           ;./I2C_Master_File.h: 114:     PEN = 1;
 11476  00471A  84C5               	bsf	4037,2,c	;volatile
 11477  00471C                     l184:
 11478  00471C  B4C5               	btfsc	4037,2,c	;volatile
 11479  00471E  EF93  F023         	goto	u6101
 11480  004722  EF95  F023         	goto	u6100
 11481  004726                     u6101:
 11482  004726  EF8E  F023         	goto	l184
 11483  00472A                     u6100:
 11484  00472A                     
 11485                           ;./I2C_Master_File.h: 116:     if(!SSPSTATbits.P);
 11486  00472A  50C7               	movf	199,w,c	;volatile
 11487  00472C  0012               	return		;funcret
 11488  00472E                     __end_of_I2C_Stop:
 11489                           	callstack 0
 11490                           
 11491 ;; *************** function _I2C_Init *****************
 11492 ;; Defined at:
 11493 ;;		line 48 in file "./I2C_Master_File.h"
 11494 ;; Parameters:    Size  Location     Type
 11495 ;;		None
 11496 ;; Auto vars:     Size  Location     Type
 11497 ;;		None
 11498 ;; Return value:  Size  Location     Type
 11499 ;;                  1    wreg      void 
 11500 ;; Registers used:
 11501 ;;		wreg, status,2
 11502 ;; Tracked objects:
 11503 ;;		On entry : 0/0
 11504 ;;		On exit  : 0/0
 11505 ;;		Unchanged: 0/0
 11506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11507 ;;      Params:         0       0       0       0       0       0       0       0       0
 11508 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11509 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11510 ;;      Totals:         0       0       0       0       0       0       0       0       0
 11511 ;;Total ram usage:        0 bytes
 11512 ;; Hardware stack levels used:    1
 11513 ;; This function calls:
 11514 ;;		Nothing
 11515 ;; This function is called by:
 11516 ;;		_activar_seguridad
 11517 ;; This function uses a non-reentrant model
 11518 ;;
 11519                           
 11520                           	psect	text52
 11521  0046D8                     __ptext52:
 11522                           	callstack 0
 11523  0046D8                     _I2C_Init:
 11524                           	callstack 28
 11525  0046D8                     
 11526                           ;./I2C_Master_File.h: 50:     TRISB0=1;
 11527  0046D8  8093               	bsf	3987,0,c	;volatile
 11528                           
 11529                           ;./I2C_Master_File.h: 51:  TRISB1=1;
 11530  0046DA  8293               	bsf	3987,1,c	;volatile
 11531  0046DC                     
 11532                           ;./I2C_Master_File.h: 52:  SSPSTAT=80;
 11533  0046DC  0E50               	movlw	80
 11534  0046DE  6EC7               	movwf	199,c	;volatile
 11535                           
 11536                           ;./I2C_Master_File.h: 53:     SSPCON1=0x28;
 11537  0046E0  0E28               	movlw	40
 11538  0046E2  6EC6               	movwf	198,c	;volatile
 11539                           
 11540                           ;./I2C_Master_File.h: 55:  SSPCON2=0;
 11541  0046E4  0E00               	movlw	0
 11542  0046E6  6EC5               	movwf	197,c	;volatile
 11543                           
 11544                           ;./I2C_Master_File.h: 56:     SSPADD=((8000000/(4*100000))-1);
 11545  0046E8  0E13               	movlw	19
 11546  0046EA  6EC8               	movwf	200,c	;volatile
 11547  0046EC                     
 11548                           ;./I2C_Master_File.h: 57:     SSPIE=1;
 11549  0046EC  869D               	bsf	3997,3,c	;volatile
 11550  0046EE                     
 11551                           ;./I2C_Master_File.h: 58:     SSPIF=0;
 11552  0046EE  969E               	bcf	3998,3,c	;volatile
 11553  0046F0  0012               	return		;funcret
 11554  0046F2                     __end_of_I2C_Init:
 11555                           	callstack 0
 11556                           
 11557 ;; *************** function _Lcd_Init *****************
 11558 ;; Defined at:
 11559 ;;		line 62 in file "./lcd.h"
 11560 ;; Parameters:    Size  Location     Type
 11561 ;;		None
 11562 ;; Auto vars:     Size  Location     Type
 11563 ;;		None
 11564 ;; Return value:  Size  Location     Type
 11565 ;;                  1    wreg      void 
 11566 ;; Registers used:
 11567 ;;		wreg, status,2, cstack
 11568 ;; Tracked objects:
 11569 ;;		On entry : 0/0
 11570 ;;		On exit  : 0/0
 11571 ;;		Unchanged: 0/0
 11572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11573 ;;      Params:         0       0       0       0       0       0       0       0       0
 11574 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11575 ;;      Temps:          1       0       0       0       0       0       0       0       0
 11576 ;;      Totals:         1       0       0       0       0       0       0       0       0
 11577 ;;Total ram usage:        1 bytes
 11578 ;; Hardware stack levels used:    1
 11579 ;; Hardware stack levels required when called:    2
 11580 ;; This function calls:
 11581 ;;		_Lcd_Cmd
 11582 ;;		_Lcd_Port
 11583 ;; This function is called by:
 11584 ;;		_main
 11585 ;; This function uses a non-reentrant model
 11586 ;;
 11587                           
 11588                           	psect	text53
 11589  003EE2                     __ptext53:
 11590                           	callstack 0
 11591  003EE2                     _Lcd_Init:
 11592                           	callstack 28
 11593  003EE2                     
 11594                           ;./lcd.h: 64:   Lcd_Port(0x00);
 11595  003EE2  0E00               	movlw	0
 11596  003EE4  EC9A  F020         	call	_Lcd_Port
 11597  003EE8                     
 11598                           ;./lcd.h: 65:    _delay((unsigned long)((20)*(8000000/4000.0)));
 11599  003EE8  0E34               	movlw	52
 11600  003EEA  6E04               	movwf	??_Lcd_Init^0,c
 11601  003EEC  0EF2               	movlw	242
 11602  003EEE                     u6727:
 11603  003EEE  2EE8               	decfsz	wreg,f,c
 11604  003EF0  D7FE               	bra	u6727
 11605  003EF2  2E04               	decfsz	??_Lcd_Init^0,f,c
 11606  003EF4  D7FC               	bra	u6727
 11607  003EF6                     
 11608                           ;./lcd.h: 66:   Lcd_Cmd(0x03);
 11609  003EF6  0E03               	movlw	3
 11610  003EF8  EC5C  F023         	call	_Lcd_Cmd
 11611  003EFC                     
 11612                           ;./lcd.h: 67:  _delay((unsigned long)((5)*(8000000/4000.0)));
 11613  003EFC  0E0D               	movlw	13
 11614  003EFE  6E04               	movwf	??_Lcd_Init^0,c
 11615  003F00  0EFC               	movlw	252
 11616  003F02                     u6737:
 11617  003F02  2EE8               	decfsz	wreg,f,c
 11618  003F04  D7FE               	bra	u6737
 11619  003F06  2E04               	decfsz	??_Lcd_Init^0,f,c
 11620  003F08  D7FC               	bra	u6737
 11621  003F0A                     
 11622                           ;./lcd.h: 68:   Lcd_Cmd(0x03);
 11623  003F0A  0E03               	movlw	3
 11624  003F0C  EC5C  F023         	call	_Lcd_Cmd
 11625  003F10                     
 11626                           ;./lcd.h: 69:  _delay((unsigned long)((11)*(8000000/4000.0)));
 11627  003F10  0E1D               	movlw	29
 11628  003F12  6E04               	movwf	??_Lcd_Init^0,c
 11629  003F14  0E91               	movlw	145
 11630  003F16                     u6747:
 11631  003F16  2EE8               	decfsz	wreg,f,c
 11632  003F18  D7FE               	bra	u6747
 11633  003F1A  2E04               	decfsz	??_Lcd_Init^0,f,c
 11634  003F1C  D7FC               	bra	u6747
 11635  003F1E  F000               	nop	
 11636  003F20                     
 11637                           ;./lcd.h: 70:   Lcd_Cmd(0x03);
 11638  003F20  0E03               	movlw	3
 11639  003F22  EC5C  F023         	call	_Lcd_Cmd
 11640  003F26                     
 11641                           ;./lcd.h: 72:   Lcd_Cmd(0x02);
 11642  003F26  0E02               	movlw	2
 11643  003F28  EC5C  F023         	call	_Lcd_Cmd
 11644  003F2C                     
 11645                           ;./lcd.h: 73:   Lcd_Cmd(0x02);
 11646  003F2C  0E02               	movlw	2
 11647  003F2E  EC5C  F023         	call	_Lcd_Cmd
 11648  003F32                     
 11649                           ;./lcd.h: 74:   Lcd_Cmd(0x08);
 11650  003F32  0E08               	movlw	8
 11651  003F34  EC5C  F023         	call	_Lcd_Cmd
 11652  003F38                     
 11653                           ;./lcd.h: 75:   Lcd_Cmd(0x00);
 11654  003F38  0E00               	movlw	0
 11655  003F3A  EC5C  F023         	call	_Lcd_Cmd
 11656  003F3E                     
 11657                           ;./lcd.h: 76:   Lcd_Cmd(0x0C);
 11658  003F3E  0E0C               	movlw	12
 11659  003F40  EC5C  F023         	call	_Lcd_Cmd
 11660  003F44                     
 11661                           ;./lcd.h: 77:   Lcd_Cmd(0x00);
 11662  003F44  0E00               	movlw	0
 11663  003F46  EC5C  F023         	call	_Lcd_Cmd
 11664  003F4A                     
 11665                           ;./lcd.h: 78:   Lcd_Cmd(0x06);
 11666  003F4A  0E06               	movlw	6
 11667  003F4C  EC5C  F023         	call	_Lcd_Cmd
 11668  003F50  0012               	return		;funcret
 11669  003F52                     __end_of_Lcd_Init:
 11670                           	callstack 0
 11671                           
 11672 ;; *************** function _Lcd_Cmd *****************
 11673 ;; Defined at:
 11674 ;;		line 26 in file "./lcd.h"
 11675 ;; Parameters:    Size  Location     Type
 11676 ;;  a               1    wreg     unsigned char 
 11677 ;; Auto vars:     Size  Location     Type
 11678 ;;  a               1    2[COMRAM] unsigned char 
 11679 ;; Return value:  Size  Location     Type
 11680 ;;                  1    wreg      void 
 11681 ;; Registers used:
 11682 ;;		wreg, status,2, cstack
 11683 ;; Tracked objects:
 11684 ;;		On entry : 0/0
 11685 ;;		On exit  : 0/0
 11686 ;;		Unchanged: 0/0
 11687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11688 ;;      Params:         0       0       0       0       0       0       0       0       0
 11689 ;;      Locals:         1       0       0       0       0       0       0       0       0
 11690 ;;      Temps:          1       0       0       0       0       0       0       0       0
 11691 ;;      Totals:         2       0       0       0       0       0       0       0       0
 11692 ;;Total ram usage:        2 bytes
 11693 ;; Hardware stack levels used:    1
 11694 ;; Hardware stack levels required when called:    1
 11695 ;; This function calls:
 11696 ;;		_Lcd_Port
 11697 ;; This function is called by:
 11698 ;;		_Lcd_Clear
 11699 ;;		_Lcd_Set_Cursor
 11700 ;;		_Lcd_Init
 11701 ;;		_Lcd_Shift_Right
 11702 ;;		_Lcd_Shift_Left
 11703 ;; This function uses a non-reentrant model
 11704 ;;
 11705                           
 11706                           	psect	text54
 11707  0046B8                     __ptext54:
 11708                           	callstack 0
 11709  0046B8                     _Lcd_Cmd:
 11710                           	callstack 26
 11711                           
 11712                           ;incstack = 0
 11713                           ;Lcd_Cmd@a stored from wreg
 11714  0046B8  6E03               	movwf	Lcd_Cmd@a^0,c
 11715  0046BA                     
 11716                           ;./lcd.h: 26: void Lcd_Cmd(char a);./lcd.h: 27: {;./lcd.h: 28:  PORTBbits.RB2 = 0;
 11717  0046BA  9481               	bcf	129,2,c	;volatile
 11718  0046BC                     
 11719                           ;./lcd.h: 29:  Lcd_Port(a);
 11720  0046BC  5003               	movf	Lcd_Cmd@a^0,w,c
 11721  0046BE  EC9A  F020         	call	_Lcd_Port
 11722  0046C2                     
 11723                           ;./lcd.h: 30:  PORTBbits.RB3 = 1;
 11724  0046C2  8681               	bsf	129,3,c	;volatile
 11725  0046C4                     
 11726                           ;./lcd.h: 31:         _delay((unsigned long)((4)*(8000000/4000.0)));
 11727  0046C4  0E0B               	movlw	11
 11728  0046C6  6E02               	movwf	??_Lcd_Cmd^0,c
 11729  0046C8  0E62               	movlw	98
 11730  0046CA                     u6757:
 11731  0046CA  2EE8               	decfsz	wreg,f,c
 11732  0046CC  D7FE               	bra	u6757
 11733  0046CE  2E02               	decfsz	??_Lcd_Cmd^0,f,c
 11734  0046D0  D7FC               	bra	u6757
 11735  0046D2  D000               	nop2	
 11736  0046D4                     
 11737                           ;./lcd.h: 32:         PORTBbits.RB3 = 0;
 11738  0046D4  9681               	bcf	129,3,c	;volatile
 11739  0046D6  0012               	return		;funcret
 11740  0046D8                     __end_of_Lcd_Cmd:
 11741                           	callstack 0
 11742                           
 11743 ;; *************** function _Lcd_Port *****************
 11744 ;; Defined at:
 11745 ;;		line 4 in file "./lcd.h"
 11746 ;; Parameters:    Size  Location     Type
 11747 ;;  a               1    wreg     unsigned char 
 11748 ;; Auto vars:     Size  Location     Type
 11749 ;;  a               1    0[COMRAM] unsigned char 
 11750 ;; Return value:  Size  Location     Type
 11751 ;;                  1    wreg      void 
 11752 ;; Registers used:
 11753 ;;		wreg
 11754 ;; Tracked objects:
 11755 ;;		On entry : 0/0
 11756 ;;		On exit  : 0/0
 11757 ;;		Unchanged: 0/0
 11758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11759 ;;      Params:         0       0       0       0       0       0       0       0       0
 11760 ;;      Locals:         1       0       0       0       0       0       0       0       0
 11761 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11762 ;;      Totals:         1       0       0       0       0       0       0       0       0
 11763 ;;Total ram usage:        1 bytes
 11764 ;; Hardware stack levels used:    1
 11765 ;; This function calls:
 11766 ;;		Nothing
 11767 ;; This function is called by:
 11768 ;;		_Lcd_Cmd
 11769 ;;		_Lcd_Init
 11770 ;;		_Lcd_Write_Char
 11771 ;; This function uses a non-reentrant model
 11772 ;;
 11773                           
 11774                           	psect	text55
 11775  004134                     __ptext55:
 11776                           	callstack 0
 11777  004134                     _Lcd_Port:
 11778                           	callstack 26
 11779                           
 11780                           ;incstack = 0
 11781                           ;Lcd_Port@a stored from wreg
 11782  004134  6E01               	movwf	Lcd_Port@a^0,c
 11783  004136                     
 11784                           ;./lcd.h: 4: void Lcd_Port(char a);./lcd.h: 5: {;./lcd.h: 6:  if(a & 1)
 11785  004136  A001               	btfss	Lcd_Port@a^0,0,c
 11786  004138  EFA0  F020         	goto	u5751
 11787  00413C  EFA2  F020         	goto	u5750
 11788  004140                     u5751:
 11789  004140  EFA5  F020         	goto	l99
 11790  004144                     u5750:
 11791  004144                     
 11792                           ;./lcd.h: 7:   PORTBbits.RB4 = 1;
 11793  004144  8881               	bsf	129,4,c	;volatile
 11794  004146  EFA6  F020         	goto	l4621
 11795  00414A                     l99:
 11796                           
 11797                           ;./lcd.h: 9:   PORTBbits.RB4 = 0;
 11798  00414A  9881               	bcf	129,4,c	;volatile
 11799  00414C                     l4621:
 11800                           
 11801                           ;./lcd.h: 11:  if(a & 2)
 11802  00414C  A201               	btfss	Lcd_Port@a^0,1,c
 11803  00414E  EFAB  F020         	goto	u5761
 11804  004152  EFAD  F020         	goto	u5760
 11805  004156                     u5761:
 11806  004156  EFB0  F020         	goto	l101
 11807  00415A                     u5760:
 11808  00415A                     
 11809                           ;./lcd.h: 12:   PORTBbits.RB5 = 1;
 11810  00415A  8A81               	bsf	129,5,c	;volatile
 11811  00415C  EFB1  F020         	goto	l4625
 11812  004160                     l101:
 11813                           
 11814                           ;./lcd.h: 14:   PORTBbits.RB5 = 0;
 11815  004160  9A81               	bcf	129,5,c	;volatile
 11816  004162                     l4625:
 11817                           
 11818                           ;./lcd.h: 16:  if(a & 4)
 11819  004162  A401               	btfss	Lcd_Port@a^0,2,c
 11820  004164  EFB6  F020         	goto	u5771
 11821  004168  EFB8  F020         	goto	u5770
 11822  00416C                     u5771:
 11823  00416C  EFBB  F020         	goto	l103
 11824  004170                     u5770:
 11825  004170                     
 11826                           ;./lcd.h: 17:   PORTBbits.RB6 = 1;
 11827  004170  8C81               	bsf	129,6,c	;volatile
 11828  004172  EFBC  F020         	goto	l4629
 11829  004176                     l103:
 11830                           
 11831                           ;./lcd.h: 19:   PORTBbits.RB6 = 0;
 11832  004176  9C81               	bcf	129,6,c	;volatile
 11833  004178                     l4629:
 11834                           
 11835                           ;./lcd.h: 21:  if(a & 8)
 11836  004178  A601               	btfss	Lcd_Port@a^0,3,c
 11837  00417A  EFC1  F020         	goto	u5781
 11838  00417E  EFC3  F020         	goto	u5780
 11839  004182                     u5781:
 11840  004182  EFC6  F020         	goto	l105
 11841  004186                     u5780:
 11842  004186                     
 11843                           ;./lcd.h: 22:   PORTBbits.RB7 = 1;
 11844  004186  8E81               	bsf	129,7,c	;volatile
 11845  004188  EFC7  F020         	goto	l107
 11846  00418C                     l105:
 11847                           
 11848                           ;./lcd.h: 24:   PORTBbits.RB7 = 0;
 11849  00418C  9E81               	bcf	129,7,c	;volatile
 11850  00418E                     l107:
 11851  00418E  0012               	return		;funcret
 11852  004190                     __end_of_Lcd_Port:
 11853                           	callstack 0
 11854                           
 11855 ;; *************** function _Keypad_Init *****************
 11856 ;; Defined at:
 11857 ;;		line 77 in file "main.c"
 11858 ;; Parameters:    Size  Location     Type
 11859 ;;		None
 11860 ;; Auto vars:     Size  Location     Type
 11861 ;;		None
 11862 ;; Return value:  Size  Location     Type
 11863 ;;                  1    wreg      void 
 11864 ;; Registers used:
 11865 ;;		wreg, status,2
 11866 ;; Tracked objects:
 11867 ;;		On entry : 0/0
 11868 ;;		On exit  : 0/0
 11869 ;;		Unchanged: 0/0
 11870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11871 ;;      Params:         0       0       0       0       0       0       0       0       0
 11872 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11873 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11874 ;;      Totals:         0       0       0       0       0       0       0       0       0
 11875 ;;Total ram usage:        0 bytes
 11876 ;; Hardware stack levels used:    1
 11877 ;; This function calls:
 11878 ;;		Nothing
 11879 ;; This function is called by:
 11880 ;;		_main
 11881 ;; This function uses a non-reentrant model
 11882 ;;
 11883                           
 11884                           	psect	text56
 11885  00474E                     __ptext56:
 11886                           	callstack 0
 11887  00474E                     _Keypad_Init:
 11888                           	callstack 30
 11889  00474E                     
 11890                           ;main.c: 78:     TRISD = 0B00001111;
 11891  00474E  0E0F               	movlw	15
 11892  004750  6E95               	movwf	149,c	;volatile
 11893  004752  0012               	return		;funcret
 11894  004754                     __end_of_Keypad_Init:
 11895                           	callstack 0
 11896                           
 11897                           	psect	rparam
 11898  0000                     
 11899                           	psect	idloc
 11900                           
 11901                           ;Config register IDLOC0 @ 0x200000
 11902                           ;	unspecified, using default values
 11903  200000                     	org	2097152
 11904  200000  FF                 	db	255
 11905                           
 11906                           ;Config register IDLOC1 @ 0x200001
 11907                           ;	unspecified, using default values
 11908  200001                     	org	2097153
 11909  200001  FF                 	db	255
 11910                           
 11911                           ;Config register IDLOC2 @ 0x200002
 11912                           ;	unspecified, using default values
 11913  200002                     	org	2097154
 11914  200002  FF                 	db	255
 11915                           
 11916                           ;Config register IDLOC3 @ 0x200003
 11917                           ;	unspecified, using default values
 11918  200003                     	org	2097155
 11919  200003  FF                 	db	255
 11920                           
 11921                           ;Config register IDLOC4 @ 0x200004
 11922                           ;	unspecified, using default values
 11923  200004                     	org	2097156
 11924  200004  FF                 	db	255
 11925                           
 11926                           ;Config register IDLOC5 @ 0x200005
 11927                           ;	unspecified, using default values
 11928  200005                     	org	2097157
 11929  200005  FF                 	db	255
 11930                           
 11931                           ;Config register IDLOC6 @ 0x200006
 11932                           ;	unspecified, using default values
 11933  200006                     	org	2097158
 11934  200006  FF                 	db	255
 11935                           
 11936                           ;Config register IDLOC7 @ 0x200007
 11937                           ;	unspecified, using default values
 11938  200007                     	org	2097159
 11939  200007  FF                 	db	255
 11940                           
 11941                           	psect	config
 11942                           
 11943                           ;Config register CONFIG1L @ 0x300000
 11944                           ;	unspecified, using default values
 11945                           ;	PLL Prescaler Selection bits
 11946                           ;	PLLDIV = 0x0, unprogrammed default
 11947                           ;	System Clock Postscaler Selection bits
 11948                           ;	CPUDIV = 0x0, unprogrammed default
 11949                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
 11950                           ;	USBDIV = 0x0, unprogrammed default
 11951  300000                     	org	3145728
 11952  300000  00                 	db	0
 11953                           
 11954                           ;Config register CONFIG1H @ 0x300001
 11955                           ;	unspecified, using default values
 11956                           ;	Oscillator Selection bits
 11957                           ;	FOSC = 0x5, unprogrammed default
 11958                           ;	Fail-Safe Clock Monitor Enable bit
 11959                           ;	FCMEN = 0x0, unprogrammed default
 11960                           ;	Internal/External Oscillator Switchover bit
 11961                           ;	IESO = 0x0, unprogrammed default
 11962  300001                     	org	3145729
 11963  300001  05                 	db	5
 11964                           
 11965                           ;Config register CONFIG2L @ 0x300002
 11966                           ;	unspecified, using default values
 11967                           ;	Power-up Timer Enable bit
 11968                           ;	PWRT = 0x1, unprogrammed default
 11969                           ;	Brown-out Reset Enable bits
 11970                           ;	BOR = 0x3, unprogrammed default
 11971                           ;	Brown-out Reset Voltage bits
 11972                           ;	BORV = 0x3, unprogrammed default
 11973                           ;	USB Voltage Regulator Enable bit
 11974                           ;	VREGEN = 0x0, unprogrammed default
 11975  300002                     	org	3145730
 11976  300002  1F                 	db	31
 11977                           
 11978                           ;Config register CONFIG2H @ 0x300003
 11979                           ;	unspecified, using default values
 11980                           ;	Watchdog Timer Enable bit
 11981                           ;	WDT = 0x1, unprogrammed default
 11982                           ;	Watchdog Timer Postscale Select bits
 11983                           ;	WDTPS = 0xF, unprogrammed default
 11984  300003                     	org	3145731
 11985  300003  1F                 	db	31
 11986                           
 11987                           ; Padding undefined space
 11988  300004                     	org	3145732
 11989  300004  FF                 	db	255
 11990                           
 11991                           ;Config register CONFIG3H @ 0x300005
 11992                           ;	unspecified, using default values
 11993                           ;	CCP2 MUX bit
 11994                           ;	CCP2MX = 0x1, unprogrammed default
 11995                           ;	PORTB A/D Enable bit
 11996                           ;	PBADEN = 0x1, unprogrammed default
 11997                           ;	Low-Power Timer 1 Oscillator Enable bit
 11998                           ;	LPT1OSC = 0x0, unprogrammed default
 11999                           ;	MCLR Pin Enable bit
 12000                           ;	MCLRE = 0x1, unprogrammed default
 12001  300005                     	org	3145733
 12002  300005  83                 	db	131
 12003                           
 12004                           ;Config register CONFIG4L @ 0x300006
 12005                           ;	unspecified, using default values
 12006                           ;	Stack Full/Underflow Reset Enable bit
 12007                           ;	STVREN = 0x1, unprogrammed default
 12008                           ;	Single-Supply ICSP Enable bit
 12009                           ;	LVP = 0x1, unprogrammed default
 12010                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
 12011                           ;	ICPRT = 0x0, unprogrammed default
 12012                           ;	Extended Instruction Set Enable bit
 12013                           ;	XINST = 0x0, unprogrammed default
 12014                           ;	Background Debugger Enable bit
 12015                           ;	DEBUG = 0x1, unprogrammed default
 12016  300006                     	org	3145734
 12017  300006  85                 	db	133
 12018                           
 12019                           ; Padding undefined space
 12020  300007                     	org	3145735
 12021  300007  FF                 	db	255
 12022                           
 12023                           ;Config register CONFIG5L @ 0x300008
 12024                           ;	unspecified, using default values
 12025                           ;	Code Protection bit
 12026                           ;	CP0 = 0x1, unprogrammed default
 12027                           ;	Code Protection bit
 12028                           ;	CP1 = 0x1, unprogrammed default
 12029                           ;	Code Protection bit
 12030                           ;	CP2 = 0x1, unprogrammed default
 12031                           ;	Code Protection bit
 12032                           ;	CP3 = 0x1, unprogrammed default
 12033  300008                     	org	3145736
 12034  300008  0F                 	db	15
 12035                           
 12036                           ;Config register CONFIG5H @ 0x300009
 12037                           ;	unspecified, using default values
 12038                           ;	Boot Block Code Protection bit
 12039                           ;	CPB = 0x1, unprogrammed default
 12040                           ;	Data EEPROM Code Protection bit
 12041                           ;	CPD = 0x1, unprogrammed default
 12042  300009                     	org	3145737
 12043  300009  C0                 	db	192
 12044                           
 12045                           ;Config register CONFIG6L @ 0x30000A
 12046                           ;	unspecified, using default values
 12047                           ;	Write Protection bit
 12048                           ;	WRT0 = 0x1, unprogrammed default
 12049                           ;	Write Protection bit
 12050                           ;	WRT1 = 0x1, unprogrammed default
 12051                           ;	Write Protection bit
 12052                           ;	WRT2 = 0x1, unprogrammed default
 12053                           ;	Write Protection bit
 12054                           ;	WRT3 = 0x1, unprogrammed default
 12055  30000A                     	org	3145738
 12056  30000A  0F                 	db	15
 12057                           
 12058                           ;Config register CONFIG6H @ 0x30000B
 12059                           ;	unspecified, using default values
 12060                           ;	Configuration Register Write Protection bit
 12061                           ;	WRTC = 0x1, unprogrammed default
 12062                           ;	Boot Block Write Protection bit
 12063                           ;	WRTB = 0x1, unprogrammed default
 12064                           ;	Data EEPROM Write Protection bit
 12065                           ;	WRTD = 0x1, unprogrammed default
 12066  30000B                     	org	3145739
 12067  30000B  E0                 	db	224
 12068                           
 12069                           ;Config register CONFIG7L @ 0x30000C
 12070                           ;	unspecified, using default values
 12071                           ;	Table Read Protection bit
 12072                           ;	EBTR0 = 0x1, unprogrammed default
 12073                           ;	Table Read Protection bit
 12074                           ;	EBTR1 = 0x1, unprogrammed default
 12075                           ;	Table Read Protection bit
 12076                           ;	EBTR2 = 0x1, unprogrammed default
 12077                           ;	Table Read Protection bit
 12078                           ;	EBTR3 = 0x1, unprogrammed default
 12079  30000C                     	org	3145740
 12080  30000C  0F                 	db	15
 12081                           
 12082                           ;Config register CONFIG7H @ 0x30000D
 12083                           ;	unspecified, using default values
 12084                           ;	Boot Block Table Read Protection bit
 12085                           ;	EBTRB = 0x1, unprogrammed default
 12086  30000D                     	org	3145741
 12087  30000D  40                 	db	64
 12088                           tosu	equ	0xFFF
 12089                           tosh	equ	0xFFE
 12090                           tosl	equ	0xFFD
 12091                           stkptr	equ	0xFFC
 12092                           pclatu	equ	0xFFB
 12093                           pclath	equ	0xFFA
 12094                           pcl	equ	0xFF9
 12095                           tblptru	equ	0xFF8
 12096                           tblptrh	equ	0xFF7
 12097                           tblptrl	equ	0xFF6
 12098                           tablat	equ	0xFF5
 12099                           prodh	equ	0xFF4
 12100                           prodl	equ	0xFF3
 12101                           indf0	equ	0xFEF
 12102                           postinc0	equ	0xFEE
 12103                           postdec0	equ	0xFED
 12104                           preinc0	equ	0xFEC
 12105                           plusw0	equ	0xFEB
 12106                           fsr0h	equ	0xFEA
 12107                           fsr0l	equ	0xFE9
 12108                           wreg	equ	0xFE8
 12109                           indf1	equ	0xFE7
 12110                           postinc1	equ	0xFE6
 12111                           postdec1	equ	0xFE5
 12112                           preinc1	equ	0xFE4
 12113                           plusw1	equ	0xFE3
 12114                           fsr1h	equ	0xFE2
 12115                           fsr1l	equ	0xFE1
 12116                           bsr	equ	0xFE0
 12117                           indf2	equ	0xFDF
 12118                           postinc2	equ	0xFDE
 12119                           postdec2	equ	0xFDD
 12120                           preinc2	equ	0xFDC
 12121                           plusw2	equ	0xFDB
 12122                           fsr2h	equ	0xFDA
 12123                           fsr2l	equ	0xFD9
 12124                           status	equ	0xFD8

Data Sizes:
    Strings     119
    Constant    17
    Data        46
    BSS         110
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     94      95
    BANK0           160    154     160
    BANK1           256      0     149
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_21(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_21(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_16(CODE[4]), STR_15(CODE[4]), STR_12(CODE[4]), STR_11(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_16(CODE[4]), STR_15(CODE[4]), STR_12(CODE[4]), STR_11(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 10
		 -> activar_seguridad@Temperatura(BANK0[10]), activar_seguridad@hours(BANK0[10]), activar_seguridad@mins(BANK0[10]), activar_seguridad@secs(BANK0[10]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_8(CODE[5]), STR_7(CODE[9]), STR_6(CODE[4]), STR_5(CODE[4]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 9
		 -> STR_8(CODE[5]), STR_7(CODE[9]), STR_6(CODE[4]), STR_5(CODE[4]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_8(CODE[5]), STR_7(CODE[9]), STR_6(CODE[4]), STR_5(CODE[4]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 10
		 -> activar_seguridad@Temperatura(BANK0[10]), activar_seguridad@hours(BANK0[10]), activar_seguridad@mins(BANK0[10]), activar_seguridad@secs(BANK0[10]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    S1320_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 10
		 -> activar_seguridad@Temperatura(BANK0[10]), activar_seguridad@hours(BANK0[10]), activar_seguridad@mins(BANK0[10]), activar_seguridad@secs(BANK0[10]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 10
		 -> activar_seguridad@Temperatura(BANK0[10]), activar_seguridad@hours(BANK0[10]), activar_seguridad@mins(BANK0[10]), activar_seguridad@secs(BANK0[10]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_8(CODE[5]), STR_7(CODE[9]), STR_6(CODE[4]), STR_5(CODE[4]), 
		 -> aux_contrasenia(BANK1[4]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 21
		 -> STR_10(CODE[8]), STR_9(CODE[20]), activar_seguridad@Temperatura(BANK0[10]), activar_seguridad@hours(BANK0[10]), 
		 -> activar_seguridad@mins(BANK0[10]), activar_seguridad@secs(BANK0[10]), STR_4(CODE[13]), STR_3(CODE[20]), 
		 -> STR_2(CODE[7]), STR_1(CODE[21]), 


Critical Paths under _main in COMRAM

    _activar_seguridad->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _xtoa->_pad
    _toupper->_islower
    _efgtoa->___flge
    _tolower->_isupper
    _pad->_fputs
    _fputs->_fputc
    _floorf->___fldiv
    ___flsub->___flmul
    ___flmul->___xxtofl
    ___flge->___flmul
    _atoi->_isspace
    ___xxtofl->_getCad
    _RTC_Read_Clock->_I2C_Read
    _RTC_Read_Clock->_I2C_Repeated_Start
    _RTC_Read_Clock->_I2C_Start
    _I2C_Start->_I2C_Write
    _I2C_Repeated_Start->_I2C_Write
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    _main->_securityHouse
    _securityHouse->_activar_seguridad
    _activar_seguridad->_sprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   48861
                        _Keypad_Init
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                      _securityHouse
 ---------------------------------------------------------------------------------
 (1) _securityHouse                                        2     0      2   46081
                                            152 BANK0      2     0      2
                  _activar_seguridad
 ---------------------------------------------------------------------------------
 (2) _activar_seguridad                                   66    66      0   45982
                                             86 BANK0     66    66      0
                           _I2C_Init
                           _I2C_Stop
                   _Keypad_Key_Press
                          _Lcd_Clear
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
                   _Lcd_Write_String
                     _RTC_Read_Clock
                             ___flge
                            ___flmul
                           ___xxtofl
                               _atoi
                             _getCad
                            _isdigit
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             18    10      8   35848
                                             86 COMRAM     8     0      8
                                             76 BANK0     10    10      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             8     2      6   35033
                                             78 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           48    42      6   34656
                                             68 COMRAM    10     4      6
                                             56 BANK0     20    20      0
                               _atoi
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
                               _xtoa
 ---------------------------------------------------------------------------------
 (6) _xtoa                                                39    28     11    5327
                                             27 COMRAM    39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (7) _toupper                                              8     6      2     412
                                              6 COMRAM     8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (8) _islower                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (7) _isalpha                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _strncmp                                             11     5      6     453
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (6) _efgtoa                                              68    61      7   22924
                                             56 COMRAM    12     5      7
                                              0 BANK0     56    56      0
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (6) _tolower                                              8     6      2    1020
                                              6 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (7) _isupper                                              6     4      2     541
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (7) _strcpy                                              10     6      4     856
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (7) _pad                                                 11     5      6    3393
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (8) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (9) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (10) _putch                                               1     1      0       0
 ---------------------------------------------------------------------------------
 (7) _floorf                                              20    16      4     490
                                             25 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (7) ___fltol                                             10     6      4     381
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (7) ___flsub                                              8     0      8    2889
                                             44 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (8) ___fladd                                             16     8      8    2414
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (7) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (7) ___flmul                                             25    17      8    2960
                                             19 COMRAM    25    17      8
                           ___xxtofl (ARG)
                             _getCad (ARG)
 ---------------------------------------------------------------------------------
 (7) ___flge                                              12     4      8     942
                                             44 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fleq                                              12     4      8     646
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (7) ___fldiv                                             25    17      8    2007
                                              0 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (7) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (7) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (6) _atoi                                                15    13      2    1624
                                              7 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (7) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (6) _isdigit                                              6     4      2     541
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4     403
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _getCad                                               5     3      2      22
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     398
                                              5 COMRAM    14    10      4
                             _getCad (ARG)
 ---------------------------------------------------------------------------------
 (3) _RTC_Read_Clock                                       2     2      0     177
                                              2 COMRAM     2     2      0
                           _I2C_Read
                 _I2C_Repeated_Start
                          _I2C_Start
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (4) _I2C_Start                                            1     1      0      44
                                              1 COMRAM     1     1      0
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (4) _I2C_Repeated_Start                                   1     1      0      44
                                              1 COMRAM     1     1      0
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (4) _I2C_Write                                            1     1      0      22
                                              0 COMRAM     1     1      0
                          _I2C_Ready
 ---------------------------------------------------------------------------------
 (4) _I2C_Read                                             2     2      0      45
                                              0 COMRAM     2     2      0
                            _I2C_Ack
                           _I2C_Nack
                          _I2C_Ready
 ---------------------------------------------------------------------------------
 (5) _I2C_Ready                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C_Nack                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C_Ack                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write_String                                     6     4      2    1028
                                              4 COMRAM     6     4      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (4) _Lcd_Write_Char                                       3     3      0     178
                                              1 COMRAM     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Set_Cursor                                       5     4      1    1444
                                              3 COMRAM     5     4      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Keypad_Key_Press                                    21    21      0     120
                                              0 COMRAM    21    21      0
 ---------------------------------------------------------------------------------
 (3) _I2C_Stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             1     1      0     198
                                              3 COMRAM     1     1      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (4) _Lcd_Cmd                                              2     2      0     110
                                              1 COMRAM     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (5) _Lcd_Port                                             1     1      0      88
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Keypad_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Keypad_Init
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _securityHouse
     _activar_seguridad
       _I2C_Init
       _I2C_Stop
       _Keypad_Key_Press
       _Lcd_Clear
         _Lcd_Cmd
           _Lcd_Port
       _Lcd_Set_Cursor
         _Lcd_Cmd
           _Lcd_Port
       _Lcd_Write_Char
         _Lcd_Port
       _Lcd_Write_String
         _Lcd_Write_Char
           _Lcd_Port
       _RTC_Read_Clock
         _I2C_Read
           _I2C_Ack
           _I2C_Nack
           _I2C_Ready
         _I2C_Repeated_Start
           _I2C_Write
             _I2C_Ready
         _I2C_Start
           _I2C_Write
             _I2C_Ready
         _I2C_Write
           _I2C_Ready
       ___flge
         ___flmul (ARG)
           ___xxtofl (ARG)
             _getCad (ARG)
           _getCad (ARG)
       ___flmul
         ___xxtofl (ARG)
           _getCad (ARG)
         _getCad (ARG)
       ___xxtofl
         _getCad (ARG)
       _atoi
         ___wmul
         _isdigit
         _isspace
       _getCad
       _isdigit
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     _getCad (ARG)
                   _getCad (ARG)
               ___flmul
                 ___xxtofl (ARG)
                   _getCad (ARG)
                 _getCad (ARG)
               ___flneg
               ___flsub
                 ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     _getCad (ARG)
                   _getCad (ARG)
               ___fltol
               ___fpclassifyf
               _floorf
                 ___fldiv (ARG)
               _isupper
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
             _isdigit
             _isupper
             _strncmp
             _tolower
               _isupper
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
               _toupper
                 _islower

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      95       7       58.2%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     9A      A0       5      100.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5E      5F       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     194      20        0.0%
DATA                 0      0     194       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Mon Dec 14 23:01:30 2020

                        ___fldiv@aexp 0019                          ___fldiv@bexp 0018  
                  __size_of_I2C_Ready 0012                          ___fldiv@sign 0011  
                  __size_of_I2C_Start 002E                           _SSPSTATbits 000FC7  
                  __size_of_I2C_Write 0022                                    l99 414A  
                        ___awdiv@sign 0006                   ___wmul@multiplicand 0003  
                                 l101 4160                                   l110 46D6  
                                 l103 4176                                   l105 418C  
                                 l113 474C                                   l122 3F50  
                                 l202 46F6                                   l107 418E  
                                 l131 3EE0                                   l140 442A  
                                 l125 45AE                                   l205 4704  
                                 l142 4438                                   l310 1BB2  
                                 l119 3FB6                                   l151 472E  
                                 l144 4458                                   l304 1B00  
                                 l153 473C                                   l145 445E  
                                 l241 4366                                   l305 1AD8  
                                 l154 473E                                   l170 45F8  
                                 l235 42C6                                   l244 4752  
                                 l148 46F0                                   l172 4612  
                                 l316 4496                                   l237 42D4  
                                 l238 42DA                                   l255 3D08  
                                 l175 4618                                   l327 4694  
                                 l184 471C                                   l192 46B6  
                                 l168 45EA                                   l177 4626  
                                 l601 453E                                   l186 472A  
                                 l290 17A2                                   l179 4640  
                                 l188 472C                                   l196 470A  
                                 l199 4718                                   l295 1A54  
                                 l624 3726                                   l298 1AA8  
                                 l571 3DB8                                   l299 1A80  
                                 l558 3C52                                   l911 2BE8  
                                 l920 2C2E                                   l592 37E4  
                                 l922 2CA6                                   l914 2BAC  
                                 l586 3E62                                   l923 2C94  
                                 l909 2D88                                   l597 382A  
                                 l941 268A                                   l950 28F8  
                                 l951 28E6                                   l855 22F4  
                                 l872 240E                                   l864 25C4  
                                 l856 22E2                                   l945 29EE  
                                 l881 24DE                                   l857 22A8  
                                 l882 24CC                                   l948 2880  
                                 l982 34C4                                   l958 29B0  
                                 l985 3620                                   l897 4320  
                                 l996 35B8                                   l989 355C  
                                 _PEN 007E2A                       __end_of_I2C_Ack 471A  
                                 _pad 3ACA                                   _min 0110  
                                 _sec 0112                          ___awmod@sign 0006  
                                 wreg 000FE8                          ___flmul@aexp 0025  
                        ___flmul@bexp 0026                          ___flmul@sign 0020  
                        ___flmul@temp 002B                          ___flmul@prod 0027  
                        ___fltol@exp1 000A                                  l1100 3B8E  
                                l1032 4576                                  l1040 4288  
                                l1200 2DCA                                  l1026 3464  
                                l1050 4236                                  l1029 346C  
                                l1221 2FFE                                  l1118 14E0  
                                l1223 3062                                  l1207 2E60  
                                l1136 0C76                                  l1240 2104  
                                l1305 3AC8                                  l1313 43AA  
                                l1322 4132                                  l1316 4754  
                                l1164 10B6                                  l1332 39FE  
                                l1342 4070                                  l1095 3B10  
                                l1247 1F68                                  l1328 45E4  
                                l1360 40D6                                  l1256 4010  
                                l4001 37A4                                  l1257 4018  
                                l1274 3274                                  l1098 3B52  
                                l1290 4506                                  l4011 3828  
                                l4003 37B2                                  l1267 3928  
                                l1347 4078                                  l1355 40CE  
                                l1284 4424                                  l4005 37C4  
                                l4101 382C                                  l1277 31B8  
                                l1366 44CE                                  l1198 2DC2  
                                l4007 37D2                                  l4015 4508  
                                l4031 3676                                  l4023 3622  
                                l4103 384C                                  l4201 3334  
                                l4009 3822                                  l4017 451E  
                                l3401 215C                                  l4033 3678  
                                l4025 3638                                  l4105 388A  
                                l4113 38CA                                  l5001 14F8  
                                l4203 333C                                  l4019 452E  
                                l3411 218C                                  l3403 216C  
                                l4035 3688                                  l4115 38DC  
                                l4107 38B2                                  l4123 40D8  
                                l4131 4050                                  l5011 1552  
                                l5003 1508                                  l4213 3424  
                                l4205 3384                                  l3501 2362  
                                l3421 21CC                                  l3413 219A  
                                l3405 2172                                  l4061 3706  
                                l4045 36B2                                  l4037 368C  
                                l4029 364C                                  l4109 38BE  
                                l4141 30DA                                  l4125 40E8  
                                l4133 4062                                  l4301 0BA2  
                                l5101 179C                                  l5021 157C  
                                l5013 1556                                  l4071 4250  
                                l4215 3436                                  l3511 23A8  
                                l3503 2370                                  l3431 2206  
                                l3423 21CE                                  l3415 219C  
                                l3407 2184                                  l4063 3716  
                                l4055 36DA                                  l4047 36BC  
                                l4039 369A                                  l4119 3920  
                                l4151 31A8                                  l4143 30EE  
                                l4127 401A                                  l4311 0C24  
                                l4303 0BD6                                  l4231 08BA  
                                l4223 088A                                  l5111 17F0  
                                l5103 17A8                                  l5031 15EE  
                                l5023 1598                                  l5015 1560  
                                l5007 153C                                  l4073 427E  
                                l4217 3448                                  l4209 33D2  
                                l3521 2424                                  l3513 23DC  
                                l3505 2372                                  l3441 221A  
                                l3433 220A                                  l3417 21AC  
                                l3425 21D6                                  l3409 2186  
                                l4057 36E6                                  l4049 36C6  
                                l4161 3264                                  l4145 30FC  
                                l4153 31DC                                  l4137 3064  
                                l3601 45D8                                  l4081 3ADA  
                                l4401 10A2                                  l4313 0C36  
                                l4321 0C82                                  l4305 0BDE  
                                l4241 0910                                  l4233 08DE  
                                l4225 0894                                  l5121 1812  
                                l5113 180A                                  l5105 17C4  
                                l5041 160A                                  l5033 15F2  
                                l5025 15A8                                  l5017 156C  
                                l5009 154E                                  l4075 4282  
                                l4067 4238                                  l3531 2460  
                                l3523 2434                                  l3515 23DE  
                                l3507 237C                                  l3451 222E  
                                l3443 221E                                  l3435 220E  
                                l3427 21E6                                  l3419 21BC  
                                l4059 36F6                                  l4155 3218  
                                l4139 3084                                  l3371 3A00  
                                l4091 3B30                                  l4083 3AEE  
                                l4411 1158                                  l4403 10AE  
                                l4331 0CC2                                  l4315 0C48  
                                l4307 0C10                                  l4251 093E  
                                l4243 0922                                  l4235 08E8  
                                l4227 08A4                                  l5211 1AB8  
                                l5203 1A8E                                  l5131 182C  
                                l5123 1816                                  l5115 180C  
                                l5107 17DA                                  l5051 1664  
                                l5043 161A                                  l5035 15F6  
                                l5019 1576                                  l3613 4540  
                                l4069 423C                                  l4181 3276  
                                l3701 2BD4                                  l3541 248C  
                                l3533 2462                                  l3517 23EE  
                                l3509 2382                                  l3461 2242  
                                l3453 2232                                  l3445 2222  
                                l3437 2212                                  l3429 21F8  
                                l4157 322C                                  l4149 316C  
                                l3381 3A82                                  l3373 3A12  
                                l4093 3B34                                  l4085 3AFC  
                                l3605 44D0                                  l4501 1420  
                                l4421 11A0                                  l4413 116A  
                                l4405 10D2                                  l4341 0D1E  
                                l4333 0CF8                                  l4317 0C50  
                                l4309 0C20                                  l4261 09B2  
                                l4245 092E                                  l4253 0944  
                                l4237 08F0                                  l4229 08B2  
                                l4165 43EA                                  l4173 40B0  
                                l5221 1B04                                  l5205 1AA0  
                                l5141 1858                                  l5133 1838  
                                l5125 181A                                  l5117 180E  
                                l5109 17E4                                  l5061 168C  
                                l5053 1668                                  l5037 1600  
                                l5029 15DC                                  l5301 43B4  
                                l4191 330C                                  l4183 328A  
                                l3711 2C14                                  l3703 2BD6  
                                l3631 2A1C                                  l3623 29F0  
                                l3551 24C4                                  l3535 2470  
                                l3527 2448                                  l3543 248E  
                                l3519 23FE                                  l3471 22A0  
                                l3455 2236                                  l3447 2226  
                                l3439 2216                                  l3463 2246  
                                l3391 2122                                  l4159 3254  
                                l3375 3A24                                  l4095 3B62  
                                l4087 3B08                                  l4079 3ACA  
                                l4511 1450                                  l4503 142C  
                                l4431 11D6                                  l4423 11B0  
                                l4415 1178                                  l4407 1136  
                                l4351 0D62                                  l4343 0D30  
                                l4335 0D00                                  l4327 0C94  
                                l4319 0C6A                                  l4263 09CE  
                                l4255 096A                                  l4271 0A18  
                                l4247 0936                                  l4239 0902  
                                l4175 40C2                                  l5231 1B56  
                                l5215 1AE6                                  l5223 1B1E  
                                l5151 18D0                                  l5143 1872  
                                l5135 183C                                  l5127 181E  
                                l5119 1810                                  l5071 16DA  
                                l5055 1672                                  l5047 164E  
                                l5311 43D6                                  l5303 43B8  
                                l3617 4670                                  l4193 3310  
                                l4185 328E                                  l3721 2C50  
                                l3713 2C1E                                  l3705 2BE6  
                                l3641 2A56                                  l3633 2A2C  
                                l3625 29FC                                  l3801 26BE  
                                l3561 2542                                  l3537 2478  
                                l3529 2452                                  l3545 249C  
                                l3481 22D6                                  l3473 22B6  
                                l3465 224A                                  l3457 223A  
                                l3449 222A                                  l3393 2132  
                                l3385 2106                                  l3377 3A2E  
                                l4097 3B76                                  l4089 3B1C  
                                l4521 14AA                                  l4505 1434  
                                l4441 120A                                  l4433 11DA  
                                l4425 11B4                                  l4409 1146  
                                l4417 1180                                  l4361 0DAC  
                                l4353 0D7A                                  l4345 0D3E  
                                l4329 0CA6                                  l4337 0D04  
                                l4281 0AA2                                  l4273 0A3E  
                                l4265 09E6                                  l4249 093A  
                                l3609 4498                                  l4169 407A  
                                l5233 1B60                                  l5217 1AF8  
                                l5209 1AAE                                  l5161 1908  
                                l5153 18DC                                  l5145 188E  
                                l5137 184E                                  l5129 1822  
                                l5225 1B38                                  l5081 1710  
                                l5073 16E4                                  l5065 16C0  
                                l5049 1660                                  l5305 43BC  
                                l5251 3EF6                                  l4179 472E  
                                l3619 468C                                  l4187 3292  
                                l3731 2CC2                                  l3723 2C5E  
                                l3715 2C2C                                  l3707 2BF8  
                                l3651 2A82                                  l3643 2A5C  
                                l3635 2A3C                                  l3627 2A0A  
                                l3811 270E                                  l3803 26CA  
                                l3571 2588                                  l3555 24EE  
                                l3563 2544                                  l3547 24A0  
                                l3539 247C                                  l3491 2326  
                                l3483 22E0                                  l3475 22C2  
                                l3467 2274                                  l3459 223E  
                                l3395 2142                                  l3387 2112  
                                l3379 3A4C                                  l4523 14BA  
                                l4515 1484                                  l4507 1444  
                                l4451 12A8                                  l4443 120E  
                                l4435 11E0                                  l4427 11BA  
                                l4419 1192                                  l4363 0DC0  
                                l4371 0EB6                                  l4355 0D8C  
                                l4347 0D42                                  l4339 0D0C  
                                l4291 0AD8                                  l4267 09F0  
                                l4259 09A0                                  l4611 39B4  
                                l4603 3960                                  l4531 2D8A  
                                l5227 1B3C                                  l5171 1912  
                                l5163 190A                                  l5155 18E6  
                                l5147 18AA                                  l5139 1854  
                                l5091 1758                                  l5083 1714  
                                l5067 16D2                                  l5059 167C  
                                l5307 43C0                                  l4621 414C  
                                l5261 3F26                                  l5253 3EFC  
                                l4197 3316                                  l4189 32C2  
                                l3901 3BA2                                  l3741 2D2E  
                                l3733 2CD0                                  l3725 2C8C  
                                l3709 2C0E                                  l3717 2C3E  
                                l3661 2ABC                                  l3653 2A92  
                                l3645 2A62                                  l3637 2A3E  
                                l3629 2A0C                                  l3821 2750  
                                l3813 271A                                  l3805 26D4  
                                l3581 25B2                                  l3573 2596  
                                l3565 2554                                  l3557 24FA  
                                l3549 24AE                                  l3493 2336  
                                l3485 2302                                  l3477 22C6  
                                l3469 2290                                  l3397 2152  
                                l3389 2120                                  l4525 14C0  
                                l4517 1496                                  l4509 144A  
                                l4461 1306                                  l4429 11C6  
                                l4437 11E6                                  l4445 1214  
                                l4453 12AC                                  l4381 0F82  
                                l4373 0ED4                                  l4365 0E24  
                                l4349 0D54                                  l4357 0D94  
                                l4277 0A74                                  l4613 39DC  
                                l4605 396E                                  l4541 2DE8  
                                l4533 2D9A                                  l5229 1B50  
                                l5181 1922                                  l5173 1914  
                                l5165 190C                                  l5157 18F2  
                                l5149 18C6                                  l5093 176A  
                                l5085 171E                                  l5077 16EE  
                                l5069 16D6                                  l5309 43CA  
                                ?_pad 0011                                  l4631 4186  
                                l4623 415A                                  l5271 3F44  
                                l5263 3F2C                                  l5255 3F0A  
                                l5247 3EE2                                  l4199 332C  
                                l3911 3BC8                                  l3903 3BAA  
                                l3751 2D7C                                  l3743 2D48  
                                l3735 2CFA                                  l3719 2C4C  
                                l3663 2AD2                                  l3655 2AA2  
                                l3647 2A70                                  l3639 2A46  
                                l3831 27B2                                  l3823 275C  
                                l3815 2726                                  l3807 26EA  
                                l3583 25B4                                  l3575 259C  
                                l3567 2564                                  l3559 2508  
                                l3495 2344                                  l3487 2312  
                                l3479 22D4                                  l3399 2154  
                                l3591 4386                                  l4519 14A2  
                                l4471 1344                                  l4463 1316  
                                l4455 12CA                                  l4447 126C  
                                l4439 11F8                                  l4391 1032  
                                l4383 0F92                                  l4375 0F08  
                                l4367 0E7C                                  l4359 0D9C  
                                l4295 0B0E                                  l4279 0A86  
                                l4607 3986                                  l4551 2E28  
                                l4543 2E08                                  l4535 2D9C  
                                l4711 1F04                                  l4703 1E56  
                                l5191 1A14                                  l5183 19A8  
                                l5175 1916                                  l5167 190E  
                                l5159 18FC                                  l5087 172A  
                                l5079 16FE                                  l5239 1B70  
                                l4625 4162                                  l4617 4136  
                                l5273 3F4A                                  l5265 3F32  
                                l5257 3F10                                  l5249 3EE8  
                                l4633 4706                                  l4641 46A0  
                                l3921 3C00                                  l3913 3BD0  
                                l3905 3BAE                                  l3753 2D7E  
                                l3745 2D64                                  l3729 2CB6  
                                l3737 2CFE                                  l3681 2B26  
                                l3665 2AE2                                  l3673 2B02  
                                l3657 2AA4                                  l3649 2A72  
                                l3841 2848                                  l3833 27BE  
                                l3825 276C                                  l3817 2734  
                                l3809 26F6                                  l3761 25C6  
                                l3577 259E                                  l3569 2584  
                                l3497 2352                                  l3593 438A  
                                l4481 137A                                  l4473 1354  
                                l4465 131A                                  l4457 12E6  
                                l4449 12A0                                  l4393 1066  
                                l4385 0FA2                                  l4377 0F3A  
                                l4369 0EB0                                  l4297 0B42  
                                l4289 0ABE                                  l4609 39A2  
                                l4561 2EA6                                  l4553 2E44  
                                l4545 2E10                                  l4537 2DB6  
                                l4721 1FA0                                  l4713 1F38  
                                l4705 1E84                                  l5193 1A32  
                                l5185 19CC                                  l5177 1918  
                                l5169 1910                                  l5089 1748  
                                l5281 446E                                  l5275 474E  
                                l4627 4170                                  l4619 4144  
                                l5267 3F38                                  l5259 3F20  
                                l4635 46F2                                  l4643 46AE  
                                l4811 463A                                  l4803 460C  
                                l3931 3C2C                                  l3923 3C06  
                                l3915 3BE2                                  l3907 3BBC  
                                l3747 2D68                                  l3739 2D18  
                                l3691 2B78                                  l3683 2B40  
                                l3675 2B12                                  l3667 2AEA  
                                l3659 2AAC                                  l3851 289E  
                                l3843 2866                                  l3835 27DA  
                                l3827 2786                                  l3819 2740  
                                l3771 2602                                  l3763 25D2  
                                l3579 25A4                                  l3499 235E  
                                l3587 4368                                  l3595 45B0  
                                l4491 13D6                                  l4483 1386  
                                l4475 135C                                  l4467 132A  
                                l4459 12F8                                  l4395 107A  
                                l4387 0FD6                                  l4379 0F50  
                                l4299 0B48                                  l4571 2F16  
                                l4555 2E54                                  l4547 2E1A  
                                l4539 2DE0                                  l4723 1FC4  
                                l5195 1A4E                                  l5187 19D6  
                                l5179 191A                                  l5099 1772  
                                l5283 4472                                  l4629 4178  
                                l5269 3F3E                                  l4901 3C82  
                                l4637 4698                                  l4813 4640  
                                l3925 3C1C                                  l3917 3BEA  
                                l3933 3C32                                  l3909 3BC4  
                                l3941 3D0A                                  l3749 2D76  
                                l3693 2B88                                  l3685 2B50  
                                l3677 2B12                                  l3669 2AEE  
                                l3861 2908                                  l3853 28A2  
                                l3845 2870                                  l3837 2804  
                                l3829 2796                                  l3781 2634  
                                l3773 2612                                  l3765 25E0  
                                l3589 4374                                  l3597 45BC  
                                l4485 138C                                  l4493 13DC  
                                l4477 136A                                  l4469 133C  
                                l4389 102C                                  l4397 107E  
                                l4581 2FBA                                  l4573 2F1C  
                                l4565 2EE0                                  l4549 2E20  
                                l4725 1FDA                                  l4733 2062  
                                l4709 1EF2                                  l4661 1BFE  
                                l4653 1BB4                                  l4821 3FC0  
                                l5197 1A56                                  l5189 19E2  
                                l5285 447A                                  l5277 4460  
                                l4911 3CAA                                  l4831 3F64  
                                l4639 469C                                  l4807 4616  
                                l3935 3C42                                  l3927 3C24  
                                l3919 3BF2                                  l3951 3D36  
                                l3943 3D0E                                  l3695 2B9C  
                                l3687 2B60                                  l3871 296A  
                                l3863 2914                                  l3855 28B0  
                                l3847 287E                                  l3839 283A  
                                l3791 2674                                  l3783 2642  
                                l3775 2618                                  l3767 25E2  
                                l3599 45C0                                  l4495 13EE  
                                l4487 13B2                                  l4479 1372  
                                l4399 108E                                  l4591 3024  
                                l4583 2FD4                                  l4575 2F22  
                                l4567 2EF2                                  l4559 2E94  
                                l4751 20F2                                  l4735 2086  
                                l4743 20B4                                  l4727 1FE8  
                                l4719 1F7C                                  l4671 1C96  
                                l4663 1C22                                  l4655 1BD8  
                                l4823 3FCE                                  l5383 1B84  
                                l5199 1A60                                  l5279 4464  
                                l4761 46C2                                  l4913 3CAE  
                                l4905 3C94                                  l4841 3FAA  
                                l4833 3F76                                  l4649 46B4  
                                l5385 336E                                  l3937 3C4A  
                                l3929 3C26                                  l3961 3D6E  
                                l3953 3D3E                                  l3945 3D1C  
                                l3697 2BAA                                  l3689 2B70  
                                l3881 29D2                                  l3873 297E  
                                l3865 2922                                  l3857 28DE  
                                l3849 2890                                  l3793 267A  
                                l3785 2644                                  l3777 2628  
                                l3769 25F2                                  l4497 1408  
                                l4489 13CE                                  l4593 303A  
                                l4585 2FEE                                  l4569 2F06  
                                l4577 2F80                                  l4745 20C2  
                                l4737 2094                                  l4729 2026  
                                l4673 1CB6                                  l4665 1C2A  
                                l4681 1D1E                                  l4657 1BE6  
                                l4825 3FF4                                  l4763 46C4  
                                l4923 3CD6                                  l4907 3C98  
                                l4827 4740                                  l4843 3FB0  
                                l4835 3F7C                                  l4771 4588  
                                l4851 3EA4                                  l5387 42B0  
                                l3971 3DA8                                  l3963 3D84  
                                l3955 3D50                                  l3947 3D24  
                                l3699 2BB6                                  l3883 29D4  
                                l3875 2998                                  l3867 294C  
                                l3795 269A                                  l3787 2654  
                                l3779 262E                                  l3891 42DC  
                                l4499 140E                                  l4587 300E  
                                l4579 2F9C                                  l4739 20A8  
                                l4691 1DC4                                  l4683 1D40  
                                l4675 1CC4                                  l4667 1C38  
                                l4659 1BF8                                  l4819 3FB8  
                                l5299 43AC                                  l4765 46D4  
                                l4757 46BA                                  l4853 46D8  
                                l4861 471A                                  l4925 3CE0  
                                l4917 3CC0                                  l4837 3F86  
                                l4829 3F54                                  l4781 45A2  
                                l4773 4590                                  l4845 3E64  
                                l3973 3DB0                                  l3965 3D8C  
                                l3957 3D58                                  l3949 3D28  
                                l3981 3DF8                                  l3877 29B4  
                                l3885 29DA                                  l3869 2950  
                                l3797 26AA                                  l3789 2664  
                                l3893 42EC                                  l4597 392A  
                                l4589 3014                                  l4693 1DD6  
                                l4685 1D50                                  l4669 1C5C  
                                l4749 20CE                                  l4941 4224  
                                l4933 41E6                                  l4759 46BC  
                                l4855 46DC                                  l4919 3CC4  
                                l4927 3CF6                                  l4839 3F98  
                                l4783 45A4                                  l4775 4592  
                                l4767 457A                                  l4847 3E70  
                                l4791 444C                                  l4951 34D4  
                                l4871 42BE                                  l4863 428C  
                                l3967 3D92                                  l3959 3D60  
                                l3983 3E26                                  l3887 29DE  
                                l3879 29C4                                  l4599 3954  
                                l4695 1DEC                                  l4687 1D82  
                                l4679 1D0C                                  l4935 41F8  
                                l4857 46EC                                  l4929 3CFA  
                                l4785 45AC                                  l4777 459A  
                                l4769 4586                                  l4849 3EA0  
                                l4793 4454                                  l4881 4324  
                                l4961 3512                                  l4953 34EA  
                                l4945 3470                                  l4873 42C2  
                                l4865 4294                                  l3897 3B90  
                                l3969 3D98                                  l3985 3E36  
                                l3977 3DBA                                  l3993 3728  
                                l4697 1DFA                                  l4689 1D92  
                                l4937 4200                                  l4859 46EE  
                                l4891 3C6C                                  l4779 459C  
                                l4795 445C                                  l4787 4428  
                                l4883 4336                                  l4971 359A  
                                l4963 3544                                  l4947 3480  
                                l4875 42C4                                  l3899 3B94  
                                l3987 3E5A                                  l3979 3DE8  
                                l3995 3756                                  l4699 1E2A  
                                l4939 4208                                  l4893 3C74  
                                l4789 443C                                  l4885 4346  
                                l4981 35F0                                  l4973 35A8  
                                l4965 3546                                  l4957 34FE  
                                l4949 348E                                  l4869 429C  
                                l3989 3E60                                  l3997 3766  
                                l4799 45E8                                  l4887 4356  
                                l4983 3600                                  l4975 35C6  
                                l4967 3552                                  l4959 3506  
                                l3999 3794                                  l4991 14E2  
                                l4889 3C54                                  l4985 360E  
                                l4977 35C8                                  l4969 358E  
                                l4993 14EA                                  l4899 3C7C  
                                l4987 3610                                  l4979 35CC  
                                l4995 14EE                                  l4997 14F0  
                                l4999 14F2                                  _ADON 007E10  
                                STR_1 0812                                  STR_2 0820  
                                STR_3 083B                                  STR_4 084F  
       __end_ofKeypad_Key_Press@F3795 0812                                  STR_5 0882  
                                STR_6 0861                                  STR_7 085C  
                                STR_8 086D                                  STR_9 0827  
                                u4000 2CA2                                  _LATD 000F8C  
                                u4001 2C9E                                  u4010 2CB6  
                                u4011 2CB2                                  u4020 2CD0  
                                u4100 2654                                  u4021 2CCC  
                                u4101 2650                                  u4030 2D18  
                                u4110 2664                                  u4031 2D14  
                                u4111 2660                                  u4040 2D48  
                                u4200 2908                                  u4120 269A  
                                u3400 219A                                  u3320 3A12  
                                u5000 0902                                  u4041 2D44  
                                u4201 2904                                  u4121 2696  
                                u3401 2196                                  u3321 3A0E  
                                u5001 08FE                                  u4050 2D76  
                                u4210 2922                                  u4130 26AA  
                                u3410 21AC                                  u3330 3A24  
                                u5010 0910                                  u4051 2D72  
                                u4211 291E                                  u4131 26A6  
                                u3411 21A8                                  u3331 3A20  
                                u5011 090C                                  u4300 3C42  
                                u4220 296A                                  u4140 2824  
                                u4060 25E0                                  u3500 22F4  
                                u3420 21BC                                  u3340 3A4C  
                                u5100 0A86                                  u5020 0922  
                                u4301 3C3E                                  u4221 2966  
                                u4061 25DC                                  u3501 22F0  
                                u3421 21B8                                  u3341 3A48  
                                u5101 0A82                                  u5021 091E  
                                u4310 3D1C                                  u4230 2998  
                                u4150 287E                                  u4070 25F2  
                                u3510 2302                                  u3430 21F8  
                                u3350 3A82                                  u5110 0B0A  
                                u5030 096A                                  u4311 3D18  
                                u4231 2994                                  u4151 287A  
                                u4071 25EE                                  u3511 22FE  
                                u3431 21F4                                  u3351 3A7E  
                                u5111 0B06                                  u5031 0966  
                                u6000 45F8                                  u4320 3D36  
                                u4400 3756                                  u4240 29D2  
                                u4160 289E                                  u4080 2602  
                                u3600 2460                                  u3520 2312  
                                u3440 2206                                  u3360 2120  
                                u5200 0CF8                                  u5120 0B9E  
                                u5040 0998                                  u6001 45F4  
                                u4321 3D32                                  u4401 3752  
                                u4241 29CE                                  u4161 289A  
                                u4145 281A                                  u4081 25FE  
                                u3601 245C                                  u3521 230E  
                                u3441 2202                                  u3361 211C  
                                u5201 0CF4                                  u5121 0B9A  
                                u5041 0992                                  u6010 4608  
                                u4250 3BA2                                  u4330 3D50  
                                u4410 3794                                  u4170 28B0  
                                u4090 2642                                  u3610 2470  
                                u3530 2344                                  u3450 2274  
                                u3370 2132                                  u5210 0D1E  
                                u5130 0C10                                  u5050 099A  
                                u6011 4604                                  u4251 3B9E  
                                u4331 3D4C                                  u4411 3790  
                                u4171 28AC                                  u4091 263E  
                                u3611 246C                                  u3531 2340  
                                u3451 2270                                  u3371 212E  
                                u5211 0D1A                                  u5131 0C0C  
                                u6100 472A                                  u6020 4626  
                                u4260 3BBC                                  u4340 3D6E  
                                u4420 37B2                                  u4180 28DE  
                                u3700 2554                                  u3620 248C  
                                u3540 2352                                  u3460 228C  
                                u3380 2142                                  u4500 36D6  
                                u5300 0F92                                  u5220 0D30  
                                u5140 0C36                                  u5060 09B2  
                                u6101 4726                                  u6021 4622  
                                u4261 3BB8                                  u4341 3D6A  
                                u4421 37AE                                  u4181 28DA  
                                u3701 2550                                  u3621 2488  
                                u3541 234E                                  u3461 2286  
                                u3381 213E                                  u4501 36D2  
                                u5301 0F8E                                  u5221 0D2C  
                                u5141 0C32                                  u5061 09AE  
                                u6030 4636                                  u6110 42D4  
                                u4270 3BE2                                  u4350 3D84  
                                u4430 37D2                                  u4190 28F4  
                                u3710 2564                                  u3630 249C  
                                u3550 2370                                  u3470 228E  
                                u3390 2184                                  u4510 36F6  
                                u5310 102C                                  u5230 0D3E  
                                u5150 0C48                                  u5070 0A3E  
                                u6031 4632                                  u6111 42D0  
                                u4271 3BDE                                  u4351 3D80  
                                u4431 37CE                                  u4191 28F0  
                                u3711 2560                                  u3631 2498  
                                u3551 236C                                  u3391 2180  
                                u4511 36F2                                  u5311 1028  
                                u5231 0D3A                                  u5151 0C44  
                                u5071 0A3A                                  u6120 3C62  
                                u6200 34EA                                  u4280 3C00  
                                u4360 3DA8                                  u4440 3822  
                                u3720 2584                                  u3640 24AE  
                                u3560 23A8                                  u3480 22B6  
                                u4520 3706                                  u4600 388A  
                                u5400 11F8                                  u5320 107A  
                                u5240 0D54                                  u5160 0C6A  
                                u5080 0A6C                                  u3800 44CA  
                                u6040 4010                                  u6201 34E6  
                                u4281 3BFC                                  u4361 3DA4  
                                u4441 381E                                  u3721 2580  
                                u3641 24AA                                  u3561 23A4  
                                u3481 22B2                                  u4521 3702  
                                u4601 3886                                  u5401 11F4  
                                u5321 1076                                  u5241 0D50  
                                u5161 0C66                                  u5081 0A66  
                                u6041 400C                                  u6130 3C90  
                                u6050 3F64                                  u6210 3540  
                                u3810 4570                                  u4530 4250  
                                u4290 3C1C                                  u4370 3DE8  
                                u4450 451E                                  u3730 2596  
                                u3650 24C4                                  u3570 23EE  
                                u3490 22D4                                  u4610 38B2  
                                u5410 12CA                                  u5330 10A2  
                                u5250 0D62                                  u5170 0C90  
                                u5090 0A6E                                  u6131 3C8C  
                                u6051 3F60                                  u6211 353C  
                                u3811 456A                                  u4531 424C  
                                u4291 3C18                                  u4371 3DE4  
                                u4451 451A                                  u3731 2592  
                                u3651 24C0                                  u3571 23EA  
                                u3491 22D0                                  u4611 38AE  
                                u5411 12C6                                  u5331 109E  
                                u5251 0D5E                                  u5171 0C8C  
                                u6140 3CA6                                  u6060 3F98  
                                u6220 358A                                  u3820 4572  
                                u4540 427E                                  u3900 2B12  
                                u4380 3E26                                  u3740 25B2  
                                u3660 24DA                                  u3580 2424  
                                u4460 3638                                  u4620 38DC  
                                u4700 4062                                  u5500 147E  
                                u5420 12E6                                  u5340 1146  
                                u5260 0D8C                                  u5180 0CA6  
                                u6300 1538                                  u6141 3CA2  
                                u6061 3F94                                  u6221 3586  
                                u4541 427A                                  u3901 2B0E  
                                u4381 3E22                                  u3741 25AE  
                                u3661 24D6                                  u3581 2420  
                                u4461 3634                                  u4621 38D8  
                                u4701 405E                                  u5501 1478  
                                u5421 12E2                                  u5341 1142  
                                u5261 0D88                                  u5181 0CA2  
                                u6150 3CBC                                  u6070 3E9C  
                                u6230 35A8                                  u3910 2B88  
                                u3830 2A0A                                  u4390 3E5A  
                                u3670 24EE                                  u3590 2434  
                                u4470 366C                                  u4710 30AC  
                                u3750 43AA                                  u4550 3ADA  
                                u5510 1480                                  u5430 12F8  
                                u5350 1158                                  u5270 0ED4  
                                u5190 0CC2                                  u6310 154E  
                                u6151 3CB8                                  u6231 35A4  
                                u3911 2B84                                  u3831 2A06  
                                u4391 3E56                                  u3671 24EA  
                                u3591 2430                                  u3751 43A6  
                                u4551 3AD6                                  u5431 12F4  
                                u5351 1154                                  u5271 0ED0  
                                u5191 0CBE                                  u6311 154A  
                                u6160 3CD2                                  u6080 3ED0  
                                u6240 35B8                                  u3920 2BAA  
                                u3840 2A1C                                  u3680 2508  
                                u4480 369A                                  u4640 3916  
                                u4800 3254                                  u4720 30DA  
                                u3760 45D8                                  u4560 3AFC  
                                u5520 1496                                  u5440 1306  
                                u5360 116A                                  u5280 0F3A  
                                u5600 2EDA                                  u6400 168C  
                                u6320 15A8                                  u6161 3CCE  
                                u6241 35B4                                  u3921 2BA6  
                                u3841 2A18                                  u3681 2504  
                                u4481 3696                                  u4641 3910  
                                u4801 3250                                  u4721 30D6  
                                u3761 45D4                                  u4561 3AF8  
                                u5521 1492                                  u5441 1302  
                                u5361 1166                                  u5281 0F36  
                                u5601 2ED4                                  u6401 1688  
                                u6321 15A4                                  u6170 3CF6  
                                u6090 3EE0                                  u6250 35C6  
                                u3930 2BD4                                  u3850 2A2C  
                                u3690 2542                                  u4490 36AE  
                                u4650 3918                                  u4730 30FC  
                                u4570 3B52                                  u3770 4500  
                                u5450 133C                                  u5370 1178  
                                u5290 0F82                                  u4810 441E  
                                u5610 2EDC                                  u5530 2D9A  
                                u6410 16BA                                  u6330 15D6  
                                u6171 3CF2                                  u6091 3EDC  
                                u6251 35C2                                  u3931 2BD0  
                                u3851 2A28                                  u3691 253E  
                                u4491 36AA                                  u4475 3662  
                                u4635 38EE                                  u4731 30F8  
                                u4715 30A2                                  u4571 3B4E  
                                u3771 44FA                                  u5451 1338  
                                u5371 1174                                  u5291 0F7E  
                                u4811 4418                                  u5531 2D96  
                                u6411 16B4                                  u6331 15D0  
                                u6260 3600                                  u6180 3480  
                                u4900 330C                                  u3940 2BF8  
                                u3860 2A70                                  u4580 3B62  
                                u4660 4120                                  u3780 4502  
                                u5460 136A                                  u5380 1192  
                                u5700 3954                                  u4820 4420  
                                u5620 2EF2                                  u5540 2DB6  
                                u6500 17DA                                  u6420 16BC  
                                u6340 15D8                                  _RCEN 007E2B  
                                u6077 3E92                                  u6261 35FC  
                                u6181 347C                                  u4901 3308  
                                u3941 2BF4                                  u3861 2A6C  
                                u4581 3B5E                                  u5461 1366  
                                u5381 118E                                  u5701 3950  
                                u5621 2EEE                                  u5541 2DB2  
                                u6501 17D6                                  u6270 360E  
                                u6190 348E                                  u4910 3328  
                                u3950 2C0E                                  u3870 2A82  
                                u4590 386C                                  u4750 3168  
                                u4670 4132                                  u5470 13EE  
                                u5390 11A0                                  u5710 3986  
                                u3790 44C8                                  u4830 40AA  
                                u5630 2F5A                                  u5550 2DE0  
                                u6510 1A14                                  u6430 16D2  
                                u6350 15EE                                  u6087 3EC6  
                                u6271 360A                                  u6191 348A  
                                u4911 3324                                  u3951 2C0A  
                                u3871 2A7E                                  u4751 3164  
                                u4671 412E                                  u5471 13EA  
                                u5391 119C                                  u5711 3982  
                                u3791 44C2                                  u4831 40A4  
                                u5551 2DDC                                  u6511 1A10  
                                u6431 16CE                                  u6351 15EA  
                                u5800 4704                                  u4920 335C  
                                u3960 2C2C                                  u3880 2A92  
                                u4760 318C                                  u4680 404A  
                                u5480 1408                                  u5720 39A2  
                                u4840 40AC                                  u5640 2F9C  
                                u5560 2E44                                  u6520 1A32  
                                u6440 16FE                                  u6360 161A  
                                u6280 1508                                  u5801 4700  
                                u3961 2C28                                  u3881 2A8E  
                                u4745 3110                                  u4681 4044  
                                u5481 1404                                  u5721 399E  
                                u5641 2F98                                  u5561 2E40  
                                u6521 1A2E                                  u6441 16FA  
                                u6361 1616                                  u6281 1504  
                                u5810 46AE                                  u4930 33B8  
                                u3970 2C4C                                  u3890 2AD2  
                                u4770 31A8                                  u4746 311A  
                                u4690 404C                                  u5490 1420  
                                u5730 39B4                                  u4850 40C2  
                                u5650 2FBA                                  u5570 2E8E  
                                u6530 1A4E                                  u6450 1710  
                                u6370 1648                                  u6290 1536  
                                u5811 46AA                                  u3971 2C48  
                                u3891 2ACE                                  u4595 3862  
                                u4771 31A4                                  u4747 312A  
                                u4667 4116                                  u5491 141C  
                                u5731 39B0                                  u4851 40BE  
                                u5651 2FB6                                  u5635 2F48  
                                u5571 2E88                                  u6531 1A4A  
                                u6451 170C                                  u6371 1642  
                                u6291 1530                                  u4860 473C  
                                u4940 33FA                                  u3980 2C5E  
                                u4780 31FC                                  u5740 39DC  
                                u5660 2FD4                                  u5580 2E90  
                                u5900 1DD6                                  u5820 1BD8  
                                u6540 1A7C                                  u6460 1758  
                                u6380 164A                                  u4861 4738  
                                u3981 2C5A                                  u4765 3182  
                                u5741 39D8                                  u5661 2FD0  
                                u5901 1DD2                                  u5821 1BD4  
                                u6541 1A78                                  u6461 1754  
                                u5750 4144                                  u4950 341E  
                                u4870 32B2                                  u3990 2C8C  
                                u4790 3218                                  u5670 2FEE  
                                u5590 2EA6                                  u5910 1E84  
                                u5830 1C22                                  u6550 1A8E  
                                u6470 176A                                  u6390 1660  
                                u5751 4140                                  u4951 3418  
                                u4927 3352                                  u3991 2C88  
                                u4791 3214                                  u5671 2FEA  
                                u5591 2EA2                                  u5911 1E80  
                                u5831 1C1E                                  u6551 1A8A  
                                u6471 1766                                  u6391 165C  
                                u5760 415A                                  u4960 3420  
                                u4880 32C2                                  u5680 2FFE  
                                u5920 1EEA                                  u5840 1C5C  
                                u6560 1AD4                                  u6480 179C  
                                u5761 4156                                  u4937 33AE  
                                u4881 32BE                                  u4785 31F2  
                                u5681 2FFA                                  u5921 1EE4  
                                u5841 1C58                                  u6561 1AD0  
                                u6481 1798                                  u5770 4170  
                                u4970 3436                                  u4890 32EA  
                                u5690 300E                                  u5930 1EEC  
                                u5850 1D04                                  u6570 1AE6  
                                u6490 17C4                                  u5771 416C  
                                u6707 4594                                  u4971 3432  
                                u4947 33F0                                  u5691 300A  
                                u5851 1CFE                                  u6571 1AE2  
                                u6491 17C0                                  u5780 4186  
                                u4980 3448                                  u5940 1F04  
                                u5860 1D06                                  u6580 1B34  
                                u5781 4182                                  u6717 45A6  
                                u4981 3444                                  u4877 32A8  
                                u5941 1F00                                  u6581 1B30  
                                u6637 4466                                  u5790 4718  
                                u4990 08B2                                  u5950 1FA0  
                                u5870 1D1E                                  u6590 4496  
                                u6727 3EEE                                  u5791 4714  
                                u4991 08AE                                  u5951 1F9C  
                                u5871 1D1A                                  u6647 1588  
                                u6591 4492                                  u5960 1FC4  
                                u5880 1D50                                  u6737 3F02  
                                u4897 32E0                                  u5961 1FC0  
                                u5881 1D4C                                  u6657 1736  
                                u5970 2086                                  u5890 1D92  
                                u6747 3F16                                  u5971 2082  
                                u5891 1D8E                                  u6667 17FC  
                                u5980 4438                                  u6757 46CA  
                                u5981 4434                                  u6677 1844  
                                u5990 444C                                  u5991 4448  
                                u6687 1864                                  u6697 1B10  
                                _RSEN 007E29                     ?_Lcd_Write_String 0005  
                                _dbuf 0114                                  _atoi 3276  
                                _main 43AC                       ?_RTC_Read_Clock 0001  
                                _hour 010E                      __end_of_I2C_Nack 4706  
                                _prec 00FA                      __end_of_I2C_Init 46F2  
                    __end_of_I2C_Read 4460                                  _nout 0108  
                                pad@i 0018                                  pad@p 0015  
                                fsr1h 000FE2                                  fsr2h 000FDA  
                                indf1 000FE7                                  indf2 000FDF  
                                fsr1l 000FE1                                  pad@w 001A  
                                fsr2l 000FD9                                  _xtoa 2D8A  
                    __end_of_I2C_Stop 472E                         ___fpclassifyf 382C  
                                prodh 000FF4                                  prodl 000FF3  
                                start 0000                    ??_Lcd_Write_String 0007  
                     ___fldiv@new_exp 0012                       __end_of_Lcd_Cmd 46D8  
                        _tolower$1595 000D                          ___param_bank 000000  
    RTC_Read_Clock@read_clock_address 0004                                 ??_pad 0017  
                       ___fltol@sign1 0009                                 ?_atoi 0008  
                     __end_of___fladd 25C6                                 ?_main 0001  
                               _ACKEN 007E2C                                 _ACKDT 007E2D  
                     __end_of___fldiv 2D8A                       __end_of___awdiv 3C54  
                     __end_of___flneg 4540                                 STR_10 0865  
                               STR_11 0872                                 STR_12 087A  
                               STR_21 0886                                 STR_15 0876  
                               STR_16 087E                                 STR_19 0886  
                     __end_of___awmod 3DBA                       __end_of___flmul 29F0  
                     __end_of___flsub 4322                       __end_of___fltol 3728  
                     ___awdiv@divisor 0003                                 ?_xtoa 001C  
                     ___awdiv@counter 0005                         ??_Keypad_Init 0001  
                        vfpfcnvrt@fmt 0047                          vfpfcnvrt@llu 0098  
                               _SPBRG 000FAF                                 _PORTD 000F83  
             __size_of_Lcd_Set_Cursor 0066                                 _TRISA 000F92  
                               _TRISB 000F93                                 _TRISC 000F94  
                               _TRISD 000F95                                 _SSPIE 007CEB  
                               _SSPIF 007CF3                                 _TXREG 000FAD  
                               _flags 00FC                                 _fputc 3A00  
                     __end_of_isalpha 4426                                 _fputs 4368  
                     __end_of_isdigit 4578                                 _tecla 00FF  
                   __end_of_I2C_Ready 4740                                 atoi@n 0015  
                               pad@fp 0011                                 atoi@s 0008  
                               _width 010A                                 _putch 4754  
                     __end_of_islower 44D0                       __end_of_isspace 428A  
                   __end_of_I2C_Start 4614                     __end_of_I2C_Write 46B8  
                     __end_of_isupper 4508                                 tablat 000FF5  
                               status 000FD8                       __end_of_sprintf 4238  
                      ?___fpclassifyf 0001                       __end_of_tolower 407A  
                               xtoa@c 0041                                 xtoa@d 001E  
                               xtoa@i 003F                                 xtoa@n 0037  
                               xtoa@p 0033                                 xtoa@w 0035  
                               xtoa@x 0026                       __end_of_strncmp 3A00  
                     __end_of_toupper 40D8                     _activar_seguridad 14E2  
                    __end_of_Lcd_Init 3F52                          _toupper$1610 000D  
                    __end_of_Lcd_Port 4190                    ?_activar_seguridad 0001  
                     __initialization 4190                 activar_seguridad@mins 00CE  
               activar_seguridad@secs 00C4                          __end_of_atoi 346E  
                        __end_of_main 43EA                          __end_of_xtoa 3064  
                  activar_seguridad@i 00F6                             ??_I2C_Ack 0001  
                 ??_activar_seguridad 00B6                                ??_atoi 000A  
                              ??_main 005F                    __size_of_Lcd_Clear 000E  
                              ??_xtoa 0027                         __activetblptr 000002  
         Keypad_Key_Press@keypad_deco 0001                                _ADCON0 000FC2  
                              _ADCON1 000FC1                                _ADCON2 000FC0  
                              ?_fputc 0001                                ?_fputs 000A  
                              _ADRESH 000FC4                      ___awdiv@dividend 0001  
                              ?_putch 0001                   __end_of_Keypad_Init 4754  
           __end_of_activar_seguridad 1BB4                             ??_Lcd_Cmd 0002  
             __size_of_Lcd_Write_Char 0038                                _SSPADD 000FC8  
                              _TRISB0 007C98                                _TRISB1 007C99  
                              _SSPBUF 000FC9                      __end_of___xxtofl 3622  
                        vfprintf@cfmt 0055                                ___flge 3728  
                              ___fleq 3DBA                             ??___fladd 0009  
                              ___wmul 4670                 __end_of_securityHouse 4498  
                           ??___fldiv 0009                             ??___awdiv 0005  
                           ??___flneg 0005                             ??___awmod 0005  
                           ??___flmul 001C                             ??___flsub 0035  
                           ??___fltol 0005                                _getCad 428A  
                              _efgtoa 088A             __size_of_Keypad_Key_Press 00B6  
                              _floorf 3064                                clear_0 41C8  
                    ___awdiv@quotient 0007                       ___awmod@divisor 0003  
                     ___awmod@counter 0005                    _I2C_Repeated_Start 4614  
                              pad@buf 0013                                _strcpy 40D8  
                              _strlen 45B0                                fputc@c 0001  
                              fputs@c 000E                                fputs@i 000F  
                        __pdataCOMRAM 005F                             ?_I2C_Nack 0001  
                              fputs@s 000A                             ??_isalpha 0003  
                           ??_isdigit 0003                             ?_I2C_Init 0001  
                           ?_I2C_Read 0001                             ?_I2C_Stop 0001  
                     ___fpclassifyf@e 0009                       ___fpclassifyf@u 000B  
                     ___fpclassifyf@x 0001                             ??_islower 0003  
                        __mediumconst 0000                             ??_isspace 0003  
                              tblptrh 000FF7                             ??_isupper 0003  
                              tblptrl 000FF6                                tblptru 000FF8  
                 ?_I2C_Repeated_Start 0001                                putch@c 0001  
                    __end_of_vfprintf 401A                             ??_sprintf 005F  
                           ??_tolower 0009                                xtoa@fp 001C  
                           ??_strncmp 0007                             ??_toupper 0009  
                     Lcd_Set_Cursor@a 0005                       Lcd_Set_Cursor@b 0004  
                     Lcd_Set_Cursor@y 0007                       Lcd_Set_Cursor@z 0006  
                          ___flge@ff1 002D                            ___flge@ff2 0031  
                     ??___fpclassifyf 0005                          ___xxtofl@arg 0010  
                        ___xxtofl@exp 000F                          ___xxtofl@val 0006  
                          ___fleq@ff1 0001                            ___fleq@ff2 0005  
                          __accesstop 0060               __end_of__initialization 41DC  
                          ___flneg@f1 0001                     __end_of_Lcd_Clear 474E  
                       ___rparam_used 000001                            ___fltol@f1 0001  
              activar_seguridad@i_836 00F2                activar_seguridad@i_837 00F4  
                ??_I2C_Repeated_Start 0002                        __pcstackCOMRAM 0001  
              activar_seguridad@hours 00D8                          __pidataBANK1 4642  
                       __end_of_fputc 3ACA                         __end_of_fputs 43AC  
                       __end_of_putch 4756                        _Lcd_Set_Cursor 3F52  
                          ??_I2C_Nack 0001                            ??_I2C_Init 0001  
                          ??_I2C_Read 0001                           _Keypad_Init 474E  
                          ??_I2C_Stop 0001                             ?_Lcd_Init 0001  
                           ?_Lcd_Port 0001                      ??_RTC_Read_Clock 0003  
                             ??_fputc 0005                               ??_fputs 000E  
                             ??_putch 0001                            __pbssBANK0 00FA  
                          __pbssBANK1 0100            __size_of_activar_seguridad 06D2  
                        I2C_Read@flag 0001                               ?___flge 002D  
                             ?___fleq 0001                        I2C_Read@buffer 0002  
                             ?___wmul 0001                               ?_getCad 0001  
                             ?_efgtoa 0039                               ?_floorf 001A  
                             _I2C_Ack 4706                               _ACKSTAT 007E2E  
           __size_of_Lcd_Write_String 007E                __end_of_Lcd_Set_Cursor 3FB8  
                             ?_strcpy 0001                               ?_strlen 0001  
                           ?___xxtofl 0006                               _GO_DONE 007E11  
                          _buffer_TX2 0168                    __size_of_vfpfcnvrt 0552  
                          ??_Lcd_Init 0004                            ??_Lcd_Port 0001  
                             _SSPCON1 000FC6                               _SSPCON2 000FC5  
                             _SSPSTAT 000FC7                        _Lcd_Write_Char 4578  
                             _Lcd_Cmd 46B8                 Keypad_Key_Press@F3795 0801  
                           _I2C_Ready 472E                             _I2C_Start 45E6  
                           _I2C_Write 4696                               __Hparam 0000  
                             __Lparam 0000                       __size_of___flge 0104  
                     __size_of___fleq 00AA                            _estado_dia 005F  
                             ___fladd 2106                               ___fldiv 29F0  
                             ___awdiv 3B90                               ___flneg 4508  
                             ___awmod 3D0A                               ___flmul 25C6  
                             ___flsub 42DC                               ___fltol 3622  
                     __size_of___wmul 0026                       __size_of_getCad 0052  
                           ?_vfprintf 004F                      _Keypad_Key_Press 3C54  
                        __psmallconst 0800                       __size_of_efgtoa 0C58  
                     __size_of_floorf 0212                               __pcinit 4190  
                             __ramtop 0800                       ?_Lcd_Set_Cursor 0004  
                             __ptext0 43AC                               __ptext1 4460  
                             __ptext2 14E2                               __ptext3 41E6  
                             __ptext4 3FB8                               __ptext5 1BB4  
                             __ptext6 2D8A                               __ptext7 407A  
                             __ptext8 4498                               __ptext9 43EA  
                     __size_of_strcpy 005C                       __size_of_strlen 0036  
                        __size_of_pad 00C6                               _isalpha 43EA  
                             _isdigit 4540                            ??___xxtofl 000A  
                    ___awmod@dividend 0001                               _islower 4498  
                             _isspace 4238                               _retardo 0193  
                             _isupper 44D0                               efgtoa@c 003F  
                             efgtoa@d 0078                               efgtoa@e 0090  
                             efgtoa@f 003B                               efgtoa@g 008C  
                             efgtoa@h 0082                               efgtoa@i 008A  
                             efgtoa@l 0086                               efgtoa@m 0072  
                             efgtoa@n 0092                               efgtoa@p 007C  
                             efgtoa@t 006C                               efgtoa@u 0094  
                             efgtoa@w 007E                               atoi@neg 000E  
                             _sprintf 41E6                               _tolower 401A  
              __end_of_Lcd_Write_Char 45B0                               _strncmp 392A  
                             _toupper 407A                  end_of_initialization 41DC  
                             floorf@e 0028                               floorf@m 0024  
                             floorf@u 002A                               floorf@x 001A  
                             fputc@fp 0003                         __Lmediumconst 0000  
                             fputs@fp 000C                            ?_I2C_Ready 0001  
        activar_seguridad@temperatura 00EE                            ?_I2C_Start 0001  
                          ?_I2C_Write 0001                     __end_of_vfpfcnvrt 2106  
                          efgtoa@mode 0081                            efgtoa@sign 007A  
                           _RCSTAbits 000FAB                               postdec1 000FE5  
                             postdec2 000FDD                               postinc0 000FEE  
                             postinc1 000FE6                               postinc2 000FDE  
                     _aux_contrasenia 0164                             Lcd_Port@a 0001  
                          ??_vfprintf 0055                               strcpy@d 0009  
                             strlen@a 0003                               strcpy@s 0007  
                             strlen@s 0001                             _PORTAbits 000F80  
                           _PORTBbits 000F81                             _PORTCbits 000F82  
                           _PORTDbits 000F83                           ___fladd@grs 0010  
                       ___xxtofl@sign 000E                             _TRISCbits 000F94  
                   __size_of_I2C_Nack 0014                     __size_of_I2C_Init 001A  
                   __size_of_I2C_Read 003A                           ___fldiv@grs 0014  
                         ___fldiv@rem 000D                     __size_of_I2C_Stop 0014  
                     ?_Lcd_Write_Char 0001                        _estado_teclado 00FE  
                   Lcd_Write_String@a 0005                     Lcd_Write_String@i 0009  
                         ___flmul@grs 0021                             _TXSTAbits 000FAC  
                           _Lcd_Clear 4740                        __end_of___flge 382C  
                      __end_of___fleq 3E64                           vfpfcnvrt@ap 0049  
                         vfpfcnvrt@ct 00A8                           vfpfcnvrt@fp 0045  
                      __end_of___wmul 4696                           _BAUDCONbits 000FB8  
                    _Lcd_Write_String 3E64                        __end_of_getCad 42DC  
                       __pidataCOMRAM 4756                        __end_of_efgtoa 14E2  
                      __end_of_floorf 3276                            floorf@F527 0100  
                        ?_Keypad_Init 0001                        __end_of_strcpy 4134  
                      __end_of_strlen 45E6                   start_initialization 4190  
                         __end_of_pad 3B90  I2C_Repeated_Start@slave_read_address 0002  
              __size_of_securityHouse 0038                     __size_of_Lcd_Init 0070  
                   __size_of_Lcd_Port 005C                 __end_of___fpclassifyf 392A  
                         ??_I2C_Ready 0001                           ??_I2C_Start 0002  
                         ??_I2C_Write 0001                           vfprintf@fmt 0051  
         __size_of_I2C_Repeated_Start 002E                            ?_Lcd_Clear 0001  
                            ??___flge 0035                              ??___fleq 0009  
                            ??___wmul 0005                              ??_getCad 0003  
                            ??_efgtoa 0040                           __pdataBANK1 0168  
                            ??_floorf 001E                              ?_I2C_Ack 0001  
                     Lcd_Write_Char@a 0004                       Lcd_Write_Char@y 0003  
                            ??_strcpy 0005                              ??_strlen 0003  
                           ___fladd@a 0005                             ___fladd@b 0001  
                           ___fldiv@a 0005                             ___fldiv@b 0001  
                           ___flmul@a 0018                             ___flmul@b 0014  
                           ___flsub@a 0031                             ___flsub@b 002D  
                       __pcstackBANK0 0060                     __size_of___xxtofl 01B4  
            __end_of_Keypad_Key_Press 3D0A                              ?_Lcd_Cmd 0001  
                           _atoi$1300 0012                             _atoi$1298 0010  
                           _atoi$1299 0014                           _efgtoa$1453 0064  
                         _efgtoa$1447 0060                           _efgtoa$1448 0062  
                         _efgtoa$1457 0066                           _efgtoa$1458 0068  
                         _efgtoa$1459 006A                      ??_Lcd_Set_Cursor 0005  
                            ?___fladd 0001                              ?___fldiv 0001  
                            ?___awdiv 0001                              ?___flneg 0001  
                            ?___awmod 0001                              ?___flmul 0014  
                            ?___flsub 002D                              ?___fltol 0001  
                       _securityHouse 4460                             _buffer_TX 017D  
                   __size_of_vfprintf 0062                           __smallconst 0800  
                            _I2C_Nack 46F2                              ?_isalpha 0001  
                            ?_isdigit 0001                              _I2C_Init 46D8  
                            _I2C_Read 4426                              _I2C_Stop 471A  
                            ?_islower 0001                              ?_isspace 0001  
                            ?_isupper 0001                  Keypad_Key_Press@fila 0014  
                            ?_sprintf 0057                              ?_tolower 0007  
                      __size_of_fputc 00CA                        __size_of_fputs 0044  
                            ?_strncmp 0001                              ?_toupper 0007  
                      __size_of_putch 0002                        ___wmul@product 0005  
             __size_of_RTC_Read_Clock 0046                              Lcd_Cmd@a 0003  
                         ??_Lcd_Clear 0004                        ?_securityHouse 00F8  
                           _vfpfcnvrt 1BB4                             _xtoa$1470 0031  
                           _xtoa$1469 002F                      __size_of_I2C_Ack 0014  
                   ___wmul@multiplier 0001                      ??_Lcd_Write_Char 0002  
                        _isspace$1316 0007                              _Lcd_Init 3EE2  
                __size_of_Keypad_Init 0006                              _Lcd_Port 4134  
                         _contrasenia 018F                            vfpfcnvrt@c 00AB  
                          vfpfcnvrt@f 00A4                             copy_data0 41A4  
        I2C_Start@slave_write_address 0002              __end_of_Lcd_Write_String 3EE2  
                    __size_of_Lcd_Cmd 0020                              __Hrparam 0000  
                          vfprintf@ap 0053                              __Lrparam 0000  
                          vfprintf@fp 004F                         I2C_Write@data 0001  
                    __size_of___fladd 04C0                      __size_of___fldiv 039A  
                    __size_of___awdiv 00C4                      __size_of___flneg 0038  
                    __size_of___awmod 00B0                      __size_of___flmul 042A  
                    __size_of___flsub 0046                      __size_of___fltol 0106  
                          ?_vfpfcnvrt 0045                    ___fpclassifyf@F465 0104  
                          sprintf@fmt 0059                              ___xxtofl 346E  
                    __size_of_isalpha 003C                      __size_of_isdigit 0038  
                    __size_of_islower 0038                      __size_of_isspace 0052  
                            __ptext10 392A                              __ptext11 088A  
                            __ptext20 3064                              __ptext12 401A  
                            __ptext21 382C                              __ptext13 44D0  
                            __ptext30 3D0A                              __ptext22 3622  
                            __ptext14 40D8                              __ptext31 3B90  
                            __ptext23 42DC                              __ptext15 3ACA  
                            __ptext40 4614                              __ptext32 3276  
                            __ptext24 2106                              __ptext16 45B0  
                            __ptext41 4696                              __ptext33 4238  
                            __ptext25 4508                              __ptext17 4368  
                            __ptext50 3C54                              __ptext42 4426  
                            __ptext34 4540                              __ptext26 25C6  
                            __ptext18 3A00                              __ptext51 471A  
                            __ptext43 472E                              __ptext35 4670  
                            __ptext27 3728                              __ptext19 4754  
                            __ptext52 46D8                              __ptext44 46F2  
                            __ptext36 428A                              __ptext28 3DBA  
                            __ptext53 3EE2                              __ptext45 4706  
                            __ptext37 346E                              __ptext29 29F0  
                            __ptext54 46B8                              __ptext46 3E64  
                            __ptext38 4322                              __ptext55 4134  
                            __ptext47 4578                              __ptext39 45E6  
                            __ptext56 474E                              __ptext48 3F52  
                            __ptext49 4740                      __size_of_isupper 0038  
                            _contador 010C                      __size_of_sprintf 0052  
                    __size_of_tolower 0060                            strcpy@dest 0001  
                    __size_of_strncmp 00D6                      __size_of_toupper 005E  
                 Keypad_Key_Press@tec 0012                         __size_of_atoi 01F8  
                       __size_of_main 003E                         __size_of_xtoa 02DA  
                         getCad@canal 0005                       ??_securityHouse 005F  
                            efgtoa@fp 0039                              efgtoa@ne 0070  
                            efgtoa@pp 006E                              efgtoa@ou 0074  
                            _vfprintf 3FB8                        _vfpfcnvrt$1484 00A0  
                      _vfpfcnvrt$1488 00A2                              isalpha@c 0001  
                            isdigit@c 0001                    Lcd_Write_Char@temp 0002  
                           sprintf@ap 00AE          activar_seguridad@Temperatura 00BA  
                   ?_Keypad_Key_Press 0001                              islower@c 0001  
                            isspace@c 0001                    ??_Keypad_Key_Press 0001  
                           strcpy@src 0003            __end_of_I2C_Repeated_Start 4642  
                            isupper@c 0001                        _RTC_Read_Clock 4322  
                           strncmp@_l 0001                             strncmp@_r 0003  
                         efgtoa@nmode 0080                           ??_vfpfcnvrt 004B  
                  Lcd_Set_Cursor@temp 0008                              sprintf@f 00B0  
                            tolower@c 0007                              sprintf@s 0057  
              __size_of___fpclassifyf 00FE                    securityHouse@valor 00F8  
                            strncmp@l 0008                              strncmp@n 0005  
                            strncmp@r 000A                              toupper@c 0007  
                         _SSPCON2bits 000FC5                _activar_seguridad$1864 00E2  
                       ___fladd@signs 000D                          ___fladd@aexp 000E  
                        ___fladd@bexp 000F                __end_of_RTC_Read_Clock 4368  
               _activar_seguridad$780 00EC                 _activar_seguridad$774 00E6  
               _activar_seguridad$778 00E8                 _activar_seguridad$779 00EA  
