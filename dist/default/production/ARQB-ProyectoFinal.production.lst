

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Mon Dec 14 00:51:27 2020

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=3
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=3
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=3
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=3
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=3
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1
    55                           	psect	text41,global,reloc=2,class=CODE,delta=1
    56                           	psect	text42,global,reloc=2,class=CODE,delta=1
    57                           	psect	text43,global,reloc=2,class=CODE,delta=1
    58                           	psect	text44,global,reloc=2,class=CODE,delta=1
    59                           	psect	text45,global,reloc=2,class=CODE,delta=1
    60                           	psect	text46,global,reloc=2,class=CODE,delta=1
    61                           	psect	text47,global,reloc=2,class=CODE,delta=1
    62                           	psect	text48,global,reloc=2,class=CODE,delta=1
    63                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    64                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    65                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    66                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    67  0000                     
    68                           ; Version 2.20
    69                           ; Generated 12/02/2020 GMT
    70                           ; 
    71                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    72                           ; All rights reserved.
    73                           ; 
    74                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    75                           ; 
    76                           ; Redistribution and use in source and binary forms, with or without modification, are
    77                           ; permitted provided that the following conditions are met:
    78                           ; 
    79                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    80                           ;        conditions and the following disclaimer.
    81                           ; 
    82                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    83                           ;        of conditions and the following disclaimer in the documentation and/or other
    84                           ;        materials provided with the distribution.
    85                           ; 
    86                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    87                           ;        software without specific prior written permission.
    88                           ; 
    89                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    90                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    91                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    92                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    93                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    94                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    95                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    96                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    97                           ; 
    98                           ; 
    99                           ; Code-generator required, PIC18F4550 Definitions
   100                           ; 
   101                           ; SFR Addresses
   102  0000                     
   103                           	psect	idataBANK0
   104  002F52                     __pidataBANK0:
   105                           	callstack 0
   106                           
   107                           ;initializer for _contrasenia
   108  002F52  32                 	db	50
   109  002F53  30                 	db	48
   110  002F54  32                 	db	50
   111  002F55  30                 	db	48
   112                           
   113                           ;initializer for _retardo
   114  002F56  0064               	dw	100
   115                           
   116                           ;initializer for _estado_dia
   117  002F58  4E                 	db	78
   118                           
   119                           	psect	idataBANK1
   120  002E4C                     __pidataBANK1:
   121                           	callstack 0
   122                           
   123                           ;initializer for _buffer_TX2
   124  002E4C  74                 	db	116
   125  002E4D  65                 	db	101
   126  002E4E  6D                 	db	109
   127  002E4F  70                 	db	112
   128  002E50  65                 	db	101
   129  002E51  72                 	db	114
   130  002E52  61                 	db	97
   131  002E53  74                 	db	116
   132  002E54  75                 	db	117
   133  002E55  72                 	db	114
   134  002E56  61                 	db	97
   135  002E57  20                 	db	32
   136  002E58  72                 	db	114
   137  002E59  65                 	db	101
   138  002E5A  67                 	db	103
   139  002E5B  75                 	db	117
   140  002E5C  6C                 	db	108
   141  002E5D  61                 	db	97
   142  002E5E  72                 	db	114
   143  002E5F  0D                 	db	13
   144  002E60  00                 	db	0
   145                           
   146                           ;initializer for _buffer_TX
   147  002E61  74                 	db	116
   148  002E62  65                 	db	101
   149  002E63  6D                 	db	109
   150  002E64  70                 	db	112
   151  002E65  65                 	db	101
   152  002E66  72                 	db	114
   153  002E67  61                 	db	97
   154  002E68  74                 	db	116
   155  002E69  75                 	db	117
   156  002E6A  72                 	db	114
   157  002E6B  61                 	db	97
   158  002E6C  20                 	db	32
   159  002E6D  61                 	db	97
   160  002E6E  6C                 	db	108
   161  002E6F  74                 	db	116
   162  002E70  61                 	db	97
   163  002E71  0D                 	db	13
   164  002E72  00                 	db	0
   165                           
   166                           	psect	smallconst
   167  000800                     __psmallconst:
   168                           	callstack 0
   169  000800  00                 	db	0
   170  000801                     Keypad_Key_Press@F3795:
   171                           	callstack 0
   172  000801  37                 	db	55
   173  000802  38                 	db	56
   174  000803  39                 	db	57
   175  000804  2F                 	db	47
   176  000805  34                 	db	52
   177  000806  35                 	db	53
   178  000807  36                 	db	54
   179  000808  2A                 	db	42
   180  000809  31                 	db	49
   181  00080A  32                 	db	50
   182  00080B  33                 	db	51
   183  00080C  2D                 	db	45
   184  00080D  0D                 	db	13
   185  00080E  30                 	db	48
   186  00080F  3D                 	db	61
   187  000810  2B                 	db	43
   188  000811  00                 	db	0
   189  000812                     __end_ofKeypad_Key_Press@F3795:
   190                           	callstack 0
   191  0000                     _TRISB	set	3987
   192  0000                     _TXREG	set	4013
   193  0000                     _SPBRG	set	4015
   194  0000                     _RCSTAbits	set	4011
   195  0000                     _BAUDCONbits	set	4024
   196  0000                     _TXSTAbits	set	4012
   197  0000                     _TRISCbits	set	3988
   198  0000                     _PORTAbits	set	3968
   199  0000                     _TRISA	set	3986
   200  0000                     _PORTD	set	3971
   201  0000                     _PORTDbits	set	3971
   202  0000                     _LATD	set	3980
   203  0000                     _TRISD	set	3989
   204  0000                     _ADRESH	set	4036
   205  0000                     _ADCON2	set	4032
   206  0000                     _ADCON0	set	4034
   207  0000                     _ADCON1	set	4033
   208  0000                     _SSPCON2bits	set	4037
   209  0000                     _SSPADD	set	4040
   210  0000                     _SSPCON2	set	4037
   211  0000                     _SSPCON1	set	4038
   212  0000                     _SSPSTAT	set	4039
   213  0000                     _SSPBUF	set	4041
   214  0000                     _SSPSTATbits	set	4039
   215  0000                     _PORTBbits	set	3969
   216  0000                     _GO_DONE	set	32273
   217  0000                     _ADON	set	32272
   218  0000                     _ACKEN	set	32300
   219  0000                     _ACKDT	set	32301
   220  0000                     _PEN	set	32298
   221  0000                     _RSEN	set	32297
   222  0000                     _ACKSTAT	set	32302
   223  0000                     _SSPIF	set	31987
   224  0000                     _SSPIE	set	31979
   225  0000                     _TRISB1	set	31897
   226  0000                     _TRISB0	set	31896
   227  0000                     _RCEN	set	32299
   228  000812                     STR_1:
   229  000812  20                 	db	32
   230  000813  20                 	db	32
   231  000814  20                 	db	32
   232  000815  20                 	db	32
   233  000816  20                 	db	32
   234  000817  20                 	db	32
   235  000818  20                 	db	32
   236  000819  20                 	db	32
   237  00081A  20                 	db	32
   238  00081B  20                 	db	32
   239  00081C  20                 	db	32
   240  00081D  20                 	db	32
   241  00081E  20                 	db	32
   242  00081F  20                 	db	32
   243  000820  20                 	db	32
   244  000821  20                 	db	32
   245  000822  20                 	db	32
   246  000823  20                 	db	32
   247  000824  20                 	db	32
   248  000825  20                 	db	32
   249  000826  00                 	db	0
   250  000827                     STR_9:
   251  000827  63                 	db	99	;'c'
   252  000828  6F                 	db	111	;'o'
   253  000829  6E                 	db	110	;'n'
   254  00082A  74                 	db	116	;'t'
   255  00082B  72                 	db	114	;'r'
   256  00082C  61                 	db	97	;'a'
   257  00082D  73                 	db	115	;'s'
   258  00082E  65                 	db	101	;'e'
   259  00082F  F1                 	db	-15
   260  000830  61                 	db	97	;'a'
   261  000831  20                 	db	32
   262  000832  69                 	db	105	;'i'
   263  000833  6E                 	db	110	;'n'
   264  000834  76                 	db	118	;'v'
   265  000835  61                 	db	97	;'a'
   266  000836  6C                 	db	108	;'l'
   267  000837  69                 	db	105	;'i'
   268  000838  64                 	db	100	;'d'
   269  000839  61                 	db	97	;'a'
   270  00083A  00                 	db	0
   271  00083B                     STR_3:
   272  00083B  63                 	db	99	;'c'
   273  00083C  6F                 	db	111	;'o'
   274  00083D  6E                 	db	110	;'n'
   275  00083E  74                 	db	116	;'t'
   276  00083F  72                 	db	114	;'r'
   277  000840  61                 	db	97	;'a'
   278  000841  73                 	db	115	;'s'
   279  000842  65                 	db	101	;'e'
   280  000843  F1                 	db	-15
   281  000844  61                 	db	97	;'a'
   282  000845  20                 	db	32
   283  000846  63                 	db	99	;'c'
   284  000847  6F                 	db	111	;'o'
   285  000848  72                 	db	114	;'r'
   286  000849  72                 	db	114	;'r'
   287  00084A  65                 	db	101	;'e'
   288  00084B  63                 	db	99	;'c'
   289  00084C  74                 	db	116	;'t'
   290  00084D  61                 	db	97	;'a'
   291  00084E  00                 	db	0
   292  00084F                     STR_4:
   293  00084F  54                 	db	84	;'T'
   294  000850  65                 	db	101	;'e'
   295  000851  6D                 	db	109	;'m'
   296  000852  70                 	db	112	;'p'
   297  000853  65                 	db	101	;'e'
   298  000854  72                 	db	114	;'r'
   299  000855  61                 	db	97	;'a'
   300  000856  74                 	db	116	;'t'
   301  000857  75                 	db	117	;'u'
   302  000858  72                 	db	114	;'r'
   303  000859  61                 	db	97	;'a'
   304  00085A  3A                 	db	58	;':'
   305  00085B  00                 	db	0
   306  00085C                     STR_7:
   307  00085C  48                 	db	72	;'H'
   308  00085D  6F                 	db	111	;'o'
   309  00085E  72                 	db	114	;'r'
   310  00085F  61                 	db	97	;'a'
   311  000860  3A                 	db	58	;':'
   312  000861  25                 	db	37
   313  000862  78                 	db	120	;'x'
   314  000863  3A                 	db	58	;':'
   315  000864  00                 	db	0
   316  000865                     STR_10:
   317  000865  54                 	db	84	;'T'
   318  000866  45                 	db	69	;'E'
   319  000867  43                 	db	67	;'C'
   320  000868  4C                 	db	76	;'L'
   321  000869  41                 	db	65	;'A'
   322  00086A  44                 	db	68	;'D'
   323  00086B  4F                 	db	79	;'O'
   324  00086C  00                 	db	0
   325  00086D                     STR_8:
   326  00086D  25                 	db	37
   327  00086E  64                 	db	100	;'d'
   328  00086F  25                 	db	37
   329  000870  63                 	db	99	;'c'
   330  000871  43                 	db	67	;'C'
   331  000872  00                 	db	0
   332  000873                     STR_5:
   333  000873  25                 	db	37
   334  000874  78                 	db	120	;'x'
   335  000875  20                 	db	32
   336  000876  00                 	db	0
   337  000877  00                 	db	0	; dummy byte at the end
   338  0000                     
   339                           ; #config settings
   340                           
   341                           	psect	cinit
   342  0029E6                     __pcinit:
   343                           	callstack 0
   344  0029E6                     start_initialization:
   345                           	callstack 0
   346  0029E6                     __initialization:
   347                           	callstack 0
   348                           
   349                           ; Initialize objects allocated to BANK1 (39 bytes)
   350                           ; load TBLPTR registers with __pidataBANK1
   351  0029E6  0E4C               	movlw	low __pidataBANK1
   352  0029E8  6EF6               	movwf	tblptrl,c
   353  0029EA  0E2E               	movlw	high __pidataBANK1
   354  0029EC  6EF7               	movwf	tblptrh,c
   355  0029EE  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   356  0029F0  6EF8               	movwf	tblptru,c
   357  0029F2  EE01  F000         	lfsr	0,__pdataBANK1
   358  0029F6  EE10 F027          	lfsr	1,39
   359  0029FA                     copy_data0:
   360  0029FA  0009               	tblrd		*+
   361  0029FC  CFF5 FFEE          	movff	tablat,postinc0
   362  002A00  50E5               	movf	postdec1,w,c
   363  002A02  50E1               	movf	fsr1l,w,c
   364  002A04  E1FA               	bnz	copy_data0
   365                           
   366                           ; Initialize objects allocated to BANK0 (7 bytes)
   367                           ; load TBLPTR registers with __pidataBANK0
   368  002A06  0E52               	movlw	low __pidataBANK0
   369  002A08  6EF6               	movwf	tblptrl,c
   370  002A0A  0E2F               	movlw	high __pidataBANK0
   371  002A0C  6EF7               	movwf	tblptrh,c
   372  002A0E  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   373  002A10  6EF8               	movwf	tblptru,c
   374  002A12  EE00  F0F0         	lfsr	0,__pdataBANK0
   375  002A16  EE10 F007          	lfsr	1,7
   376  002A1A                     copy_data1:
   377  002A1A  0009               	tblrd		*+
   378  002A1C  CFF5 FFEE          	movff	tablat,postinc0
   379  002A20  50E5               	movf	postdec1,w,c
   380  002A22  50E1               	movf	fsr1l,w,c
   381  002A24  E1FA               	bnz	copy_data1
   382                           
   383                           ; Clear objects allocated to BANK0 (54 bytes)
   384  002A26  EE00  F0BA         	lfsr	0,__pbssBANK0
   385  002A2A  0E36               	movlw	54
   386  002A2C                     clear_0:
   387  002A2C  6AEE               	clrf	postinc0,c
   388  002A2E  06E8               	decf	wreg,f,c
   389  002A30  E1FD               	bnz	clear_0
   390  002A32                     end_of_initialization:
   391                           	callstack 0
   392  002A32                     __end_of__initialization:
   393                           	callstack 0
   394  002A32  0E00               	movlw	low (__Lmediumconst shr (0+16))
   395  002A34  6EF8               	movwf	tblptru,c
   396  002A36  0100               	movlb	0
   397  002A38  EFF7  F015         	goto	_main	;jump to C main() function
   398                           
   399                           	psect	bssBANK0
   400  0000BA                     __pbssBANK0:
   401                           	callstack 0
   402  0000BA                     _nout:
   403                           	callstack 0
   404  0000BA                     	ds	2
   405  0000BC                     _width:
   406                           	callstack 0
   407  0000BC                     	ds	2
   408  0000BE                     _prec:
   409                           	callstack 0
   410  0000BE                     	ds	2
   411  0000C0                     _flags:
   412                           	callstack 0
   413  0000C0                     	ds	2
   414  0000C2                     _contador:
   415                           	callstack 0
   416  0000C2                     	ds	2
   417  0000C4                     _hour:
   418                           	callstack 0
   419  0000C4                     	ds	2
   420  0000C6                     _min:
   421                           	callstack 0
   422  0000C6                     	ds	2
   423  0000C8                     _sec:
   424                           	callstack 0
   425  0000C8                     	ds	2
   426  0000CA                     _estado_teclado:
   427                           	callstack 0
   428  0000CA                     	ds	1
   429  0000CB                     _tecla:
   430                           	callstack 0
   431  0000CB                     	ds	1
   432  0000CC                     _dbuf:
   433                           	callstack 0
   434  0000CC                     	ds	32
   435  0000EC                     _aux_contrasenia:
   436                           	callstack 0
   437  0000EC                     	ds	4
   438                           
   439                           	psect	dataBANK0
   440  0000F0                     __pdataBANK0:
   441                           	callstack 0
   442  0000F0                     _contrasenia:
   443                           	callstack 0
   444  0000F0                     	ds	4
   445  0000F4                     _retardo:
   446                           	callstack 0
   447  0000F4                     	ds	2
   448  0000F6                     _estado_dia:
   449                           	callstack 0
   450  0000F6                     	ds	1
   451                           
   452                           	psect	dataBANK1
   453  000100                     __pdataBANK1:
   454                           	callstack 0
   455  000100                     _buffer_TX2:
   456                           	callstack 0
   457  000100                     	ds	21
   458  000115                     _buffer_TX:
   459                           	callstack 0
   460  000115                     	ds	18
   461                           
   462                           	psect	cstackBANK0
   463  000060                     __pcstackBANK0:
   464                           	callstack 0
   465  000060                     ?_vfprintf:
   466                           	callstack 0
   467  000060                     vfprintf@fp:
   468                           	callstack 0
   469                           
   470                           ; 2 bytes @ 0x0
   471  000060                     	ds	2
   472  000062                     vfprintf@fmt:
   473                           	callstack 0
   474                           
   475                           ; 2 bytes @ 0x2
   476  000062                     	ds	2
   477  000064                     vfprintf@ap:
   478                           	callstack 0
   479                           
   480                           ; 2 bytes @ 0x4
   481  000064                     	ds	2
   482  000066                     ?_sprintf:
   483                           	callstack 0
   484  000066                     sprintf@s:
   485                           	callstack 0
   486                           
   487                           ; 2 bytes @ 0x6
   488  000066                     	ds	2
   489  000068                     sprintf@fmt:
   490                           	callstack 0
   491                           
   492                           ; 2 bytes @ 0x8
   493  000068                     	ds	6
   494  00006E                     sprintf@ap:
   495                           	callstack 0
   496                           
   497                           ; 2 bytes @ 0xE
   498  00006E                     	ds	2
   499  000070                     sprintf@f:
   500                           	callstack 0
   501                           
   502                           ; 6 bytes @ 0x10
   503  000070                     	ds	6
   504  000076                     ??_activar_seguridad:
   505                           
   506                           ; 1 bytes @ 0x16
   507  000076                     	ds	4
   508  00007A                     activar_seguridad@Temperatura:
   509                           	callstack 0
   510                           
   511                           ; 10 bytes @ 0x1A
   512  00007A                     	ds	10
   513  000084                     activar_seguridad@secs:
   514                           	callstack 0
   515                           
   516                           ; 10 bytes @ 0x24
   517  000084                     	ds	10
   518  00008E                     activar_seguridad@mins:
   519                           	callstack 0
   520                           
   521                           ; 10 bytes @ 0x2E
   522  00008E                     	ds	10
   523  000098                     activar_seguridad@hours:
   524                           	callstack 0
   525                           
   526                           ; 10 bytes @ 0x38
   527  000098                     	ds	10
   528  0000A2                     _activar_seguridad$1687:
   529                           	callstack 0
   530                           
   531                           ; 4 bytes @ 0x42
   532  0000A2                     	ds	4
   533  0000A6                     _activar_seguridad$706:
   534                           	callstack 0
   535                           
   536                           ; 2 bytes @ 0x46
   537  0000A6                     	ds	2
   538  0000A8                     _activar_seguridad$710:
   539                           	callstack 0
   540                           
   541                           ; 2 bytes @ 0x48
   542  0000A8                     	ds	2
   543  0000AA                     _activar_seguridad$711:
   544                           	callstack 0
   545                           
   546                           ; 2 bytes @ 0x4A
   547  0000AA                     	ds	2
   548  0000AC                     _activar_seguridad$712:
   549                           	callstack 0
   550                           
   551                           ; 2 bytes @ 0x4C
   552  0000AC                     	ds	2
   553  0000AE                     activar_seguridad@temperatura:
   554                           	callstack 0
   555                           
   556                           ; 4 bytes @ 0x4E
   557  0000AE                     	ds	4
   558  0000B2                     activar_seguridad@i_760:
   559                           	callstack 0
   560                           
   561                           ; 2 bytes @ 0x52
   562  0000B2                     	ds	2
   563  0000B4                     activar_seguridad@i_761:
   564                           	callstack 0
   565                           
   566                           ; 2 bytes @ 0x54
   567  0000B4                     	ds	2
   568  0000B6                     activar_seguridad@i:
   569                           	callstack 0
   570                           
   571                           ; 2 bytes @ 0x56
   572  0000B6                     	ds	2
   573  0000B8                     securityHouse@valor:
   574                           	callstack 0
   575                           
   576                           ; 2 bytes @ 0x58
   577  0000B8                     	ds	2
   578                           
   579                           	psect	cstackCOMRAM
   580  000001                     __pcstackCOMRAM:
   581                           	callstack 0
   582  000001                     ?_isdigit:
   583                           	callstack 0
   584  000001                     ?_isspace:
   585                           	callstack 0
   586  000001                     ?_strlen:
   587                           	callstack 0
   588  000001                     ?_isupper:
   589                           	callstack 0
   590  000001                     ?_isalpha:
   591                           	callstack 0
   592  000001                     ?_islower:
   593                           	callstack 0
   594  000001                     ?_getCad:
   595                           	callstack 0
   596  000001                     ?___wmul:
   597                           	callstack 0
   598  000001                     ?___fltol:
   599                           	callstack 0
   600  000001                     ?___aodiv:
   601                           	callstack 0
   602  000001                     ?___aomod:
   603                           	callstack 0
   604  000001                     Lcd_Port@a:
   605                           	callstack 0
   606  000001                     I2C_Read@flag:
   607                           	callstack 0
   608  000001                     I2C_Write@data:
   609                           	callstack 0
   610  000001                     ___wmul@multiplier:
   611                           	callstack 0
   612  000001                     isdigit@c:
   613                           	callstack 0
   614  000001                     isspace@c:
   615                           	callstack 0
   616  000001                     isalpha@c:
   617                           	callstack 0
   618  000001                     isupper@c:
   619                           	callstack 0
   620  000001                     fputc@c:
   621                           	callstack 0
   622  000001                     strlen@s:
   623                           	callstack 0
   624  000001                     islower@c:
   625                           	callstack 0
   626  000001                     ___flge@ff1:
   627                           	callstack 0
   628  000001                     ___fltol@f1:
   629                           	callstack 0
   630  000001                     ___aodiv@dividend:
   631                           	callstack 0
   632  000001                     ___aomod@dividend:
   633                           	callstack 0
   634  000001                     Keypad_Key_Press@keypad_deco:
   635                           	callstack 0
   636                           
   637                           ; 17 bytes @ 0x0
   638  000001                     	ds	1
   639  000002                     ??_Lcd_Cmd:
   640  000002                     Lcd_Write_Char@temp:
   641                           	callstack 0
   642  000002                     I2C_Read@buffer:
   643                           	callstack 0
   644  000002                     I2C_Start@slave_write_address:
   645                           	callstack 0
   646  000002                     I2C_Repeated_Start@slave_read_address:
   647                           	callstack 0
   648                           
   649                           ; 1 bytes @ 0x1
   650  000002                     	ds	1
   651  000003                     ??_isdigit:
   652  000003                     ??_isspace:
   653  000003                     ??_isupper:
   654  000003                     ??_isalpha:
   655  000003                     ??_islower:
   656  000003                     ??_getCad:
   657  000003                     ??_RTC_Read_Clock:
   658  000003                     Lcd_Cmd@a:
   659                           	callstack 0
   660  000003                     Lcd_Write_Char@y:
   661                           	callstack 0
   662  000003                     ___wmul@multiplicand:
   663                           	callstack 0
   664  000003                     fputc@fp:
   665                           	callstack 0
   666  000003                     strlen@a:
   667                           	callstack 0
   668                           
   669                           ; 2 bytes @ 0x2
   670  000003                     	ds	1
   671  000004                     ??_Lcd_Init:
   672  000004                     Lcd_Set_Cursor@b:
   673                           	callstack 0
   674  000004                     Lcd_Write_Char@a:
   675                           	callstack 0
   676  000004                     RTC_Read_Clock@read_clock_address:
   677                           	callstack 0
   678                           
   679                           ; 1 bytes @ 0x3
   680  000004                     	ds	1
   681  000005                     ??_fputc:
   682  000005                     ??___fltol:
   683  000005                     Lcd_Set_Cursor@a:
   684                           	callstack 0
   685  000005                     getCad@canal:
   686                           	callstack 0
   687  000005                     Lcd_Write_String@a:
   688                           	callstack 0
   689  000005                     ___wmul@product:
   690                           	callstack 0
   691  000005                     ___flge@ff2:
   692                           	callstack 0
   693                           
   694                           ; 4 bytes @ 0x4
   695  000005                     	ds	1
   696  000006                     ?___xxtofl:
   697                           	callstack 0
   698  000006                     Lcd_Set_Cursor@z:
   699                           	callstack 0
   700  000006                     ___xxtofl@val:
   701                           	callstack 0
   702                           
   703                           ; 4 bytes @ 0x5
   704  000006                     	ds	1
   705  000007                     ??_Lcd_Write_String:
   706  000007                     ?_toupper:
   707                           	callstack 0
   708  000007                     Lcd_Set_Cursor@y:
   709                           	callstack 0
   710  000007                     _isspace$1240:
   711                           	callstack 0
   712  000007                     toupper@c:
   713                           	callstack 0
   714                           
   715                           ; 2 bytes @ 0x6
   716  000007                     	ds	1
   717  000008                     ?_atoi:
   718                           	callstack 0
   719  000008                     Lcd_Set_Cursor@temp:
   720                           	callstack 0
   721  000008                     atoi@s:
   722                           	callstack 0
   723                           
   724                           ; 2 bytes @ 0x7
   725  000008                     	ds	1
   726  000009                     ??_toupper:
   727  000009                     ??___flge:
   728  000009                     ___fltol@sign1:
   729                           	callstack 0
   730  000009                     Lcd_Write_String@i:
   731                           	callstack 0
   732  000009                     ___aodiv@divisor:
   733                           	callstack 0
   734  000009                     ___aomod@divisor:
   735                           	callstack 0
   736                           
   737                           ; 8 bytes @ 0x8
   738  000009                     	ds	1
   739  00000A                     ??_atoi:
   740  00000A                     ??___xxtofl:
   741  00000A                     ?_ctoa:
   742                           	callstack 0
   743  00000A                     ___fltol@exp1:
   744                           	callstack 0
   745  00000A                     ctoa@fp:
   746                           	callstack 0
   747  00000A                     fputs@s:
   748                           	callstack 0
   749                           
   750                           ; 2 bytes @ 0x9
   751  00000A                     	ds	2
   752  00000C                     ctoa@c:
   753                           	callstack 0
   754  00000C                     fputs@fp:
   755                           	callstack 0
   756                           
   757                           ; 2 bytes @ 0xB
   758  00000C                     	ds	1
   759  00000D                     ??_ctoa:
   760  00000D                     _toupper$1434:
   761                           	callstack 0
   762                           
   763                           ; 2 bytes @ 0xC
   764  00000D                     	ds	1
   765  00000E                     ___xxtofl@sign:
   766                           	callstack 0
   767  00000E                     fputs@c:
   768                           	callstack 0
   769  00000E                     atoi@neg:
   770                           	callstack 0
   771  00000E                     ctoa@l:
   772                           	callstack 0
   773                           
   774                           ; 2 bytes @ 0xD
   775  00000E                     	ds	1
   776  00000F                     ___xxtofl@exp:
   777                           	callstack 0
   778  00000F                     fputs@i:
   779                           	callstack 0
   780                           
   781                           ; 2 bytes @ 0xE
   782  00000F                     	ds	1
   783  000010                     _atoi$1222:
   784                           	callstack 0
   785  000010                     ctoa@w:
   786                           	callstack 0
   787  000010                     ___xxtofl@arg:
   788                           	callstack 0
   789                           
   790                           ; 4 bytes @ 0xF
   791  000010                     	ds	1
   792  000011                     ?_pad:
   793                           	callstack 0
   794  000011                     ___aodiv@counter:
   795                           	callstack 0
   796  000011                     ___aomod@counter:
   797                           	callstack 0
   798  000011                     pad@fp:
   799                           	callstack 0
   800                           
   801                           ; 2 bytes @ 0x10
   802  000011                     	ds	1
   803  000012                     ___aodiv@sign:
   804                           	callstack 0
   805  000012                     ___aomod@sign:
   806                           	callstack 0
   807  000012                     Keypad_Key_Press@tec:
   808                           	callstack 0
   809  000012                     _atoi$1224:
   810                           	callstack 0
   811                           
   812                           ; 2 bytes @ 0x11
   813  000012                     	ds	1
   814  000013                     ?_abs:
   815                           	callstack 0
   816  000013                     pad@buf:
   817                           	callstack 0
   818  000013                     abs@a:
   819                           	callstack 0
   820  000013                     ___aodiv@quotient:
   821                           	callstack 0
   822                           
   823                           ; 8 bytes @ 0x12
   824  000013                     	ds	1
   825  000014                     ?___flmul:
   826                           	callstack 0
   827  000014                     _atoi$1223:
   828                           	callstack 0
   829  000014                     Keypad_Key_Press@fila:
   830                           	callstack 0
   831  000014                     ___flmul@b:
   832                           	callstack 0
   833                           
   834                           ; 4 bytes @ 0x13
   835  000014                     	ds	1
   836  000015                     ??_abs:
   837  000015                     atoi@n:
   838                           	callstack 0
   839  000015                     pad@p:
   840                           	callstack 0
   841                           
   842                           ; 2 bytes @ 0x14
   843  000015                     	ds	2
   844  000017                     ??_pad:
   845                           
   846                           ; 1 bytes @ 0x16
   847  000017                     	ds	1
   848  000018                     pad@i:
   849                           	callstack 0
   850  000018                     ___flmul@a:
   851                           	callstack 0
   852                           
   853                           ; 4 bytes @ 0x17
   854  000018                     	ds	2
   855  00001A                     pad@w:
   856                           	callstack 0
   857                           
   858                           ; 2 bytes @ 0x19
   859  00001A                     	ds	2
   860  00001C                     ??___flmul:
   861  00001C                     ?_dtoa:
   862                           	callstack 0
   863  00001C                     ?_xtoa:
   864                           	callstack 0
   865  00001C                     dtoa@fp:
   866                           	callstack 0
   867  00001C                     xtoa@fp:
   868                           	callstack 0
   869                           
   870                           ; 2 bytes @ 0x1B
   871  00001C                     	ds	2
   872  00001E                     dtoa@d:
   873                           	callstack 0
   874  00001E                     xtoa@d:
   875                           	callstack 0
   876                           
   877                           ; 8 bytes @ 0x1D
   878  00001E                     	ds	2
   879  000020                     ___flmul@sign:
   880                           	callstack 0
   881                           
   882                           ; 1 bytes @ 0x1F
   883  000020                     	ds	1
   884  000021                     ___flmul@grs:
   885                           	callstack 0
   886                           
   887                           ; 4 bytes @ 0x20
   888  000021                     	ds	4
   889  000025                     ___flmul@aexp:
   890                           	callstack 0
   891                           
   892                           ; 1 bytes @ 0x24
   893  000025                     	ds	1
   894  000026                     ??_dtoa:
   895  000026                     ___flmul@bexp:
   896                           	callstack 0
   897  000026                     xtoa@x:
   898                           	callstack 0
   899                           
   900                           ; 1 bytes @ 0x25
   901  000026                     	ds	1
   902  000027                     ??_xtoa:
   903  000027                     ___flmul@prod:
   904                           	callstack 0
   905                           
   906                           ; 4 bytes @ 0x26
   907  000027                     	ds	4
   908  00002B                     ___flmul@temp:
   909                           	callstack 0
   910                           
   911                           ; 2 bytes @ 0x2A
   912  00002B                     	ds	3
   913  00002E                     _dtoa$1337:
   914                           	callstack 0
   915                           
   916                           ; 2 bytes @ 0x2D
   917  00002E                     	ds	1
   918  00002F                     _xtoa$1348:
   919                           	callstack 0
   920                           
   921                           ; 2 bytes @ 0x2E
   922  00002F                     	ds	1
   923  000030                     dtoa@p:
   924                           	callstack 0
   925                           
   926                           ; 2 bytes @ 0x2F
   927  000030                     	ds	1
   928  000031                     _xtoa$1349:
   929                           	callstack 0
   930                           
   931                           ; 2 bytes @ 0x30
   932  000031                     	ds	1
   933  000032                     dtoa@w:
   934                           	callstack 0
   935                           
   936                           ; 2 bytes @ 0x31
   937  000032                     	ds	1
   938  000033                     xtoa@p:
   939                           	callstack 0
   940                           
   941                           ; 2 bytes @ 0x32
   942  000033                     	ds	1
   943  000034                     dtoa@s:
   944                           	callstack 0
   945                           
   946                           ; 2 bytes @ 0x33
   947  000034                     	ds	1
   948  000035                     xtoa@w:
   949                           	callstack 0
   950                           
   951                           ; 2 bytes @ 0x34
   952  000035                     	ds	1
   953  000036                     dtoa@n:
   954                           	callstack 0
   955                           
   956                           ; 8 bytes @ 0x35
   957  000036                     	ds	1
   958  000037                     xtoa@n:
   959                           	callstack 0
   960                           
   961                           ; 8 bytes @ 0x36
   962  000037                     	ds	7
   963  00003E                     dtoa@i:
   964                           	callstack 0
   965                           
   966                           ; 2 bytes @ 0x3D
   967  00003E                     	ds	1
   968  00003F                     xtoa@i:
   969                           	callstack 0
   970                           
   971                           ; 2 bytes @ 0x3E
   972  00003F                     	ds	2
   973  000041                     xtoa@c:
   974                           	callstack 0
   975                           
   976                           ; 2 bytes @ 0x40
   977  000041                     	ds	2
   978  000043                     ?_vfpfcnvrt:
   979                           	callstack 0
   980  000043                     vfpfcnvrt@fp:
   981                           	callstack 0
   982                           
   983                           ; 2 bytes @ 0x42
   984  000043                     	ds	2
   985  000045                     vfpfcnvrt@fmt:
   986                           	callstack 0
   987                           
   988                           ; 2 bytes @ 0x44
   989  000045                     	ds	2
   990  000047                     vfpfcnvrt@ap:
   991                           	callstack 0
   992                           
   993                           ; 2 bytes @ 0x46
   994  000047                     	ds	2
   995  000049                     ??_vfpfcnvrt:
   996                           
   997                           ; 1 bytes @ 0x48
   998  000049                     	ds	4
   999  00004D                     vfpfcnvrt@ll:
  1000                           	callstack 0
  1001                           
  1002                           ; 8 bytes @ 0x4C
  1003  00004D                     	ds	8
  1004  000055                     vfpfcnvrt@llu:
  1005                           	callstack 0
  1006                           
  1007                           ; 8 bytes @ 0x54
  1008  000055                     	ds	8
  1009  00005D                     vfpfcnvrt@c:
  1010                           	callstack 0
  1011                           
  1012                           ; 1 bytes @ 0x5C
  1013  00005D                     	ds	1
  1014  00005E                     vfprintf@cfmt:
  1015                           	callstack 0
  1016                           
  1017                           ; 2 bytes @ 0x5D
  1018  00005E                     	ds	2
  1019  000060                     
  1020                           ; 1 bytes @ 0x5F
  1021 ;;
  1022 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1023 ;;
  1024 ;; *************** function _main *****************
  1025 ;; Defined at:
  1026 ;;		line 275 in file "main.c"
  1027 ;; Parameters:    Size  Location     Type
  1028 ;;		None
  1029 ;; Auto vars:     Size  Location     Type
  1030 ;;		None
  1031 ;; Return value:  Size  Location     Type
  1032 ;;                  1    wreg      void 
  1033 ;; Registers used:
  1034 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1035 ;; Tracked objects:
  1036 ;;		On entry : 0/0
  1037 ;;		On exit  : 0/0
  1038 ;;		Unchanged: 0/0
  1039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1040 ;;      Params:         0       0       0       0       0       0       0       0       0
  1041 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1042 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1043 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1044 ;;Total ram usage:        0 bytes
  1045 ;; Hardware stack levels required when called:   10
  1046 ;; This function calls:
  1047 ;;		_Keypad_Init
  1048 ;;		_Lcd_Clear
  1049 ;;		_Lcd_Init
  1050 ;;		_Lcd_Set_Cursor
  1051 ;;		_Lcd_Write_String
  1052 ;;		_securityHouse
  1053 ;; This function is called by:
  1054 ;;		Startup code after reset
  1055 ;; This function uses a non-reentrant model
  1056 ;;
  1057                           
  1058                           	psect	text0
  1059  002BEE                     __ptext0:
  1060                           	callstack 0
  1061  002BEE                     _main:
  1062                           	callstack 21
  1063  002BEE                     
  1064                           ;main.c: 276:     TRISB = 0;
  1065  002BEE  0E00               	movlw	0
  1066  002BF0  6E93               	movwf	147,c	;volatile
  1067                           
  1068                           ;main.c: 277:     ADCON1 = 0b00001111;
  1069  002BF2  0E0F               	movlw	15
  1070  002BF4  6EC1               	movwf	193,c	;volatile
  1071  002BF6                     
  1072                           ;main.c: 278:     Keypad_Init();
  1073  002BF6  ECAD  F017         	call	_Keypad_Init	;wreg free
  1074  002BFA                     
  1075                           ;main.c: 279:     Lcd_Init();
  1076  002BFA  ECFA  F013         	call	_Lcd_Init	;wreg free
  1077  002BFE                     
  1078                           ;main.c: 280:     Lcd_Clear();
  1079  002BFE  ECA2  F017         	call	_Lcd_Clear	;wreg free
  1080  002C02                     
  1081                           ;main.c: 281:     Lcd_Set_Cursor(1, 6);
  1082  002C02  0E06               	movlw	6
  1083  002C04  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  1084  002C06  0E01               	movlw	1
  1085  002C08  EC32  F014         	call	_Lcd_Set_Cursor
  1086  002C0C                     
  1087                           ;main.c: 282:     Lcd_Write_String("TECLADO");
  1088  002C0C  0E65               	movlw	low STR_10
  1089  002C0E  6E05               	movwf	Lcd_Write_String@a^0,c
  1090  002C10  0E08               	movlw	high STR_10
  1091  002C12  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  1092  002C14  ECBB  F013         	call	_Lcd_Write_String	;wreg free
  1093  002C18                     l3758:
  1094                           
  1095                           ;main.c: 284:         securityHouse(retardo);
  1096  002C18  C0F4  F0B8         	movff	_retardo,securityHouse@valor
  1097  002C1C  C0F5  F0B9         	movff	_retardo+1,securityHouse@valor+1
  1098  002C20  EC51  F016         	call	_securityHouse	;wreg free
  1099  002C24  EF0C  F016         	goto	l3758
  1100  002C28  EF00  F000         	goto	start
  1101  002C2C                     __end_of_main:
  1102                           	callstack 0
  1103                           
  1104 ;; *************** function _securityHouse *****************
  1105 ;; Defined at:
  1106 ;;		line 267 in file "main.c"
  1107 ;; Parameters:    Size  Location     Type
  1108 ;;  valor           2   88[BANK0 ] int 
  1109 ;; Auto vars:     Size  Location     Type
  1110 ;;		None
  1111 ;; Return value:  Size  Location     Type
  1112 ;;                  1    wreg      void 
  1113 ;; Registers used:
  1114 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1115 ;; Tracked objects:
  1116 ;;		On entry : 0/0
  1117 ;;		On exit  : 0/0
  1118 ;;		Unchanged: 0/0
  1119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1120 ;;      Params:         0       2       0       0       0       0       0       0       0
  1121 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1122 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1123 ;;      Totals:         0       2       0       0       0       0       0       0       0
  1124 ;;Total ram usage:        2 bytes
  1125 ;; Hardware stack levels used:    1
  1126 ;; Hardware stack levels required when called:    9
  1127 ;; This function calls:
  1128 ;;		_activar_seguridad
  1129 ;; This function is called by:
  1130 ;;		_main
  1131 ;; This function uses a non-reentrant model
  1132 ;;
  1133                           
  1134                           	psect	text1
  1135  002CA2                     __ptext1:
  1136                           	callstack 0
  1137  002CA2                     _securityHouse:
  1138                           	callstack 21
  1139  002CA2                     
  1140                           ;main.c: 268:     while (valor > 0) {
  1141  002CA2  EF5E  F016         	goto	l3732
  1142  002CA6                     l3726:
  1143                           
  1144                           ; BSR set to: 0
  1145                           ;main.c: 269:         _delay((unsigned long)((700)*(8000000/4000000.0)));
  1146  002CA6  0EC8               	movlw	200
  1147  002CA8                     u3837:
  1148  002CA8  D000               	nop2	
  1149  002CAA  D000               	nop2	
  1150  002CAC  2EE8               	decfsz	wreg,f,c
  1151  002CAE  D7FC               	bra	u3837
  1152  002CB0                     
  1153                           ;main.c: 270:         activar_seguridad();
  1154  002CB0  EC3C  F004         	call	_activar_seguridad	;wreg free
  1155  002CB4                     
  1156                           ;main.c: 271:         valor--;
  1157  002CB4  0100               	movlb	0	; () banked
  1158  002CB6  07B8               	decf	securityHouse@valor& (0+255),f,b
  1159  002CB8  A0D8               	btfss	status,0,c
  1160  002CBA  07B9               	decf	(securityHouse@valor+1)& (0+255),f,b
  1161  002CBC                     l3732:
  1162                           
  1163                           ;main.c: 268:     while (valor > 0) {
  1164  002CBC  0100               	movlb	0	; () banked
  1165  002CBE  BFB9               	btfsc	(securityHouse@valor+1)& (0+255),7,b
  1166  002CC0  EF6C  F016         	goto	u3790
  1167  002CC4  51B9               	movf	(securityHouse@valor+1)& (0+255),w,b
  1168  002CC6  E106               	bnz	u3791
  1169  002CC8  05B8               	decf	securityHouse@valor& (0+255),w,b
  1170  002CCA  B0D8               	btfsc	status,0,c
  1171  002CCC  EF6A  F016         	goto	u3791
  1172  002CD0  EF6C  F016         	goto	u3790
  1173  002CD4                     u3791:
  1174  002CD4  EF53  F016         	goto	l3726
  1175  002CD8                     u3790:
  1176  002CD8                     
  1177                           ; BSR set to: 0
  1178  002CD8  0012               	return		;funcret
  1179  002CDA                     __end_of_securityHouse:
  1180                           	callstack 0
  1181                           
  1182 ;; *************** function _activar_seguridad *****************
  1183 ;; Defined at:
  1184 ;;		line 101 in file "main.c"
  1185 ;; Parameters:    Size  Location     Type
  1186 ;;		None
  1187 ;; Auto vars:     Size  Location     Type
  1188 ;;  i               2   84[BANK0 ] int 
  1189 ;;  i               2   82[BANK0 ] int 
  1190 ;;  hours          10   56[BANK0 ] unsigned char [10]
  1191 ;;  mins           10   46[BANK0 ] unsigned char [10]
  1192 ;;  secs           10   36[BANK0 ] unsigned char [10]
  1193 ;;  Temperatura    10   26[BANK0 ] unsigned char [10]
  1194 ;;  temperatura     4   78[BANK0 ] float 
  1195 ;;  i               2   86[BANK0 ] int 
  1196 ;; Return value:  Size  Location     Type
  1197 ;;                  1    wreg      void 
  1198 ;; Registers used:
  1199 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1200 ;; Tracked objects:
  1201 ;;		On entry : 0/0
  1202 ;;		On exit  : 0/0
  1203 ;;		Unchanged: 0/0
  1204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1205 ;;      Params:         0       0       0       0       0       0       0       0       0
  1206 ;;      Locals:         0      62       0       0       0       0       0       0       0
  1207 ;;      Temps:          0       4       0       0       0       0       0       0       0
  1208 ;;      Totals:         0      66       0       0       0       0       0       0       0
  1209 ;;Total ram usage:       66 bytes
  1210 ;; Hardware stack levels used:    1
  1211 ;; Hardware stack levels required when called:    8
  1212 ;; This function calls:
  1213 ;;		_I2C_Init
  1214 ;;		_I2C_Stop
  1215 ;;		_Keypad_Key_Press
  1216 ;;		_Lcd_Clear
  1217 ;;		_Lcd_Set_Cursor
  1218 ;;		_Lcd_Write_Char
  1219 ;;		_Lcd_Write_String
  1220 ;;		_RTC_Read_Clock
  1221 ;;		___flge
  1222 ;;		___flmul
  1223 ;;		___fltol
  1224 ;;		___xxtofl
  1225 ;;		_atoi
  1226 ;;		_getCad
  1227 ;;		_isdigit
  1228 ;;		_sprintf
  1229 ;; This function is called by:
  1230 ;;		_securityHouse
  1231 ;; This function uses a non-reentrant model
  1232 ;;
  1233                           
  1234                           	psect	text2
  1235  000878                     __ptext2:
  1236                           	callstack 0
  1237  000878                     _activar_seguridad:
  1238                           	callstack 21
  1239  000878                     
  1240                           ;main.c: 102:     tecla = Keypad_Key_Press();
  1241  000878  EC60  F013         	call	_Keypad_Key_Press	;wreg free
  1242  00087C  0100               	movlb	0	; () banked
  1243  00087E  6FCB               	movwf	_tecla& (0+255),b
  1244  000880                     
  1245                           ; BSR set to: 0
  1246                           ;main.c: 104:     TRISA = 0b00000001;
  1247  000880  0E01               	movlw	1
  1248  000882  6E92               	movwf	146,c	;volatile
  1249  000884                     
  1250                           ; BSR set to: 0
  1251                           ;main.c: 106:     PORTAbits.RA3 = 0;
  1252  000884  9680               	bcf	128,3,c	;volatile
  1253  000886                     
  1254                           ; BSR set to: 0
  1255                           ;main.c: 107:     PORTAbits.RA5 = 0;
  1256  000886  9A80               	bcf	128,5,c	;volatile
  1257  000888                     
  1258                           ; BSR set to: 0
  1259                           ;main.c: 108:     PORTAbits.RA4 = 1;
  1260  000888  8880               	bsf	128,4,c	;volatile
  1261                           
  1262                           ;main.c: 109:     switch (estado_teclado) {
  1263  00088A  EF79  F007         	goto	l3688
  1264  00088E                     l3456:
  1265                           
  1266                           ; BSR set to: 0
  1267                           ;main.c: 111:             if ((tecla != 0) && ((0 ? isdigit(tecla) : ((unsigned)(tecla)-
      +                          '0') < 10))) {
  1268  00088E  51CB               	movf	_tecla& (0+255),w,b
  1269  000890  B4D8               	btfsc	status,2,c
  1270  000892  EF4D  F004         	goto	u3481
  1271  000896  EF4F  F004         	goto	u3480
  1272  00089A                     u3481:
  1273  00089A  EF9A  F007         	goto	l303
  1274  00089E                     u3480:
  1275  00089E                     
  1276                           ; BSR set to: 0
  1277  00089E  0ED0               	movlw	208
  1278  0008A0  6F76               	movwf	??_activar_seguridad& (0+255),b
  1279  0008A2  0EFF               	movlw	255
  1280  0008A4  6F77               	movwf	(??_activar_seguridad+1)& (0+255),b
  1281  0008A6  51CB               	movf	_tecla& (0+255),w,b
  1282  0008A8  6F78               	movwf	(??_activar_seguridad+2)& (0+255),b
  1283  0008AA  6B79               	clrf	(??_activar_seguridad+3)& (0+255),b
  1284  0008AC  5176               	movf	??_activar_seguridad& (0+255),w,b
  1285  0008AE  2778               	addwf	(??_activar_seguridad+2)& (0+255),f,b
  1286  0008B0  5177               	movf	(??_activar_seguridad+1)& (0+255),w,b
  1287  0008B2  2379               	addwfc	(??_activar_seguridad+3)& (0+255),f,b
  1288  0008B4  5179               	movf	(??_activar_seguridad+3)& (0+255),w,b
  1289  0008B6  E10A               	bnz	u3490
  1290  0008B8  0E0A               	movlw	10
  1291  0008BA  5D78               	subwf	(??_activar_seguridad+2)& (0+255),w,b
  1292  0008BC  A0D8               	btfss	status,0,c
  1293  0008BE  EF63  F004         	goto	u3491
  1294  0008C2  EF66  F004         	goto	u3490
  1295  0008C6                     u3491:
  1296  0008C6  0E01               	movlw	1
  1297  0008C8  EF67  F004         	goto	u3500
  1298  0008CC                     u3490:
  1299  0008CC  0E00               	movlw	0
  1300  0008CE                     u3500:
  1301  0008CE  6FA6               	movwf	_activar_seguridad$706& (0+255),b
  1302  0008D0  6BA7               	clrf	(_activar_seguridad$706+1)& (0+255),b
  1303  0008D2                     
  1304                           ; BSR set to: 0
  1305  0008D2  51A6               	movf	_activar_seguridad$706& (0+255),w,b
  1306  0008D4  11A7               	iorwf	(_activar_seguridad$706+1)& (0+255),w,b
  1307  0008D6  B4D8               	btfsc	status,2,c
  1308  0008D8  EF70  F004         	goto	u3511
  1309  0008DC  EF72  F004         	goto	u3510
  1310  0008E0                     u3511:
  1311  0008E0  EF9A  F007         	goto	l303
  1312  0008E4                     u3510:
  1313  0008E4                     
  1314                           ; BSR set to: 0
  1315                           ;main.c: 112:                 aux_contrasenia[0] = tecla;
  1316  0008E4  C0CB  F0EC         	movff	_tecla,_aux_contrasenia
  1317  0008E8                     
  1318                           ; BSR set to: 0
  1319                           ;main.c: 113:                 estado_teclado = n2;
  1320  0008E8  0E01               	movlw	1
  1321  0008EA  6FCA               	movwf	_estado_teclado& (0+255),b
  1322  0008EC                     
  1323                           ; BSR set to: 0
  1324                           ;main.c: 114:                 Lcd_Set_Cursor(2, 1);
  1325  0008EC  0E01               	movlw	1
  1326  0008EE  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  1327  0008F0  0E02               	movlw	2
  1328  0008F2  EC32  F014         	call	_Lcd_Set_Cursor
  1329  0008F6                     
  1330                           ;main.c: 115:                 Lcd_Write_String("                    ");
  1331  0008F6  0E12               	movlw	low STR_1
  1332  0008F8  6E05               	movwf	Lcd_Write_String@a^0,c
  1333  0008FA  0E08               	movlw	high STR_1
  1334  0008FC  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  1335  0008FE  ECBB  F013         	call	_Lcd_Write_String	;wreg free
  1336  000902                     
  1337                           ;main.c: 116:                 Lcd_Set_Cursor(2, 8);
  1338  000902  0E08               	movlw	8
  1339  000904  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  1340  000906  0E02               	movlw	2
  1341  000908  EC32  F014         	call	_Lcd_Set_Cursor
  1342  00090C                     
  1343                           ;main.c: 117:                 Lcd_Write_Char('*');
  1344  00090C  0E2A               	movlw	42
  1345  00090E  ECC1  F016         	call	_Lcd_Write_Char
  1346  000912                     l3476:
  1347                           
  1348                           ;main.c: 118:                 _delay((unsigned long)((400)*(8000000/4000.0)));
  1349  000912  0E05               	movlw	5
  1350  000914  0100               	movlb	0	; () banked
  1351  000916  6F77               	movwf	(??_activar_seguridad+1)& (0+255),b
  1352  000918  0E0F               	movlw	15
  1353  00091A  6F76               	movwf	??_activar_seguridad& (0+255),b
  1354  00091C  0EF1               	movlw	241
  1355  00091E                     u3847:
  1356  00091E  2EE8               	decfsz	wreg,f,c
  1357  000920  D7FE               	bra	u3847
  1358  000922  2F76               	decfsz	??_activar_seguridad& (0+255),f,b
  1359  000924  D7FC               	bra	u3847
  1360  000926  2F77               	decfsz	(??_activar_seguridad+1)& (0+255),f,b
  1361  000928  D7FA               	bra	u3847
  1362  00092A  EF9A  F007         	goto	l303
  1363  00092E                     l3478:
  1364                           
  1365                           ; BSR set to: 0
  1366                           ;main.c: 123:             if ((tecla != 0) && ((0 ? isdigit(tecla) : ((unsigned)(tecla)-
      +                          '0') < 10)))
  1367  00092E  51CB               	movf	_tecla& (0+255),w,b
  1368  000930  B4D8               	btfsc	status,2,c
  1369  000932  EF9D  F004         	goto	u3521
  1370  000936  EF9F  F004         	goto	u3520
  1371  00093A                     u3521:
  1372  00093A  EF9A  F007         	goto	l303
  1373  00093E                     u3520:
  1374  00093E                     
  1375                           ; BSR set to: 0
  1376  00093E  0ED0               	movlw	208
  1377  000940  6F76               	movwf	??_activar_seguridad& (0+255),b
  1378  000942  0EFF               	movlw	255
  1379  000944  6F77               	movwf	(??_activar_seguridad+1)& (0+255),b
  1380  000946  51CB               	movf	_tecla& (0+255),w,b
  1381  000948  6F78               	movwf	(??_activar_seguridad+2)& (0+255),b
  1382  00094A  6B79               	clrf	(??_activar_seguridad+3)& (0+255),b
  1383  00094C  5176               	movf	??_activar_seguridad& (0+255),w,b
  1384  00094E  2778               	addwf	(??_activar_seguridad+2)& (0+255),f,b
  1385  000950  5177               	movf	(??_activar_seguridad+1)& (0+255),w,b
  1386  000952  2379               	addwfc	(??_activar_seguridad+3)& (0+255),f,b
  1387  000954  5179               	movf	(??_activar_seguridad+3)& (0+255),w,b
  1388  000956  E10A               	bnz	u3530
  1389  000958  0E0A               	movlw	10
  1390  00095A  5D78               	subwf	(??_activar_seguridad+2)& (0+255),w,b
  1391  00095C  A0D8               	btfss	status,0,c
  1392  00095E  EFB3  F004         	goto	u3531
  1393  000962  EFB6  F004         	goto	u3530
  1394  000966                     u3531:
  1395  000966  0E01               	movlw	1
  1396  000968  EFB7  F004         	goto	u3540
  1397  00096C                     u3530:
  1398  00096C  0E00               	movlw	0
  1399  00096E                     u3540:
  1400  00096E  6FA8               	movwf	_activar_seguridad$710& (0+255),b
  1401  000970  6BA9               	clrf	(_activar_seguridad$710+1)& (0+255),b
  1402  000972                     
  1403                           ; BSR set to: 0
  1404  000972  51A8               	movf	_activar_seguridad$710& (0+255),w,b
  1405  000974  11A9               	iorwf	(_activar_seguridad$710+1)& (0+255),w,b
  1406  000976  B4D8               	btfsc	status,2,c
  1407  000978  EFC0  F004         	goto	u3551
  1408  00097C  EFC2  F004         	goto	u3550
  1409  000980                     u3551:
  1410  000980  EF9A  F007         	goto	l303
  1411  000984                     u3550:
  1412  000984                     
  1413                           ; BSR set to: 0
  1414                           ;main.c: 124:             {;main.c: 125:                 aux_contrasenia[1] = tecla;
  1415  000984  C0CB  F0ED         	movff	_tecla,_aux_contrasenia+1
  1416  000988                     
  1417                           ; BSR set to: 0
  1418                           ;main.c: 126:                 estado_teclado = n3;
  1419  000988  0E02               	movlw	2
  1420  00098A  6FCA               	movwf	_estado_teclado& (0+255),b
  1421  00098C                     
  1422                           ; BSR set to: 0
  1423                           ;main.c: 127:                 Lcd_Set_Cursor(2, 9);
  1424  00098C  0E09               	movlw	9
  1425  00098E  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  1426  000990  0E02               	movlw	2
  1427  000992  EC32  F014         	call	_Lcd_Set_Cursor
  1428  000996                     
  1429                           ;main.c: 128:                 Lcd_Write_Char('*');
  1430  000996  0E2A               	movlw	42
  1431  000998  ECC1  F016         	call	_Lcd_Write_Char
  1432  00099C  EF89  F004         	goto	l3476
  1433  0009A0                     l3496:
  1434                           
  1435                           ; BSR set to: 0
  1436                           ;main.c: 135:             if ((tecla != 0) && ((0 ? isdigit(tecla) : ((unsigned)(tecla)-
      +                          '0') < 10))) {
  1437  0009A0  51CB               	movf	_tecla& (0+255),w,b
  1438  0009A2  B4D8               	btfsc	status,2,c
  1439  0009A4  EFD6  F004         	goto	u3561
  1440  0009A8  EFD8  F004         	goto	u3560
  1441  0009AC                     u3561:
  1442  0009AC  EF9A  F007         	goto	l303
  1443  0009B0                     u3560:
  1444  0009B0                     
  1445                           ; BSR set to: 0
  1446  0009B0  0ED0               	movlw	208
  1447  0009B2  6F76               	movwf	??_activar_seguridad& (0+255),b
  1448  0009B4  0EFF               	movlw	255
  1449  0009B6  6F77               	movwf	(??_activar_seguridad+1)& (0+255),b
  1450  0009B8  51CB               	movf	_tecla& (0+255),w,b
  1451  0009BA  6F78               	movwf	(??_activar_seguridad+2)& (0+255),b
  1452  0009BC  6B79               	clrf	(??_activar_seguridad+3)& (0+255),b
  1453  0009BE  5176               	movf	??_activar_seguridad& (0+255),w,b
  1454  0009C0  2778               	addwf	(??_activar_seguridad+2)& (0+255),f,b
  1455  0009C2  5177               	movf	(??_activar_seguridad+1)& (0+255),w,b
  1456  0009C4  2379               	addwfc	(??_activar_seguridad+3)& (0+255),f,b
  1457  0009C6  5179               	movf	(??_activar_seguridad+3)& (0+255),w,b
  1458  0009C8  E10A               	bnz	u3570
  1459  0009CA  0E0A               	movlw	10
  1460  0009CC  5D78               	subwf	(??_activar_seguridad+2)& (0+255),w,b
  1461  0009CE  A0D8               	btfss	status,0,c
  1462  0009D0  EFEC  F004         	goto	u3571
  1463  0009D4  EFEF  F004         	goto	u3570
  1464  0009D8                     u3571:
  1465  0009D8  0E01               	movlw	1
  1466  0009DA  EFF0  F004         	goto	u3580
  1467  0009DE                     u3570:
  1468  0009DE  0E00               	movlw	0
  1469  0009E0                     u3580:
  1470  0009E0  6FAA               	movwf	_activar_seguridad$711& (0+255),b
  1471  0009E2  6BAB               	clrf	(_activar_seguridad$711+1)& (0+255),b
  1472  0009E4                     
  1473                           ; BSR set to: 0
  1474  0009E4  51AA               	movf	_activar_seguridad$711& (0+255),w,b
  1475  0009E6  11AB               	iorwf	(_activar_seguridad$711+1)& (0+255),w,b
  1476  0009E8  B4D8               	btfsc	status,2,c
  1477  0009EA  EFF9  F004         	goto	u3591
  1478  0009EE  EFFB  F004         	goto	u3590
  1479  0009F2                     u3591:
  1480  0009F2  EF9A  F007         	goto	l303
  1481  0009F6                     u3590:
  1482  0009F6                     
  1483                           ; BSR set to: 0
  1484                           ;main.c: 136:                 aux_contrasenia[2] = tecla;
  1485  0009F6  C0CB  F0EE         	movff	_tecla,_aux_contrasenia+2
  1486  0009FA                     
  1487                           ; BSR set to: 0
  1488                           ;main.c: 137:                 estado_teclado = n4;
  1489  0009FA  0E03               	movlw	3
  1490  0009FC  6FCA               	movwf	_estado_teclado& (0+255),b
  1491  0009FE                     
  1492                           ; BSR set to: 0
  1493                           ;main.c: 138:                 Lcd_Set_Cursor(2, 10);
  1494  0009FE  0E0A               	movlw	10
  1495  000A00  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  1496  000A02  0E02               	movlw	2
  1497  000A04  EC32  F014         	call	_Lcd_Set_Cursor
  1498  000A08                     
  1499                           ;main.c: 139:                 Lcd_Write_Char('*');
  1500  000A08  0E2A               	movlw	42
  1501  000A0A  ECC1  F016         	call	_Lcd_Write_Char
  1502  000A0E  EF89  F004         	goto	l3476
  1503  000A12                     l3514:
  1504                           
  1505                           ; BSR set to: 0
  1506                           ;main.c: 145:             if ((tecla != 0) && ((0 ? isdigit(tecla) : ((unsigned)(tecla)-
      +                          '0') < 10))) {
  1507  000A12  51CB               	movf	_tecla& (0+255),w,b
  1508  000A14  B4D8               	btfsc	status,2,c
  1509  000A16  EF0F  F005         	goto	u3601
  1510  000A1A  EF11  F005         	goto	u3600
  1511  000A1E                     u3601:
  1512  000A1E  EF9A  F007         	goto	l303
  1513  000A22                     u3600:
  1514  000A22                     
  1515                           ; BSR set to: 0
  1516  000A22  0ED0               	movlw	208
  1517  000A24  6F76               	movwf	??_activar_seguridad& (0+255),b
  1518  000A26  0EFF               	movlw	255
  1519  000A28  6F77               	movwf	(??_activar_seguridad+1)& (0+255),b
  1520  000A2A  51CB               	movf	_tecla& (0+255),w,b
  1521  000A2C  6F78               	movwf	(??_activar_seguridad+2)& (0+255),b
  1522  000A2E  6B79               	clrf	(??_activar_seguridad+3)& (0+255),b
  1523  000A30  5176               	movf	??_activar_seguridad& (0+255),w,b
  1524  000A32  2778               	addwf	(??_activar_seguridad+2)& (0+255),f,b
  1525  000A34  5177               	movf	(??_activar_seguridad+1)& (0+255),w,b
  1526  000A36  2379               	addwfc	(??_activar_seguridad+3)& (0+255),f,b
  1527  000A38  5179               	movf	(??_activar_seguridad+3)& (0+255),w,b
  1528  000A3A  E10A               	bnz	u3610
  1529  000A3C  0E0A               	movlw	10
  1530  000A3E  5D78               	subwf	(??_activar_seguridad+2)& (0+255),w,b
  1531  000A40  A0D8               	btfss	status,0,c
  1532  000A42  EF25  F005         	goto	u3611
  1533  000A46  EF28  F005         	goto	u3610
  1534  000A4A                     u3611:
  1535  000A4A  0E01               	movlw	1
  1536  000A4C  EF29  F005         	goto	u3620
  1537  000A50                     u3610:
  1538  000A50  0E00               	movlw	0
  1539  000A52                     u3620:
  1540  000A52  6FAC               	movwf	_activar_seguridad$712& (0+255),b
  1541  000A54  6BAD               	clrf	(_activar_seguridad$712+1)& (0+255),b
  1542  000A56                     
  1543                           ; BSR set to: 0
  1544  000A56  51AC               	movf	_activar_seguridad$712& (0+255),w,b
  1545  000A58  11AD               	iorwf	(_activar_seguridad$712+1)& (0+255),w,b
  1546  000A5A  B4D8               	btfsc	status,2,c
  1547  000A5C  EF32  F005         	goto	u3631
  1548  000A60  EF34  F005         	goto	u3630
  1549  000A64                     u3631:
  1550  000A64  EF9A  F007         	goto	l303
  1551  000A68                     u3630:
  1552  000A68                     
  1553                           ; BSR set to: 0
  1554                           ;main.c: 146:                 aux_contrasenia[3] = tecla;
  1555  000A68  C0CB  F0EF         	movff	_tecla,_aux_contrasenia+3
  1556  000A6C                     
  1557                           ; BSR set to: 0
  1558                           ;main.c: 147:                 estado_teclado = en;
  1559  000A6C  0E04               	movlw	4
  1560  000A6E  6FCA               	movwf	_estado_teclado& (0+255),b
  1561  000A70                     
  1562                           ; BSR set to: 0
  1563                           ;main.c: 148:                 Lcd_Set_Cursor(2, 11);
  1564  000A70  0E0B               	movlw	11
  1565  000A72  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  1566  000A74  0E02               	movlw	2
  1567  000A76  EC32  F014         	call	_Lcd_Set_Cursor
  1568  000A7A                     
  1569                           ;main.c: 149:                 Lcd_Write_Char('*');
  1570  000A7A  0E2A               	movlw	42
  1571  000A7C  ECC1  F016         	call	_Lcd_Write_Char
  1572  000A80  EF89  F004         	goto	l3476
  1573  000A84                     l3532:
  1574                           
  1575                           ; BSR set to: 0
  1576                           ;main.c: 156:             if ((tecla != 0) && (tecla != '='))
  1577  000A84  51CB               	movf	_tecla& (0+255),w,b
  1578  000A86  B4D8               	btfsc	status,2,c
  1579  000A88  EF48  F005         	goto	u3641
  1580  000A8C  EF4A  F005         	goto	u3640
  1581  000A90                     u3641:
  1582  000A90  EF6F  F005         	goto	l3544
  1583  000A94                     u3640:
  1584  000A94                     
  1585                           ; BSR set to: 0
  1586  000A94  0E3D               	movlw	61
  1587  000A96  19CB               	xorwf	_tecla& (0+255),w,b
  1588  000A98  B4D8               	btfsc	status,2,c
  1589  000A9A  EF51  F005         	goto	u3651
  1590  000A9E  EF53  F005         	goto	u3650
  1591  000AA2                     u3651:
  1592  000AA2  EF6F  F005         	goto	l3544
  1593  000AA6                     u3650:
  1594  000AA6                     
  1595                           ; BSR set to: 0
  1596                           ;main.c: 157:             {;main.c: 158:                 estado_teclado = n1;
  1597  000AA6  0E00               	movlw	0
  1598  000AA8  6FCA               	movwf	_estado_teclado& (0+255),b
  1599  000AAA                     
  1600                           ; BSR set to: 0
  1601                           ;main.c: 159:                 Lcd_Set_Cursor(2, 8);
  1602  000AAA  0E08               	movlw	8
  1603  000AAC  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  1604  000AAE  0E02               	movlw	2
  1605  000AB0  EC32  F014         	call	_Lcd_Set_Cursor
  1606  000AB4                     
  1607                           ;main.c: 160:                 Lcd_Write_String("      ");
  1608  000AB4  0E20               	movlw	low (STR_1+14)
  1609  000AB6  6E05               	movwf	Lcd_Write_String@a^0,c
  1610  000AB8  0E08               	movlw	high (STR_1+14)
  1611  000ABA  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  1612  000ABC  ECBB  F013         	call	_Lcd_Write_String	;wreg free
  1613  000AC0                     l3542:
  1614                           
  1615                           ;main.c: 161:                 _delay((unsigned long)((600)*(8000000/4000.0)));
  1616  000AC0  0E07               	movlw	7
  1617  000AC2  0100               	movlb	0	; () banked
  1618  000AC4  6F77               	movwf	(??_activar_seguridad+1)& (0+255),b
  1619  000AC6  0E17               	movlw	23
  1620  000AC8  6F76               	movwf	??_activar_seguridad& (0+255),b
  1621  000ACA  0E6A               	movlw	106
  1622  000ACC                     u3857:
  1623  000ACC  2EE8               	decfsz	wreg,f,c
  1624  000ACE  D7FE               	bra	u3857
  1625  000AD0  2F76               	decfsz	??_activar_seguridad& (0+255),f,b
  1626  000AD2  D7FC               	bra	u3857
  1627  000AD4  2F77               	decfsz	(??_activar_seguridad+1)& (0+255),f,b
  1628  000AD6  D7FA               	bra	u3857
  1629  000AD8  F000               	nop	
  1630                           
  1631                           ;main.c: 162:             }
  1632  000ADA  EF9A  F007         	goto	l303
  1633  000ADE                     l3544:
  1634                           
  1635                           ; BSR set to: 0
  1636  000ADE  51CB               	movf	_tecla& (0+255),w,b
  1637  000AE0  B4D8               	btfsc	status,2,c
  1638  000AE2  EF75  F005         	goto	u3661
  1639  000AE6  EF77  F005         	goto	u3660
  1640  000AEA                     u3661:
  1641  000AEA  EF9A  F007         	goto	l303
  1642  000AEE                     u3660:
  1643  000AEE                     
  1644                           ; BSR set to: 0
  1645  000AEE  0E3D               	movlw	61
  1646  000AF0  19CB               	xorwf	_tecla& (0+255),w,b
  1647  000AF2  A4D8               	btfss	status,2,c
  1648  000AF4  EF7E  F005         	goto	u3671
  1649  000AF8  EF80  F005         	goto	u3670
  1650  000AFC                     u3671:
  1651  000AFC  EF9A  F007         	goto	l303
  1652  000B00                     u3670:
  1653  000B00                     
  1654                           ; BSR set to: 0
  1655                           ;main.c: 164:             {;main.c: 166:                 for (int i = 0; i <= 3; i++) {
  1656  000B00  0E00               	movlw	0
  1657  000B02  6FB7               	movwf	(activar_seguridad@i+1)& (0+255),b
  1658  000B04  0E00               	movlw	0
  1659  000B06  6FB6               	movwf	activar_seguridad@i& (0+255),b
  1660  000B08                     l3554:
  1661                           
  1662                           ; BSR set to: 0
  1663                           ;main.c: 168:                     if (contrasenia[i] == aux_contrasenia[i]) {
  1664  000B08  0EEC               	movlw	low _aux_contrasenia
  1665  000B0A  25B6               	addwf	activar_seguridad@i& (0+255),w,b
  1666  000B0C  6ED9               	movwf	fsr2l,c
  1667  000B0E  0E00               	movlw	high _aux_contrasenia
  1668  000B10  21B7               	addwfc	(activar_seguridad@i+1)& (0+255),w,b
  1669  000B12  6EDA               	movwf	fsr2h,c
  1670  000B14  0EF0               	movlw	low _contrasenia
  1671  000B16  25B6               	addwf	activar_seguridad@i& (0+255),w,b
  1672  000B18  6EE1               	movwf	fsr1l,c
  1673  000B1A  0E00               	movlw	high _contrasenia
  1674  000B1C  21B7               	addwfc	(activar_seguridad@i+1)& (0+255),w,b
  1675  000B1E  6EE2               	movwf	fsr1h,c
  1676  000B20  50DE               	movf	postinc2,w,c
  1677  000B22  18E6               	xorwf	postinc1,w,c
  1678  000B24  A4D8               	btfss	status,2,c
  1679  000B26  EF97  F005         	goto	u3681
  1680  000B2A  EF99  F005         	goto	u3680
  1681  000B2E                     u3681:
  1682  000B2E  EF9B  F005         	goto	l283
  1683  000B32                     u3680:
  1684  000B32                     
  1685                           ; BSR set to: 0
  1686                           ;main.c: 170:                         contador++;
  1687  000B32  4BC2               	infsnz	_contador& (0+255),f,b
  1688  000B34  2BC3               	incf	(_contador+1)& (0+255),f,b
  1689  000B36                     l283:
  1690                           
  1691                           ; BSR set to: 0
  1692                           ;main.c: 172:                 }
  1693  000B36  4BB6               	infsnz	activar_seguridad@i& (0+255),f,b
  1694  000B38  2BB7               	incf	(activar_seguridad@i+1)& (0+255),f,b
  1695  000B3A                     
  1696                           ; BSR set to: 0
  1697  000B3A  BFB7               	btfsc	(activar_seguridad@i+1)& (0+255),7,b
  1698  000B3C  EFA9  F005         	goto	u3691
  1699  000B40  51B7               	movf	(activar_seguridad@i+1)& (0+255),w,b
  1700  000B42  E109               	bnz	u3690
  1701  000B44  0E04               	movlw	4
  1702  000B46  5DB6               	subwf	activar_seguridad@i& (0+255),w,b
  1703  000B48  A0D8               	btfss	status,0,c
  1704  000B4A  EFA9  F005         	goto	u3691
  1705  000B4E  EFAB  F005         	goto	u3690
  1706  000B52                     u3691:
  1707  000B52  EF84  F005         	goto	l3554
  1708  000B56                     u3690:
  1709  000B56                     
  1710                           ; BSR set to: 0
  1711                           ;main.c: 174:                 if (contador == 4) {
  1712  000B56  0E04               	movlw	4
  1713  000B58  19C2               	xorwf	_contador& (0+255),w,b
  1714  000B5A  11C3               	iorwf	(_contador+1)& (0+255),w,b
  1715  000B5C  A4D8               	btfss	status,2,c
  1716  000B5E  EFB3  F005         	goto	u3701
  1717  000B62  EFB5  F005         	goto	u3700
  1718  000B66                     u3701:
  1719  000B66  EF5D  F007         	goto	l3674
  1720  000B6A                     u3700:
  1721  000B6A                     
  1722                           ; BSR set to: 0
  1723                           ;main.c: 175:                     Lcd_Set_Cursor(2, 1);
  1724  000B6A  0E01               	movlw	1
  1725  000B6C  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  1726  000B6E  0E02               	movlw	2
  1727  000B70  EC32  F014         	call	_Lcd_Set_Cursor
  1728  000B74                     
  1729                           ;main.c: 176:                     Lcd_Write_String("contraseña correcta");
  1730  000B74  0E3B               	movlw	low STR_3
  1731  000B76  6E05               	movwf	Lcd_Write_String@a^0,c
  1732  000B78  0E08               	movlw	high STR_3
  1733  000B7A  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  1734  000B7C  ECBB  F013         	call	_Lcd_Write_String	;wreg free
  1735  000B80                     
  1736                           ;main.c: 177:                     _delay((unsigned long)((600)*(8000000/4000.0)));
  1737  000B80  0E07               	movlw	7
  1738  000B82  0100               	movlb	0	; () banked
  1739  000B84  6F77               	movwf	(??_activar_seguridad+1)& (0+255),b
  1740  000B86  0E17               	movlw	23
  1741  000B88  6F76               	movwf	??_activar_seguridad& (0+255),b
  1742  000B8A  0E6A               	movlw	106
  1743  000B8C                     u3867:
  1744  000B8C  2EE8               	decfsz	wreg,f,c
  1745  000B8E  D7FE               	bra	u3867
  1746  000B90  2F76               	decfsz	??_activar_seguridad& (0+255),f,b
  1747  000B92  D7FC               	bra	u3867
  1748  000B94  2F77               	decfsz	(??_activar_seguridad+1)& (0+255),f,b
  1749  000B96  D7FA               	bra	u3867
  1750  000B98  F000               	nop	
  1751  000B9A                     
  1752                           ;main.c: 179:                     PORTBbits.RB4 = 0;
  1753  000B9A  9881               	bcf	129,4,c	;volatile
  1754  000B9C                     
  1755                           ;main.c: 180:                     PORTBbits.RB5 = 0;
  1756  000B9C  9A81               	bcf	129,5,c	;volatile
  1757  000B9E                     
  1758                           ;main.c: 181:                     PORTBbits.RB6 = 0;
  1759  000B9E  9C81               	bcf	129,6,c	;volatile
  1760  000BA0                     
  1761                           ;main.c: 182:                     PORTBbits.RB7 = 0;
  1762  000BA0  9E81               	bcf	129,7,c	;volatile
  1763  000BA2                     
  1764                           ;main.c: 184:                     ADCON1 = 0b00001111;
  1765  000BA2  0E0F               	movlw	15
  1766  000BA4  6EC1               	movwf	193,c	;volatile
  1767  000BA6                     
  1768                           ;main.c: 186:                     float temperatura;;main.c: 187:                     ch
      +                          ar Temperatura[10];;main.c: 188:                     Lcd_Clear();
  1769  000BA6  ECA2  F017         	call	_Lcd_Clear	;wreg free
  1770  000BAA                     
  1771                           ;main.c: 189:                     TRISA = 0b00000001;
  1772  000BAA  0E01               	movlw	1
  1773  000BAC  6E92               	movwf	146,c	;volatile
  1774  000BAE                     
  1775                           ;main.c: 190:                     Lcd_Set_Cursor(1, 3);
  1776  000BAE  0E03               	movlw	3
  1777  000BB0  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  1778  000BB2  0E01               	movlw	1
  1779  000BB4  EC32  F014         	call	_Lcd_Set_Cursor
  1780  000BB8                     
  1781                           ;main.c: 191:                     Lcd_Write_String("Temperatura:");
  1782  000BB8  0E4F               	movlw	low STR_4
  1783  000BBA  6E05               	movwf	Lcd_Write_String@a^0,c
  1784  000BBC  0E08               	movlw	high STR_4
  1785  000BBE  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  1786  000BC0  ECBB  F013         	call	_Lcd_Write_String	;wreg free
  1787  000BC4                     
  1788                           ;main.c: 192:                     char secs[10], mins[10], hours[10];;main.c: 193:      
      +                                         I2C_Init();
  1789  000BC4  EC6E  F017         	call	_I2C_Init	;wreg free
  1790                           
  1791                           ;main.c: 194:                     _delay((unsigned long)((10)*(8000000/4000.0)));
  1792  000BC8  0E1A               	movlw	26
  1793  000BCA  0100               	movlb	0	; () banked
  1794  000BCC  6F76               	movwf	??_activar_seguridad& (0+255),b
  1795  000BCE  0EF8               	movlw	248
  1796  000BD0                     u3877:
  1797  000BD0  2EE8               	decfsz	wreg,f,c
  1798  000BD2  D7FE               	bra	u3877
  1799  000BD4  2F76               	decfsz	??_activar_seguridad& (0+255),f,b
  1800  000BD6  D7FC               	bra	u3877
  1801  000BD8  F000               	nop	
  1802  000BDA                     
  1803                           ;main.c: 195:                     RTC_Read_Clock(0);
  1804  000BDA  0E00               	movlw	0
  1805  000BDC  EC70  F015         	call	_RTC_Read_Clock
  1806  000BE0                     
  1807                           ;main.c: 196:                     I2C_Stop();
  1808  000BE0  EC8F  F017         	call	_I2C_Stop	;wreg free
  1809  000BE4                     
  1810                           ;main.c: 197:                     _delay((unsigned long)((1000)*(8000000/4000.0)));
  1811  000BE4  0E0B               	movlw	11
  1812  000BE6  0100               	movlb	0	; () banked
  1813  000BE8  6F77               	movwf	(??_activar_seguridad+1)& (0+255),b
  1814  000BEA  0E26               	movlw	38
  1815  000BEC  6F76               	movwf	??_activar_seguridad& (0+255),b
  1816  000BEE  0E5D               	movlw	93
  1817  000BF0                     u3887:
  1818  000BF0  2EE8               	decfsz	wreg,f,c
  1819  000BF2  D7FE               	bra	u3887
  1820  000BF4  2F76               	decfsz	??_activar_seguridad& (0+255),f,b
  1821  000BF6  D7FC               	bra	u3887
  1822  000BF8  2F77               	decfsz	(??_activar_seguridad+1)& (0+255),f,b
  1823  000BFA  D7FA               	bra	u3887
  1824  000BFC  D000               	nop2	
  1825  000BFE                     
  1826                           ;main.c: 199:                     sprintf(secs, "%x ", sec);
  1827  000BFE  0E84               	movlw	low activar_seguridad@secs
  1828  000C00  0100               	movlb	0	; () banked
  1829  000C02  6F66               	movwf	sprintf@s& (0+255),b
  1830  000C04  0E00               	movlw	high activar_seguridad@secs
  1831  000C06  6F67               	movwf	(sprintf@s+1)& (0+255),b
  1832  000C08  0E73               	movlw	low STR_5
  1833  000C0A  6F68               	movwf	sprintf@fmt& (0+255),b
  1834  000C0C  0E08               	movlw	high STR_5
  1835  000C0E  6F69               	movwf	(sprintf@fmt+1)& (0+255),b
  1836  000C10  C0C8  F06A         	movff	_sec,?_sprintf+4
  1837  000C14  C0C9  F06B         	movff	_sec+1,?_sprintf+5
  1838  000C18  EC1E  F015         	call	_sprintf	;wreg free
  1839  000C1C                     
  1840                           ;main.c: 200:                     sprintf(mins, "%x:", min);
  1841  000C1C  0E8E               	movlw	low activar_seguridad@mins
  1842  000C1E  0100               	movlb	0	; () banked
  1843  000C20  6F66               	movwf	sprintf@s& (0+255),b
  1844  000C22  0E00               	movlw	high activar_seguridad@mins
  1845  000C24  6F67               	movwf	(sprintf@s+1)& (0+255),b
  1846  000C26  0E61               	movlw	low (STR_7+5)
  1847  000C28  6F68               	movwf	sprintf@fmt& (0+255),b
  1848  000C2A  0E08               	movlw	high (STR_7+5)
  1849  000C2C  6F69               	movwf	(sprintf@fmt+1)& (0+255),b
  1850  000C2E  C0C6  F06A         	movff	_min,?_sprintf+4
  1851  000C32  C0C7  F06B         	movff	_min+1,?_sprintf+5
  1852  000C36  EC1E  F015         	call	_sprintf	;wreg free
  1853  000C3A                     
  1854                           ;main.c: 201:                     sprintf(hours, "Hora:%x:", hour);
  1855  000C3A  0E98               	movlw	low activar_seguridad@hours
  1856  000C3C  0100               	movlb	0	; () banked
  1857  000C3E  6F66               	movwf	sprintf@s& (0+255),b
  1858  000C40  0E00               	movlw	high activar_seguridad@hours
  1859  000C42  6F67               	movwf	(sprintf@s+1)& (0+255),b
  1860  000C44  0E5C               	movlw	low STR_7
  1861  000C46  6F68               	movwf	sprintf@fmt& (0+255),b
  1862  000C48  0E08               	movlw	high STR_7
  1863  000C4A  6F69               	movwf	(sprintf@fmt+1)& (0+255),b
  1864  000C4C  C0C4  F06A         	movff	_hour,?_sprintf+4
  1865  000C50  C0C5  F06B         	movff	_hour+1,?_sprintf+5
  1866  000C54  EC1E  F015         	call	_sprintf	;wreg free
  1867  000C58                     
  1868                           ;main.c: 202:                     Lcd_Set_Cursor(2, 3);
  1869  000C58  0E03               	movlw	3
  1870  000C5A  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  1871  000C5C  0E02               	movlw	2
  1872  000C5E  EC32  F014         	call	_Lcd_Set_Cursor
  1873  000C62                     
  1874                           ;main.c: 203:                     Lcd_Write_String(hours);
  1875  000C62  0E98               	movlw	low activar_seguridad@hours
  1876  000C64  6E05               	movwf	Lcd_Write_String@a^0,c
  1877  000C66  0E00               	movlw	high activar_seguridad@hours
  1878  000C68  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  1879  000C6A  ECBB  F013         	call	_Lcd_Write_String	;wreg free
  1880  000C6E                     
  1881                           ;main.c: 204:                     Lcd_Set_Cursor(2, 11);
  1882  000C6E  0E0B               	movlw	11
  1883  000C70  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  1884  000C72  0E02               	movlw	2
  1885  000C74  EC32  F014         	call	_Lcd_Set_Cursor
  1886  000C78                     
  1887                           ;main.c: 205:                     Lcd_Write_String(mins);
  1888  000C78  0E8E               	movlw	low activar_seguridad@mins
  1889  000C7A  6E05               	movwf	Lcd_Write_String@a^0,c
  1890  000C7C  0E00               	movlw	high activar_seguridad@mins
  1891  000C7E  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  1892  000C80  ECBB  F013         	call	_Lcd_Write_String	;wreg free
  1893  000C84                     
  1894                           ;main.c: 206:                     Lcd_Set_Cursor(2, 14);
  1895  000C84  0E0E               	movlw	14
  1896  000C86  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  1897  000C88  0E02               	movlw	2
  1898  000C8A  EC32  F014         	call	_Lcd_Set_Cursor
  1899  000C8E                     
  1900                           ;main.c: 207:                     Lcd_Write_String(secs);
  1901  000C8E  0E84               	movlw	low activar_seguridad@secs
  1902  000C90  6E05               	movwf	Lcd_Write_String@a^0,c
  1903  000C92  0E00               	movlw	high activar_seguridad@secs
  1904  000C94  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  1905  000C96  ECBB  F013         	call	_Lcd_Write_String	;wreg free
  1906  000C9A                     
  1907                           ;main.c: 208:                     PORTAbits.RA5 = 1;
  1908  000C9A  8A80               	bsf	128,5,c	;volatile
  1909  000C9C                     
  1910                           ;main.c: 209:                     PORTAbits.RA4 = 0;
  1911  000C9C  9880               	bcf	128,4,c	;volatile
  1912  000C9E                     
  1913                           ;main.c: 211:                     TRISCbits.RC6 = 0;
  1914  000C9E  9C94               	bcf	148,6,c	;volatile
  1915  000CA0                     
  1916                           ;main.c: 212:                     TXSTAbits.TX9 = 0;
  1917  000CA0  9CAC               	bcf	172,6,c	;volatile
  1918  000CA2                     
  1919                           ;main.c: 213:                     TXSTAbits.TXEN = 1;
  1920  000CA2  8AAC               	bsf	172,5,c	;volatile
  1921  000CA4                     
  1922                           ;main.c: 214:                     TXSTAbits.SYNC = 0;
  1923  000CA4  98AC               	bcf	172,4,c	;volatile
  1924  000CA6                     
  1925                           ;main.c: 215:                     TXSTAbits.BRGH = 0;
  1926  000CA6  94AC               	bcf	172,2,c	;volatile
  1927  000CA8                     
  1928                           ;main.c: 216:                     BAUDCONbits.BRG16 = 0;
  1929  000CA8  96B8               	bcf	184,3,c	;volatile
  1930  000CAA                     
  1931                           ;main.c: 217:                     RCSTAbits.SPEN = 1;
  1932  000CAA  8EAB               	bsf	171,7,c	;volatile
  1933  000CAC                     
  1934                           ;main.c: 218:                     SPBRG = (unsigned char) (((8000000 / 9600) / 64) - 1);
  1935  000CAC  0E0C               	movlw	12
  1936  000CAE  6EAF               	movwf	175,c	;volatile
  1937                           
  1938                           ;main.c: 219:                     while (contador == 4) {
  1939  000CB0  EF50  F007         	goto	l3672
  1940  000CB4                     l3632:
  1941                           
  1942                           ; BSR set to: 0
  1943                           ;main.c: 220:                         temperatura = (getCad(0)*0.02 * 100);
  1944  000CB4  0E0A               	movlw	10
  1945  000CB6  6E18               	movwf	___flmul@a^0,c
  1946  000CB8  0ED7               	movlw	215
  1947  000CBA  6E19               	movwf	(___flmul@a+1)^0,c
  1948  000CBC  0EA3               	movlw	163
  1949  000CBE  6E1A               	movwf	(___flmul@a+2)^0,c
  1950  000CC0  0E3C               	movlw	60
  1951  000CC2  6E1B               	movwf	(___flmul@a+3)^0,c
  1952  000CC4  0E00               	movlw	0
  1953  000CC6  ECB5  F015         	call	_getCad
  1954  000CCA  C001  F006         	movff	?_getCad,___xxtofl@val
  1955  000CCE  C002  F007         	movff	?_getCad+1,___xxtofl@val+1
  1956  000CD2  0E00               	movlw	0
  1957  000CD4  BE07               	btfsc	(___xxtofl@val+1)^0,7,c
  1958  000CD6  0EFF               	movlw	-1
  1959  000CD8  6E08               	movwf	(___xxtofl@val+2)^0,c
  1960  000CDA  6E09               	movwf	(___xxtofl@val+3)^0,c
  1961  000CDC  0E01               	movlw	1
  1962  000CDE  EC12  F00E         	call	___xxtofl
  1963  000CE2  C006  F014         	movff	?___xxtofl,___flmul@b
  1964  000CE6  C007  F015         	movff	?___xxtofl+1,___flmul@b+1
  1965  000CEA  C008  F016         	movff	?___xxtofl+2,___flmul@b+2
  1966  000CEE  C009  F017         	movff	?___xxtofl+3,___flmul@b+3
  1967  000CF2  EC9B  F007         	call	___flmul	;wreg free
  1968  000CF6  C014  F0A2         	movff	?___flmul,_activar_seguridad$1687
  1969  000CFA  C015  F0A3         	movff	?___flmul+1,_activar_seguridad$1687+1
  1970  000CFE  C016  F0A4         	movff	?___flmul+2,_activar_seguridad$1687+2
  1971  000D02  C017  F0A5         	movff	?___flmul+3,_activar_seguridad$1687+3
  1972                           
  1973                           ;main.c: 220:                         temperatura = (getCad(0)*0.02 * 100);
  1974  000D06  C0A2  F014         	movff	_activar_seguridad$1687,___flmul@b
  1975  000D0A  C0A3  F015         	movff	_activar_seguridad$1687+1,___flmul@b+1
  1976  000D0E  C0A4  F016         	movff	_activar_seguridad$1687+2,___flmul@b+2
  1977  000D12  C0A5  F017         	movff	_activar_seguridad$1687+3,___flmul@b+3
  1978  000D16  0E00               	movlw	0
  1979  000D18  6E18               	movwf	___flmul@a^0,c
  1980  000D1A  0E00               	movlw	0
  1981  000D1C  6E19               	movwf	(___flmul@a+1)^0,c
  1982  000D1E  0EC8               	movlw	200
  1983  000D20  6E1A               	movwf	(___flmul@a+2)^0,c
  1984  000D22  0E42               	movlw	66
  1985  000D24  6E1B               	movwf	(___flmul@a+3)^0,c
  1986  000D26  EC9B  F007         	call	___flmul	;wreg free
  1987  000D2A  C014  F0AE         	movff	?___flmul,activar_seguridad@temperatura
  1988  000D2E  C015  F0AF         	movff	?___flmul+1,activar_seguridad@temperatura+1
  1989  000D32  C016  F0B0         	movff	?___flmul+2,activar_seguridad@temperatura+2
  1990  000D36  C017  F0B1         	movff	?___flmul+3,activar_seguridad@temperatura+3
  1991  000D3A                     
  1992                           ;main.c: 221:                         sprintf(Temperatura, "%d%cC", (int) temperatura);
  1993  000D3A  0E7A               	movlw	low activar_seguridad@Temperatura
  1994  000D3C  0100               	movlb	0	; () banked
  1995  000D3E  6F66               	movwf	sprintf@s& (0+255),b
  1996  000D40  0E00               	movlw	high activar_seguridad@Temperatura
  1997  000D42  6F67               	movwf	(sprintf@s+1)& (0+255),b
  1998  000D44  0E6D               	movlw	low STR_8
  1999  000D46  6F68               	movwf	sprintf@fmt& (0+255),b
  2000  000D48  0E08               	movlw	high STR_8
  2001  000D4A  6F69               	movwf	(sprintf@fmt+1)& (0+255),b
  2002  000D4C  C0AE  F001         	movff	activar_seguridad@temperatura,___fltol@f1
  2003  000D50  C0AF  F002         	movff	activar_seguridad@temperatura+1,___fltol@f1+1
  2004  000D54  C0B0  F003         	movff	activar_seguridad@temperatura+2,___fltol@f1+2
  2005  000D58  C0B1  F004         	movff	activar_seguridad@temperatura+3,___fltol@f1+3
  2006  000D5C  EC27  F011         	call	___fltol	;wreg free
  2007  000D60  C001  F06A         	movff	?___fltol,?_sprintf+4
  2008  000D64  C002  F06B         	movff	?___fltol+1,?_sprintf+5
  2009  000D68  EC1E  F015         	call	_sprintf	;wreg free
  2010  000D6C                     
  2011                           ;main.c: 222:                         Lcd_Set_Cursor(1, 15);
  2012  000D6C  0E0F               	movlw	15
  2013  000D6E  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  2014  000D70  0E01               	movlw	1
  2015  000D72  EC32  F014         	call	_Lcd_Set_Cursor
  2016  000D76                     
  2017                           ;main.c: 223:                         Lcd_Write_String(Temperatura);
  2018  000D76  0E7A               	movlw	low activar_seguridad@Temperatura
  2019  000D78  6E05               	movwf	Lcd_Write_String@a^0,c
  2020  000D7A  0E00               	movlw	high activar_seguridad@Temperatura
  2021  000D7C  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  2022  000D7E  ECBB  F013         	call	_Lcd_Write_String	;wreg free
  2023  000D82                     
  2024                           ;main.c: 224:                         if (temperatura > 30) {
  2025  000D82  0E00               	movlw	0
  2026  000D84  6E01               	movwf	___flge@ff1^0,c
  2027  000D86  0E00               	movlw	0
  2028  000D88  6E02               	movwf	(___flge@ff1+1)^0,c
  2029  000D8A  0EF0               	movlw	240
  2030  000D8C  6E03               	movwf	(___flge@ff1+2)^0,c
  2031  000D8E  0E41               	movlw	65
  2032  000D90  6E04               	movwf	(___flge@ff1+3)^0,c
  2033  000D92  C0AE  F005         	movff	activar_seguridad@temperatura,___flge@ff2
  2034  000D96  C0AF  F006         	movff	activar_seguridad@temperatura+1,___flge@ff2+1
  2035  000D9A  C0B0  F007         	movff	activar_seguridad@temperatura+2,___flge@ff2+2
  2036  000D9E  C0B1  F008         	movff	activar_seguridad@temperatura+3,___flge@ff2+3
  2037  000DA2  ECAA  F011         	call	___flge	;wreg free
  2038  000DA6  B0D8               	btfsc	status,0,c
  2039  000DA8  EFD8  F006         	goto	u3711
  2040  000DAC  EFDA  F006         	goto	u3710
  2041  000DB0                     u3711:
  2042  000DB0  EF26  F007         	goto	l3660
  2043  000DB4                     u3710:
  2044  000DB4                     
  2045                           ;main.c: 228:                             if (hour >= 6 && hour <=18) {
  2046  000DB4  0100               	movlb	0	; () banked
  2047  000DB6  BFC5               	btfsc	(_hour+1)& (0+255),7,b
  2048  000DB8  EFE7  F006         	goto	u3721
  2049  000DBC  51C5               	movf	(_hour+1)& (0+255),w,b
  2050  000DBE  E109               	bnz	u3720
  2051  000DC0  0E06               	movlw	6
  2052  000DC2  5DC4               	subwf	_hour& (0+255),w,b
  2053  000DC4  A0D8               	btfss	status,0,c
  2054  000DC6  EFE7  F006         	goto	u3721
  2055  000DCA  EFE9  F006         	goto	u3720
  2056  000DCE                     u3721:
  2057  000DCE  EFFA  F006         	goto	l288
  2058  000DD2                     u3720:
  2059  000DD2                     
  2060                           ; BSR set to: 0
  2061  000DD2  BFC5               	btfsc	(_hour+1)& (0+255),7,b
  2062  000DD4  EFF7  F006         	goto	u3730
  2063  000DD8  51C5               	movf	(_hour+1)& (0+255),w,b
  2064  000DDA  E107               	bnz	u3731
  2065  000DDC  0E13               	movlw	19
  2066  000DDE  5DC4               	subwf	_hour& (0+255),w,b
  2067  000DE0  B0D8               	btfsc	status,0,c
  2068  000DE2  EFF5  F006         	goto	u3731
  2069  000DE6  EFF7  F006         	goto	u3730
  2070  000DEA                     u3731:
  2071  000DEA  EFFA  F006         	goto	l288
  2072  000DEE                     u3730:
  2073  000DEE                     
  2074                           ; BSR set to: 0
  2075                           ;main.c: 229:                                 PORTAbits.RA2 = 0;
  2076  000DEE  9480               	bcf	128,2,c	;volatile
  2077                           
  2078                           ;main.c: 230:                             } else {
  2079  000DF0  EFFB  F006         	goto	l3648
  2080  000DF4                     l288:
  2081                           
  2082                           ; BSR set to: 0
  2083                           ;main.c: 231:                                 PORTAbits.RA2 = 1;
  2084  000DF4  8480               	bsf	128,2,c	;volatile
  2085  000DF6                     l3648:
  2086                           
  2087                           ; BSR set to: 0
  2088                           ;main.c: 234:                             for (int i = 0; i < 18; i++) {
  2089  000DF6  0E00               	movlw	0
  2090  000DF8  6FB3               	movwf	(activar_seguridad@i_760+1)& (0+255),b
  2091  000DFA  0E00               	movlw	0
  2092  000DFC  6FB2               	movwf	activar_seguridad@i_760& (0+255),b
  2093  000DFE                     l3650:
  2094                           
  2095                           ; BSR set to: 0
  2096  000DFE  BFB3               	btfsc	(activar_seguridad@i_760+1)& (0+255),7,b
  2097  000E00  EF0B  F007         	goto	u3741
  2098  000E04  51B3               	movf	(activar_seguridad@i_760+1)& (0+255),w,b
  2099  000E06  E109               	bnz	u3740
  2100  000E08  0E12               	movlw	18
  2101  000E0A  5DB2               	subwf	activar_seguridad@i_760& (0+255),w,b
  2102  000E0C  A0D8               	btfss	status,0,c
  2103  000E0E  EF0B  F007         	goto	u3741
  2104  000E12  EF0D  F007         	goto	u3740
  2105  000E16                     u3741:
  2106  000E16  EF0F  F007         	goto	l292
  2107  000E1A                     u3740:
  2108  000E1A  EF23  F007         	goto	l291
  2109  000E1E                     l292:
  2110                           
  2111                           ;main.c: 236:                                 while (!TXSTAbits.TRMT) {
  2112  000E1E  A2AC               	btfss	172,1,c	;volatile
  2113  000E20  EF14  F007         	goto	u3751
  2114  000E24  EF16  F007         	goto	u3750
  2115  000E28                     u3751:
  2116  000E28  EF0F  F007         	goto	l292
  2117  000E2C                     u3750:
  2118  000E2C                     
  2119                           ;main.c: 239:                                 TXREG = buffer_TX[i];
  2120  000E2C  0E15               	movlw	low _buffer_TX
  2121  000E2E  0100               	movlb	0	; () banked
  2122  000E30  25B2               	addwf	activar_seguridad@i_760& (0+255),w,b
  2123  000E32  6ED9               	movwf	fsr2l,c
  2124  000E34  0E01               	movlw	high _buffer_TX
  2125  000E36  21B3               	addwfc	(activar_seguridad@i_760+1)& (0+255),w,b
  2126  000E38  6EDA               	movwf	fsr2h,c
  2127  000E3A  50DF               	movf	indf2,w,c
  2128  000E3C  6EAD               	movwf	173,c	;volatile
  2129  000E3E                     
  2130                           ; BSR set to: 0
  2131                           ;main.c: 240:                             }
  2132  000E3E  4BB2               	infsnz	activar_seguridad@i_760& (0+255),f,b
  2133  000E40  2BB3               	incf	(activar_seguridad@i_760+1)& (0+255),f,b
  2134  000E42  EFFF  F006         	goto	l3650
  2135  000E46                     l291:
  2136                           
  2137                           ; BSR set to: 0
  2138                           ;main.c: 241:                             PORTAbits.RA3 = 1;
  2139  000E46  8680               	bsf	128,3,c	;volatile
  2140                           
  2141                           ;main.c: 242:                         } else {
  2142  000E48  EF50  F007         	goto	l3672
  2143  000E4C                     l3660:
  2144                           
  2145                           ;main.c: 244:                             for (int i = 0; i < 21; i++) {
  2146  000E4C  0E00               	movlw	0
  2147  000E4E  0100               	movlb	0	; () banked
  2148  000E50  6FB5               	movwf	(activar_seguridad@i_761+1)& (0+255),b
  2149  000E52  0E00               	movlw	0
  2150  000E54  6FB4               	movwf	activar_seguridad@i_761& (0+255),b
  2151  000E56                     l3662:
  2152                           
  2153                           ; BSR set to: 0
  2154  000E56  BFB5               	btfsc	(activar_seguridad@i_761+1)& (0+255),7,b
  2155  000E58  EF37  F007         	goto	u3761
  2156  000E5C  51B5               	movf	(activar_seguridad@i_761+1)& (0+255),w,b
  2157  000E5E  E109               	bnz	u3760
  2158  000E60  0E15               	movlw	21
  2159  000E62  5DB4               	subwf	activar_seguridad@i_761& (0+255),w,b
  2160  000E64  A0D8               	btfss	status,0,c
  2161  000E66  EF37  F007         	goto	u3761
  2162  000E6A  EF39  F007         	goto	u3760
  2163  000E6E                     u3761:
  2164  000E6E  EF3B  F007         	goto	l298
  2165  000E72                     u3760:
  2166  000E72  EF4F  F007         	goto	l297
  2167  000E76                     l298:
  2168                           
  2169                           ;main.c: 246:                                 while (!TXSTAbits.TRMT) {
  2170  000E76  A2AC               	btfss	172,1,c	;volatile
  2171  000E78  EF40  F007         	goto	u3771
  2172  000E7C  EF42  F007         	goto	u3770
  2173  000E80                     u3771:
  2174  000E80  EF3B  F007         	goto	l298
  2175  000E84                     u3770:
  2176  000E84                     
  2177                           ;main.c: 249:                                 TXREG = buffer_TX2[i];
  2178  000E84  0E00               	movlw	low _buffer_TX2
  2179  000E86  0100               	movlb	0	; () banked
  2180  000E88  25B4               	addwf	activar_seguridad@i_761& (0+255),w,b
  2181  000E8A  6ED9               	movwf	fsr2l,c
  2182  000E8C  0E01               	movlw	high _buffer_TX2
  2183  000E8E  21B5               	addwfc	(activar_seguridad@i_761+1)& (0+255),w,b
  2184  000E90  6EDA               	movwf	fsr2h,c
  2185  000E92  50DF               	movf	indf2,w,c
  2186  000E94  6EAD               	movwf	173,c	;volatile
  2187  000E96                     
  2188                           ; BSR set to: 0
  2189                           ;main.c: 250:                             }
  2190  000E96  4BB4               	infsnz	activar_seguridad@i_761& (0+255),f,b
  2191  000E98  2BB5               	incf	(activar_seguridad@i_761+1)& (0+255),f,b
  2192  000E9A  EF2B  F007         	goto	l3662
  2193  000E9E                     l297:
  2194                           
  2195                           ; BSR set to: 0
  2196                           ;main.c: 251:                             PORTAbits.RA3 = 0;
  2197  000E9E  9680               	bcf	128,3,c	;volatile
  2198  000EA0                     l3672:
  2199                           
  2200                           ;main.c: 219:                     while (contador == 4) {
  2201  000EA0  0E04               	movlw	4
  2202  000EA2  0100               	movlb	0	; () banked
  2203  000EA4  19C2               	xorwf	_contador& (0+255),w,b
  2204  000EA6  11C3               	iorwf	(_contador+1)& (0+255),w,b
  2205  000EA8  B4D8               	btfsc	status,2,c
  2206  000EAA  EF59  F007         	goto	u3781
  2207  000EAE  EF5B  F007         	goto	u3780
  2208  000EB2                     u3781:
  2209  000EB2  EF5A  F006         	goto	l3632
  2210  000EB6                     u3780:
  2211  000EB6  EF9A  F007         	goto	l303
  2212  000EBA                     l3674:
  2213                           
  2214                           ; BSR set to: 0
  2215                           ;main.c: 255:                     aux_contrasenia[4] = 0;
  2216  000EBA  0E00               	movlw	0
  2217  000EBC  6FF0               	movwf	(_aux_contrasenia+4)& (0+255),b
  2218  000EBE                     
  2219                           ; BSR set to: 0
  2220                           ;main.c: 256:                     retardo = atoi(aux_contrasenia);
  2221  000EBE  0EEC               	movlw	low _aux_contrasenia
  2222  000EC0  6E08               	movwf	atoi@s^0,c
  2223  000EC2  0E00               	movlw	high _aux_contrasenia
  2224  000EC4  6E09               	movwf	(atoi@s+1)^0,c
  2225  000EC6  ECEC  F00E         	call	_atoi	;wreg free
  2226  000ECA  C008  F0F4         	movff	?_atoi,_retardo
  2227  000ECE  C009  F0F5         	movff	?_atoi+1,_retardo+1
  2228  000ED2                     
  2229                           ;main.c: 257:                     estado_teclado = n1;
  2230  000ED2  0E00               	movlw	0
  2231  000ED4  0100               	movlb	0	; () banked
  2232  000ED6  6FCA               	movwf	_estado_teclado& (0+255),b
  2233  000ED8                     
  2234                           ; BSR set to: 0
  2235                           ;main.c: 258:                     Lcd_Set_Cursor(2, 1);
  2236  000ED8  0E01               	movlw	1
  2237  000EDA  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  2238  000EDC  0E02               	movlw	2
  2239  000EDE  EC32  F014         	call	_Lcd_Set_Cursor
  2240  000EE2                     
  2241                           ;main.c: 259:                     Lcd_Write_String("contraseña invalida");
  2242  000EE2  0E27               	movlw	low STR_9
  2243  000EE4  6E05               	movwf	Lcd_Write_String@a^0,c
  2244  000EE6  0E08               	movlw	high STR_9
  2245  000EE8  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  2246  000EEA  ECBB  F013         	call	_Lcd_Write_String	;wreg free
  2247  000EEE  EF60  F005         	goto	l3542
  2248  000EF2                     l3688:
  2249                           
  2250                           ; BSR set to: 0
  2251  000EF2  51CA               	movf	_estado_teclado& (0+255),w,b
  2252  000EF4  6F76               	movwf	??_activar_seguridad& (0+255),b
  2253  000EF6  6B77               	clrf	(??_activar_seguridad+1)& (0+255),b
  2254                           
  2255                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2256                           ; Switch size 1, requested type "simple"
  2257                           ; Number of cases is 1, Range of values is 0 to 0
  2258                           ; switch strategies available:
  2259                           ; Name         Instructions Cycles
  2260                           ; simple_byte            4     3 (average)
  2261                           ;	Chosen strategy is simple_byte
  2262  000EF8  5177               	movf	(??_activar_seguridad+1)& (0+255),w,b
  2263  000EFA  0A00               	xorlw	0	; case 0
  2264  000EFC  B4D8               	btfsc	status,2,c
  2265  000EFE  EF83  F007         	goto	l3820
  2266  000F02  EF9A  F007         	goto	l303
  2267  000F06                     l3820:
  2268                           
  2269                           ; BSR set to: 0
  2270                           ; Switch size 1, requested type "simple"
  2271                           ; Number of cases is 5, Range of values is 0 to 4
  2272                           ; switch strategies available:
  2273                           ; Name         Instructions Cycles
  2274                           ; simple_byte           16     9 (average)
  2275                           ;	Chosen strategy is simple_byte
  2276  000F06  5176               	movf	??_activar_seguridad& (0+255),w,b
  2277  000F08  0A00               	xorlw	0	; case 0
  2278  000F0A  B4D8               	btfsc	status,2,c
  2279  000F0C  EF47  F004         	goto	l3456
  2280  000F10  0A01               	xorlw	1	; case 1
  2281  000F12  B4D8               	btfsc	status,2,c
  2282  000F14  EF97  F004         	goto	l3478
  2283  000F18  0A03               	xorlw	3	; case 2
  2284  000F1A  B4D8               	btfsc	status,2,c
  2285  000F1C  EFD0  F004         	goto	l3496
  2286  000F20  0A01               	xorlw	1	; case 3
  2287  000F22  B4D8               	btfsc	status,2,c
  2288  000F24  EF09  F005         	goto	l3514
  2289  000F28  0A07               	xorlw	7	; case 4
  2290  000F2A  B4D8               	btfsc	status,2,c
  2291  000F2C  EF42  F005         	goto	l3532
  2292  000F30  EF9A  F007         	goto	l303
  2293  000F34                     l303:
  2294  000F34  0012               	return		;funcret
  2295  000F36                     __end_of_activar_seguridad:
  2296                           	callstack 0
  2297                           
  2298 ;; *************** function _sprintf *****************
  2299 ;; Defined at:
  2300 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_sprintf.c"
  2301 ;; Parameters:    Size  Location     Type
  2302 ;;  s               2    6[BANK0 ] PTR unsigned char 
  2303 ;;		 -> activar_seguridad@Temperatura(10), activar_seguridad@hours(10), activar_seguridad@mins(10), activar_seguridad@se
      +cs(10), 
  2304 ;;  fmt             2    8[BANK0 ] PTR const unsigned char 
  2305 ;;		 -> STR_8(6), STR_7(9), STR_6(4), STR_5(4), 
  2306 ;; Auto vars:     Size  Location     Type
  2307 ;;  f               6   16[BANK0 ] struct _IO_FILE
  2308 ;;  ap              2   14[BANK0 ] PTR void [1]
  2309 ;;		 -> ?_sprintf(2), 
  2310 ;;  ret             2    0        int 
  2311 ;; Return value:  Size  Location     Type
  2312 ;;                  2    6[BANK0 ] int 
  2313 ;; Registers used:
  2314 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2315 ;; Tracked objects:
  2316 ;;		On entry : 0/0
  2317 ;;		On exit  : 0/0
  2318 ;;		Unchanged: 0/0
  2319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2320 ;;      Params:         0       6       0       0       0       0       0       0       0
  2321 ;;      Locals:         0      10       0       0       0       0       0       0       0
  2322 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2323 ;;      Totals:         0      16       0       0       0       0       0       0       0
  2324 ;;Total ram usage:       16 bytes
  2325 ;; Hardware stack levels used:    1
  2326 ;; Hardware stack levels required when called:    7
  2327 ;; This function calls:
  2328 ;;		_vfprintf
  2329 ;; This function is called by:
  2330 ;;		_activar_seguridad
  2331 ;; This function uses a non-reentrant model
  2332 ;;
  2333                           
  2334                           	psect	text3
  2335  002A3C                     __ptext3:
  2336                           	callstack 0
  2337  002A3C                     _sprintf:
  2338                           	callstack 21
  2339  002A3C  0E6A               	movlw	low (?_sprintf+4)
  2340  002A3E  0100               	movlb	0	; () banked
  2341  002A40  6F6E               	movwf	sprintf@ap& (0+255),b
  2342  002A42  0E00               	movlw	high (?_sprintf+4)
  2343  002A44  6F6F               	movwf	(sprintf@ap+1)& (0+255),b
  2344  002A46  C066  F070         	movff	sprintf@s,sprintf@f
  2345  002A4A  C067  F071         	movff	sprintf@s+1,sprintf@f+1
  2346  002A4E                     
  2347                           ; BSR set to: 0
  2348  002A4E  0E00               	movlw	0
  2349  002A50  6F73               	movwf	(sprintf@f+3)& (0+255),b
  2350  002A52  0E00               	movlw	0
  2351  002A54  6F72               	movwf	(sprintf@f+2)& (0+255),b
  2352  002A56                     
  2353                           ; BSR set to: 0
  2354  002A56  0E00               	movlw	0
  2355  002A58  6F75               	movwf	(sprintf@f+5)& (0+255),b
  2356  002A5A  0E00               	movlw	0
  2357  002A5C  6F74               	movwf	(sprintf@f+4)& (0+255),b
  2358  002A5E                     
  2359                           ; BSR set to: 0
  2360  002A5E  0E70               	movlw	low sprintf@f
  2361  002A60  6F60               	movwf	vfprintf@fp& (0+255),b
  2362  002A62  0E00               	movlw	high sprintf@f
  2363  002A64  6F61               	movwf	(vfprintf@fp+1)& (0+255),b
  2364  002A66  C068  F062         	movff	sprintf@fmt,vfprintf@fmt
  2365  002A6A  C069  F063         	movff	sprintf@fmt+1,vfprintf@fmt+1
  2366  002A6E  0E6E               	movlw	low sprintf@ap
  2367  002A70  6F64               	movwf	vfprintf@ap& (0+255),b
  2368  002A72  0E00               	movlw	high sprintf@ap
  2369  002A74  6F65               	movwf	(vfprintf@ap+1)& (0+255),b
  2370  002A76  EC65  F014         	call	_vfprintf	;wreg free
  2371  002A7A  0100               	movlb	0	; () banked
  2372  002A7C  5172               	movf	(sprintf@f+2)& (0+255),w,b
  2373  002A7E  2566               	addwf	sprintf@s& (0+255),w,b
  2374  002A80  6ED9               	movwf	fsr2l,c
  2375  002A82  5173               	movf	(sprintf@f+3)& (0+255),w,b
  2376  002A84  2167               	addwfc	(sprintf@s+1)& (0+255),w,b
  2377  002A86  6EDA               	movwf	fsr2h,c
  2378  002A88  0E00               	movlw	0
  2379  002A8A  6EDF               	movwf	indf2,c
  2380  002A8C                     
  2381                           ; BSR set to: 0
  2382  002A8C  0012               	return		;funcret
  2383  002A8E                     __end_of_sprintf:
  2384                           	callstack 0
  2385                           
  2386 ;; *************** function _vfprintf *****************
  2387 ;; Defined at:
  2388 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  2389 ;; Parameters:    Size  Location     Type
  2390 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  2391 ;;		 -> sprintf@f(6), 
  2392 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  2393 ;;		 -> STR_8(6), STR_7(9), STR_6(4), STR_5(4), 
  2394 ;;  ap              2    4[BANK0 ] PTR PTR void 
  2395 ;;		 -> sprintf@ap(2), 
  2396 ;; Auto vars:     Size  Location     Type
  2397 ;;  cfmt            2   93[COMRAM] PTR unsigned char 
  2398 ;;		 -> STR_8(6), STR_7(9), STR_6(4), STR_5(4), 
  2399 ;; Return value:  Size  Location     Type
  2400 ;;                  2    0[BANK0 ] int 
  2401 ;; Registers used:
  2402 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2403 ;; Tracked objects:
  2404 ;;		On entry : 0/0
  2405 ;;		On exit  : 0/0
  2406 ;;		Unchanged: 0/0
  2407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2408 ;;      Params:         0       6       0       0       0       0       0       0       0
  2409 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2410 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2411 ;;      Totals:         2       6       0       0       0       0       0       0       0
  2412 ;;Total ram usage:        8 bytes
  2413 ;; Hardware stack levels used:    1
  2414 ;; Hardware stack levels required when called:    6
  2415 ;; This function calls:
  2416 ;;		_vfpfcnvrt
  2417 ;; This function is called by:
  2418 ;;		_sprintf
  2419 ;; This function uses a non-reentrant model
  2420 ;;
  2421                           
  2422                           	psect	text4
  2423  0028CA                     __ptext4:
  2424                           	callstack 0
  2425  0028CA                     _vfprintf:
  2426                           	callstack 21
  2427  0028CA                     
  2428                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.31\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  2429  0028CA  C062  F05E         	movff	vfprintf@fmt,vfprintf@cfmt
  2430  0028CE  C063  F05F         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2431  0028D2                     
  2432                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  2433  0028D2  0E00               	movlw	0
  2434  0028D4  0100               	movlb	0	; () banked
  2435  0028D6  6FBB               	movwf	(_nout+1)& (0+255),b
  2436  0028D8  0E00               	movlw	0
  2437  0028DA  6FBA               	movwf	_nout& (0+255),b
  2438                           
  2439                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  2440  0028DC  EF83  F014         	goto	l3038
  2441  0028E0                     l3036:
  2442                           
  2443                           ; BSR set to: 0
  2444                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  2445  0028E0  C060  F043         	movff	vfprintf@fp,vfpfcnvrt@fp
  2446  0028E4  C061  F044         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2447  0028E8  0E5E               	movlw	low vfprintf@cfmt
  2448  0028EA  6E45               	movwf	vfpfcnvrt@fmt^0,c
  2449  0028EC  0E00               	movlw	high vfprintf@cfmt
  2450  0028EE  6E46               	movwf	(vfpfcnvrt@fmt+1)^0,c
  2451  0028F0  C064  F047         	movff	vfprintf@ap,vfpfcnvrt@ap
  2452  0028F4  C065  F048         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2453  0028F8  ECB0  F009         	call	_vfpfcnvrt	;wreg free
  2454  0028FC  5043               	movf	?_vfpfcnvrt^0,w,c
  2455  0028FE  0100               	movlb	0	; () banked
  2456  002900  27BA               	addwf	_nout& (0+255),f,b
  2457  002902  5044               	movf	(?_vfpfcnvrt+1)^0,w,c
  2458  002904  23BB               	addwfc	(_nout+1)& (0+255),f,b
  2459  002906                     l3038:
  2460                           
  2461                           ; BSR set to: 0
  2462                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  2463  002906  C05E  FFF6         	movff	vfprintf@cfmt,tblptrl
  2464  00290A  C05F  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2465  00290E                     	if	0	;tblptru may be non-zero
  2466  00290E                     	endif
  2467  00290E                     	if	0	;tblptru may be non-zero
  2468  00290E                     	endif
  2469  00290E  0008               	tblrd		*
  2470  002910  50F5               	movf	tablat,w,c
  2471  002912  0900               	iorlw	0
  2472  002914  A4D8               	btfss	status,2,c
  2473  002916  EF8F  F014         	goto	u2871
  2474  00291A  EF91  F014         	goto	u2870
  2475  00291E                     u2871:
  2476  00291E  EF70  F014         	goto	l3036
  2477  002922                     u2870:
  2478  002922                     
  2479                           ; BSR set to: 0
  2480                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  2481  002922  C0BA  F060         	movff	_nout,?_vfprintf
  2482  002926  C0BB  F061         	movff	_nout+1,?_vfprintf+1
  2483  00292A                     
  2484                           ; BSR set to: 0
  2485  00292A  0012               	return		;funcret
  2486  00292C                     __end_of_vfprintf:
  2487                           	callstack 0
  2488                           
  2489 ;; *************** function _vfpfcnvrt *****************
  2490 ;; Defined at:
  2491 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  2492 ;; Parameters:    Size  Location     Type
  2493 ;;  fp              2   66[COMRAM] PTR struct _IO_FILE
  2494 ;;		 -> sprintf@f(6), 
  2495 ;;  fmt             2   68[COMRAM] PTR PTR unsigned char 
  2496 ;;		 -> vfprintf@cfmt(2), 
  2497 ;;  ap              2   70[COMRAM] PTR PTR void 
  2498 ;;		 -> sprintf@ap(2), 
  2499 ;; Auto vars:     Size  Location     Type
  2500 ;;  llu             8   84[COMRAM] unsigned long long 
  2501 ;;  ll              8   76[COMRAM] long long 
  2502 ;;  f               4    0        long long 
  2503 ;;  vp              3    0        PTR void 
  2504 ;;  ct              3    0        unsigned char [3]
  2505 ;;  cp              3    0        PTR unsigned char 
  2506 ;;  i               2    0        int 
  2507 ;;  done            2    0        int 
  2508 ;;  c               1   92[COMRAM] unsigned char 
  2509 ;; Return value:  Size  Location     Type
  2510 ;;                  2   66[COMRAM] int 
  2511 ;; Registers used:
  2512 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2513 ;; Tracked objects:
  2514 ;;		On entry : 0/0
  2515 ;;		On exit  : 0/0
  2516 ;;		Unchanged: 0/0
  2517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2518 ;;      Params:         6       0       0       0       0       0       0       0       0
  2519 ;;      Locals:        17       0       0       0       0       0       0       0       0
  2520 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2521 ;;      Totals:        27       0       0       0       0       0       0       0       0
  2522 ;;Total ram usage:       27 bytes
  2523 ;; Hardware stack levels used:    1
  2524 ;; Hardware stack levels required when called:    5
  2525 ;; This function calls:
  2526 ;;		_ctoa
  2527 ;;		_dtoa
  2528 ;;		_fputc
  2529 ;;		_xtoa
  2530 ;; This function is called by:
  2531 ;;		_vfprintf
  2532 ;; This function uses a non-reentrant model
  2533 ;;
  2534                           
  2535                           	psect	text5
  2536  001360                     __ptext5:
  2537                           	callstack 0
  2538  001360                     _vfpfcnvrt:
  2539                           	callstack 21
  2540  001360                     
  2541                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.31\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          1\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  2542  001360  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2543  001364  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2544  001368  CFDE FFF6          	movff	postinc2,tblptrl
  2545  00136C  CFDD FFF7          	movff	postdec2,tblptrh
  2546  001370                     	if	0	;tblptru may be non-zero
  2547  001370                     	endif
  2548  001370                     	if	0	;tblptru may be non-zero
  2549  001370                     	endif
  2550  001370  0008               	tblrd		*
  2551  001372  50F5               	movf	tablat,w,c
  2552  001374  0A25               	xorlw	37
  2553  001376  A4D8               	btfss	status,2,c
  2554  001378  EFC0  F009         	goto	u2701
  2555  00137C  EFC2  F009         	goto	u2700
  2556  001380                     u2701:
  2557  001380  EF19  F00B         	goto	l2940
  2558  001384                     u2700:
  2559  001384                     
  2560                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  2561  001384  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2562  001388  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2563  00138C  2ADE               	incf	postinc2,f,c
  2564  00138E  0E00               	movlw	0
  2565  001390  22DD               	addwfc	postdec2,f,c
  2566  001392                     
  2567                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  2568  001392  0E00               	movlw	0
  2569  001394  0100               	movlb	0	; () banked
  2570  001396  6FBD               	movwf	(_width+1)& (0+255),b
  2571  001398  0E00               	movlw	0
  2572  00139A  6FBC               	movwf	_width& (0+255),b
  2573  00139C  C0BC  F0C0         	movff	_width,_flags
  2574  0013A0  C0BD  F0C1         	movff	_width+1,_flags+1
  2575  0013A4                     
  2576                           ; BSR set to: 0
  2577                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  2578  0013A4  69BE               	setf	_prec& (0+255),b
  2579  0013A6  69BF               	setf	(_prec+1)& (0+255),b
  2580  0013A8                     
  2581                           ; BSR set to: 0
  2582                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 814:         if (
      +                          *fmt[0] == 'c') {
  2583  0013A8  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2584  0013AC  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2585  0013B0  CFDE FFF6          	movff	postinc2,tblptrl
  2586  0013B4  CFDD FFF7          	movff	postdec2,tblptrh
  2587  0013B8                     	if	0	;tblptru may be non-zero
  2588  0013B8                     	endif
  2589  0013B8                     	if	0	;tblptru may be non-zero
  2590  0013B8                     	endif
  2591  0013B8  0008               	tblrd		*
  2592  0013BA  50F5               	movf	tablat,w,c
  2593  0013BC  0A63               	xorlw	99
  2594  0013BE  A4D8               	btfss	status,2,c
  2595  0013C0  EFE4  F009         	goto	u2711
  2596  0013C4  EFE6  F009         	goto	u2710
  2597  0013C8                     u2711:
  2598  0013C8  EF0D  F00A         	goto	l2900
  2599  0013CC                     u2710:
  2600  0013CC                     
  2601                           ; BSR set to: 0
  2602                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 815:             
      +                          ++*fmt;
  2603  0013CC  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2604  0013D0  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2605  0013D4  2ADE               	incf	postinc2,f,c
  2606  0013D6  0E00               	movlw	0
  2607  0013D8  22DD               	addwfc	postdec2,f,c
  2608                           
  2609                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 816:             
      +                          c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  2610  0013DA  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2611  0013DE  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2612  0013E2  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2613  0013E6  0E02               	movlw	2
  2614  0013E8  26DE               	addwf	postinc2,f,c
  2615  0013EA  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2616  0013EE  0E00               	movlw	0
  2617  0013F0  22DD               	addwfc	postdec2,f,c
  2618  0013F2  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2619  0013F6  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2620  0013FA  50DF               	movf	indf2,w,c
  2621  0013FC  6E5D               	movwf	vfpfcnvrt@c^0,c
  2622  0013FE                     
  2623                           ; BSR set to: 0
  2624                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 817:             
      +                          return ctoa(fp, c);
  2625  0013FE  C043  F00A         	movff	vfpfcnvrt@fp,ctoa@fp
  2626  001402  C044  F00B         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  2627  001406  C05D  F00C         	movff	vfpfcnvrt@c,ctoa@c
  2628  00140A  EC2C  F012         	call	_ctoa	;wreg free
  2629  00140E  C00A  F043         	movff	?_ctoa,?_vfpfcnvrt
  2630  001412  C00B  F044         	movff	?_ctoa+1,?_vfpfcnvrt+1
  2631  001416  EF34  F00B         	goto	l1158
  2632  00141A                     l2900:
  2633                           
  2634                           ; BSR set to: 0
  2635                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  2636  00141A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2637  00141E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2638  001422  CFDE FFF6          	movff	postinc2,tblptrl
  2639  001426  CFDD FFF7          	movff	postdec2,tblptrh
  2640  00142A                     	if	0	;tblptru may be non-zero
  2641  00142A                     	endif
  2642  00142A                     	if	0	;tblptru may be non-zero
  2643  00142A                     	endif
  2644  00142A  0008               	tblrd		*
  2645  00142C  50F5               	movf	tablat,w,c
  2646  00142E  0A64               	xorlw	100
  2647  001430  B4D8               	btfsc	status,2,c
  2648  001432  EF1D  F00A         	goto	u2721
  2649  001436  EF1F  F00A         	goto	u2720
  2650  00143A                     u2721:
  2651  00143A  EF31  F00A         	goto	l2904
  2652  00143E                     u2720:
  2653  00143E                     
  2654                           ; BSR set to: 0
  2655  00143E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2656  001442  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2657  001446  CFDE FFF6          	movff	postinc2,tblptrl
  2658  00144A  CFDD FFF7          	movff	postdec2,tblptrh
  2659  00144E                     	if	0	;tblptru may be non-zero
  2660  00144E                     	endif
  2661  00144E                     	if	0	;tblptru may be non-zero
  2662  00144E                     	endif
  2663  00144E  0008               	tblrd		*
  2664  001450  50F5               	movf	tablat,w,c
  2665  001452  0A69               	xorlw	105
  2666  001454  A4D8               	btfss	status,2,c
  2667  001456  EF2F  F00A         	goto	u2731
  2668  00145A  EF31  F00A         	goto	u2730
  2669  00145E                     u2731:
  2670  00145E  EF71  F00A         	goto	l2910
  2671  001462                     u2730:
  2672  001462                     l2904:
  2673                           
  2674                           ; BSR set to: 0
  2675                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  2676  001462  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2677  001466  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2678  00146A  2ADE               	incf	postinc2,f,c
  2679  00146C  0E00               	movlw	0
  2680  00146E  22DD               	addwfc	postdec2,f,c
  2681                           
  2682                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  2683  001470  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2684  001474  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2685  001478  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2686  00147C  0E02               	movlw	2
  2687  00147E  26DE               	addwf	postinc2,f,c
  2688  001480  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2689  001484  0E00               	movlw	0
  2690  001486  22DD               	addwfc	postdec2,f,c
  2691  001488  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2692  00148C  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2693  001490  CFDE F04D          	movff	postinc2,vfpfcnvrt@ll
  2694  001494  CFDD F04E          	movff	postdec2,vfpfcnvrt@ll+1
  2695  001498  0E00               	movlw	0
  2696  00149A  BE4E               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  2697  00149C  0EFF               	movlw	-1
  2698  00149E  6E4F               	movwf	(vfpfcnvrt@ll+2)^0,c
  2699  0014A0  6E50               	movwf	(vfpfcnvrt@ll+3)^0,c
  2700  0014A2  6E51               	movwf	(vfpfcnvrt@ll+4)^0,c
  2701  0014A4  6E52               	movwf	(vfpfcnvrt@ll+5)^0,c
  2702  0014A6  6E53               	movwf	(vfpfcnvrt@ll+6)^0,c
  2703  0014A8  6E54               	movwf	(vfpfcnvrt@ll+7)^0,c
  2704  0014AA                     
  2705                           ; BSR set to: 0
  2706                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  2707  0014AA  C043  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  2708  0014AE  C044  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2709  0014B2  C04D  F01E         	movff	vfpfcnvrt@ll,dtoa@d
  2710  0014B6  C04E  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  2711  0014BA  C04F  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  2712  0014BE  C050  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  2713  0014C2  C051  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  2714  0014C6  C052  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  2715  0014CA  C053  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  2716  0014CE  C054  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  2717  0014D2  EC35  F00B         	call	_dtoa	;wreg free
  2718  0014D6  C01C  F043         	movff	?_dtoa,?_vfpfcnvrt
  2719  0014DA  C01D  F044         	movff	?_dtoa+1,?_vfpfcnvrt+1
  2720  0014DE  EF34  F00B         	goto	l1158
  2721  0014E2                     l2910:
  2722                           
  2723                           ; BSR set to: 0
  2724                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1296:         if 
      +                          ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
  2725  0014E2  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2726  0014E6  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2727  0014EA  CFDE FFF6          	movff	postinc2,tblptrl
  2728  0014EE  CFDD FFF7          	movff	postdec2,tblptrh
  2729  0014F2                     	if	0	;tblptru may be non-zero
  2730  0014F2                     	endif
  2731  0014F2                     	if	0	;tblptru may be non-zero
  2732  0014F2                     	endif
  2733  0014F2  0008               	tblrd		*
  2734  0014F4  50F5               	movf	tablat,w,c
  2735  0014F6  0A78               	xorlw	120
  2736  0014F8  B4D8               	btfsc	status,2,c
  2737  0014FA  EF81  F00A         	goto	u2741
  2738  0014FE  EF83  F00A         	goto	u2740
  2739  001502                     u2741:
  2740  001502  EF95  F00A         	goto	l2914
  2741  001506                     u2740:
  2742  001506                     
  2743                           ; BSR set to: 0
  2744  001506  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2745  00150A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2746  00150E  CFDE FFF6          	movff	postinc2,tblptrl
  2747  001512  CFDD FFF7          	movff	postdec2,tblptrh
  2748  001516                     	if	0	;tblptru may be non-zero
  2749  001516                     	endif
  2750  001516                     	if	0	;tblptru may be non-zero
  2751  001516                     	endif
  2752  001516  0008               	tblrd		*
  2753  001518  50F5               	movf	tablat,w,c
  2754  00151A  0A58               	xorlw	88
  2755  00151C  A4D8               	btfss	status,2,c
  2756  00151E  EF93  F00A         	goto	u2751
  2757  001522  EF95  F00A         	goto	u2750
  2758  001526                     u2751:
  2759  001526  EFE3  F00A         	goto	l2924
  2760  00152A                     u2750:
  2761  00152A                     l2914:
  2762                           
  2763                           ; BSR set to: 0
  2764                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1298:            
      +                           c = (*fmt)[0];
  2765  00152A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2766  00152E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2767  001532  CFDE FFF6          	movff	postinc2,tblptrl
  2768  001536  CFDD FFF7          	movff	postdec2,tblptrh
  2769  00153A                     	if	0	;tblptru may be non-zero
  2770  00153A                     	endif
  2771  00153A                     	if	0	;tblptru may be non-zero
  2772  00153A                     	endif
  2773  00153A  0008               	tblrd		*
  2774  00153C  CFF5 F05D          	movff	tablat,vfpfcnvrt@c
  2775  001540                     
  2776                           ; BSR set to: 0
  2777                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1299:            
      +                           ++*fmt;
  2778  001540  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2779  001544  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2780  001548  2ADE               	incf	postinc2,f,c
  2781  00154A  0E00               	movlw	0
  2782  00154C  22DD               	addwfc	postdec2,f,c
  2783  00154E                     
  2784                           ; BSR set to: 0
  2785                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1300:            
      +                           llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned in
      +                          t)0));
  2786  00154E  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2787  001552  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2788  001556  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2789  00155A  0E02               	movlw	2
  2790  00155C  26DE               	addwf	postinc2,f,c
  2791  00155E  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2792  001562  0E00               	movlw	0
  2793  001564  22DD               	addwfc	postdec2,f,c
  2794  001566  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2795  00156A  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2796  00156E  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  2797  001572  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  2798  001576  C04B  F055         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  2799  00157A  C04C  F056         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  2800  00157E  6A57               	clrf	(vfpfcnvrt@llu+2)^0,c
  2801  001580  6A58               	clrf	(vfpfcnvrt@llu+3)^0,c
  2802  001582  6A59               	clrf	(vfpfcnvrt@llu+4)^0,c
  2803  001584  6A5A               	clrf	(vfpfcnvrt@llu+5)^0,c
  2804  001586  6A5B               	clrf	(vfpfcnvrt@llu+6)^0,c
  2805  001588  6A5C               	clrf	(vfpfcnvrt@llu+7)^0,c
  2806  00158A                     
  2807                           ; BSR set to: 0
  2808                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1302:            
      +                           return xtoa(fp, llu, c);
  2809  00158A  C043  F01C         	movff	vfpfcnvrt@fp,xtoa@fp
  2810  00158E  C044  F01D         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  2811  001592  C055  F01E         	movff	vfpfcnvrt@llu,xtoa@d
  2812  001596  C056  F01F         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  2813  00159A  C057  F020         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  2814  00159E  C058  F021         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  2815  0015A2  C059  F022         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  2816  0015A6  C05A  F023         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  2817  0015AA  C05B  F024         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  2818  0015AE  C05C  F025         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  2819  0015B2  C05D  F026         	movff	vfpfcnvrt@c,xtoa@x
  2820  0015B6  ECA6  F00C         	call	_xtoa	;wreg free
  2821  0015BA  C01C  F043         	movff	?_xtoa,?_vfpfcnvrt
  2822  0015BE  C01D  F044         	movff	?_xtoa+1,?_vfpfcnvrt+1
  2823  0015C2  EF34  F00B         	goto	l1158
  2824  0015C6                     l2924:
  2825                           
  2826                           ; BSR set to: 0
  2827                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  2828  0015C6  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2829  0015CA  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2830  0015CE  CFDE FFF6          	movff	postinc2,tblptrl
  2831  0015D2  CFDD FFF7          	movff	postdec2,tblptrh
  2832  0015D6                     	if	0	;tblptru may be non-zero
  2833  0015D6                     	endif
  2834  0015D6                     	if	0	;tblptru may be non-zero
  2835  0015D6                     	endif
  2836  0015D6  0008               	tblrd		*
  2837  0015D8  50F5               	movf	tablat,w,c
  2838  0015DA  0A25               	xorlw	37
  2839  0015DC  A4D8               	btfss	status,2,c
  2840  0015DE  EFF3  F00A         	goto	u2761
  2841  0015E2  EFF5  F00A         	goto	u2760
  2842  0015E6                     u2761:
  2843  0015E6  EF0C  F00B         	goto	l2934
  2844  0015EA                     u2760:
  2845  0015EA                     
  2846                           ; BSR set to: 0
  2847                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  2848  0015EA  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2849  0015EE  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2850  0015F2  2ADE               	incf	postinc2,f,c
  2851  0015F4  0E00               	movlw	0
  2852  0015F6  22DD               	addwfc	postdec2,f,c
  2853  0015F8                     
  2854                           ; BSR set to: 0
  2855                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  2856  0015F8  0E00               	movlw	0
  2857  0015FA  6E02               	movwf	(fputc@c+1)^0,c
  2858  0015FC  0E25               	movlw	37
  2859  0015FE  6E01               	movwf	fputc@c^0,c
  2860  001600  C043  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2861  001604  C044  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2862  001608  EC98  F012         	call	_fputc	;wreg free
  2863  00160C                     l2930:
  2864                           
  2865                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  2866  00160C  0E00               	movlw	0
  2867  00160E  6E44               	movwf	(?_vfpfcnvrt+1)^0,c
  2868  001610  0E01               	movlw	1
  2869  001612  6E43               	movwf	?_vfpfcnvrt^0,c
  2870  001614  EF34  F00B         	goto	l1158
  2871  001618                     l2934:
  2872                           
  2873                           ; BSR set to: 0
  2874                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  2875  001618  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2876  00161C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2877  001620  2ADE               	incf	postinc2,f,c
  2878  001622  0E00               	movlw	0
  2879  001624  22DD               	addwfc	postdec2,f,c
  2880  001626                     
  2881                           ; BSR set to: 0
  2882                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  2883  001626  0E00               	movlw	0
  2884  001628  6E44               	movwf	(?_vfpfcnvrt+1)^0,c
  2885  00162A  0E00               	movlw	0
  2886  00162C  6E43               	movwf	?_vfpfcnvrt^0,c
  2887  00162E  EF34  F00B         	goto	l1158
  2888  001632                     l2940:
  2889                           
  2890                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  2891  001632  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2892  001636  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2893  00163A  CFDE FFF6          	movff	postinc2,tblptrl
  2894  00163E  CFDD FFF7          	movff	postdec2,tblptrh
  2895  001642                     	if	0	;tblptru may be non-zero
  2896  001642                     	endif
  2897  001642                     	if	0	;tblptru may be non-zero
  2898  001642                     	endif
  2899  001642  0008               	tblrd		*
  2900  001644  50F5               	movf	tablat,w,c
  2901  001646  6E01               	movwf	fputc@c^0,c
  2902  001648  6A02               	clrf	(fputc@c+1)^0,c
  2903  00164A  C043  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2904  00164E  C044  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2905  001652  EC98  F012         	call	_fputc	;wreg free
  2906  001656                     
  2907                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  2908  001656  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2909  00165A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2910  00165E  2ADE               	incf	postinc2,f,c
  2911  001660  0E00               	movlw	0
  2912  001662  22DD               	addwfc	postdec2,f,c
  2913  001664  EF06  F00B         	goto	l2930
  2914  001668                     l1158:
  2915  001668  0012               	return		;funcret
  2916  00166A                     __end_of_vfpfcnvrt:
  2917                           	callstack 0
  2918                           
  2919 ;; *************** function _xtoa *****************
  2920 ;; Defined at:
  2921 ;;		line 645 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  2922 ;; Parameters:    Size  Location     Type
  2923 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  2924 ;;		 -> sprintf@f(6), 
  2925 ;;  d               8   29[COMRAM] unsigned long long 
  2926 ;;  x               1   37[COMRAM] unsigned char 
  2927 ;; Auto vars:     Size  Location     Type
  2928 ;;  n               8   54[COMRAM] unsigned long long 
  2929 ;;  c               2   64[COMRAM] int 
  2930 ;;  i               2   62[COMRAM] int 
  2931 ;;  w               2   52[COMRAM] int 
  2932 ;;  p               2   50[COMRAM] int 
  2933 ;; Return value:  Size  Location     Type
  2934 ;;                  2   27[COMRAM] int 
  2935 ;; Registers used:
  2936 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2937 ;; Tracked objects:
  2938 ;;		On entry : 0/0
  2939 ;;		On exit  : 0/0
  2940 ;;		Unchanged: 0/0
  2941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2942 ;;      Params:        11       0       0       0       0       0       0       0       0
  2943 ;;      Locals:        20       0       0       0       0       0       0       0       0
  2944 ;;      Temps:          8       0       0       0       0       0       0       0       0
  2945 ;;      Totals:        39       0       0       0       0       0       0       0       0
  2946 ;;Total ram usage:       39 bytes
  2947 ;; Hardware stack levels used:    1
  2948 ;; Hardware stack levels required when called:    4
  2949 ;; This function calls:
  2950 ;;		_isalpha
  2951 ;;		_isupper
  2952 ;;		_pad
  2953 ;;		_toupper
  2954 ;; This function is called by:
  2955 ;;		_vfpfcnvrt
  2956 ;; This function uses a non-reentrant model
  2957 ;;
  2958                           
  2959                           	psect	text6
  2960  00194C                     __ptext6:
  2961                           	callstack 0
  2962  00194C                     _xtoa:
  2963                           	callstack 21
  2964  00194C                     
  2965                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 645: static int x
      +                          toa(FILE *fp, unsigned long long d, char x);C:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 646: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\co
      +                          mmon\doprnt.c: 647:     int c, i, p, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources
      +                          \c99\common\doprnt.c: 648:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.3
      +                          1\pic\sources\c99\common\doprnt.c: 651:     if (!(prec < 0)) {
  2966  00194C  0100               	movlb	0	; () banked
  2967  00194E  BFBF               	btfsc	(_prec+1)& (0+255),7,b
  2968  001950  EFAC  F00C         	goto	u2461
  2969  001954  EFAE  F00C         	goto	u2460
  2970  001958                     u2461:
  2971  001958  EFAF  F00C         	goto	l2786
  2972  00195C                     u2460:
  2973  00195C                     
  2974                           ; BSR set to: 0
  2975                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 652:         flag
      +                          s &= ~(1 << 1);
  2976  00195C  93C0               	bcf	_flags& (0+255),1,b
  2977  00195E                     l2786:
  2978                           
  2979                           ; BSR set to: 0
  2980                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 654:     p = (0 <
      +                           prec) ? prec : 1;
  2981  00195E  BFBF               	btfsc	(_prec+1)& (0+255),7,b
  2982  001960  EFBC  F00C         	goto	u2470
  2983  001964  51BF               	movf	(_prec+1)& (0+255),w,b
  2984  001966  E106               	bnz	u2471
  2985  001968  05BE               	decf	_prec& (0+255),w,b
  2986  00196A  B0D8               	btfsc	status,0,c
  2987  00196C  EFBA  F00C         	goto	u2471
  2988  001970  EFBC  F00C         	goto	u2470
  2989  001974                     u2471:
  2990  001974  EFC2  F00C         	goto	l1128
  2991  001978                     u2470:
  2992  001978                     
  2993                           ; BSR set to: 0
  2994  001978  0E00               	movlw	0
  2995  00197A  6E34               	movwf	(xtoa@p+1)^0,c
  2996  00197C  0E01               	movlw	1
  2997  00197E  6E33               	movwf	xtoa@p^0,c
  2998  001980  EFC6  F00C         	goto	l1130
  2999  001984                     l1128:
  3000                           
  3001                           ; BSR set to: 0
  3002  001984  C0BE  F033         	movff	_prec,xtoa@p
  3003  001988  C0BF  F034         	movff	_prec+1,xtoa@p+1
  3004  00198C                     l1130:
  3005                           
  3006                           ; BSR set to: 0
  3007                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 655:     w = widt
      +                          h;
  3008  00198C  C0BC  F035         	movff	_width,xtoa@w
  3009  001990  C0BD  F036         	movff	_width+1,xtoa@w+1
  3010                           
  3011                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 656:     if (flag
      +                          s & (1 << 4)) {
  3012  001994  A9C0               	btfss	_flags& (0+255),4,b
  3013  001996  EFCF  F00C         	goto	u2481
  3014  00199A  EFD1  F00C         	goto	u2480
  3015  00199E                     u2481:
  3016  00199E  EFD5  F00C         	goto	l2792
  3017  0019A2                     u2480:
  3018  0019A2                     
  3019                           ; BSR set to: 0
  3020                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 657:         w -=
      +                           2;
  3021  0019A2  0EFE               	movlw	254
  3022  0019A4  2635               	addwf	xtoa@w^0,f,c
  3023  0019A6  0EFF               	movlw	255
  3024  0019A8  2236               	addwfc	(xtoa@w+1)^0,f,c
  3025  0019AA                     l2792:
  3026                           
  3027                           ; BSR set to: 0
  3028                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 661:     n = d;
  3029  0019AA  C01E  F037         	movff	xtoa@d,xtoa@n
  3030  0019AE  C01F  F038         	movff	xtoa@d+1,xtoa@n+1
  3031  0019B2  C020  F039         	movff	xtoa@d+2,xtoa@n+2
  3032  0019B6  C021  F03A         	movff	xtoa@d+3,xtoa@n+3
  3033  0019BA  C022  F03B         	movff	xtoa@d+4,xtoa@n+4
  3034  0019BE  C023  F03C         	movff	xtoa@d+5,xtoa@n+5
  3035  0019C2  C024  F03D         	movff	xtoa@d+6,xtoa@n+6
  3036  0019C6  C025  F03E         	movff	xtoa@d+7,xtoa@n+7
  3037  0019CA                     
  3038                           ; BSR set to: 0
  3039                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 662:     i = size
      +                          of(dbuf) - 1;
  3040  0019CA  0E00               	movlw	0
  3041  0019CC  6E40               	movwf	(xtoa@i+1)^0,c
  3042  0019CE  0E1F               	movlw	31
  3043  0019D0  6E3F               	movwf	xtoa@i^0,c
  3044  0019D2                     
  3045                           ; BSR set to: 0
  3046                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 663:     dbuf[i] 
      +                          = '\0';
  3047  0019D2  0E00               	movlw	0
  3048  0019D4  6FEB               	movwf	(_dbuf+31)& (0+255),b
  3049                           
  3050                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 664:     while (!
      +                          (i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3051  0019D6  EFA0  F00D         	goto	l2828
  3052  0019DA                     l2798:
  3053                           
  3054                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 665:         --i;
  3055  0019DA  063F               	decf	xtoa@i^0,f,c
  3056  0019DC  A0D8               	btfss	status,0,c
  3057  0019DE  0640               	decf	(xtoa@i+1)^0,f,c
  3058  0019E0                     
  3059                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 666:         c = 
      +                          n & 0x0f;
  3060  0019E0  0E0F               	movlw	15
  3061  0019E2  1437               	andwf	xtoa@n^0,w,c
  3062  0019E4  6E41               	movwf	xtoa@c^0,c
  3063  0019E6  6A42               	clrf	(xtoa@c+1)^0,c
  3064  0019E8                     
  3065                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 667:         c = 
      +                          (c < 10) ? (int)'0' + c : (int)'a' + (c - 10);
  3066  0019E8  BE42               	btfsc	(xtoa@c+1)^0,7,c
  3067  0019EA  EF00  F00D         	goto	u2491
  3068  0019EE  5042               	movf	(xtoa@c+1)^0,w,c
  3069  0019F0  E109               	bnz	u2490
  3070  0019F2  0E0A               	movlw	10
  3071  0019F4  5C41               	subwf	xtoa@c^0,w,c
  3072  0019F6  A0D8               	btfss	status,0,c
  3073  0019F8  EF00  F00D         	goto	u2491
  3074  0019FC  EF02  F00D         	goto	u2490
  3075  001A00                     u2491:
  3076  001A00  EF0A  F00D         	goto	l2806
  3077  001A04                     u2490:
  3078  001A04  0E57               	movlw	87
  3079  001A06  2441               	addwf	xtoa@c^0,w,c
  3080  001A08  6E41               	movwf	xtoa@c^0,c
  3081  001A0A  0E00               	movlw	0
  3082  001A0C  2042               	addwfc	(xtoa@c+1)^0,w,c
  3083  001A0E  6E42               	movwf	(xtoa@c+1)^0,c
  3084  001A10  EF10  F00D         	goto	l1137
  3085  001A14                     l2806:
  3086  001A14  0E30               	movlw	48
  3087  001A16  2441               	addwf	xtoa@c^0,w,c
  3088  001A18  6E41               	movwf	xtoa@c^0,c
  3089  001A1A  0E00               	movlw	0
  3090  001A1C  2042               	addwfc	(xtoa@c+1)^0,w,c
  3091  001A1E  6E42               	movwf	(xtoa@c+1)^0,c
  3092  001A20                     l1137:
  3093  001A20  0EBF               	movlw	191
  3094  001A22  6E27               	movwf	??_xtoa^0,c
  3095  001A24  0EFF               	movlw	255
  3096  001A26  6E28               	movwf	(??_xtoa+1)^0,c
  3097  001A28  5026               	movf	xtoa@x^0,w,c
  3098  001A2A  6E29               	movwf	(??_xtoa+2)^0,c
  3099  001A2C  6A2A               	clrf	(??_xtoa+3)^0,c
  3100  001A2E  5027               	movf	??_xtoa^0,w,c
  3101  001A30  2629               	addwf	(??_xtoa+2)^0,f,c
  3102  001A32  5028               	movf	(??_xtoa+1)^0,w,c
  3103  001A34  222A               	addwfc	(??_xtoa+3)^0,f,c
  3104  001A36  502A               	movf	(??_xtoa+3)^0,w,c
  3105  001A38  E10A               	bnz	u2500
  3106  001A3A  0E1A               	movlw	26
  3107  001A3C  5C29               	subwf	(??_xtoa+2)^0,w,c
  3108  001A3E  A0D8               	btfss	status,0,c
  3109  001A40  EF24  F00D         	goto	u2501
  3110  001A44  EF27  F00D         	goto	u2500
  3111  001A48                     u2501:
  3112  001A48  0E01               	movlw	1
  3113  001A4A  EF28  F00D         	goto	u2510
  3114  001A4E                     u2500:
  3115  001A4E  0E00               	movlw	0
  3116  001A50                     u2510:
  3117  001A50  6E2F               	movwf	_xtoa$1348^0,c
  3118  001A52  6A30               	clrf	(_xtoa$1348+1)^0,c
  3119  001A54  502F               	movf	_xtoa$1348^0,w,c
  3120  001A56  1030               	iorwf	(_xtoa$1348+1)^0,w,c
  3121  001A58  B4D8               	btfsc	status,2,c
  3122  001A5A  EF31  F00D         	goto	u2521
  3123  001A5E  EF33  F00D         	goto	u2520
  3124  001A62                     u2521:
  3125  001A62  EF63  F00D         	goto	l2820
  3126  001A66                     u2520:
  3127  001A66  0E9F               	movlw	159
  3128  001A68  6E27               	movwf	??_xtoa^0,c
  3129  001A6A  0EFF               	movlw	255
  3130  001A6C  6E28               	movwf	(??_xtoa+1)^0,c
  3131  001A6E  0E20               	movlw	32
  3132  001A70  1041               	iorwf	xtoa@c^0,w,c
  3133  001A72  6E29               	movwf	(??_xtoa+2)^0,c
  3134  001A74  0E00               	movlw	0
  3135  001A76  1042               	iorwf	(xtoa@c+1)^0,w,c
  3136  001A78  6E2A               	movwf	(??_xtoa+3)^0,c
  3137  001A7A  5027               	movf	??_xtoa^0,w,c
  3138  001A7C  2629               	addwf	(??_xtoa+2)^0,f,c
  3139  001A7E  5028               	movf	(??_xtoa+1)^0,w,c
  3140  001A80  222A               	addwfc	(??_xtoa+3)^0,f,c
  3141  001A82  502A               	movf	(??_xtoa+3)^0,w,c
  3142  001A84  E10A               	bnz	u2530
  3143  001A86  0E1A               	movlw	26
  3144  001A88  5C29               	subwf	(??_xtoa+2)^0,w,c
  3145  001A8A  A0D8               	btfss	status,0,c
  3146  001A8C  EF4A  F00D         	goto	u2531
  3147  001A90  EF4D  F00D         	goto	u2530
  3148  001A94                     u2531:
  3149  001A94  0E01               	movlw	1
  3150  001A96  EF4E  F00D         	goto	u2540
  3151  001A9A                     u2530:
  3152  001A9A  0E00               	movlw	0
  3153  001A9C                     u2540:
  3154  001A9C  6E31               	movwf	_xtoa$1349^0,c
  3155  001A9E  6A32               	clrf	(_xtoa$1349+1)^0,c
  3156  001AA0  5031               	movf	_xtoa$1349^0,w,c
  3157  001AA2  1032               	iorwf	(_xtoa$1349+1)^0,w,c
  3158  001AA4  B4D8               	btfsc	status,2,c
  3159  001AA6  EF57  F00D         	goto	u2551
  3160  001AAA  EF59  F00D         	goto	u2550
  3161  001AAE                     u2551:
  3162  001AAE  EF63  F00D         	goto	l2820
  3163  001AB2                     u2550:
  3164  001AB2                     
  3165                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 669:             
      +                          c = toupper(c);
  3166  001AB2  C041  F007         	movff	xtoa@c,toupper@c
  3167  001AB6  C042  F008         	movff	xtoa@c+1,toupper@c+1
  3168  001ABA  EC96  F014         	call	_toupper	;wreg free
  3169  001ABE  C007  F041         	movff	?_toupper,xtoa@c
  3170  001AC2  C008  F042         	movff	?_toupper+1,xtoa@c+1
  3171  001AC6                     l2820:
  3172                           
  3173                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 671:         dbuf
      +                          [i] = (char)c;
  3174  001AC6  0ECC               	movlw	low _dbuf
  3175  001AC8  243F               	addwf	xtoa@i^0,w,c
  3176  001ACA  6ED9               	movwf	fsr2l,c
  3177  001ACC  0E00               	movlw	high _dbuf
  3178  001ACE  2040               	addwfc	(xtoa@i+1)^0,w,c
  3179  001AD0  6EDA               	movwf	fsr2h,c
  3180  001AD2  C041  FFDF         	movff	xtoa@c,indf2
  3181  001AD6                     
  3182                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 672:         --p;
  3183  001AD6  0633               	decf	xtoa@p^0,f,c
  3184  001AD8  A0D8               	btfss	status,0,c
  3185  001ADA  0634               	decf	(xtoa@p+1)^0,f,c
  3186  001ADC                     
  3187                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 673:         --w;
  3188  001ADC  0635               	decf	xtoa@w^0,f,c
  3189  001ADE  A0D8               	btfss	status,0,c
  3190  001AE0  0636               	decf	(xtoa@w+1)^0,f,c
  3191  001AE2                     
  3192                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 674:         n = 
      +                          n >> 4;
  3193  001AE2  C037  F027         	movff	xtoa@n,??_xtoa
  3194  001AE6  C038  F028         	movff	xtoa@n+1,??_xtoa+1
  3195  001AEA  C039  F029         	movff	xtoa@n+2,??_xtoa+2
  3196  001AEE  C03A  F02A         	movff	xtoa@n+3,??_xtoa+3
  3197  001AF2  C03B  F02B         	movff	xtoa@n+4,??_xtoa+4
  3198  001AF6  C03C  F02C         	movff	xtoa@n+5,??_xtoa+5
  3199  001AFA  C03D  F02D         	movff	xtoa@n+6,??_xtoa+6
  3200  001AFE  C03E  F02E         	movff	xtoa@n+7,??_xtoa+7
  3201  001B02  0E05               	movlw	5
  3202  001B04  EF8D  F00D         	goto	u2560
  3203  001B08                     u2565:
  3204  001B08  90D8               	bcf	status,0,c
  3205  001B0A  322E               	rrcf	(??_xtoa+7)^0,f,c
  3206  001B0C  322D               	rrcf	(??_xtoa+6)^0,f,c
  3207  001B0E  322C               	rrcf	(??_xtoa+5)^0,f,c
  3208  001B10  322B               	rrcf	(??_xtoa+4)^0,f,c
  3209  001B12  322A               	rrcf	(??_xtoa+3)^0,f,c
  3210  001B14  3229               	rrcf	(??_xtoa+2)^0,f,c
  3211  001B16  3228               	rrcf	(??_xtoa+1)^0,f,c
  3212  001B18  3227               	rrcf	??_xtoa^0,f,c
  3213  001B1A                     u2560:
  3214  001B1A  2EE8               	decfsz	wreg,f,c
  3215  001B1C  EF84  F00D         	goto	u2565
  3216  001B20  C027  F037         	movff	??_xtoa,xtoa@n
  3217  001B24  C028  F038         	movff	??_xtoa+1,xtoa@n+1
  3218  001B28  C029  F039         	movff	??_xtoa+2,xtoa@n+2
  3219  001B2C  C02A  F03A         	movff	??_xtoa+3,xtoa@n+3
  3220  001B30  C02B  F03B         	movff	??_xtoa+4,xtoa@n+4
  3221  001B34  C02C  F03C         	movff	??_xtoa+5,xtoa@n+5
  3222  001B38  C02D  F03D         	movff	??_xtoa+6,xtoa@n+6
  3223  001B3C  C02E  F03E         	movff	??_xtoa+7,xtoa@n+7
  3224  001B40                     l2828:
  3225                           
  3226                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 664:     while (!
      +                          (i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3227  001B40  BE40               	btfsc	(xtoa@i+1)^0,7,c
  3228  001B42  EFAC  F00D         	goto	u2571
  3229  001B46  5040               	movf	(xtoa@i+1)^0,w,c
  3230  001B48  E109               	bnz	u2570
  3231  001B4A  0E02               	movlw	2
  3232  001B4C  5C3F               	subwf	xtoa@i^0,w,c
  3233  001B4E  A0D8               	btfss	status,0,c
  3234  001B50  EFAC  F00D         	goto	u2571
  3235  001B54  EFAE  F00D         	goto	u2570
  3236  001B58                     u2571:
  3237  001B58  EFDF  F00D         	goto	l1151
  3238  001B5C                     u2570:
  3239  001B5C  5037               	movf	xtoa@n^0,w,c
  3240  001B5E  1038               	iorwf	(xtoa@n+1)^0,w,c
  3241  001B60  1039               	iorwf	(xtoa@n+2)^0,w,c
  3242  001B62  103A               	iorwf	(xtoa@n+3)^0,w,c
  3243  001B64  103B               	iorwf	(xtoa@n+4)^0,w,c
  3244  001B66  103C               	iorwf	(xtoa@n+5)^0,w,c
  3245  001B68  103D               	iorwf	(xtoa@n+6)^0,w,c
  3246  001B6A  103E               	iorwf	(xtoa@n+7)^0,w,c
  3247  001B6C  A4D8               	btfss	status,2,c
  3248  001B6E  EFBB  F00D         	goto	u2581
  3249  001B72  EFBD  F00D         	goto	u2580
  3250  001B76                     u2581:
  3251  001B76  EFED  F00C         	goto	l2798
  3252  001B7A                     u2580:
  3253  001B7A  BE34               	btfsc	(xtoa@p+1)^0,7,c
  3254  001B7C  EFCA  F00D         	goto	u2590
  3255  001B80  5034               	movf	(xtoa@p+1)^0,w,c
  3256  001B82  E106               	bnz	u2591
  3257  001B84  0433               	decf	xtoa@p^0,w,c
  3258  001B86  B0D8               	btfsc	status,0,c
  3259  001B88  EFC8  F00D         	goto	u2591
  3260  001B8C  EFCA  F00D         	goto	u2590
  3261  001B90                     u2591:
  3262  001B90  EFED  F00C         	goto	l2798
  3263  001B94                     u2590:
  3264  001B94  BE36               	btfsc	(xtoa@w+1)^0,7,c
  3265  001B96  EFD5  F00D         	goto	u2601
  3266  001B9A  5036               	movf	(xtoa@w+1)^0,w,c
  3267  001B9C  E108               	bnz	u2600
  3268  001B9E  0435               	decf	xtoa@w^0,w,c
  3269  001BA0  A0D8               	btfss	status,0,c
  3270  001BA2  EFD5  F00D         	goto	u2601
  3271  001BA6  EFD7  F00D         	goto	u2600
  3272  001BAA                     u2601:
  3273  001BAA  EFDF  F00D         	goto	l1151
  3274  001BAE                     u2600:
  3275  001BAE  0100               	movlb	0	; () banked
  3276  001BB0  B3C0               	btfsc	_flags& (0+255),1,b
  3277  001BB2  EFDD  F00D         	goto	u2611
  3278  001BB6  EFDF  F00D         	goto	u2610
  3279  001BBA                     u2611:
  3280  001BBA  EFED  F00C         	goto	l2798
  3281  001BBE                     u2610:
  3282  001BBE                     l1151:
  3283                           
  3284                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 678:     if (flag
      +                          s & (1 << 4)) {
  3285  001BBE  0100               	movlb	0	; () banked
  3286  001BC0  A9C0               	btfss	_flags& (0+255),4,b
  3287  001BC2  EFE5  F00D         	goto	u2621
  3288  001BC6  EFE7  F00D         	goto	u2620
  3289  001BCA                     u2621:
  3290  001BCA  EFFD  F00D         	goto	l2844
  3291  001BCE                     u2620:
  3292  001BCE                     
  3293                           ; BSR set to: 0
  3294                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 679:         --i;
  3295  001BCE  063F               	decf	xtoa@i^0,f,c
  3296  001BD0  A0D8               	btfss	status,0,c
  3297  001BD2  0640               	decf	(xtoa@i+1)^0,f,c
  3298  001BD4                     
  3299                           ; BSR set to: 0
  3300                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 680:         dbuf
      +                          [i] = x;
  3301  001BD4  0ECC               	movlw	low _dbuf
  3302  001BD6  243F               	addwf	xtoa@i^0,w,c
  3303  001BD8  6ED9               	movwf	fsr2l,c
  3304  001BDA  0E00               	movlw	high _dbuf
  3305  001BDC  2040               	addwfc	(xtoa@i+1)^0,w,c
  3306  001BDE  6EDA               	movwf	fsr2h,c
  3307  001BE0  C026  FFDF         	movff	xtoa@x,indf2
  3308  001BE4                     
  3309                           ; BSR set to: 0
  3310                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 681:         --i;
  3311  001BE4  063F               	decf	xtoa@i^0,f,c
  3312  001BE6  A0D8               	btfss	status,0,c
  3313  001BE8  0640               	decf	(xtoa@i+1)^0,f,c
  3314                           
  3315                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 682:         dbuf
      +                          [i] = '0';
  3316  001BEA  0ECC               	movlw	low _dbuf
  3317  001BEC  243F               	addwf	xtoa@i^0,w,c
  3318  001BEE  6ED9               	movwf	fsr2l,c
  3319  001BF0  0E00               	movlw	high _dbuf
  3320  001BF2  2040               	addwfc	(xtoa@i+1)^0,w,c
  3321  001BF4  6EDA               	movwf	fsr2h,c
  3322  001BF6  0E30               	movlw	48
  3323  001BF8  6EDF               	movwf	indf2,c
  3324  001BFA                     l2844:
  3325                           
  3326                           ; BSR set to: 0
  3327                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 686:     return p
      +                          ad(fp, &dbuf[i], w);
  3328  001BFA  C01C  F011         	movff	xtoa@fp,pad@fp
  3329  001BFE  C01D  F012         	movff	xtoa@fp+1,pad@fp+1
  3330  001C02  0ECC               	movlw	low _dbuf
  3331  001C04  243F               	addwf	xtoa@i^0,w,c
  3332  001C06  6E13               	movwf	pad@buf^0,c
  3333  001C08  0E00               	movlw	high _dbuf
  3334  001C0A  2040               	addwfc	(xtoa@i+1)^0,w,c
  3335  001C0C  6E14               	movwf	(pad@buf+1)^0,c
  3336  001C0E  C035  F015         	movff	xtoa@w,pad@p
  3337  001C12  C036  F016         	movff	xtoa@w+1,pad@p+1
  3338  001C16  ECFD  F012         	call	_pad	;wreg free
  3339  001C1A  C011  F01C         	movff	?_pad,?_xtoa
  3340  001C1E  C012  F01D         	movff	?_pad+1,?_xtoa+1
  3341  001C22  0012               	return		;funcret
  3342  001C24                     __end_of_xtoa:
  3343                           	callstack 0
  3344                           
  3345 ;; *************** function _toupper *****************
  3346 ;; Defined at:
  3347 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\toupper.c"
  3348 ;; Parameters:    Size  Location     Type
  3349 ;;  c               2    6[COMRAM] int 
  3350 ;; Auto vars:     Size  Location     Type
  3351 ;;		None
  3352 ;; Return value:  Size  Location     Type
  3353 ;;                  2    6[COMRAM] int 
  3354 ;; Registers used:
  3355 ;;		wreg, status,2, status,0
  3356 ;; Tracked objects:
  3357 ;;		On entry : 0/0
  3358 ;;		On exit  : 0/0
  3359 ;;		Unchanged: 0/0
  3360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3361 ;;      Params:         2       0       0       0       0       0       0       0       0
  3362 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3363 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3364 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3365 ;;Total ram usage:        8 bytes
  3366 ;; Hardware stack levels used:    1
  3367 ;; Hardware stack levels required when called:    1
  3368 ;; This function calls:
  3369 ;;		_islower
  3370 ;; This function is called by:
  3371 ;;		_xtoa
  3372 ;; This function uses a non-reentrant model
  3373 ;;
  3374                           
  3375                           	psect	text7
  3376  00292C                     __ptext7:
  3377                           	callstack 0
  3378  00292C                     _toupper:
  3379                           	callstack 23
  3380  00292C  0E9F               	movlw	159
  3381  00292E  6E09               	movwf	??_toupper^0,c
  3382  002930  0EFF               	movlw	255
  3383  002932  6E0A               	movwf	(??_toupper+1)^0,c
  3384  002934  C007  F00B         	movff	toupper@c,??_toupper+2
  3385  002938  C008  F00C         	movff	toupper@c+1,??_toupper+3
  3386  00293C  5009               	movf	??_toupper^0,w,c
  3387  00293E  260B               	addwf	(??_toupper+2)^0,f,c
  3388  002940  500A               	movf	(??_toupper+1)^0,w,c
  3389  002942  220C               	addwfc	(??_toupper+3)^0,f,c
  3390  002944  500C               	movf	(??_toupper+3)^0,w,c
  3391  002946  E10A               	bnz	u2220
  3392  002948  0E1A               	movlw	26
  3393  00294A  5C0B               	subwf	(??_toupper+2)^0,w,c
  3394  00294C  A0D8               	btfss	status,0,c
  3395  00294E  EFAB  F014         	goto	u2221
  3396  002952  EFAE  F014         	goto	u2220
  3397  002956                     u2221:
  3398  002956  0E01               	movlw	1
  3399  002958  EFAF  F014         	goto	u2230
  3400  00295C                     u2220:
  3401  00295C  0E00               	movlw	0
  3402  00295E                     u2230:
  3403  00295E  6E0D               	movwf	_toupper$1434^0,c
  3404  002960  6A0E               	clrf	(_toupper$1434+1)^0,c
  3405  002962  500D               	movf	_toupper$1434^0,w,c
  3406  002964  100E               	iorwf	(_toupper$1434+1)^0,w,c
  3407  002966  B4D8               	btfsc	status,2,c
  3408  002968  EFB8  F014         	goto	u2241
  3409  00296C  EFBA  F014         	goto	u2240
  3410  002970                     u2241:
  3411  002970  EFC0  F014         	goto	l1224
  3412  002974                     u2240:
  3413  002974  0E5F               	movlw	95
  3414  002976  1407               	andwf	toupper@c^0,w,c
  3415  002978  6E07               	movwf	?_toupper^0,c
  3416  00297A  6A08               	clrf	(?_toupper+1)^0,c
  3417  00297C  EFC4  F014         	goto	l1229
  3418  002980                     l1224:
  3419  002980  C007  F007         	movff	toupper@c,?_toupper
  3420  002984  C008  F008         	movff	toupper@c+1,?_toupper+1
  3421  002988                     l1229:
  3422  002988  0012               	return		;funcret
  3423  00298A                     __end_of_toupper:
  3424                           	callstack 0
  3425                           
  3426 ;; *************** function _islower *****************
  3427 ;; Defined at:
  3428 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\islower.c"
  3429 ;; Parameters:    Size  Location     Type
  3430 ;;  c               2    0[COMRAM] int 
  3431 ;; Auto vars:     Size  Location     Type
  3432 ;;		None
  3433 ;; Return value:  Size  Location     Type
  3434 ;;                  2    0[COMRAM] int 
  3435 ;; Registers used:
  3436 ;;		wreg, status,2, status,0
  3437 ;; Tracked objects:
  3438 ;;		On entry : 0/0
  3439 ;;		On exit  : 0/0
  3440 ;;		Unchanged: 0/0
  3441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3442 ;;      Params:         2       0       0       0       0       0       0       0       0
  3443 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3444 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3445 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3446 ;;Total ram usage:        6 bytes
  3447 ;; Hardware stack levels used:    1
  3448 ;; This function calls:
  3449 ;;		Nothing
  3450 ;; This function is called by:
  3451 ;;		_toupper
  3452 ;; This function uses a non-reentrant model
  3453 ;;
  3454                           
  3455                           	psect	text8
  3456  002CDA                     __ptext8:
  3457                           	callstack 0
  3458  002CDA                     _islower:
  3459                           	callstack 23
  3460  002CDA  0E9F               	movlw	159
  3461  002CDC  6E03               	movwf	??_islower^0,c
  3462  002CDE  0EFF               	movlw	255
  3463  002CE0  6E04               	movwf	(??_islower+1)^0,c
  3464  002CE2  C001  F005         	movff	islower@c,??_islower+2
  3465  002CE6  C002  F006         	movff	islower@c+1,??_islower+3
  3466  002CEA  5003               	movf	??_islower^0,w,c
  3467  002CEC  2605               	addwf	(??_islower+2)^0,f,c
  3468  002CEE  5004               	movf	(??_islower+1)^0,w,c
  3469  002CF0  2206               	addwfc	(??_islower+3)^0,f,c
  3470  002CF2  5006               	movf	(??_islower+3)^0,w,c
  3471  002CF4  E10A               	bnz	u1980
  3472  002CF6  0E1A               	movlw	26
  3473  002CF8  5C05               	subwf	(??_islower+2)^0,w,c
  3474  002CFA  A0D8               	btfss	status,0,c
  3475  002CFC  EF82  F016         	goto	u1981
  3476  002D00  EF85  F016         	goto	u1980
  3477  002D04                     u1981:
  3478  002D04  0E01               	movlw	1
  3479  002D06  EF86  F016         	goto	u1990
  3480  002D0A                     u1980:
  3481  002D0A  0E00               	movlw	0
  3482  002D0C                     u1990:
  3483  002D0C  6E01               	movwf	?_islower^0,c
  3484  002D0E  6A02               	clrf	(?_islower+1)^0,c
  3485  002D10  0012               	return		;funcret
  3486  002D12                     __end_of_islower:
  3487                           	callstack 0
  3488                           
  3489 ;; *************** function _isupper *****************
  3490 ;; Defined at:
  3491 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\isupper.c"
  3492 ;; Parameters:    Size  Location     Type
  3493 ;;  c               2    0[COMRAM] int 
  3494 ;; Auto vars:     Size  Location     Type
  3495 ;;		None
  3496 ;; Return value:  Size  Location     Type
  3497 ;;                  2    0[COMRAM] int 
  3498 ;; Registers used:
  3499 ;;		wreg, status,2, status,0
  3500 ;; Tracked objects:
  3501 ;;		On entry : 0/0
  3502 ;;		On exit  : 0/0
  3503 ;;		Unchanged: 0/0
  3504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3505 ;;      Params:         2       0       0       0       0       0       0       0       0
  3506 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3507 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3508 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3509 ;;Total ram usage:        6 bytes
  3510 ;; Hardware stack levels used:    1
  3511 ;; This function calls:
  3512 ;;		Nothing
  3513 ;; This function is called by:
  3514 ;;		_xtoa
  3515 ;; This function uses a non-reentrant model
  3516 ;;
  3517                           
  3518                           	psect	text9
  3519  002D12                     __ptext9:
  3520                           	callstack 0
  3521  002D12                     _isupper:
  3522                           	callstack 24
  3523  002D12  0EBF               	movlw	191
  3524  002D14  6E03               	movwf	??_isupper^0,c
  3525  002D16  0EFF               	movlw	255
  3526  002D18  6E04               	movwf	(??_isupper+1)^0,c
  3527  002D1A  C001  F005         	movff	isupper@c,??_isupper+2
  3528  002D1E  C002  F006         	movff	isupper@c+1,??_isupper+3
  3529  002D22  5003               	movf	??_isupper^0,w,c
  3530  002D24  2605               	addwf	(??_isupper+2)^0,f,c
  3531  002D26  5004               	movf	(??_isupper+1)^0,w,c
  3532  002D28  2206               	addwfc	(??_isupper+3)^0,f,c
  3533  002D2A  5006               	movf	(??_isupper+3)^0,w,c
  3534  002D2C  E10A               	bnz	u2180
  3535  002D2E  0E1A               	movlw	26
  3536  002D30  5C05               	subwf	(??_isupper+2)^0,w,c
  3537  002D32  A0D8               	btfss	status,0,c
  3538  002D34  EF9E  F016         	goto	u2181
  3539  002D38  EFA1  F016         	goto	u2180
  3540  002D3C                     u2181:
  3541  002D3C  0E01               	movlw	1
  3542  002D3E  EFA2  F016         	goto	u2190
  3543  002D42                     u2180:
  3544  002D42  0E00               	movlw	0
  3545  002D44                     u2190:
  3546  002D44  6E01               	movwf	?_isupper^0,c
  3547  002D46  6A02               	clrf	(?_isupper+1)^0,c
  3548  002D48  0012               	return		;funcret
  3549  002D4A                     __end_of_isupper:
  3550                           	callstack 0
  3551                           
  3552 ;; *************** function _isalpha *****************
  3553 ;; Defined at:
  3554 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\isalpha.c"
  3555 ;; Parameters:    Size  Location     Type
  3556 ;;  c               2    0[COMRAM] int 
  3557 ;; Auto vars:     Size  Location     Type
  3558 ;;		None
  3559 ;; Return value:  Size  Location     Type
  3560 ;;                  2    0[COMRAM] int 
  3561 ;; Registers used:
  3562 ;;		wreg, status,2, status,0
  3563 ;; Tracked objects:
  3564 ;;		On entry : 0/0
  3565 ;;		On exit  : 0/0
  3566 ;;		Unchanged: 0/0
  3567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3568 ;;      Params:         2       0       0       0       0       0       0       0       0
  3569 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3570 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3571 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3572 ;;Total ram usage:        6 bytes
  3573 ;; Hardware stack levels used:    1
  3574 ;; This function calls:
  3575 ;;		Nothing
  3576 ;; This function is called by:
  3577 ;;		_xtoa
  3578 ;; This function uses a non-reentrant model
  3579 ;;
  3580                           
  3581                           	psect	text10
  3582  002C2C                     __ptext10:
  3583                           	callstack 0
  3584  002C2C                     _isalpha:
  3585                           	callstack 24
  3586  002C2C  0E9F               	movlw	159
  3587  002C2E  6E03               	movwf	??_isalpha^0,c
  3588  002C30  0EFF               	movlw	255
  3589  002C32  6E04               	movwf	(??_isalpha+1)^0,c
  3590  002C34  0E20               	movlw	32
  3591  002C36  1001               	iorwf	isalpha@c^0,w,c
  3592  002C38  6E05               	movwf	(??_isalpha+2)^0,c
  3593  002C3A  0E00               	movlw	0
  3594  002C3C  1002               	iorwf	(isalpha@c+1)^0,w,c
  3595  002C3E  6E06               	movwf	(??_isalpha+3)^0,c
  3596  002C40  5003               	movf	??_isalpha^0,w,c
  3597  002C42  2605               	addwf	(??_isalpha+2)^0,f,c
  3598  002C44  5004               	movf	(??_isalpha+1)^0,w,c
  3599  002C46  2206               	addwfc	(??_isalpha+3)^0,f,c
  3600  002C48  5006               	movf	(??_isalpha+3)^0,w,c
  3601  002C4A  E10A               	bnz	u2200
  3602  002C4C  0E1A               	movlw	26
  3603  002C4E  5C05               	subwf	(??_isalpha+2)^0,w,c
  3604  002C50  A0D8               	btfss	status,0,c
  3605  002C52  EF2D  F016         	goto	u2201
  3606  002C56  EF30  F016         	goto	u2200
  3607  002C5A                     u2201:
  3608  002C5A  0E01               	movlw	1
  3609  002C5C  EF31  F016         	goto	u2210
  3610  002C60                     u2200:
  3611  002C60  0E00               	movlw	0
  3612  002C62                     u2210:
  3613  002C62  6E01               	movwf	?_isalpha^0,c
  3614  002C64  6A02               	clrf	(?_isalpha+1)^0,c
  3615  002C66  0012               	return		;funcret
  3616  002C68                     __end_of_isalpha:
  3617                           	callstack 0
  3618                           
  3619 ;; *************** function _dtoa *****************
  3620 ;; Defined at:
  3621 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  3622 ;; Parameters:    Size  Location     Type
  3623 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  3624 ;;		 -> sprintf@f(6), 
  3625 ;;  d               8   29[COMRAM] long long 
  3626 ;; Auto vars:     Size  Location     Type
  3627 ;;  n               8   53[COMRAM] long long 
  3628 ;;  i               2   61[COMRAM] int 
  3629 ;;  s               2   51[COMRAM] int 
  3630 ;;  w               2   49[COMRAM] int 
  3631 ;;  p               2   47[COMRAM] int 
  3632 ;; Return value:  Size  Location     Type
  3633 ;;                  2   27[COMRAM] int 
  3634 ;; Registers used:
  3635 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3636 ;; Tracked objects:
  3637 ;;		On entry : 0/0
  3638 ;;		On exit  : 0/0
  3639 ;;		Unchanged: 0/0
  3640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3641 ;;      Params:        10       0       0       0       0       0       0       0       0
  3642 ;;      Locals:        18       0       0       0       0       0       0       0       0
  3643 ;;      Temps:          8       0       0       0       0       0       0       0       0
  3644 ;;      Totals:        36       0       0       0       0       0       0       0       0
  3645 ;;Total ram usage:       36 bytes
  3646 ;; Hardware stack levels used:    1
  3647 ;; Hardware stack levels required when called:    4
  3648 ;; This function calls:
  3649 ;;		___aodiv
  3650 ;;		___aomod
  3651 ;;		_abs
  3652 ;;		_pad
  3653 ;; This function is called by:
  3654 ;;		_vfpfcnvrt
  3655 ;; This function uses a non-reentrant model
  3656 ;;
  3657                           
  3658                           	psect	text11
  3659  00166A                     __ptext11:
  3660                           	callstack 0
  3661  00166A                     _dtoa:
  3662                           	callstack 21
  3663  00166A                     
  3664                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  3665  00166A  C01E  F036         	movff	dtoa@d,dtoa@n
  3666  00166E  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
  3667  001672  C020  F038         	movff	dtoa@d+2,dtoa@n+2
  3668  001676  C021  F039         	movff	dtoa@d+3,dtoa@n+3
  3669  00167A  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
  3670  00167E  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
  3671  001682  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
  3672  001686  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
  3673  00168A                     
  3674                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  3675  00168A  BE3D               	btfsc	(dtoa@n+7)^0,7,c
  3676  00168C  EF4A  F00B         	goto	u2311
  3677  001690  EF4D  F00B         	goto	u2310
  3678  001694                     u2311:
  3679  001694  0E01               	movlw	1
  3680  001696  EF4E  F00B         	goto	u2320
  3681  00169A                     u2310:
  3682  00169A  0E00               	movlw	0
  3683  00169C                     u2320:
  3684  00169C  6E34               	movwf	dtoa@s^0,c
  3685  00169E  6A35               	clrf	(dtoa@s+1)^0,c
  3686                           
  3687                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  3688  0016A0  5034               	movf	dtoa@s^0,w,c
  3689  0016A2  1035               	iorwf	(dtoa@s+1)^0,w,c
  3690  0016A4  B4D8               	btfsc	status,2,c
  3691  0016A6  EF57  F00B         	goto	u2331
  3692  0016AA  EF59  F00B         	goto	u2330
  3693  0016AE                     u2331:
  3694  0016AE  EF69  F00B         	goto	l2726
  3695  0016B2                     u2330:
  3696  0016B2                     
  3697                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  3698  0016B2  1E3D               	comf	(dtoa@n+7)^0,f,c
  3699  0016B4  1E3C               	comf	(dtoa@n+6)^0,f,c
  3700  0016B6  1E3B               	comf	(dtoa@n+5)^0,f,c
  3701  0016B8  1E3A               	comf	(dtoa@n+4)^0,f,c
  3702  0016BA  1E39               	comf	(dtoa@n+3)^0,f,c
  3703  0016BC  1E38               	comf	(dtoa@n+2)^0,f,c
  3704  0016BE  1E37               	comf	(dtoa@n+1)^0,f,c
  3705  0016C0  6C36               	negf	dtoa@n^0,c
  3706  0016C2  0E00               	movlw	0
  3707  0016C4  2237               	addwfc	(dtoa@n+1)^0,f,c
  3708  0016C6  2238               	addwfc	(dtoa@n+2)^0,f,c
  3709  0016C8  2239               	addwfc	(dtoa@n+3)^0,f,c
  3710  0016CA  223A               	addwfc	(dtoa@n+4)^0,f,c
  3711  0016CC  223B               	addwfc	(dtoa@n+5)^0,f,c
  3712  0016CE  223C               	addwfc	(dtoa@n+6)^0,f,c
  3713  0016D0  223D               	addwfc	(dtoa@n+7)^0,f,c
  3714  0016D2                     l2726:
  3715                           
  3716                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  3717  0016D2  0100               	movlb	0	; () banked
  3718  0016D4  BFBF               	btfsc	(_prec+1)& (0+255),7,b
  3719  0016D6  EF6F  F00B         	goto	u2341
  3720  0016DA  EF71  F00B         	goto	u2340
  3721  0016DE                     u2341:
  3722  0016DE  EF72  F00B         	goto	l2730
  3723  0016E2                     u2340:
  3724  0016E2                     
  3725                           ; BSR set to: 0
  3726                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  3727  0016E2  93C0               	bcf	_flags& (0+255),1,b
  3728  0016E4                     l2730:
  3729                           
  3730                           ; BSR set to: 0
  3731                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  3732  0016E4  BFBF               	btfsc	(_prec+1)& (0+255),7,b
  3733  0016E6  EF7F  F00B         	goto	u2350
  3734  0016EA  51BF               	movf	(_prec+1)& (0+255),w,b
  3735  0016EC  E106               	bnz	u2351
  3736  0016EE  05BE               	decf	_prec& (0+255),w,b
  3737  0016F0  B0D8               	btfsc	status,0,c
  3738  0016F2  EF7D  F00B         	goto	u2351
  3739  0016F6  EF7F  F00B         	goto	u2350
  3740  0016FA                     u2351:
  3741  0016FA  EF85  F00B         	goto	l1103
  3742  0016FE                     u2350:
  3743  0016FE                     
  3744                           ; BSR set to: 0
  3745  0016FE  0E00               	movlw	0
  3746  001700  6E31               	movwf	(dtoa@p+1)^0,c
  3747  001702  0E01               	movlw	1
  3748  001704  6E30               	movwf	dtoa@p^0,c
  3749  001706  EF89  F00B         	goto	l1105
  3750  00170A                     l1103:
  3751                           
  3752                           ; BSR set to: 0
  3753  00170A  C0BE  F030         	movff	_prec,dtoa@p
  3754  00170E  C0BF  F031         	movff	_prec+1,dtoa@p+1
  3755  001712                     l1105:
  3756                           
  3757                           ; BSR set to: 0
  3758                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  3759  001712  C0BC  F032         	movff	_width,dtoa@w
  3760  001716  C0BD  F033         	movff	_width+1,dtoa@w+1
  3761  00171A                     
  3762                           ; BSR set to: 0
  3763                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  3764  00171A  5034               	movf	dtoa@s^0,w,c
  3765  00171C  1035               	iorwf	(dtoa@s+1)^0,w,c
  3766  00171E  A4D8               	btfss	status,2,c
  3767  001720  EF94  F00B         	goto	u2361
  3768  001724  EF96  F00B         	goto	u2360
  3769  001728                     u2361:
  3770  001728  EF9D  F00B         	goto	l2738
  3771  00172C                     u2360:
  3772  00172C                     
  3773                           ; BSR set to: 0
  3774  00172C  A5C0               	btfss	_flags& (0+255),2,b
  3775  00172E  EF9B  F00B         	goto	u2371
  3776  001732  EF9D  F00B         	goto	u2370
  3777  001736                     u2371:
  3778  001736  EFA0  F00B         	goto	l2740
  3779  00173A                     u2370:
  3780  00173A                     l2738:
  3781                           
  3782                           ; BSR set to: 0
  3783                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 306:         --w;
  3784  00173A  0632               	decf	dtoa@w^0,f,c
  3785  00173C  A0D8               	btfss	status,0,c
  3786  00173E  0633               	decf	(dtoa@w+1)^0,f,c
  3787  001740                     l2740:
  3788                           
  3789                           ; BSR set to: 0
  3790                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  3791  001740  0E00               	movlw	0
  3792  001742  6E3F               	movwf	(dtoa@i+1)^0,c
  3793  001744  0E1F               	movlw	31
  3794  001746  6E3E               	movwf	dtoa@i^0,c
  3795  001748                     
  3796                           ; BSR set to: 0
  3797                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  3798  001748  0E00               	movlw	0
  3799  00174A  6FEB               	movwf	(_dbuf+31)& (0+255),b
  3800                           
  3801                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3802  00174C  EF24  F00C         	goto	l2754
  3803  001750                     l2744:
  3804                           
  3805                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 313:         --i;
  3806  001750  063E               	decf	dtoa@i^0,f,c
  3807  001752  A0D8               	btfss	status,0,c
  3808  001754  063F               	decf	(dtoa@i+1)^0,f,c
  3809  001756                     
  3810                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  3811  001756  0ECC               	movlw	low _dbuf
  3812  001758  243E               	addwf	dtoa@i^0,w,c
  3813  00175A  6ED9               	movwf	fsr2l,c
  3814  00175C  0E00               	movlw	high _dbuf
  3815  00175E  203F               	addwfc	(dtoa@i+1)^0,w,c
  3816  001760  6EDA               	movwf	fsr2h,c
  3817  001762  C036  F001         	movff	dtoa@n,___aomod@dividend
  3818  001766  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
  3819  00176A  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
  3820  00176E  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
  3821  001772  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
  3822  001776  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
  3823  00177A  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
  3824  00177E  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
  3825  001782  0E0A               	movlw	10
  3826  001784  6E09               	movwf	___aomod@divisor^0,c
  3827  001786  0E00               	movlw	0
  3828  001788  6E0A               	movwf	(___aomod@divisor+1)^0,c
  3829  00178A  0E00               	movlw	0
  3830  00178C  6E0B               	movwf	(___aomod@divisor+2)^0,c
  3831  00178E  0E00               	movlw	0
  3832  001790  6E0C               	movwf	(___aomod@divisor+3)^0,c
  3833  001792  0E00               	movlw	0
  3834  001794  6E0D               	movwf	(___aomod@divisor+4)^0,c
  3835  001796  0E00               	movlw	0
  3836  001798  6E0E               	movwf	(___aomod@divisor+5)^0,c
  3837  00179A  0E00               	movlw	0
  3838  00179C  6E0F               	movwf	(___aomod@divisor+6)^0,c
  3839  00179E  0E00               	movlw	0
  3840  0017A0  6E10               	movwf	(___aomod@divisor+7)^0,c
  3841  0017A2  EC75  F010         	call	___aomod	;wreg free
  3842  0017A6  C001  F026         	movff	?___aomod,??_dtoa
  3843  0017AA  C002  F027         	movff	?___aomod+1,??_dtoa+1
  3844  0017AE  C003  F028         	movff	?___aomod+2,??_dtoa+2
  3845  0017B2  C004  F029         	movff	?___aomod+3,??_dtoa+3
  3846  0017B6  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  3847  0017BA  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  3848  0017BE  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  3849  0017C2  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  3850  0017C6  C026  F013         	movff	??_dtoa,abs@a
  3851  0017CA  C028  F014         	movff	??_dtoa+2,abs@a+1
  3852  0017CE  ECD7  F015         	call	_abs	;wreg free
  3853  0017D2  5013               	movf	?_abs^0,w,c
  3854  0017D4  0F30               	addlw	48
  3855  0017D6  6EDF               	movwf	indf2,c
  3856  0017D8                     
  3857                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 315:         --p;
  3858  0017D8  0630               	decf	dtoa@p^0,f,c
  3859  0017DA  A0D8               	btfss	status,0,c
  3860  0017DC  0631               	decf	(dtoa@p+1)^0,f,c
  3861  0017DE                     
  3862                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 316:         --w;
  3863  0017DE  0632               	decf	dtoa@w^0,f,c
  3864  0017E0  A0D8               	btfss	status,0,c
  3865  0017E2  0633               	decf	(dtoa@w+1)^0,f,c
  3866  0017E4                     
  3867                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  3868  0017E4  C036  F001         	movff	dtoa@n,___aodiv@dividend
  3869  0017E8  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  3870  0017EC  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  3871  0017F0  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  3872  0017F4  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  3873  0017F8  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  3874  0017FC  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  3875  001800  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  3876  001804  0E0A               	movlw	10
  3877  001806  6E09               	movwf	___aodiv@divisor^0,c
  3878  001808  0E00               	movlw	0
  3879  00180A  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  3880  00180C  0E00               	movlw	0
  3881  00180E  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  3882  001810  0E00               	movlw	0
  3883  001812  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  3884  001814  0E00               	movlw	0
  3885  001816  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  3886  001818  0E00               	movlw	0
  3887  00181A  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  3888  00181C  0E00               	movlw	0
  3889  00181E  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  3890  001820  0E00               	movlw	0
  3891  001822  6E10               	movwf	(___aodiv@divisor+7)^0,c
  3892  001824  ECB1  F00F         	call	___aodiv	;wreg free
  3893  001828  C001  F036         	movff	?___aodiv,dtoa@n
  3894  00182C  C002  F037         	movff	?___aodiv+1,dtoa@n+1
  3895  001830  C003  F038         	movff	?___aodiv+2,dtoa@n+2
  3896  001834  C004  F039         	movff	?___aodiv+3,dtoa@n+3
  3897  001838  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
  3898  00183C  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
  3899  001840  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
  3900  001844  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
  3901  001848                     l2754:
  3902                           
  3903                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3904  001848  BE3F               	btfsc	(dtoa@i+1)^0,7,c
  3905  00184A  EF2F  F00C         	goto	u2381
  3906  00184E  503F               	movf	(dtoa@i+1)^0,w,c
  3907  001850  E108               	bnz	u2380
  3908  001852  043E               	decf	dtoa@i^0,w,c
  3909  001854  A0D8               	btfss	status,0,c
  3910  001856  EF2F  F00C         	goto	u2381
  3911  00185A  EF31  F00C         	goto	u2380
  3912  00185E                     u2381:
  3913  00185E  EF62  F00C         	goto	l2764
  3914  001862                     u2380:
  3915  001862  5036               	movf	dtoa@n^0,w,c
  3916  001864  1037               	iorwf	(dtoa@n+1)^0,w,c
  3917  001866  1038               	iorwf	(dtoa@n+2)^0,w,c
  3918  001868  1039               	iorwf	(dtoa@n+3)^0,w,c
  3919  00186A  103A               	iorwf	(dtoa@n+4)^0,w,c
  3920  00186C  103B               	iorwf	(dtoa@n+5)^0,w,c
  3921  00186E  103C               	iorwf	(dtoa@n+6)^0,w,c
  3922  001870  103D               	iorwf	(dtoa@n+7)^0,w,c
  3923  001872  A4D8               	btfss	status,2,c
  3924  001874  EF3E  F00C         	goto	u2391
  3925  001878  EF40  F00C         	goto	u2390
  3926  00187C                     u2391:
  3927  00187C  EFA8  F00B         	goto	l2744
  3928  001880                     u2390:
  3929  001880  BE31               	btfsc	(dtoa@p+1)^0,7,c
  3930  001882  EF4D  F00C         	goto	u2400
  3931  001886  5031               	movf	(dtoa@p+1)^0,w,c
  3932  001888  E106               	bnz	u2401
  3933  00188A  0430               	decf	dtoa@p^0,w,c
  3934  00188C  B0D8               	btfsc	status,0,c
  3935  00188E  EF4B  F00C         	goto	u2401
  3936  001892  EF4D  F00C         	goto	u2400
  3937  001896                     u2401:
  3938  001896  EFA8  F00B         	goto	l2744
  3939  00189A                     u2400:
  3940  00189A  BE33               	btfsc	(dtoa@w+1)^0,7,c
  3941  00189C  EF58  F00C         	goto	u2411
  3942  0018A0  5033               	movf	(dtoa@w+1)^0,w,c
  3943  0018A2  E108               	bnz	u2410
  3944  0018A4  0432               	decf	dtoa@w^0,w,c
  3945  0018A6  A0D8               	btfss	status,0,c
  3946  0018A8  EF58  F00C         	goto	u2411
  3947  0018AC  EF5A  F00C         	goto	u2410
  3948  0018B0                     u2411:
  3949  0018B0  EF62  F00C         	goto	l2764
  3950  0018B4                     u2410:
  3951  0018B4  0100               	movlb	0	; () banked
  3952  0018B6  B3C0               	btfsc	_flags& (0+255),1,b
  3953  0018B8  EF60  F00C         	goto	u2421
  3954  0018BC  EF62  F00C         	goto	u2420
  3955  0018C0                     u2421:
  3956  0018C0  EFA8  F00B         	goto	l2744
  3957  0018C4                     u2420:
  3958  0018C4                     l2764:
  3959                           
  3960                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  3961  0018C4  5034               	movf	dtoa@s^0,w,c
  3962  0018C6  1035               	iorwf	(dtoa@s+1)^0,w,c
  3963  0018C8  A4D8               	btfss	status,2,c
  3964  0018CA  EF69  F00C         	goto	u2431
  3965  0018CE  EF6B  F00C         	goto	u2430
  3966  0018D2                     u2431:
  3967  0018D2  EF73  F00C         	goto	l2768
  3968  0018D6                     u2430:
  3969  0018D6  0100               	movlb	0	; () banked
  3970  0018D8  A5C0               	btfss	_flags& (0+255),2,b
  3971  0018DA  EF71  F00C         	goto	u2441
  3972  0018DE  EF73  F00C         	goto	u2440
  3973  0018E2                     u2441:
  3974  0018E2  EF91  F00C         	goto	l2778
  3975  0018E6                     u2440:
  3976  0018E6                     l2768:
  3977                           
  3978                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 322:         --i;
  3979  0018E6  063E               	decf	dtoa@i^0,f,c
  3980  0018E8  A0D8               	btfss	status,0,c
  3981  0018EA  063F               	decf	(dtoa@i+1)^0,f,c
  3982  0018EC                     
  3983                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  3984  0018EC  5034               	movf	dtoa@s^0,w,c
  3985  0018EE  1035               	iorwf	(dtoa@s+1)^0,w,c
  3986  0018F0  A4D8               	btfss	status,2,c
  3987  0018F2  EF7D  F00C         	goto	u2451
  3988  0018F6  EF7F  F00C         	goto	u2450
  3989  0018FA                     u2451:
  3990  0018FA  EF85  F00C         	goto	l2774
  3991  0018FE                     u2450:
  3992  0018FE  0E00               	movlw	0
  3993  001900  6E2F               	movwf	(_dtoa$1337+1)^0,c
  3994  001902  0E2B               	movlw	43
  3995  001904  6E2E               	movwf	_dtoa$1337^0,c
  3996  001906  EF89  F00C         	goto	l2776
  3997  00190A                     l2774:
  3998  00190A  0E00               	movlw	0
  3999  00190C  6E2F               	movwf	(_dtoa$1337+1)^0,c
  4000  00190E  0E2D               	movlw	45
  4001  001910  6E2E               	movwf	_dtoa$1337^0,c
  4002  001912                     l2776:
  4003  001912  0ECC               	movlw	low _dbuf
  4004  001914  243E               	addwf	dtoa@i^0,w,c
  4005  001916  6ED9               	movwf	fsr2l,c
  4006  001918  0E00               	movlw	high _dbuf
  4007  00191A  203F               	addwfc	(dtoa@i+1)^0,w,c
  4008  00191C  6EDA               	movwf	fsr2h,c
  4009  00191E  C02E  FFDF         	movff	_dtoa$1337,indf2
  4010  001922                     l2778:
  4011                           
  4012                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  4013  001922  C01C  F011         	movff	dtoa@fp,pad@fp
  4014  001926  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  4015  00192A  0ECC               	movlw	low _dbuf
  4016  00192C  243E               	addwf	dtoa@i^0,w,c
  4017  00192E  6E13               	movwf	pad@buf^0,c
  4018  001930  0E00               	movlw	high _dbuf
  4019  001932  203F               	addwfc	(dtoa@i+1)^0,w,c
  4020  001934  6E14               	movwf	(pad@buf+1)^0,c
  4021  001936  C032  F015         	movff	dtoa@w,pad@p
  4022  00193A  C033  F016         	movff	dtoa@w+1,pad@p+1
  4023  00193E  ECFD  F012         	call	_pad	;wreg free
  4024  001942  C011  F01C         	movff	?_pad,?_dtoa
  4025  001946  C012  F01D         	movff	?_pad+1,?_dtoa+1
  4026  00194A  0012               	return		;funcret
  4027  00194C                     __end_of_dtoa:
  4028                           	callstack 0
  4029                           
  4030 ;; *************** function _pad *****************
  4031 ;; Defined at:
  4032 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  4033 ;; Parameters:    Size  Location     Type
  4034 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  4035 ;;		 -> sprintf@f(6), 
  4036 ;;  buf             2   18[COMRAM] PTR unsigned char 
  4037 ;;		 -> dbuf(32), 
  4038 ;;  p               2   20[COMRAM] int 
  4039 ;; Auto vars:     Size  Location     Type
  4040 ;;  w               2   25[COMRAM] int 
  4041 ;;  i               2   23[COMRAM] int 
  4042 ;; Return value:  Size  Location     Type
  4043 ;;                  2   16[COMRAM] int 
  4044 ;; Registers used:
  4045 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4046 ;; Tracked objects:
  4047 ;;		On entry : 0/0
  4048 ;;		On exit  : 0/0
  4049 ;;		Unchanged: 0/0
  4050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4051 ;;      Params:         6       0       0       0       0       0       0       0       0
  4052 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4053 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4054 ;;      Totals:        11       0       0       0       0       0       0       0       0
  4055 ;;Total ram usage:       11 bytes
  4056 ;; Hardware stack levels used:    1
  4057 ;; Hardware stack levels required when called:    3
  4058 ;; This function calls:
  4059 ;;		_fputc
  4060 ;;		_fputs
  4061 ;;		_strlen
  4062 ;; This function is called by:
  4063 ;;		_dtoa
  4064 ;;		_xtoa
  4065 ;; This function uses a non-reentrant model
  4066 ;;
  4067                           
  4068                           	psect	text12
  4069  0025FA                     __ptext12:
  4070                           	callstack 0
  4071  0025FA                     _pad:
  4072                           	callstack 21
  4073  0025FA                     
  4074                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  4075  0025FA  0100               	movlb	0	; () banked
  4076  0025FC  A1C0               	btfss	_flags& (0+255),0,b
  4077  0025FE  EF03  F013         	goto	u2131
  4078  002602  EF05  F013         	goto	u2130
  4079  002606                     u2131:
  4080  002606  EF0F  F013         	goto	l2650
  4081  00260A                     u2130:
  4082  00260A                     
  4083                           ; BSR set to: 0
  4084                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  4085  00260A  C013  F00A         	movff	pad@buf,fputs@s
  4086  00260E  C014  F00B         	movff	pad@buf+1,fputs@s+1
  4087  002612  C011  F00C         	movff	pad@fp,fputs@fp
  4088  002616  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  4089  00261A  EC93  F015         	call	_fputs	;wreg free
  4090  00261E                     l2650:
  4091                           
  4092                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  4093  00261E  BE16               	btfsc	(pad@p+1)^0,7,c
  4094  002620  EF14  F013         	goto	u2141
  4095  002624  EF16  F013         	goto	u2140
  4096  002628                     u2141:
  4097  002628  EF1C  F013         	goto	l2654
  4098  00262C                     u2140:
  4099  00262C  C015  F01A         	movff	pad@p,pad@w
  4100  002630  C016  F01B         	movff	pad@p+1,pad@w+1
  4101  002634  EF20  F013         	goto	l1076
  4102  002638                     l2654:
  4103  002638  0E00               	movlw	0
  4104  00263A  6E1B               	movwf	(pad@w+1)^0,c
  4105  00263C  0E00               	movlw	0
  4106  00263E  6E1A               	movwf	pad@w^0,c
  4107  002640                     l1076:
  4108                           
  4109                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  4110  002640  0E00               	movlw	0
  4111  002642  6E19               	movwf	(pad@i+1)^0,c
  4112  002644  0E00               	movlw	0
  4113  002646  6E18               	movwf	pad@i^0,c
  4114                           
  4115                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  4116  002648  EF32  F013         	goto	l2660
  4117  00264C                     l2656:
  4118                           
  4119                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  4120  00264C  0E00               	movlw	0
  4121  00264E  6E02               	movwf	(fputc@c+1)^0,c
  4122  002650  0E20               	movlw	32
  4123  002652  6E01               	movwf	fputc@c^0,c
  4124  002654  C011  F003         	movff	pad@fp,fputc@fp
  4125  002658  C012  F004         	movff	pad@fp+1,fputc@fp+1
  4126  00265C  EC98  F012         	call	_fputc	;wreg free
  4127  002660                     
  4128                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 86:         ++i;
  4129  002660  4A18               	infsnz	pad@i^0,f,c
  4130  002662  2A19               	incf	(pad@i+1)^0,f,c
  4131  002664                     l2660:
  4132                           
  4133                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  4134  002664  501A               	movf	pad@w^0,w,c
  4135  002666  5C18               	subwf	pad@i^0,w,c
  4136  002668  5019               	movf	(pad@i+1)^0,w,c
  4137  00266A  0A80               	xorlw	128
  4138  00266C  6E17               	movwf	??_pad^0,c
  4139  00266E  501B               	movf	(pad@w+1)^0,w,c
  4140  002670  0A80               	xorlw	128
  4141  002672  5817               	subwfb	??_pad^0,w,c
  4142  002674  A0D8               	btfss	status,0,c
  4143  002676  EF3F  F013         	goto	u2151
  4144  00267A  EF41  F013         	goto	u2150
  4145  00267E                     u2151:
  4146  00267E  EF26  F013         	goto	l2656
  4147  002682                     u2150:
  4148  002682                     
  4149                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  4150  002682  0100               	movlb	0	; () banked
  4151  002684  B1C0               	btfsc	_flags& (0+255),0,b
  4152  002686  EF47  F013         	goto	u2161
  4153  00268A  EF49  F013         	goto	u2160
  4154  00268E                     u2161:
  4155  00268E  EF53  F013         	goto	l2664
  4156  002692                     u2160:
  4157  002692                     
  4158                           ; BSR set to: 0
  4159                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  4160  002692  C013  F00A         	movff	pad@buf,fputs@s
  4161  002696  C014  F00B         	movff	pad@buf+1,fputs@s+1
  4162  00269A  C011  F00C         	movff	pad@fp,fputs@fp
  4163  00269E  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  4164  0026A2  EC93  F015         	call	_fputs	;wreg free
  4165  0026A6                     l2664:
  4166                           
  4167                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  4168  0026A6  C013  F001         	movff	pad@buf,strlen@s
  4169  0026AA  C014  F002         	movff	pad@buf+1,strlen@s+1
  4170  0026AE  ECDD  F016         	call	_strlen	;wreg free
  4171  0026B2  501A               	movf	pad@w^0,w,c
  4172  0026B4  2401               	addwf	?_strlen^0,w,c
  4173  0026B6  6E11               	movwf	?_pad^0,c
  4174  0026B8  501B               	movf	(pad@w+1)^0,w,c
  4175  0026BA  2002               	addwfc	(?_strlen+1)^0,w,c
  4176  0026BC  6E12               	movwf	(?_pad+1)^0,c
  4177  0026BE  0012               	return		;funcret
  4178  0026C0                     __end_of_pad:
  4179                           	callstack 0
  4180                           
  4181 ;; *************** function _strlen *****************
  4182 ;; Defined at:
  4183 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\strlen.c"
  4184 ;; Parameters:    Size  Location     Type
  4185 ;;  s               2    0[COMRAM] PTR const unsigned char 
  4186 ;;		 -> dbuf(32), 
  4187 ;; Auto vars:     Size  Location     Type
  4188 ;;  a               2    2[COMRAM] PTR const unsigned char 
  4189 ;;		 -> dbuf(32), 
  4190 ;; Return value:  Size  Location     Type
  4191 ;;                  2    0[COMRAM] unsigned int 
  4192 ;; Registers used:
  4193 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4194 ;; Tracked objects:
  4195 ;;		On entry : 0/0
  4196 ;;		On exit  : 0/0
  4197 ;;		Unchanged: 0/0
  4198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4199 ;;      Params:         2       0       0       0       0       0       0       0       0
  4200 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4201 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4202 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4203 ;;Total ram usage:        4 bytes
  4204 ;; Hardware stack levels used:    1
  4205 ;; This function calls:
  4206 ;;		Nothing
  4207 ;; This function is called by:
  4208 ;;		_pad
  4209 ;; This function uses a non-reentrant model
  4210 ;;
  4211                           
  4212                           	psect	text13
  4213  002DBA                     __ptext13:
  4214                           	callstack 0
  4215  002DBA                     _strlen:
  4216                           	callstack 23
  4217  002DBA  C001  F003         	movff	strlen@s,strlen@a
  4218  002DBE  C002  F004         	movff	strlen@s+1,strlen@a+1
  4219  002DC2  EFE5  F016         	goto	l2556
  4220  002DC6                     l2554:
  4221  002DC6  4A01               	infsnz	strlen@s^0,f,c
  4222  002DC8  2A02               	incf	(strlen@s+1)^0,f,c
  4223  002DCA                     l2556:
  4224  002DCA  C001  FFD9         	movff	strlen@s,fsr2l
  4225  002DCE  C002  FFDA         	movff	strlen@s+1,fsr2h
  4226  002DD2  50DF               	movf	indf2,w,c
  4227  002DD4  A4D8               	btfss	status,2,c
  4228  002DD6  EFEF  F016         	goto	u1971
  4229  002DDA  EFF1  F016         	goto	u1970
  4230  002DDE                     u1971:
  4231  002DDE  EFE3  F016         	goto	l2554
  4232  002DE2                     u1970:
  4233  002DE2  5003               	movf	strlen@a^0,w,c
  4234  002DE4  5C01               	subwf	strlen@s^0,w,c
  4235  002DE6  6E01               	movwf	?_strlen^0,c
  4236  002DE8  5004               	movf	(strlen@a+1)^0,w,c
  4237  002DEA  5802               	subwfb	(strlen@s+1)^0,w,c
  4238  002DEC  6E02               	movwf	(?_strlen+1)^0,c
  4239  002DEE  0012               	return		;funcret
  4240  002DF0                     __end_of_strlen:
  4241                           	callstack 0
  4242                           
  4243 ;; *************** function _fputs *****************
  4244 ;; Defined at:
  4245 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_fputs.c"
  4246 ;; Parameters:    Size  Location     Type
  4247 ;;  s               2    9[COMRAM] PTR const unsigned char 
  4248 ;;		 -> dbuf(32), 
  4249 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  4250 ;;		 -> sprintf@f(6), 
  4251 ;; Auto vars:     Size  Location     Type
  4252 ;;  i               2   14[COMRAM] int 
  4253 ;;  c               1   13[COMRAM] unsigned char 
  4254 ;; Return value:  Size  Location     Type
  4255 ;;                  2    9[COMRAM] int 
  4256 ;; Registers used:
  4257 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4258 ;; Tracked objects:
  4259 ;;		On entry : 0/0
  4260 ;;		On exit  : 0/0
  4261 ;;		Unchanged: 0/0
  4262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4263 ;;      Params:         4       0       0       0       0       0       0       0       0
  4264 ;;      Locals:         3       0       0       0       0       0       0       0       0
  4265 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4266 ;;      Totals:         7       0       0       0       0       0       0       0       0
  4267 ;;Total ram usage:        7 bytes
  4268 ;; Hardware stack levels used:    1
  4269 ;; Hardware stack levels required when called:    2
  4270 ;; This function calls:
  4271 ;;		_fputc
  4272 ;; This function is called by:
  4273 ;;		_pad
  4274 ;; This function uses a non-reentrant model
  4275 ;;
  4276                           
  4277                           	psect	text14
  4278  002B26                     __ptext14:
  4279                           	callstack 0
  4280  002B26                     _fputs:
  4281                           	callstack 21
  4282  002B26  0E00               	movlw	0
  4283  002B28  6E10               	movwf	(fputs@i+1)^0,c
  4284  002B2A  0E00               	movlw	0
  4285  002B2C  6E0F               	movwf	fputs@i^0,c
  4286  002B2E  EFA4  F015         	goto	l2550
  4287  002B32                     l2546:
  4288  002B32  C00E  F001         	movff	fputs@c,fputc@c
  4289  002B36  6A02               	clrf	(fputc@c+1)^0,c
  4290  002B38  C00C  F003         	movff	fputs@fp,fputc@fp
  4291  002B3C  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  4292  002B40  EC98  F012         	call	_fputc	;wreg free
  4293  002B44  4A0F               	infsnz	fputs@i^0,f,c
  4294  002B46  2A10               	incf	(fputs@i+1)^0,f,c
  4295  002B48                     l2550:
  4296  002B48  500F               	movf	fputs@i^0,w,c
  4297  002B4A  240A               	addwf	fputs@s^0,w,c
  4298  002B4C  6ED9               	movwf	fsr2l,c
  4299  002B4E  5010               	movf	(fputs@i+1)^0,w,c
  4300  002B50  200B               	addwfc	(fputs@s+1)^0,w,c
  4301  002B52  6EDA               	movwf	fsr2h,c
  4302  002B54  50DF               	movf	indf2,w,c
  4303  002B56  6E0E               	movwf	fputs@c^0,c
  4304  002B58  500E               	movf	fputs@c^0,w,c
  4305  002B5A  A4D8               	btfss	status,2,c
  4306  002B5C  EFB2  F015         	goto	u1961
  4307  002B60  EFB4  F015         	goto	u1960
  4308  002B64                     u1961:
  4309  002B64  EF99  F015         	goto	l2546
  4310  002B68                     u1960:
  4311  002B68  0012               	return		;funcret
  4312  002B6A                     __end_of_fputs:
  4313                           	callstack 0
  4314                           
  4315 ;; *************** function _abs *****************
  4316 ;; Defined at:
  4317 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\abs.c"
  4318 ;; Parameters:    Size  Location     Type
  4319 ;;  a               2   18[COMRAM] int 
  4320 ;; Auto vars:     Size  Location     Type
  4321 ;;		None
  4322 ;; Return value:  Size  Location     Type
  4323 ;;                  2   18[COMRAM] int 
  4324 ;; Registers used:
  4325 ;;		wreg, status,2, status,0
  4326 ;; Tracked objects:
  4327 ;;		On entry : 0/0
  4328 ;;		On exit  : 0/0
  4329 ;;		Unchanged: 0/0
  4330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4331 ;;      Params:         2       0       0       0       0       0       0       0       0
  4332 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4333 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4334 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4335 ;;Total ram usage:        4 bytes
  4336 ;; Hardware stack levels used:    1
  4337 ;; This function calls:
  4338 ;;		Nothing
  4339 ;; This function is called by:
  4340 ;;		_dtoa
  4341 ;; This function uses a non-reentrant model
  4342 ;;
  4343                           
  4344                           	psect	text15
  4345  002BAE                     __ptext15:
  4346                           	callstack 0
  4347  002BAE                     _abs:
  4348                           	callstack 24
  4349  002BAE  BE14               	btfsc	(abs@a+1)^0,7,c
  4350  002BB0  EFE4  F015         	goto	u2170
  4351  002BB4  5014               	movf	(abs@a+1)^0,w,c
  4352  002BB6  E106               	bnz	u2171
  4353  002BB8  0413               	decf	abs@a^0,w,c
  4354  002BBA  B0D8               	btfsc	status,0,c
  4355  002BBC  EFE2  F015         	goto	u2171
  4356  002BC0  EFE4  F015         	goto	u2170
  4357  002BC4                     u2171:
  4358  002BC4  EFF2  F015         	goto	l1175
  4359  002BC8                     u2170:
  4360  002BC8  C013  F015         	movff	abs@a,??_abs
  4361  002BCC  C014  F016         	movff	abs@a+1,??_abs+1
  4362  002BD0  1E15               	comf	??_abs^0,f,c
  4363  002BD2  1E16               	comf	(??_abs+1)^0,f,c
  4364  002BD4  4A15               	infsnz	??_abs^0,f,c
  4365  002BD6  2A16               	incf	(??_abs+1)^0,f,c
  4366  002BD8  C015  F013         	movff	??_abs,?_abs
  4367  002BDC  C016  F014         	movff	??_abs+1,?_abs+1
  4368  002BE0  EFF6  F015         	goto	l1178
  4369  002BE4                     l1175:
  4370  002BE4  C013  F013         	movff	abs@a,?_abs
  4371  002BE8  C014  F014         	movff	abs@a+1,?_abs+1
  4372  002BEC                     l1178:
  4373  002BEC  0012               	return		;funcret
  4374  002BEE                     __end_of_abs:
  4375                           	callstack 0
  4376                           
  4377 ;; *************** function ___aomod *****************
  4378 ;; Defined at:
  4379 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\aomod.c"
  4380 ;; Parameters:    Size  Location     Type
  4381 ;;  dividend        8    0[COMRAM] long long 
  4382 ;;  divisor         8    8[COMRAM] long long 
  4383 ;; Auto vars:     Size  Location     Type
  4384 ;;  sign            1   17[COMRAM] unsigned char 
  4385 ;;  counter         1   16[COMRAM] unsigned char 
  4386 ;; Return value:  Size  Location     Type
  4387 ;;                  8    0[COMRAM] long long 
  4388 ;; Registers used:
  4389 ;;		wreg, status,2, status,0
  4390 ;; Tracked objects:
  4391 ;;		On entry : 0/0
  4392 ;;		On exit  : 0/0
  4393 ;;		Unchanged: 0/0
  4394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4395 ;;      Params:        16       0       0       0       0       0       0       0       0
  4396 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4397 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4398 ;;      Totals:        18       0       0       0       0       0       0       0       0
  4399 ;;Total ram usage:       18 bytes
  4400 ;; Hardware stack levels used:    1
  4401 ;; This function calls:
  4402 ;;		Nothing
  4403 ;; This function is called by:
  4404 ;;		_dtoa
  4405 ;; This function uses a non-reentrant model
  4406 ;;
  4407                           
  4408                           	psect	text16
  4409  0020EA                     __ptext16:
  4410                           	callstack 0
  4411  0020EA                     ___aomod:
  4412                           	callstack 24
  4413  0020EA  0E00               	movlw	0
  4414  0020EC  6E12               	movwf	___aomod@sign^0,c
  4415  0020EE  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  4416  0020F0  EF7E  F010         	goto	u2070
  4417  0020F4  EF7C  F010         	goto	u2071
  4418  0020F8                     u2071:
  4419  0020F8  EF90  F010         	goto	l2618
  4420  0020FC                     u2070:
  4421  0020FC  1E08               	comf	(___aomod@dividend+7)^0,f,c
  4422  0020FE  1E07               	comf	(___aomod@dividend+6)^0,f,c
  4423  002100  1E06               	comf	(___aomod@dividend+5)^0,f,c
  4424  002102  1E05               	comf	(___aomod@dividend+4)^0,f,c
  4425  002104  1E04               	comf	(___aomod@dividend+3)^0,f,c
  4426  002106  1E03               	comf	(___aomod@dividend+2)^0,f,c
  4427  002108  1E02               	comf	(___aomod@dividend+1)^0,f,c
  4428  00210A  6C01               	negf	___aomod@dividend^0,c
  4429  00210C  0E00               	movlw	0
  4430  00210E  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  4431  002110  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  4432  002112  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  4433  002114  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  4434  002116  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  4435  002118  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  4436  00211A  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  4437  00211C  0E01               	movlw	1
  4438  00211E  6E12               	movwf	___aomod@sign^0,c
  4439  002120                     l2618:
  4440  002120  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  4441  002122  EF97  F010         	goto	u2080
  4442  002126  EF95  F010         	goto	u2081
  4443  00212A                     u2081:
  4444  00212A  EFA7  F010         	goto	l2622
  4445  00212E                     u2080:
  4446  00212E  1E10               	comf	(___aomod@divisor+7)^0,f,c
  4447  002130  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  4448  002132  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  4449  002134  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  4450  002136  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  4451  002138  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  4452  00213A  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  4453  00213C  6C09               	negf	___aomod@divisor^0,c
  4454  00213E  0E00               	movlw	0
  4455  002140  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  4456  002142  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  4457  002144  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  4458  002146  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  4459  002148  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  4460  00214A  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  4461  00214C  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  4462  00214E                     l2622:
  4463  00214E  5009               	movf	___aomod@divisor^0,w,c
  4464  002150  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  4465  002152  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  4466  002154  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  4467  002156  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  4468  002158  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  4469  00215A  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  4470  00215C  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  4471  00215E  B4D8               	btfsc	status,2,c
  4472  002160  EFB4  F010         	goto	u2091
  4473  002164  EFB6  F010         	goto	u2090
  4474  002168                     u2091:
  4475  002168  EFFE  F010         	goto	l2638
  4476  00216C                     u2090:
  4477  00216C  0E01               	movlw	1
  4478  00216E  6E11               	movwf	___aomod@counter^0,c
  4479  002170  EFC4  F010         	goto	l2628
  4480  002174                     l2626:
  4481  002174  90D8               	bcf	status,0,c
  4482  002176  3609               	rlcf	___aomod@divisor^0,f,c
  4483  002178  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  4484  00217A  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  4485  00217C  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  4486  00217E  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  4487  002180  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  4488  002182  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  4489  002184  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  4490  002186  2A11               	incf	___aomod@counter^0,f,c
  4491  002188                     l2628:
  4492  002188  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  4493  00218A  EFC9  F010         	goto	u2101
  4494  00218E  EFCB  F010         	goto	u2100
  4495  002192                     u2101:
  4496  002192  EFBA  F010         	goto	l2626
  4497  002196                     u2100:
  4498  002196                     l2630:
  4499  002196  5009               	movf	___aomod@divisor^0,w,c
  4500  002198  5C01               	subwf	___aomod@dividend^0,w,c
  4501  00219A  500A               	movf	(___aomod@divisor+1)^0,w,c
  4502  00219C  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  4503  00219E  500B               	movf	(___aomod@divisor+2)^0,w,c
  4504  0021A0  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  4505  0021A2  500C               	movf	(___aomod@divisor+3)^0,w,c
  4506  0021A4  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  4507  0021A6  500D               	movf	(___aomod@divisor+4)^0,w,c
  4508  0021A8  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  4509  0021AA  500E               	movf	(___aomod@divisor+5)^0,w,c
  4510  0021AC  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  4511  0021AE  500F               	movf	(___aomod@divisor+6)^0,w,c
  4512  0021B0  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  4513  0021B2  5010               	movf	(___aomod@divisor+7)^0,w,c
  4514  0021B4  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  4515  0021B6  A0D8               	btfss	status,0,c
  4516  0021B8  EFE0  F010         	goto	u2111
  4517  0021BC  EFE2  F010         	goto	u2110
  4518  0021C0                     u2111:
  4519  0021C0  EFF2  F010         	goto	l2634
  4520  0021C4                     u2110:
  4521  0021C4  5009               	movf	___aomod@divisor^0,w,c
  4522  0021C6  5E01               	subwf	___aomod@dividend^0,f,c
  4523  0021C8  500A               	movf	(___aomod@divisor+1)^0,w,c
  4524  0021CA  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  4525  0021CC  500B               	movf	(___aomod@divisor+2)^0,w,c
  4526  0021CE  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  4527  0021D0  500C               	movf	(___aomod@divisor+3)^0,w,c
  4528  0021D2  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  4529  0021D4  500D               	movf	(___aomod@divisor+4)^0,w,c
  4530  0021D6  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  4531  0021D8  500E               	movf	(___aomod@divisor+5)^0,w,c
  4532  0021DA  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  4533  0021DC  500F               	movf	(___aomod@divisor+6)^0,w,c
  4534  0021DE  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  4535  0021E0  5010               	movf	(___aomod@divisor+7)^0,w,c
  4536  0021E2  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  4537  0021E4                     l2634:
  4538  0021E4  90D8               	bcf	status,0,c
  4539  0021E6  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  4540  0021E8  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  4541  0021EA  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  4542  0021EC  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  4543  0021EE  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  4544  0021F0  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  4545  0021F2  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  4546  0021F4  3209               	rrcf	___aomod@divisor^0,f,c
  4547  0021F6  2E11               	decfsz	___aomod@counter^0,f,c
  4548  0021F8  EFCB  F010         	goto	l2630
  4549  0021FC                     l2638:
  4550  0021FC  5012               	movf	___aomod@sign^0,w,c
  4551  0021FE  B4D8               	btfsc	status,2,c
  4552  002200  EF04  F011         	goto	u2121
  4553  002204  EF06  F011         	goto	u2120
  4554  002208                     u2121:
  4555  002208  EF16  F011         	goto	l2642
  4556  00220C                     u2120:
  4557  00220C  1E08               	comf	(___aomod@dividend+7)^0,f,c
  4558  00220E  1E07               	comf	(___aomod@dividend+6)^0,f,c
  4559  002210  1E06               	comf	(___aomod@dividend+5)^0,f,c
  4560  002212  1E05               	comf	(___aomod@dividend+4)^0,f,c
  4561  002214  1E04               	comf	(___aomod@dividend+3)^0,f,c
  4562  002216  1E03               	comf	(___aomod@dividend+2)^0,f,c
  4563  002218  1E02               	comf	(___aomod@dividend+1)^0,f,c
  4564  00221A  6C01               	negf	___aomod@dividend^0,c
  4565  00221C  0E00               	movlw	0
  4566  00221E  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  4567  002220  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  4568  002222  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  4569  002224  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  4570  002226  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  4571  002228  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  4572  00222A  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  4573  00222C                     l2642:
  4574  00222C  C001  F001         	movff	___aomod@dividend,?___aomod
  4575  002230  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  4576  002234  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  4577  002238  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  4578  00223C  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  4579  002240  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  4580  002244  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  4581  002248  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  4582  00224C  0012               	return		;funcret
  4583  00224E                     __end_of___aomod:
  4584                           	callstack 0
  4585                           
  4586 ;; *************** function ___aodiv *****************
  4587 ;; Defined at:
  4588 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\aodiv.c"
  4589 ;; Parameters:    Size  Location     Type
  4590 ;;  dividend        8    0[COMRAM] long long 
  4591 ;;  divisor         8    8[COMRAM] long long 
  4592 ;; Auto vars:     Size  Location     Type
  4593 ;;  quotient        8   18[COMRAM] long long 
  4594 ;;  sign            1   17[COMRAM] unsigned char 
  4595 ;;  counter         1   16[COMRAM] unsigned char 
  4596 ;; Return value:  Size  Location     Type
  4597 ;;                  8    0[COMRAM] long long 
  4598 ;; Registers used:
  4599 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4600 ;; Tracked objects:
  4601 ;;		On entry : 0/0
  4602 ;;		On exit  : 0/0
  4603 ;;		Unchanged: 0/0
  4604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4605 ;;      Params:        16       0       0       0       0       0       0       0       0
  4606 ;;      Locals:        10       0       0       0       0       0       0       0       0
  4607 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4608 ;;      Totals:        26       0       0       0       0       0       0       0       0
  4609 ;;Total ram usage:       26 bytes
  4610 ;; Hardware stack levels used:    1
  4611 ;; This function calls:
  4612 ;;		Nothing
  4613 ;; This function is called by:
  4614 ;;		_dtoa
  4615 ;; This function uses a non-reentrant model
  4616 ;;
  4617                           
  4618                           	psect	text17
  4619  001F62                     __ptext17:
  4620                           	callstack 0
  4621  001F62                     ___aodiv:
  4622                           	callstack 24
  4623  001F62  0E00               	movlw	0
  4624  001F64  6E12               	movwf	___aodiv@sign^0,c
  4625  001F66  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  4626  001F68  EFBA  F00F         	goto	u2000
  4627  001F6C  EFB8  F00F         	goto	u2001
  4628  001F70                     u2001:
  4629  001F70  EFCC  F00F         	goto	l2574
  4630  001F74                     u2000:
  4631  001F74  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  4632  001F76  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  4633  001F78  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  4634  001F7A  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  4635  001F7C  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  4636  001F7E  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  4637  001F80  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  4638  001F82  6C09               	negf	___aodiv@divisor^0,c
  4639  001F84  0E00               	movlw	0
  4640  001F86  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  4641  001F88  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  4642  001F8A  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  4643  001F8C  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  4644  001F8E  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  4645  001F90  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  4646  001F92  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  4647  001F94  0E01               	movlw	1
  4648  001F96  6E12               	movwf	___aodiv@sign^0,c
  4649  001F98                     l2574:
  4650  001F98  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  4651  001F9A  EFD3  F00F         	goto	u2010
  4652  001F9E  EFD1  F00F         	goto	u2011
  4653  001FA2                     u2011:
  4654  001FA2  EFE5  F00F         	goto	l2580
  4655  001FA6                     u2010:
  4656  001FA6  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  4657  001FA8  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  4658  001FAA  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  4659  001FAC  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  4660  001FAE  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  4661  001FB0  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  4662  001FB2  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  4663  001FB4  6C01               	negf	___aodiv@dividend^0,c
  4664  001FB6  0E00               	movlw	0
  4665  001FB8  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  4666  001FBA  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  4667  001FBC  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  4668  001FBE  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  4669  001FC0  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  4670  001FC2  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  4671  001FC4  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  4672  001FC6  0E01               	movlw	1
  4673  001FC8  1A12               	xorwf	___aodiv@sign^0,f,c
  4674  001FCA                     l2580:
  4675  001FCA  EE20  F013         	lfsr	2,___aodiv@quotient
  4676  001FCE  0E07               	movlw	7
  4677  001FD0                     u2021:
  4678  001FD0  6ADE               	clrf	postinc2,c
  4679  001FD2  06E8               	decf	wreg,f,c
  4680  001FD4  E2FD               	bc	u2021
  4681  001FD6  5009               	movf	___aodiv@divisor^0,w,c
  4682  001FD8  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  4683  001FDA  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  4684  001FDC  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  4685  001FDE  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  4686  001FE0  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  4687  001FE2  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  4688  001FE4  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  4689  001FE6  B4D8               	btfsc	status,2,c
  4690  001FE8  EFF8  F00F         	goto	u2031
  4691  001FEC  EFFA  F00F         	goto	u2030
  4692  001FF0                     u2031:
  4693  001FF0  EF4C  F010         	goto	l2602
  4694  001FF4                     u2030:
  4695  001FF4  0E01               	movlw	1
  4696  001FF6  6E11               	movwf	___aodiv@counter^0,c
  4697  001FF8  EF08  F010         	goto	l2588
  4698  001FFC                     l2586:
  4699  001FFC  90D8               	bcf	status,0,c
  4700  001FFE  3609               	rlcf	___aodiv@divisor^0,f,c
  4701  002000  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  4702  002002  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  4703  002004  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  4704  002006  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  4705  002008  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  4706  00200A  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  4707  00200C  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  4708  00200E  2A11               	incf	___aodiv@counter^0,f,c
  4709  002010                     l2588:
  4710  002010  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  4711  002012  EF0D  F010         	goto	u2041
  4712  002016  EF0F  F010         	goto	u2040
  4713  00201A                     u2041:
  4714  00201A  EFFE  F00F         	goto	l2586
  4715  00201E                     u2040:
  4716  00201E                     l2590:
  4717  00201E  90D8               	bcf	status,0,c
  4718  002020  3613               	rlcf	___aodiv@quotient^0,f,c
  4719  002022  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  4720  002024  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  4721  002026  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  4722  002028  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  4723  00202A  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  4724  00202C  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  4725  00202E  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  4726  002030  5009               	movf	___aodiv@divisor^0,w,c
  4727  002032  5C01               	subwf	___aodiv@dividend^0,w,c
  4728  002034  500A               	movf	(___aodiv@divisor+1)^0,w,c
  4729  002036  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  4730  002038  500B               	movf	(___aodiv@divisor+2)^0,w,c
  4731  00203A  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  4732  00203C  500C               	movf	(___aodiv@divisor+3)^0,w,c
  4733  00203E  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  4734  002040  500D               	movf	(___aodiv@divisor+4)^0,w,c
  4735  002042  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  4736  002044  500E               	movf	(___aodiv@divisor+5)^0,w,c
  4737  002046  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  4738  002048  500F               	movf	(___aodiv@divisor+6)^0,w,c
  4739  00204A  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  4740  00204C  5010               	movf	(___aodiv@divisor+7)^0,w,c
  4741  00204E  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  4742  002050  A0D8               	btfss	status,0,c
  4743  002052  EF2D  F010         	goto	u2051
  4744  002056  EF2F  F010         	goto	u2050
  4745  00205A                     u2051:
  4746  00205A  EF40  F010         	goto	l2598
  4747  00205E                     u2050:
  4748  00205E  5009               	movf	___aodiv@divisor^0,w,c
  4749  002060  5E01               	subwf	___aodiv@dividend^0,f,c
  4750  002062  500A               	movf	(___aodiv@divisor+1)^0,w,c
  4751  002064  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  4752  002066  500B               	movf	(___aodiv@divisor+2)^0,w,c
  4753  002068  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  4754  00206A  500C               	movf	(___aodiv@divisor+3)^0,w,c
  4755  00206C  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  4756  00206E  500D               	movf	(___aodiv@divisor+4)^0,w,c
  4757  002070  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  4758  002072  500E               	movf	(___aodiv@divisor+5)^0,w,c
  4759  002074  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  4760  002076  500F               	movf	(___aodiv@divisor+6)^0,w,c
  4761  002078  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  4762  00207A  5010               	movf	(___aodiv@divisor+7)^0,w,c
  4763  00207C  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  4764  00207E  8013               	bsf	___aodiv@quotient^0,0,c
  4765  002080                     l2598:
  4766  002080  90D8               	bcf	status,0,c
  4767  002082  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  4768  002084  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  4769  002086  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  4770  002088  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  4771  00208A  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  4772  00208C  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  4773  00208E  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  4774  002090  3209               	rrcf	___aodiv@divisor^0,f,c
  4775  002092  2E11               	decfsz	___aodiv@counter^0,f,c
  4776  002094  EF0F  F010         	goto	l2590
  4777  002098                     l2602:
  4778  002098  5012               	movf	___aodiv@sign^0,w,c
  4779  00209A  B4D8               	btfsc	status,2,c
  4780  00209C  EF52  F010         	goto	u2061
  4781  0020A0  EF54  F010         	goto	u2060
  4782  0020A4                     u2061:
  4783  0020A4  EF64  F010         	goto	l2606
  4784  0020A8                     u2060:
  4785  0020A8  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  4786  0020AA  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  4787  0020AC  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  4788  0020AE  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  4789  0020B0  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  4790  0020B2  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  4791  0020B4  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  4792  0020B6  6C13               	negf	___aodiv@quotient^0,c
  4793  0020B8  0E00               	movlw	0
  4794  0020BA  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  4795  0020BC  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  4796  0020BE  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  4797  0020C0  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  4798  0020C2  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  4799  0020C4  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  4800  0020C6  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  4801  0020C8                     l2606:
  4802  0020C8  C013  F001         	movff	___aodiv@quotient,?___aodiv
  4803  0020CC  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  4804  0020D0  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  4805  0020D4  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  4806  0020D8  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  4807  0020DC  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  4808  0020E0  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  4809  0020E4  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  4810  0020E8  0012               	return		;funcret
  4811  0020EA                     __end_of___aodiv:
  4812                           	callstack 0
  4813                           
  4814 ;; *************** function _ctoa *****************
  4815 ;; Defined at:
  4816 ;;		line 259 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  4817 ;; Parameters:    Size  Location     Type
  4818 ;;  fp              2    9[COMRAM] PTR struct _IO_FILE
  4819 ;;		 -> sprintf@f(6), 
  4820 ;;  c               1   11[COMRAM] unsigned char 
  4821 ;; Auto vars:     Size  Location     Type
  4822 ;;  w               2   15[COMRAM] int 
  4823 ;;  l               2   13[COMRAM] int 
  4824 ;; Return value:  Size  Location     Type
  4825 ;;                  2    9[COMRAM] int 
  4826 ;; Registers used:
  4827 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4828 ;; Tracked objects:
  4829 ;;		On entry : 0/0
  4830 ;;		On exit  : 0/0
  4831 ;;		Unchanged: 0/0
  4832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4833 ;;      Params:         3       0       0       0       0       0       0       0       0
  4834 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4835 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4836 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4837 ;;Total ram usage:        8 bytes
  4838 ;; Hardware stack levels used:    1
  4839 ;; Hardware stack levels required when called:    2
  4840 ;; This function calls:
  4841 ;;		_fputc
  4842 ;; This function is called by:
  4843 ;;		_vfpfcnvrt
  4844 ;; This function uses a non-reentrant model
  4845 ;;
  4846                           
  4847                           	psect	text18
  4848  002458                     __ptext18:
  4849                           	callstack 0
  4850  002458                     _ctoa:
  4851                           	callstack 23
  4852  002458                     
  4853                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 259: static int c
      +                          toa(FILE *fp, char c);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt
      +                          .c: 260: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 261:   
      +                            int l, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 264:  
      +                             w = width ? width - 1 : width;
  4854  002458  0100               	movlb	0	; () banked
  4855  00245A  51BC               	movf	_width& (0+255),w,b
  4856  00245C  11BD               	iorwf	(_width+1)& (0+255),w,b
  4857  00245E  A4D8               	btfss	status,2,c
  4858  002460  EF34  F012         	goto	u2261
  4859  002464  EF36  F012         	goto	u2260
  4860  002468                     u2261:
  4861  002468  EF3C  F012         	goto	l2696
  4862  00246C                     u2260:
  4863  00246C                     
  4864                           ; BSR set to: 0
  4865  00246C  C0BC  F010         	movff	_width,ctoa@w
  4866  002470  C0BD  F011         	movff	_width+1,ctoa@w+1
  4867  002474  EF42  F012         	goto	l2698
  4868  002478                     l2696:
  4869                           
  4870                           ; BSR set to: 0
  4871  002478  0EFF               	movlw	255
  4872  00247A  25BC               	addwf	_width& (0+255),w,b
  4873  00247C  6E10               	movwf	ctoa@w^0,c
  4874  00247E  0EFF               	movlw	255
  4875  002480  21BD               	addwfc	(_width+1)& (0+255),w,b
  4876  002482  6E11               	movwf	(ctoa@w+1)^0,c
  4877  002484                     l2698:
  4878                           
  4879                           ; BSR set to: 0
  4880                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 267:     if (flag
      +                          s & (1 << 0)) {
  4881  002484  A1C0               	btfss	_flags& (0+255),0,b
  4882  002486  EF47  F012         	goto	u2271
  4883  00248A  EF49  F012         	goto	u2270
  4884  00248E                     u2271:
  4885  00248E  EF52  F012         	goto	l2702
  4886  002492                     u2270:
  4887  002492                     
  4888                           ; BSR set to: 0
  4889                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 268:         fput
      +                          c(c, fp);
  4890  002492  C00C  F001         	movff	ctoa@c,fputc@c
  4891  002496  6A02               	clrf	(fputc@c+1)^0,c
  4892  002498  C00A  F003         	movff	ctoa@fp,fputc@fp
  4893  00249C  C00B  F004         	movff	ctoa@fp+1,fputc@fp+1
  4894  0024A0  EC98  F012         	call	_fputc	;wreg free
  4895  0024A4                     l2702:
  4896                           
  4897                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 271:     w = (w <
      +                           0) ? 0 : w;
  4898  0024A4  BE11               	btfsc	(ctoa@w+1)^0,7,c
  4899  0024A6  EF57  F012         	goto	u2281
  4900  0024AA  EF59  F012         	goto	u2280
  4901  0024AE                     u2281:
  4902  0024AE  EF5B  F012         	goto	l2706
  4903  0024B2                     u2280:
  4904  0024B2  EF5F  F012         	goto	l1092
  4905  0024B6                     l2706:
  4906  0024B6  0E00               	movlw	0
  4907  0024B8  6E11               	movwf	(ctoa@w+1)^0,c
  4908  0024BA  0E00               	movlw	0
  4909  0024BC  6E10               	movwf	ctoa@w^0,c
  4910  0024BE                     l1092:
  4911                           
  4912                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 272:     l = 0;
  4913  0024BE  0E00               	movlw	0
  4914  0024C0  6E0F               	movwf	(ctoa@l+1)^0,c
  4915  0024C2  0E00               	movlw	0
  4916  0024C4  6E0E               	movwf	ctoa@l^0,c
  4917                           
  4918                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 273:     while (l
      +                           < w) {
  4919  0024C6  EF71  F012         	goto	l2712
  4920  0024CA                     l2708:
  4921                           
  4922                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 274:         fput
      +                          c(' ', fp);
  4923  0024CA  0E00               	movlw	0
  4924  0024CC  6E02               	movwf	(fputc@c+1)^0,c
  4925  0024CE  0E20               	movlw	32
  4926  0024D0  6E01               	movwf	fputc@c^0,c
  4927  0024D2  C00A  F003         	movff	ctoa@fp,fputc@fp
  4928  0024D6  C00B  F004         	movff	ctoa@fp+1,fputc@fp+1
  4929  0024DA  EC98  F012         	call	_fputc	;wreg free
  4930  0024DE                     
  4931                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 275:         ++l;
  4932  0024DE  4A0E               	infsnz	ctoa@l^0,f,c
  4933  0024E0  2A0F               	incf	(ctoa@l+1)^0,f,c
  4934  0024E2                     l2712:
  4935                           
  4936                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 273:     while (l
      +                           < w) {
  4937  0024E2  5010               	movf	ctoa@w^0,w,c
  4938  0024E4  5C0E               	subwf	ctoa@l^0,w,c
  4939  0024E6  500F               	movf	(ctoa@l+1)^0,w,c
  4940  0024E8  0A80               	xorlw	128
  4941  0024EA  6E0D               	movwf	??_ctoa^0,c
  4942  0024EC  5011               	movf	(ctoa@w+1)^0,w,c
  4943  0024EE  0A80               	xorlw	128
  4944  0024F0  580D               	subwfb	??_ctoa^0,w,c
  4945  0024F2  A0D8               	btfss	status,0,c
  4946  0024F4  EF7E  F012         	goto	u2291
  4947  0024F8  EF80  F012         	goto	u2290
  4948  0024FC                     u2291:
  4949  0024FC  EF65  F012         	goto	l2708
  4950  002500                     u2290:
  4951  002500                     
  4952                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 278:     if (!(fl
      +                          ags & (1 << 0))) {
  4953  002500  0100               	movlb	0	; () banked
  4954  002502  B1C0               	btfsc	_flags& (0+255),0,b
  4955  002504  EF86  F012         	goto	u2301
  4956  002508  EF88  F012         	goto	u2300
  4957  00250C                     u2301:
  4958  00250C  EF91  F012         	goto	l2716
  4959  002510                     u2300:
  4960  002510                     
  4961                           ; BSR set to: 0
  4962                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 279:         fput
      +                          c(c, fp);
  4963  002510  C00C  F001         	movff	ctoa@c,fputc@c
  4964  002514  6A02               	clrf	(fputc@c+1)^0,c
  4965  002516  C00A  F003         	movff	ctoa@fp,fputc@fp
  4966  00251A  C00B  F004         	movff	ctoa@fp+1,fputc@fp+1
  4967  00251E  EC98  F012         	call	_fputc	;wreg free
  4968  002522                     l2716:
  4969                           
  4970                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 282:     return l
      +                          +1;
  4971  002522  0E01               	movlw	1
  4972  002524  240E               	addwf	ctoa@l^0,w,c
  4973  002526  6E0A               	movwf	?_ctoa^0,c
  4974  002528  0E00               	movlw	0
  4975  00252A  200F               	addwfc	(ctoa@l+1)^0,w,c
  4976  00252C  6E0B               	movwf	(?_ctoa+1)^0,c
  4977  00252E  0012               	return		;funcret
  4978  002530                     __end_of_ctoa:
  4979                           	callstack 0
  4980                           
  4981 ;; *************** function _fputc *****************
  4982 ;; Defined at:
  4983 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_fputc.c"
  4984 ;; Parameters:    Size  Location     Type
  4985 ;;  c               2    0[COMRAM] int 
  4986 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  4987 ;;		 -> sprintf@f(6), 
  4988 ;; Auto vars:     Size  Location     Type
  4989 ;;		None
  4990 ;; Return value:  Size  Location     Type
  4991 ;;                  2    0[COMRAM] int 
  4992 ;; Registers used:
  4993 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4994 ;; Tracked objects:
  4995 ;;		On entry : 0/0
  4996 ;;		On exit  : 0/0
  4997 ;;		Unchanged: 0/0
  4998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4999 ;;      Params:         4       0       0       0       0       0       0       0       0
  5000 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5001 ;;      Temps:          5       0       0       0       0       0       0       0       0
  5002 ;;      Totals:         9       0       0       0       0       0       0       0       0
  5003 ;;Total ram usage:        9 bytes
  5004 ;; Hardware stack levels used:    1
  5005 ;; Hardware stack levels required when called:    1
  5006 ;; This function calls:
  5007 ;;		_putch
  5008 ;; This function is called by:
  5009 ;;		_pad
  5010 ;;		_ctoa
  5011 ;;		_vfpfcnvrt
  5012 ;;		_fputs
  5013 ;; This function uses a non-reentrant model
  5014 ;;
  5015                           
  5016                           	psect	text19
  5017  002530                     __ptext19:
  5018                           	callstack 0
  5019  002530                     _fputc:
  5020                           	callstack 21
  5021  002530  5003               	movf	fputc@fp^0,w,c
  5022  002532  1004               	iorwf	(fputc@fp+1)^0,w,c
  5023  002534  B4D8               	btfsc	status,2,c
  5024  002536  EF9F  F012         	goto	u1921
  5025  00253A  EFA1  F012         	goto	u1920
  5026  00253E                     u1921:
  5027  00253E  EFAA  F012         	goto	l2534
  5028  002542                     u1920:
  5029  002542  5003               	movf	fputc@fp^0,w,c
  5030  002544  1004               	iorwf	(fputc@fp+1)^0,w,c
  5031  002546  A4D8               	btfss	status,2,c
  5032  002548  EFA8  F012         	goto	u1931
  5033  00254C  EFAA  F012         	goto	u1930
  5034  002550                     u1931:
  5035  002550  EFAF  F012         	goto	l2536
  5036  002554                     u1930:
  5037  002554                     l2534:
  5038  002554  5001               	movf	fputc@c^0,w,c
  5039  002556  ECB0  F017         	call	_putch
  5040  00255A  EFFC  F012         	goto	l1202
  5041  00255E                     l2536:
  5042  00255E  EE20 F004          	lfsr	2,4
  5043  002562  5003               	movf	fputc@fp^0,w,c
  5044  002564  26D9               	addwf	fsr2l,f,c
  5045  002566  5004               	movf	(fputc@fp+1)^0,w,c
  5046  002568  22DA               	addwfc	fsr2h,f,c
  5047  00256A  50DE               	movf	postinc2,w,c
  5048  00256C  10DE               	iorwf	postinc2,w,c
  5049  00256E  B4D8               	btfsc	status,2,c
  5050  002570  EFBC  F012         	goto	u1941
  5051  002574  EFBE  F012         	goto	u1940
  5052  002578                     u1941:
  5053  002578  EFD9  F012         	goto	l2540
  5054  00257C                     u1940:
  5055  00257C  EE20 F004          	lfsr	2,4
  5056  002580  5003               	movf	fputc@fp^0,w,c
  5057  002582  26D9               	addwf	fsr2l,f,c
  5058  002584  5004               	movf	(fputc@fp+1)^0,w,c
  5059  002586  22DA               	addwfc	fsr2h,f,c
  5060  002588  EE10 F002          	lfsr	1,2
  5061  00258C  5003               	movf	fputc@fp^0,w,c
  5062  00258E  26E1               	addwf	fsr1l,f,c
  5063  002590  5004               	movf	(fputc@fp+1)^0,w,c
  5064  002592  22E2               	addwfc	fsr1h,f,c
  5065  002594  50DE               	movf	postinc2,w,c
  5066  002596  5CE6               	subwf	postinc1,w,c
  5067  002598  50E6               	movf	postinc1,w,c
  5068  00259A  0A80               	xorlw	128
  5069  00259C  6E09               	movwf	(??_fputc+4)^0,c
  5070  00259E  50DE               	movf	postinc2,w,c
  5071  0025A0  0A80               	xorlw	128
  5072  0025A2  5809               	subwfb	(??_fputc+4)^0,w,c
  5073  0025A4  B0D8               	btfsc	status,0,c
  5074  0025A6  EFD7  F012         	goto	u1951
  5075  0025AA  EFD9  F012         	goto	u1950
  5076  0025AE                     u1951:
  5077  0025AE  EFFC  F012         	goto	l1202
  5078  0025B2                     u1950:
  5079  0025B2                     l2540:
  5080  0025B2  EE20 F002          	lfsr	2,2
  5081  0025B6  5003               	movf	fputc@fp^0,w,c
  5082  0025B8  26D9               	addwf	fsr2l,f,c
  5083  0025BA  5004               	movf	(fputc@fp+1)^0,w,c
  5084  0025BC  22DA               	addwfc	fsr2h,f,c
  5085  0025BE  CFDE F005          	movff	postinc2,??_fputc
  5086  0025C2  CFDD F006          	movff	postdec2,??_fputc+1
  5087  0025C6  C003  FFD9         	movff	fputc@fp,fsr2l
  5088  0025CA  C004  FFDA         	movff	fputc@fp+1,fsr2h
  5089  0025CE  CFDE F007          	movff	postinc2,??_fputc+2
  5090  0025D2  CFDD F008          	movff	postdec2,??_fputc+3
  5091  0025D6  5005               	movf	??_fputc^0,w,c
  5092  0025D8  2407               	addwf	(??_fputc+2)^0,w,c
  5093  0025DA  6ED9               	movwf	fsr2l,c
  5094  0025DC  5006               	movf	(??_fputc+1)^0,w,c
  5095  0025DE  2008               	addwfc	(??_fputc+3)^0,w,c
  5096  0025E0  6EDA               	movwf	fsr2h,c
  5097  0025E2  C001  FFDF         	movff	fputc@c,indf2
  5098  0025E6  EE20 F002          	lfsr	2,2
  5099  0025EA  5003               	movf	fputc@fp^0,w,c
  5100  0025EC  26D9               	addwf	fsr2l,f,c
  5101  0025EE  5004               	movf	(fputc@fp+1)^0,w,c
  5102  0025F0  22DA               	addwfc	fsr2h,f,c
  5103  0025F2  2ADE               	incf	postinc2,f,c
  5104  0025F4  0E00               	movlw	0
  5105  0025F6  22DD               	addwfc	postdec2,f,c
  5106  0025F8                     l1202:
  5107  0025F8  0012               	return		;funcret
  5108  0025FA                     __end_of_fputc:
  5109                           	callstack 0
  5110                           
  5111 ;; *************** function _putch *****************
  5112 ;; Defined at:
  5113 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\putch.c"
  5114 ;; Parameters:    Size  Location     Type
  5115 ;;  c               1    wreg     unsigned char 
  5116 ;; Auto vars:     Size  Location     Type
  5117 ;;  c               1    0[COMRAM] unsigned char 
  5118 ;; Return value:  Size  Location     Type
  5119 ;;                  1    wreg      void 
  5120 ;; Registers used:
  5121 ;;		wreg
  5122 ;; Tracked objects:
  5123 ;;		On entry : 0/0
  5124 ;;		On exit  : 0/0
  5125 ;;		Unchanged: 0/0
  5126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5127 ;;      Params:         0       0       0       0       0       0       0       0       0
  5128 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5129 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5130 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5131 ;;Total ram usage:        0 bytes
  5132 ;; Hardware stack levels used:    1
  5133 ;; This function calls:
  5134 ;;		Nothing
  5135 ;; This function is called by:
  5136 ;;		_fputc
  5137 ;; This function uses a non-reentrant model
  5138 ;;
  5139                           
  5140                           	psect	text20
  5141  002F60                     __ptext20:
  5142                           	callstack 0
  5143  002F60                     _putch:
  5144                           	callstack 21
  5145  002F60  0012               	return		;funcret
  5146  002F62                     __end_of_putch:
  5147                           	callstack 0
  5148                           
  5149 ;; *************** function _getCad *****************
  5150 ;; Defined at:
  5151 ;;		line 50 in file "main.c"
  5152 ;; Parameters:    Size  Location     Type
  5153 ;;  canal           1    wreg     unsigned char 
  5154 ;; Auto vars:     Size  Location     Type
  5155 ;;  canal           1    4[COMRAM] unsigned char 
  5156 ;; Return value:  Size  Location     Type
  5157 ;;                  2    0[COMRAM] short 
  5158 ;; Registers used:
  5159 ;;		wreg, status,2, status,0
  5160 ;; Tracked objects:
  5161 ;;		On entry : 0/0
  5162 ;;		On exit  : 0/0
  5163 ;;		Unchanged: 0/0
  5164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5165 ;;      Params:         2       0       0       0       0       0       0       0       0
  5166 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5167 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5168 ;;      Totals:         5       0       0       0       0       0       0       0       0
  5169 ;;Total ram usage:        5 bytes
  5170 ;; Hardware stack levels used:    1
  5171 ;; This function calls:
  5172 ;;		Nothing
  5173 ;; This function is called by:
  5174 ;;		_activar_seguridad
  5175 ;; This function uses a non-reentrant model
  5176 ;;
  5177                           
  5178                           	psect	text21
  5179  002B6A                     __ptext21:
  5180                           	callstack 0
  5181  002B6A                     _getCad:
  5182                           	callstack 28
  5183                           
  5184                           ;incstack = 0
  5185                           ;getCad@canal stored from wreg
  5186  002B6A  6E05               	movwf	getCad@canal^0,c
  5187  002B6C                     
  5188                           ;main.c: 51:     ADCON1 = 0b00001100;
  5189  002B6C  0E0C               	movlw	12
  5190  002B6E  6EC1               	movwf	193,c	;volatile
  5191                           
  5192                           ;main.c: 52:     switch (canal) {
  5193  002B70  EFBE  F015         	goto	l3082
  5194  002B74                     l3078:
  5195                           
  5196                           ;main.c: 54:             ADCON0 = 0b00000010;
  5197  002B74  0E02               	movlw	2
  5198  002B76  6EC2               	movwf	194,c	;volatile
  5199                           
  5200                           ;main.c: 55:             break;
  5201  002B78  EFCF  F015         	goto	l3084
  5202  002B7C                     l3082:
  5203  002B7C  5005               	movf	getCad@canal^0,w,c
  5204  002B7E  6E03               	movwf	??_getCad^0,c
  5205  002B80  6A04               	clrf	(??_getCad+1)^0,c
  5206                           
  5207                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5208                           ; Switch size 1, requested type "simple"
  5209                           ; Number of cases is 1, Range of values is 0 to 0
  5210                           ; switch strategies available:
  5211                           ; Name         Instructions Cycles
  5212                           ; simple_byte            4     3 (average)
  5213                           ;	Chosen strategy is simple_byte
  5214  002B82  5004               	movf	(??_getCad+1)^0,w,c
  5215  002B84  0A00               	xorlw	0	; case 0
  5216  002B86  B4D8               	btfsc	status,2,c
  5217  002B88  EFC8  F015         	goto	l3822
  5218  002B8C  EFCF  F015         	goto	l3084
  5219  002B90                     l3822:
  5220                           
  5221                           ; Switch size 1, requested type "simple"
  5222                           ; Number of cases is 1, Range of values is 0 to 0
  5223                           ; switch strategies available:
  5224                           ; Name         Instructions Cycles
  5225                           ; simple_byte            4     3 (average)
  5226                           ;	Chosen strategy is simple_byte
  5227  002B90  5003               	movf	??_getCad^0,w,c
  5228  002B92  0A00               	xorlw	0	; case 0
  5229  002B94  B4D8               	btfsc	status,2,c
  5230  002B96  EFBA  F015         	goto	l3078
  5231  002B9A  EFCF  F015         	goto	l3084
  5232  002B9E                     l3084:
  5233                           
  5234                           ;main.c: 57:     ADCON2 = 0b00101001;
  5235  002B9E  0E29               	movlw	41
  5236  002BA0  6EC0               	movwf	192,c	;volatile
  5237  002BA2                     
  5238                           ;main.c: 58:     ADON = 1;
  5239  002BA2  80C2               	bsf	4034,0,c	;volatile
  5240  002BA4                     
  5241                           ;main.c: 59:     GO_DONE = 1;
  5242  002BA4  82C2               	bsf	4034,1,c	;volatile
  5243  002BA6                     
  5244                           ;main.c: 61:     return ADRESH;
  5245  002BA6  CFC4 F001          	movff	4036,?_getCad	;volatile
  5246  002BAA  6A02               	clrf	(?_getCad+1)^0,c
  5247  002BAC  0012               	return		;funcret
  5248  002BAE                     __end_of_getCad:
  5249                           	callstack 0
  5250                           
  5251 ;; *************** function _atoi *****************
  5252 ;; Defined at:
  5253 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\atoi.c"
  5254 ;; Parameters:    Size  Location     Type
  5255 ;;  s               2    7[COMRAM] PTR const unsigned char 
  5256 ;;		 -> aux_contrasenia(4), 
  5257 ;; Auto vars:     Size  Location     Type
  5258 ;;  n               2   20[COMRAM] int 
  5259 ;;  neg             2   13[COMRAM] int 
  5260 ;; Return value:  Size  Location     Type
  5261 ;;                  2    7[COMRAM] int 
  5262 ;; Registers used:
  5263 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5264 ;; Tracked objects:
  5265 ;;		On entry : 0/0
  5266 ;;		On exit  : 0/0
  5267 ;;		Unchanged: 0/0
  5268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5269 ;;      Params:         2       0       0       0       0       0       0       0       0
  5270 ;;      Locals:         9       0       0       0       0       0       0       0       0
  5271 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5272 ;;      Totals:        15       0       0       0       0       0       0       0       0
  5273 ;;Total ram usage:       15 bytes
  5274 ;; Hardware stack levels used:    1
  5275 ;; Hardware stack levels required when called:    1
  5276 ;; This function calls:
  5277 ;;		___wmul
  5278 ;;		_isdigit
  5279 ;;		_isspace
  5280 ;; This function is called by:
  5281 ;;		_activar_seguridad
  5282 ;; This function uses a non-reentrant model
  5283 ;;
  5284                           
  5285                           	psect	text22
  5286  001DD8                     __ptext22:
  5287                           	callstack 0
  5288  001DD8                     _atoi:
  5289                           	callstack 27
  5290  001DD8  0E00               	movlw	0
  5291  001DDA  6E16               	movwf	(atoi@n+1)^0,c
  5292  001DDC  0E00               	movlw	0
  5293  001DDE  6E15               	movwf	atoi@n^0,c
  5294  001DE0  0E00               	movlw	0
  5295  001DE2  6E0F               	movwf	(atoi@neg+1)^0,c
  5296  001DE4  0E00               	movlw	0
  5297  001DE6  6E0E               	movwf	atoi@neg^0,c
  5298  001DE8  EFF8  F00E         	goto	l3166
  5299  001DEC                     l3164:
  5300  001DEC  4A08               	infsnz	atoi@s^0,f,c
  5301  001DEE  2A09               	incf	(atoi@s+1)^0,f,c
  5302  001DF0                     l3166:
  5303  001DF0  0E01               	movlw	1
  5304  001DF2  6E14               	movwf	_atoi$1223^0,c
  5305  001DF4  C008  FFD9         	movff	atoi@s,fsr2l
  5306  001DF8  C009  FFDA         	movff	atoi@s+1,fsr2h
  5307  001DFC  0E20               	movlw	32
  5308  001DFE  18DE               	xorwf	postinc2,w,c
  5309  001E00  B4D8               	btfsc	status,2,c
  5310  001E02  EF05  F00F         	goto	u3001
  5311  001E06  EF07  F00F         	goto	u3000
  5312  001E0A                     u3001:
  5313  001E0A  EF23  F00F         	goto	l3174
  5314  001E0E                     u3000:
  5315  001E0E  0EF7               	movlw	247
  5316  001E10  6E0A               	movwf	??_atoi^0,c
  5317  001E12  0EFF               	movlw	255
  5318  001E14  6E0B               	movwf	(??_atoi+1)^0,c
  5319  001E16  C008  FFD9         	movff	atoi@s,fsr2l
  5320  001E1A  C009  FFDA         	movff	atoi@s+1,fsr2h
  5321  001E1E  50DF               	movf	indf2,w,c
  5322  001E20  6E0C               	movwf	(??_atoi+2)^0,c
  5323  001E22  6A0D               	clrf	(??_atoi+3)^0,c
  5324  001E24  500A               	movf	??_atoi^0,w,c
  5325  001E26  260C               	addwf	(??_atoi+2)^0,f,c
  5326  001E28  500B               	movf	(??_atoi+1)^0,w,c
  5327  001E2A  220D               	addwfc	(??_atoi+3)^0,f,c
  5328  001E2C  500D               	movf	(??_atoi+3)^0,w,c
  5329  001E2E  E109               	bnz	u3010
  5330  001E30  0E05               	movlw	5
  5331  001E32  5C0C               	subwf	(??_atoi+2)^0,w,c
  5332  001E34  A0D8               	btfss	status,0,c
  5333  001E36  EF1F  F00F         	goto	u3011
  5334  001E3A  EF21  F00F         	goto	u3010
  5335  001E3E                     u3011:
  5336  001E3E  EF23  F00F         	goto	l3174
  5337  001E42                     u3010:
  5338  001E42  0E00               	movlw	0
  5339  001E44  6E14               	movwf	_atoi$1223^0,c
  5340  001E46                     l3174:
  5341  001E46  C014  F010         	movff	_atoi$1223,_atoi$1222
  5342  001E4A  6A11               	clrf	(_atoi$1222+1)^0,c
  5343  001E4C  5010               	movf	_atoi$1222^0,w,c
  5344  001E4E  1011               	iorwf	(_atoi$1222+1)^0,w,c
  5345  001E50  A4D8               	btfss	status,2,c
  5346  001E52  EF2D  F00F         	goto	u3021
  5347  001E56  EF2F  F00F         	goto	u3020
  5348  001E5A                     u3021:
  5349  001E5A  EFF6  F00E         	goto	l3164
  5350  001E5E                     u3020:
  5351  001E5E  EF39  F00F         	goto	l3184
  5352  001E62                     l3180:
  5353  001E62  0E00               	movlw	0
  5354  001E64  6E0F               	movwf	(atoi@neg+1)^0,c
  5355  001E66  0E01               	movlw	1
  5356  001E68  6E0E               	movwf	atoi@neg^0,c
  5357  001E6A                     l3182:
  5358  001E6A  4A08               	infsnz	atoi@s^0,f,c
  5359  001E6C  2A09               	incf	(atoi@s+1)^0,f,c
  5360  001E6E  EF6E  F00F         	goto	l3190
  5361  001E72                     l3184:
  5362  001E72  C008  FFD9         	movff	atoi@s,fsr2l
  5363  001E76  C009  FFDA         	movff	atoi@s+1,fsr2h
  5364  001E7A  50DF               	movf	indf2,w,c
  5365  001E7C  6E0A               	movwf	??_atoi^0,c
  5366  001E7E  6A0B               	clrf	(??_atoi+1)^0,c
  5367                           
  5368                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5369                           ; Switch size 1, requested type "simple"
  5370                           ; Number of cases is 1, Range of values is 0 to 0
  5371                           ; switch strategies available:
  5372                           ; Name         Instructions Cycles
  5373                           ; simple_byte            4     3 (average)
  5374                           ;	Chosen strategy is simple_byte
  5375  001E80  500B               	movf	(??_atoi+1)^0,w,c
  5376  001E82  0A00               	xorlw	0	; case 0
  5377  001E84  B4D8               	btfsc	status,2,c
  5378  001E86  EF47  F00F         	goto	l3824
  5379  001E8A  EF6E  F00F         	goto	l3190
  5380  001E8E                     l3824:
  5381                           
  5382                           ; Switch size 1, requested type "simple"
  5383                           ; Number of cases is 2, Range of values is 43 to 45
  5384                           ; switch strategies available:
  5385                           ; Name         Instructions Cycles
  5386                           ; simple_byte            7     4 (average)
  5387                           ;	Chosen strategy is simple_byte
  5388  001E8E  500A               	movf	??_atoi^0,w,c
  5389  001E90  0A2B               	xorlw	43	; case 43
  5390  001E92  B4D8               	btfsc	status,2,c
  5391  001E94  EF35  F00F         	goto	l3182
  5392  001E98  0A06               	xorlw	6	; case 45
  5393  001E9A  B4D8               	btfsc	status,2,c
  5394  001E9C  EF31  F00F         	goto	l3180
  5395  001EA0  EF6E  F00F         	goto	l3190
  5396  001EA4                     l3186:
  5397  001EA4  C015  F001         	movff	atoi@n,___wmul@multiplier
  5398  001EA8  C016  F002         	movff	atoi@n+1,___wmul@multiplier+1
  5399  001EAC  0E00               	movlw	0
  5400  001EAE  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  5401  001EB0  0E0A               	movlw	10
  5402  001EB2  6E03               	movwf	___wmul@multiplicand^0,c
  5403  001EB4  EC3A  F017         	call	___wmul	;wreg free
  5404  001EB8  C008  FFD9         	movff	atoi@s,fsr2l
  5405  001EBC  C009  FFDA         	movff	atoi@s+1,fsr2h
  5406  001EC0  50DF               	movf	indf2,w,c
  5407  001EC2  6E0A               	movwf	??_atoi^0,c
  5408  001EC4  500A               	movf	??_atoi^0,w,c
  5409  001EC6  5E01               	subwf	?___wmul^0,f,c
  5410  001EC8  0E00               	movlw	0
  5411  001ECA  5A02               	subwfb	(?___wmul+1)^0,f,c
  5412  001ECC  0E30               	movlw	48
  5413  001ECE  2401               	addwf	?___wmul^0,w,c
  5414  001ED0  6E15               	movwf	atoi@n^0,c
  5415  001ED2  0E00               	movlw	0
  5416  001ED4  2002               	addwfc	(?___wmul+1)^0,w,c
  5417  001ED6  6E16               	movwf	(atoi@n+1)^0,c
  5418  001ED8  EF35  F00F         	goto	l3182
  5419  001EDC                     l3190:
  5420  001EDC  0ED0               	movlw	208
  5421  001EDE  6E0A               	movwf	??_atoi^0,c
  5422  001EE0  0EFF               	movlw	255
  5423  001EE2  6E0B               	movwf	(??_atoi+1)^0,c
  5424  001EE4  C008  FFD9         	movff	atoi@s,fsr2l
  5425  001EE8  C009  FFDA         	movff	atoi@s+1,fsr2h
  5426  001EEC  50DF               	movf	indf2,w,c
  5427  001EEE  6E0C               	movwf	(??_atoi+2)^0,c
  5428  001EF0  6A0D               	clrf	(??_atoi+3)^0,c
  5429  001EF2  500A               	movf	??_atoi^0,w,c
  5430  001EF4  260C               	addwf	(??_atoi+2)^0,f,c
  5431  001EF6  500B               	movf	(??_atoi+1)^0,w,c
  5432  001EF8  220D               	addwfc	(??_atoi+3)^0,f,c
  5433  001EFA  500D               	movf	(??_atoi+3)^0,w,c
  5434  001EFC  E10A               	bnz	u3030
  5435  001EFE  0E0A               	movlw	10
  5436  001F00  5C0C               	subwf	(??_atoi+2)^0,w,c
  5437  001F02  A0D8               	btfss	status,0,c
  5438  001F04  EF86  F00F         	goto	u3031
  5439  001F08  EF89  F00F         	goto	u3030
  5440  001F0C                     u3031:
  5441  001F0C  0E01               	movlw	1
  5442  001F0E  EF8A  F00F         	goto	u3040
  5443  001F12                     u3030:
  5444  001F12  0E00               	movlw	0
  5445  001F14                     u3040:
  5446  001F14  6E12               	movwf	_atoi$1224^0,c
  5447  001F16  6A13               	clrf	(_atoi$1224+1)^0,c
  5448  001F18  5012               	movf	_atoi$1224^0,w,c
  5449  001F1A  1013               	iorwf	(_atoi$1224+1)^0,w,c
  5450  001F1C  A4D8               	btfss	status,2,c
  5451  001F1E  EF93  F00F         	goto	u3051
  5452  001F22  EF95  F00F         	goto	u3050
  5453  001F26                     u3051:
  5454  001F26  EF52  F00F         	goto	l3186
  5455  001F2A                     u3050:
  5456  001F2A  500E               	movf	atoi@neg^0,w,c
  5457  001F2C  100F               	iorwf	(atoi@neg+1)^0,w,c
  5458  001F2E  A4D8               	btfss	status,2,c
  5459  001F30  EF9C  F00F         	goto	u3061
  5460  001F34  EF9E  F00F         	goto	u3060
  5461  001F38                     u3061:
  5462  001F38  EFAC  F00F         	goto	l1019
  5463  001F3C                     u3060:
  5464  001F3C  C015  F00A         	movff	atoi@n,??_atoi
  5465  001F40  C016  F00B         	movff	atoi@n+1,??_atoi+1
  5466  001F44  1E0A               	comf	??_atoi^0,f,c
  5467  001F46  1E0B               	comf	(??_atoi+1)^0,f,c
  5468  001F48  4A0A               	infsnz	??_atoi^0,f,c
  5469  001F4A  2A0B               	incf	(??_atoi+1)^0,f,c
  5470  001F4C  C00A  F008         	movff	??_atoi,?_atoi
  5471  001F50  C00B  F009         	movff	??_atoi+1,?_atoi+1
  5472  001F54  EFB0  F00F         	goto	l1022
  5473  001F58                     l1019:
  5474  001F58  C015  F008         	movff	atoi@n,?_atoi
  5475  001F5C  C016  F009         	movff	atoi@n+1,?_atoi+1
  5476  001F60                     l1022:
  5477  001F60  0012               	return		;funcret
  5478  001F62                     __end_of_atoi:
  5479                           	callstack 0
  5480                           
  5481 ;; *************** function _isspace *****************
  5482 ;; Defined at:
  5483 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\isspace.c"
  5484 ;; Parameters:    Size  Location     Type
  5485 ;;  c               2    0[COMRAM] int 
  5486 ;; Auto vars:     Size  Location     Type
  5487 ;;		None
  5488 ;; Return value:  Size  Location     Type
  5489 ;;                  2    0[COMRAM] int 
  5490 ;; Registers used:
  5491 ;;		wreg, status,2, status,0
  5492 ;; Tracked objects:
  5493 ;;		On entry : 0/0
  5494 ;;		On exit  : 0/0
  5495 ;;		Unchanged: 0/0
  5496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5497 ;;      Params:         2       0       0       0       0       0       0       0       0
  5498 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5499 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5500 ;;      Totals:         7       0       0       0       0       0       0       0       0
  5501 ;;Total ram usage:        7 bytes
  5502 ;; Hardware stack levels used:    1
  5503 ;; This function calls:
  5504 ;;		Nothing
  5505 ;; This function is called by:
  5506 ;;		_atoi
  5507 ;; This function uses a non-reentrant model
  5508 ;;
  5509                           
  5510                           	psect	text23
  5511  002A8E                     __ptext23:
  5512                           	callstack 0
  5513  002A8E                     _isspace:
  5514                           	callstack 27
  5515  002A8E  0E01               	movlw	1
  5516  002A90  6E07               	movwf	_isspace$1240^0,c
  5517  002A92  0E20               	movlw	32
  5518  002A94  1801               	xorwf	isspace@c^0,w,c
  5519  002A96  1002               	iorwf	(isspace@c+1)^0,w,c
  5520  002A98  B4D8               	btfsc	status,2,c
  5521  002A9A  EF51  F015         	goto	u2851
  5522  002A9E  EF53  F015         	goto	u2850
  5523  002AA2                     u2851:
  5524  002AA2  EF6C  F015         	goto	l3028
  5525  002AA6                     u2850:
  5526  002AA6  0EF7               	movlw	247
  5527  002AA8  6E03               	movwf	??_isspace^0,c
  5528  002AAA  0EFF               	movlw	255
  5529  002AAC  6E04               	movwf	(??_isspace+1)^0,c
  5530  002AAE  C001  F005         	movff	isspace@c,??_isspace+2
  5531  002AB2  C002  F006         	movff	isspace@c+1,??_isspace+3
  5532  002AB6  5003               	movf	??_isspace^0,w,c
  5533  002AB8  2605               	addwf	(??_isspace+2)^0,f,c
  5534  002ABA  5004               	movf	(??_isspace+1)^0,w,c
  5535  002ABC  2206               	addwfc	(??_isspace+3)^0,f,c
  5536  002ABE  5006               	movf	(??_isspace+3)^0,w,c
  5537  002AC0  E109               	bnz	u2860
  5538  002AC2  0E05               	movlw	5
  5539  002AC4  5C05               	subwf	(??_isspace+2)^0,w,c
  5540  002AC6  A0D8               	btfss	status,0,c
  5541  002AC8  EF68  F015         	goto	u2861
  5542  002ACC  EF6A  F015         	goto	u2860
  5543  002AD0                     u2861:
  5544  002AD0  EF6C  F015         	goto	l3028
  5545  002AD4                     u2860:
  5546  002AD4  0E00               	movlw	0
  5547  002AD6  6E07               	movwf	_isspace$1240^0,c
  5548  002AD8                     l3028:
  5549  002AD8  C007  F001         	movff	_isspace$1240,?_isspace
  5550  002ADC  6A02               	clrf	(?_isspace+1)^0,c
  5551  002ADE  0012               	return		;funcret
  5552  002AE0                     __end_of_isspace:
  5553                           	callstack 0
  5554                           
  5555 ;; *************** function _isdigit *****************
  5556 ;; Defined at:
  5557 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\isdigit.c"
  5558 ;; Parameters:    Size  Location     Type
  5559 ;;  c               2    0[COMRAM] int 
  5560 ;; Auto vars:     Size  Location     Type
  5561 ;;		None
  5562 ;; Return value:  Size  Location     Type
  5563 ;;                  2    0[COMRAM] int 
  5564 ;; Registers used:
  5565 ;;		wreg, status,2, status,0
  5566 ;; Tracked objects:
  5567 ;;		On entry : 0/0
  5568 ;;		On exit  : 0/0
  5569 ;;		Unchanged: 0/0
  5570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5571 ;;      Params:         2       0       0       0       0       0       0       0       0
  5572 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5573 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5574 ;;      Totals:         6       0       0       0       0       0       0       0       0
  5575 ;;Total ram usage:        6 bytes
  5576 ;; Hardware stack levels used:    1
  5577 ;; This function calls:
  5578 ;;		Nothing
  5579 ;; This function is called by:
  5580 ;;		_activar_seguridad
  5581 ;;		_atoi
  5582 ;; This function uses a non-reentrant model
  5583 ;;
  5584                           
  5585                           	psect	text24
  5586  002D4A                     __ptext24:
  5587                           	callstack 0
  5588  002D4A                     _isdigit:
  5589                           	callstack 28
  5590  002D4A  0ED0               	movlw	208
  5591  002D4C  6E03               	movwf	??_isdigit^0,c
  5592  002D4E  0EFF               	movlw	255
  5593  002D50  6E04               	movwf	(??_isdigit+1)^0,c
  5594  002D52  C001  F005         	movff	isdigit@c,??_isdigit+2
  5595  002D56  C002  F006         	movff	isdigit@c+1,??_isdigit+3
  5596  002D5A  5003               	movf	??_isdigit^0,w,c
  5597  002D5C  2605               	addwf	(??_isdigit+2)^0,f,c
  5598  002D5E  5004               	movf	(??_isdigit+1)^0,w,c
  5599  002D60  2206               	addwfc	(??_isdigit+3)^0,f,c
  5600  002D62  5006               	movf	(??_isdigit+3)^0,w,c
  5601  002D64  E10A               	bnz	u2830
  5602  002D66  0E0A               	movlw	10
  5603  002D68  5C05               	subwf	(??_isdigit+2)^0,w,c
  5604  002D6A  A0D8               	btfss	status,0,c
  5605  002D6C  EFBA  F016         	goto	u2831
  5606  002D70  EFBD  F016         	goto	u2830
  5607  002D74                     u2831:
  5608  002D74  0E01               	movlw	1
  5609  002D76  EFBE  F016         	goto	u2840
  5610  002D7A                     u2830:
  5611  002D7A  0E00               	movlw	0
  5612  002D7C                     u2840:
  5613  002D7C  6E01               	movwf	?_isdigit^0,c
  5614  002D7E  6A02               	clrf	(?_isdigit+1)^0,c
  5615  002D80  0012               	return		;funcret
  5616  002D82                     __end_of_isdigit:
  5617                           	callstack 0
  5618                           
  5619 ;; *************** function ___wmul *****************
  5620 ;; Defined at:
  5621 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\Umul16.c"
  5622 ;; Parameters:    Size  Location     Type
  5623 ;;  multiplier      2    0[COMRAM] unsigned int 
  5624 ;;  multiplicand    2    2[COMRAM] unsigned int 
  5625 ;; Auto vars:     Size  Location     Type
  5626 ;;  product         2    4[COMRAM] unsigned int 
  5627 ;; Return value:  Size  Location     Type
  5628 ;;                  2    0[COMRAM] unsigned int 
  5629 ;; Registers used:
  5630 ;;		wreg, status,2, status,0, prodl, prodh
  5631 ;; Tracked objects:
  5632 ;;		On entry : 0/0
  5633 ;;		On exit  : 0/0
  5634 ;;		Unchanged: 0/0
  5635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5636 ;;      Params:         4       0       0       0       0       0       0       0       0
  5637 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5638 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5639 ;;      Totals:         6       0       0       0       0       0       0       0       0
  5640 ;;Total ram usage:        6 bytes
  5641 ;; Hardware stack levels used:    1
  5642 ;; This function calls:
  5643 ;;		Nothing
  5644 ;; This function is called by:
  5645 ;;		_atoi
  5646 ;; This function uses a non-reentrant model
  5647 ;;
  5648                           
  5649                           	psect	text25
  5650  002E74                     __ptext25:
  5651                           	callstack 0
  5652  002E74                     ___wmul:
  5653                           	callstack 27
  5654  002E74  5001               	movf	___wmul@multiplier^0,w,c
  5655  002E76  0203               	mulwf	___wmul@multiplicand^0,c
  5656  002E78  CFF3 F005          	movff	prodl,___wmul@product
  5657  002E7C  CFF4 F006          	movff	prodh,___wmul@product+1
  5658  002E80  5001               	movf	___wmul@multiplier^0,w,c
  5659  002E82  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  5660  002E84  50F3               	movf	243,w,c
  5661  002E86  2606               	addwf	(___wmul@product+1)^0,f,c
  5662  002E88  5002               	movf	(___wmul@multiplier+1)^0,w,c
  5663  002E8A  0203               	mulwf	___wmul@multiplicand^0,c
  5664  002E8C  50F3               	movf	243,w,c
  5665  002E8E  2606               	addwf	(___wmul@product+1)^0,f,c
  5666  002E90  C005  F001         	movff	___wmul@product,?___wmul
  5667  002E94  C006  F002         	movff	___wmul@product+1,?___wmul+1
  5668  002E98  0012               	return		;funcret
  5669  002E9A                     __end_of___wmul:
  5670                           	callstack 0
  5671                           
  5672 ;; *************** function ___xxtofl *****************
  5673 ;; Defined at:
  5674 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\xxtofl.c"
  5675 ;; Parameters:    Size  Location     Type
  5676 ;;  sign            1    wreg     unsigned char 
  5677 ;;  val             4    5[COMRAM] long 
  5678 ;; Auto vars:     Size  Location     Type
  5679 ;;  sign            1   13[COMRAM] unsigned char 
  5680 ;;  arg             4   15[COMRAM] unsigned long 
  5681 ;;  exp             1   14[COMRAM] unsigned char 
  5682 ;; Return value:  Size  Location     Type
  5683 ;;                  4    5[COMRAM] unsigned char 
  5684 ;; Registers used:
  5685 ;;		wreg, status,2, status,0
  5686 ;; Tracked objects:
  5687 ;;		On entry : 0/0
  5688 ;;		On exit  : 0/0
  5689 ;;		Unchanged: 0/0
  5690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5691 ;;      Params:         4       0       0       0       0       0       0       0       0
  5692 ;;      Locals:         6       0       0       0       0       0       0       0       0
  5693 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5694 ;;      Totals:        14       0       0       0       0       0       0       0       0
  5695 ;;Total ram usage:       14 bytes
  5696 ;; Hardware stack levels used:    1
  5697 ;; This function calls:
  5698 ;;		Nothing
  5699 ;; This function is called by:
  5700 ;;		_activar_seguridad
  5701 ;; This function uses a non-reentrant model
  5702 ;;
  5703                           
  5704                           	psect	text26
  5705  001C24                     __ptext26:
  5706                           	callstack 0
  5707  001C24                     ___xxtofl:
  5708                           	callstack 28
  5709                           
  5710                           ;incstack = 0
  5711                           ;___xxtofl@sign stored from wreg
  5712  001C24  6E0E               	movwf	___xxtofl@sign^0,c
  5713  001C26  500E               	movf	___xxtofl@sign^0,w,c
  5714  001C28  B4D8               	btfsc	status,2,c
  5715  001C2A  EF19  F00E         	goto	u3381
  5716  001C2E  EF1B  F00E         	goto	u3380
  5717  001C32                     u3381:
  5718  001C32  EF3D  F00E         	goto	l975
  5719  001C36                     u3380:
  5720  001C36  BE09               	btfsc	(___xxtofl@val+3)^0,7,c
  5721  001C38  EF22  F00E         	goto	u3390
  5722  001C3C  EF20  F00E         	goto	u3391
  5723  001C40                     u3391:
  5724  001C40  EF3D  F00E         	goto	l975
  5725  001C44                     u3390:
  5726  001C44  C006  F00A         	movff	___xxtofl@val,??___xxtofl
  5727  001C48  C007  F00B         	movff	___xxtofl@val+1,??___xxtofl+1
  5728  001C4C  C008  F00C         	movff	___xxtofl@val+2,??___xxtofl+2
  5729  001C50  C009  F00D         	movff	___xxtofl@val+3,??___xxtofl+3
  5730  001C54  1E0A               	comf	??___xxtofl^0,f,c
  5731  001C56  1E0B               	comf	(??___xxtofl+1)^0,f,c
  5732  001C58  1E0C               	comf	(??___xxtofl+2)^0,f,c
  5733  001C5A  1E0D               	comf	(??___xxtofl+3)^0,f,c
  5734  001C5C  2A0A               	incf	??___xxtofl^0,f,c
  5735  001C5E  0E00               	movlw	0
  5736  001C60  220B               	addwfc	(??___xxtofl+1)^0,f,c
  5737  001C62  220C               	addwfc	(??___xxtofl+2)^0,f,c
  5738  001C64  220D               	addwfc	(??___xxtofl+3)^0,f,c
  5739  001C66  C00A  F010         	movff	??___xxtofl,___xxtofl@arg
  5740  001C6A  C00B  F011         	movff	??___xxtofl+1,___xxtofl@arg+1
  5741  001C6E  C00C  F012         	movff	??___xxtofl+2,___xxtofl@arg+2
  5742  001C72  C00D  F013         	movff	??___xxtofl+3,___xxtofl@arg+3
  5743  001C76  EF45  F00E         	goto	l3406
  5744  001C7A                     l975:
  5745  001C7A  C006  F010         	movff	___xxtofl@val,___xxtofl@arg
  5746  001C7E  C007  F011         	movff	___xxtofl@val+1,___xxtofl@arg+1
  5747  001C82  C008  F012         	movff	___xxtofl@val+2,___xxtofl@arg+2
  5748  001C86  C009  F013         	movff	___xxtofl@val+3,___xxtofl@arg+3
  5749  001C8A                     l3406:
  5750  001C8A  5006               	movf	___xxtofl@val^0,w,c
  5751  001C8C  1007               	iorwf	(___xxtofl@val+1)^0,w,c
  5752  001C8E  1008               	iorwf	(___xxtofl@val+2)^0,w,c
  5753  001C90  1009               	iorwf	(___xxtofl@val+3)^0,w,c
  5754  001C92  A4D8               	btfss	status,2,c
  5755  001C94  EF4E  F00E         	goto	u3401
  5756  001C98  EF50  F00E         	goto	u3400
  5757  001C9C                     u3401:
  5758  001C9C  EF5A  F00E         	goto	l3412
  5759  001CA0                     u3400:
  5760  001CA0  0E00               	movlw	0
  5761  001CA2  6E06               	movwf	?___xxtofl^0,c
  5762  001CA4  0E00               	movlw	0
  5763  001CA6  6E07               	movwf	(?___xxtofl+1)^0,c
  5764  001CA8  0E00               	movlw	0
  5765  001CAA  6E08               	movwf	(?___xxtofl+2)^0,c
  5766  001CAC  0E00               	movlw	0
  5767  001CAE  6E09               	movwf	(?___xxtofl+3)^0,c
  5768  001CB0  EFEB  F00E         	goto	l978
  5769  001CB4                     l3412:
  5770  001CB4  0E96               	movlw	150
  5771  001CB6  6E0F               	movwf	___xxtofl@exp^0,c
  5772  001CB8  EF64  F00E         	goto	l3416
  5773  001CBC                     l3414:
  5774  001CBC  2A0F               	incf	___xxtofl@exp^0,f,c
  5775  001CBE  90D8               	bcf	status,0,c
  5776  001CC0  3213               	rrcf	(___xxtofl@arg+3)^0,f,c
  5777  001CC2  3212               	rrcf	(___xxtofl@arg+2)^0,f,c
  5778  001CC4  3211               	rrcf	(___xxtofl@arg+1)^0,f,c
  5779  001CC6  3210               	rrcf	___xxtofl@arg^0,f,c
  5780  001CC8                     l3416:
  5781  001CC8  0E00               	movlw	0
  5782  001CCA  1410               	andwf	___xxtofl@arg^0,w,c
  5783  001CCC  6E0A               	movwf	??___xxtofl^0,c
  5784  001CCE  0E00               	movlw	0
  5785  001CD0  1411               	andwf	(___xxtofl@arg+1)^0,w,c
  5786  001CD2  6E0B               	movwf	(??___xxtofl+1)^0,c
  5787  001CD4  0E00               	movlw	0
  5788  001CD6  1412               	andwf	(___xxtofl@arg+2)^0,w,c
  5789  001CD8  6E0C               	movwf	(??___xxtofl+2)^0,c
  5790  001CDA  0EFE               	movlw	254
  5791  001CDC  1413               	andwf	(___xxtofl@arg+3)^0,w,c
  5792  001CDE  6E0D               	movwf	(??___xxtofl+3)^0,c
  5793  001CE0  500A               	movf	??___xxtofl^0,w,c
  5794  001CE2  100B               	iorwf	(??___xxtofl+1)^0,w,c
  5795  001CE4  100C               	iorwf	(??___xxtofl+2)^0,w,c
  5796  001CE6  100D               	iorwf	(??___xxtofl+3)^0,w,c
  5797  001CE8  A4D8               	btfss	status,2,c
  5798  001CEA  EF79  F00E         	goto	u3411
  5799  001CEE  EF7B  F00E         	goto	u3410
  5800  001CF2                     u3411:
  5801  001CF2  EF5E  F00E         	goto	l3414
  5802  001CF6                     u3410:
  5803  001CF6  EF89  F00E         	goto	l982
  5804  001CFA                     l3418:
  5805  001CFA  2A0F               	incf	___xxtofl@exp^0,f,c
  5806  001CFC  0E01               	movlw	1
  5807  001CFE  2610               	addwf	___xxtofl@arg^0,f,c
  5808  001D00  0E00               	movlw	0
  5809  001D02  2211               	addwfc	(___xxtofl@arg+1)^0,f,c
  5810  001D04  2212               	addwfc	(___xxtofl@arg+2)^0,f,c
  5811  001D06  2213               	addwfc	(___xxtofl@arg+3)^0,f,c
  5812  001D08  90D8               	bcf	status,0,c
  5813  001D0A  3213               	rrcf	(___xxtofl@arg+3)^0,f,c
  5814  001D0C  3212               	rrcf	(___xxtofl@arg+2)^0,f,c
  5815  001D0E  3211               	rrcf	(___xxtofl@arg+1)^0,f,c
  5816  001D10  3210               	rrcf	___xxtofl@arg^0,f,c
  5817  001D12                     l982:
  5818  001D12  0E00               	movlw	0
  5819  001D14  1410               	andwf	___xxtofl@arg^0,w,c
  5820  001D16  6E0A               	movwf	??___xxtofl^0,c
  5821  001D18  0E00               	movlw	0
  5822  001D1A  1411               	andwf	(___xxtofl@arg+1)^0,w,c
  5823  001D1C  6E0B               	movwf	(??___xxtofl+1)^0,c
  5824  001D1E  0E00               	movlw	0
  5825  001D20  1412               	andwf	(___xxtofl@arg+2)^0,w,c
  5826  001D22  6E0C               	movwf	(??___xxtofl+2)^0,c
  5827  001D24  0EFF               	movlw	255
  5828  001D26  1413               	andwf	(___xxtofl@arg+3)^0,w,c
  5829  001D28  6E0D               	movwf	(??___xxtofl+3)^0,c
  5830  001D2A  500A               	movf	??___xxtofl^0,w,c
  5831  001D2C  100B               	iorwf	(??___xxtofl+1)^0,w,c
  5832  001D2E  100C               	iorwf	(??___xxtofl+2)^0,w,c
  5833  001D30  100D               	iorwf	(??___xxtofl+3)^0,w,c
  5834  001D32  A4D8               	btfss	status,2,c
  5835  001D34  EF9E  F00E         	goto	u3421
  5836  001D38  EFA0  F00E         	goto	u3420
  5837  001D3C                     u3421:
  5838  001D3C  EF7D  F00E         	goto	l3418
  5839  001D40                     u3420:
  5840  001D40  EFA8  F00E         	goto	l3426
  5841  001D44                     l3424:
  5842  001D44  060F               	decf	___xxtofl@exp^0,f,c
  5843  001D46  90D8               	bcf	status,0,c
  5844  001D48  3610               	rlcf	___xxtofl@arg^0,f,c
  5845  001D4A  3611               	rlcf	(___xxtofl@arg+1)^0,f,c
  5846  001D4C  3612               	rlcf	(___xxtofl@arg+2)^0,f,c
  5847  001D4E  3613               	rlcf	(___xxtofl@arg+3)^0,f,c
  5848  001D50                     l3426:
  5849  001D50  BE12               	btfsc	(___xxtofl@arg+2)^0,7,c
  5850  001D52  EFAD  F00E         	goto	u3431
  5851  001D56  EFAF  F00E         	goto	u3430
  5852  001D5A                     u3431:
  5853  001D5A  EFB7  F00E         	goto	l989
  5854  001D5E                     u3430:
  5855  001D5E  0E02               	movlw	2
  5856  001D60  600F               	cpfslt	___xxtofl@exp^0,c
  5857  001D62  EFB5  F00E         	goto	u3441
  5858  001D66  EFB7  F00E         	goto	u3440
  5859  001D6A                     u3441:
  5860  001D6A  EFA2  F00E         	goto	l3424
  5861  001D6E                     u3440:
  5862  001D6E                     l989:
  5863  001D6E  B00F               	btfsc	___xxtofl@exp^0,0,c
  5864  001D70  EFBC  F00E         	goto	u3451
  5865  001D74  EFBE  F00E         	goto	u3450
  5866  001D78                     u3451:
  5867  001D78  EFBF  F00E         	goto	l3432
  5868  001D7C                     u3450:
  5869  001D7C  9E12               	bcf	(___xxtofl@arg+2)^0,7,c
  5870  001D7E                     l3432:
  5871  001D7E  90D8               	bcf	status,0,c
  5872  001D80  320F               	rrcf	___xxtofl@exp^0,f,c
  5873  001D82  C00F  F00A         	movff	___xxtofl@exp,??___xxtofl
  5874  001D86  6A0B               	clrf	(??___xxtofl+1)^0,c
  5875  001D88  6A0C               	clrf	(??___xxtofl+2)^0,c
  5876  001D8A  6A0D               	clrf	(??___xxtofl+3)^0,c
  5877  001D8C  C00A  F00D         	movff	??___xxtofl,??___xxtofl+3
  5878  001D90  6A0C               	clrf	(??___xxtofl+2)^0,c
  5879  001D92  6A0B               	clrf	(??___xxtofl+1)^0,c
  5880  001D94  6A0A               	clrf	??___xxtofl^0,c
  5881  001D96  500A               	movf	??___xxtofl^0,w,c
  5882  001D98  1210               	iorwf	___xxtofl@arg^0,f,c
  5883  001D9A  500B               	movf	(??___xxtofl+1)^0,w,c
  5884  001D9C  1211               	iorwf	(___xxtofl@arg+1)^0,f,c
  5885  001D9E  500C               	movf	(??___xxtofl+2)^0,w,c
  5886  001DA0  1212               	iorwf	(___xxtofl@arg+2)^0,f,c
  5887  001DA2  500D               	movf	(??___xxtofl+3)^0,w,c
  5888  001DA4  1213               	iorwf	(___xxtofl@arg+3)^0,f,c
  5889  001DA6  500E               	movf	___xxtofl@sign^0,w,c
  5890  001DA8  B4D8               	btfsc	status,2,c
  5891  001DAA  EFD9  F00E         	goto	u3461
  5892  001DAE  EFDB  F00E         	goto	u3460
  5893  001DB2                     u3461:
  5894  001DB2  EFE3  F00E         	goto	l3442
  5895  001DB6                     u3460:
  5896  001DB6  BE09               	btfsc	(___xxtofl@val+3)^0,7,c
  5897  001DB8  EFE2  F00E         	goto	u3470
  5898  001DBC  EFE0  F00E         	goto	u3471
  5899  001DC0                     u3471:
  5900  001DC0  EFE3  F00E         	goto	l3442
  5901  001DC4                     u3470:
  5902  001DC4  8E13               	bsf	(___xxtofl@arg+3)^0,7,c
  5903  001DC6                     l3442:
  5904  001DC6  C010  F006         	movff	___xxtofl@arg,?___xxtofl
  5905  001DCA  C011  F007         	movff	___xxtofl@arg+1,?___xxtofl+1
  5906  001DCE  C012  F008         	movff	___xxtofl@arg+2,?___xxtofl+2
  5907  001DD2  C013  F009         	movff	___xxtofl@arg+3,?___xxtofl+3
  5908  001DD6                     l978:
  5909  001DD6  0012               	return		;funcret
  5910  001DD8                     __end_of___xxtofl:
  5911                           	callstack 0
  5912                           
  5913 ;; *************** function ___fltol *****************
  5914 ;; Defined at:
  5915 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\fltol.c"
  5916 ;; Parameters:    Size  Location     Type
  5917 ;;  f1              4    0[COMRAM] unsigned char 
  5918 ;; Auto vars:     Size  Location     Type
  5919 ;;  exp1            1    9[COMRAM] unsigned char 
  5920 ;;  sign1           1    8[COMRAM] unsigned char 
  5921 ;; Return value:  Size  Location     Type
  5922 ;;                  4    0[COMRAM] long 
  5923 ;; Registers used:
  5924 ;;		wreg, status,2, status,0
  5925 ;; Tracked objects:
  5926 ;;		On entry : 0/0
  5927 ;;		On exit  : 0/0
  5928 ;;		Unchanged: 0/0
  5929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5930 ;;      Params:         4       0       0       0       0       0       0       0       0
  5931 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5932 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5933 ;;      Totals:        10       0       0       0       0       0       0       0       0
  5934 ;;Total ram usage:       10 bytes
  5935 ;; Hardware stack levels used:    1
  5936 ;; This function calls:
  5937 ;;		Nothing
  5938 ;; This function is called by:
  5939 ;;		_activar_seguridad
  5940 ;; This function uses a non-reentrant model
  5941 ;;
  5942                           
  5943                           	psect	text27
  5944  00224E                     __ptext27:
  5945                           	callstack 0
  5946  00224E                     ___fltol:
  5947                           	callstack 28
  5948  00224E  3403               	rlcf	(___fltol@f1+2)^0,w,c
  5949  002250  3404               	rlcf	(___fltol@f1+3)^0,w,c
  5950  002252  6E0A               	movwf	___fltol@exp1^0,c
  5951  002254  500A               	movf	___fltol@exp1^0,w,c
  5952  002256  A4D8               	btfss	status,2,c
  5953  002258  EF30  F011         	goto	u3311
  5954  00225C  EF32  F011         	goto	u3310
  5955  002260                     u3311:
  5956  002260  EF3C  F011         	goto	l3362
  5957  002264                     u3310:
  5958  002264                     l3358:
  5959  002264  0E00               	movlw	0
  5960  002266  6E01               	movwf	?___fltol^0,c
  5961  002268  0E00               	movlw	0
  5962  00226A  6E02               	movwf	(?___fltol+1)^0,c
  5963  00226C  0E00               	movlw	0
  5964  00226E  6E03               	movwf	(?___fltol+2)^0,c
  5965  002270  0E00               	movlw	0
  5966  002272  6E04               	movwf	(?___fltol+3)^0,c
  5967  002274  EFA9  F011         	goto	l617
  5968  002278                     l3362:
  5969  002278  C001  F005         	movff	___fltol@f1,??___fltol
  5970  00227C  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  5971  002280  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  5972  002284  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  5973  002288  0E20               	movlw	32
  5974  00228A  EF4C  F011         	goto	u3320
  5975  00228E                     u3325:
  5976  00228E  90D8               	bcf	status,0,c
  5977  002290  3208               	rrcf	(??___fltol+3)^0,f,c
  5978  002292  3207               	rrcf	(??___fltol+2)^0,f,c
  5979  002294  3206               	rrcf	(??___fltol+1)^0,f,c
  5980  002296  3205               	rrcf	??___fltol^0,f,c
  5981  002298                     u3320:
  5982  002298  2EE8               	decfsz	wreg,f,c
  5983  00229A  EF47  F011         	goto	u3325
  5984  00229E  5005               	movf	??___fltol^0,w,c
  5985  0022A0  6E09               	movwf	___fltol@sign1^0,c
  5986  0022A2  8E03               	bsf	(___fltol@f1+2)^0,7,c
  5987  0022A4  0EFF               	movlw	255
  5988  0022A6  1601               	andwf	___fltol@f1^0,f,c
  5989  0022A8  0EFF               	movlw	255
  5990  0022AA  1602               	andwf	(___fltol@f1+1)^0,f,c
  5991  0022AC  0EFF               	movlw	255
  5992  0022AE  1603               	andwf	(___fltol@f1+2)^0,f,c
  5993  0022B0  0E00               	movlw	0
  5994  0022B2  1604               	andwf	(___fltol@f1+3)^0,f,c
  5995  0022B4  0E96               	movlw	150
  5996  0022B6  5E0A               	subwf	___fltol@exp1^0,f,c
  5997  0022B8  BE0A               	btfsc	___fltol@exp1^0,7,c
  5998  0022BA  EF63  F011         	goto	u3330
  5999  0022BE  EF61  F011         	goto	u3331
  6000  0022C2                     u3331:
  6001  0022C2  EF79  F011         	goto	l3382
  6002  0022C6                     u3330:
  6003  0022C6  500A               	movf	___fltol@exp1^0,w,c
  6004  0022C8  0A80               	xorlw	128
  6005  0022CA  0F97               	addlw	151
  6006  0022CC  B0D8               	btfsc	status,0,c
  6007  0022CE  EF6B  F011         	goto	u3341
  6008  0022D2  EF6D  F011         	goto	u3340
  6009  0022D6                     u3341:
  6010  0022D6  EF6F  F011         	goto	l3378
  6011  0022DA                     u3340:
  6012  0022DA  EF32  F011         	goto	l3358
  6013  0022DE                     l3378:
  6014  0022DE  90D8               	bcf	status,0,c
  6015  0022E0  3204               	rrcf	(___fltol@f1+3)^0,f,c
  6016  0022E2  3203               	rrcf	(___fltol@f1+2)^0,f,c
  6017  0022E4  3202               	rrcf	(___fltol@f1+1)^0,f,c
  6018  0022E6  3201               	rrcf	___fltol@f1^0,f,c
  6019  0022E8  3E0A               	incfsz	___fltol@exp1^0,f,c
  6020  0022EA  EF6F  F011         	goto	l3378
  6021  0022EE  EF91  F011         	goto	l3392
  6022  0022F2                     l3382:
  6023  0022F2  0E1F               	movlw	31
  6024  0022F4  640A               	cpfsgt	___fltol@exp1^0,c
  6025  0022F6  EF7F  F011         	goto	u3351
  6026  0022FA  EF81  F011         	goto	u3350
  6027  0022FE                     u3351:
  6028  0022FE  EF89  F011         	goto	l3390
  6029  002302                     u3350:
  6030  002302  EF32  F011         	goto	l3358
  6031  002306                     l3388:
  6032  002306  90D8               	bcf	status,0,c
  6033  002308  3601               	rlcf	___fltol@f1^0,f,c
  6034  00230A  3602               	rlcf	(___fltol@f1+1)^0,f,c
  6035  00230C  3603               	rlcf	(___fltol@f1+2)^0,f,c
  6036  00230E  3604               	rlcf	(___fltol@f1+3)^0,f,c
  6037  002310  060A               	decf	___fltol@exp1^0,f,c
  6038  002312                     l3390:
  6039  002312  500A               	movf	___fltol@exp1^0,w,c
  6040  002314  A4D8               	btfss	status,2,c
  6041  002316  EF8F  F011         	goto	u3361
  6042  00231A  EF91  F011         	goto	u3360
  6043  00231E                     u3361:
  6044  00231E  EF83  F011         	goto	l3388
  6045  002322                     u3360:
  6046  002322                     l3392:
  6047  002322  5009               	movf	___fltol@sign1^0,w,c
  6048  002324  B4D8               	btfsc	status,2,c
  6049  002326  EF97  F011         	goto	u3371
  6050  00232A  EF99  F011         	goto	u3370
  6051  00232E                     u3371:
  6052  00232E  EFA1  F011         	goto	l3396
  6053  002332                     u3370:
  6054  002332  1E04               	comf	(___fltol@f1+3)^0,f,c
  6055  002334  1E03               	comf	(___fltol@f1+2)^0,f,c
  6056  002336  1E02               	comf	(___fltol@f1+1)^0,f,c
  6057  002338  6C01               	negf	___fltol@f1^0,c
  6058  00233A  0E00               	movlw	0
  6059  00233C  2202               	addwfc	(___fltol@f1+1)^0,f,c
  6060  00233E  2203               	addwfc	(___fltol@f1+2)^0,f,c
  6061  002340  2204               	addwfc	(___fltol@f1+3)^0,f,c
  6062  002342                     l3396:
  6063  002342  C001  F001         	movff	___fltol@f1,?___fltol
  6064  002346  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  6065  00234A  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  6066  00234E  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  6067  002352                     l617:
  6068  002352  0012               	return		;funcret
  6069  002354                     __end_of___fltol:
  6070                           	callstack 0
  6071                           
  6072 ;; *************** function ___flmul *****************
  6073 ;; Defined at:
  6074 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\sprcmul.c"
  6075 ;; Parameters:    Size  Location     Type
  6076 ;;  b               4   19[COMRAM] long 
  6077 ;;  a               4   23[COMRAM] long 
  6078 ;; Auto vars:     Size  Location     Type
  6079 ;;  prod            4   38[COMRAM] struct .
  6080 ;;  grs             4   32[COMRAM] unsigned long 
  6081 ;;  temp            2   42[COMRAM] struct .
  6082 ;;  bexp            1   37[COMRAM] unsigned char 
  6083 ;;  aexp            1   36[COMRAM] unsigned char 
  6084 ;;  sign            1   31[COMRAM] unsigned char 
  6085 ;; Return value:  Size  Location     Type
  6086 ;;                  4   19[COMRAM] unsigned char 
  6087 ;; Registers used:
  6088 ;;		wreg, status,2, status,0, prodl, prodh
  6089 ;; Tracked objects:
  6090 ;;		On entry : 0/0
  6091 ;;		On exit  : 0/0
  6092 ;;		Unchanged: 0/0
  6093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6094 ;;      Params:         8       0       0       0       0       0       0       0       0
  6095 ;;      Locals:        13       0       0       0       0       0       0       0       0
  6096 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6097 ;;      Totals:        25       0       0       0       0       0       0       0       0
  6098 ;;Total ram usage:       25 bytes
  6099 ;; Hardware stack levels used:    1
  6100 ;; This function calls:
  6101 ;;		Nothing
  6102 ;; This function is called by:
  6103 ;;		_activar_seguridad
  6104 ;; This function uses a non-reentrant model
  6105 ;;
  6106                           
  6107                           	psect	text28
  6108  000F36                     __ptext28:
  6109                           	callstack 0
  6110  000F36                     ___flmul:
  6111                           	callstack 28
  6112  000F36  5017               	movf	(___flmul@b+3)^0,w,c
  6113  000F38  0B80               	andlw	128
  6114  000F3A  6E20               	movwf	___flmul@sign^0,c
  6115  000F3C  5017               	movf	(___flmul@b+3)^0,w,c
  6116  000F3E  2417               	addwf	(___flmul@b+3)^0,w,c
  6117  000F40  6E26               	movwf	___flmul@bexp^0,c
  6118  000F42  AE16               	btfss	(___flmul@b+2)^0,7,c
  6119  000F44  EFA6  F007         	goto	u3071
  6120  000F48  EFA8  F007         	goto	u3070
  6121  000F4C                     u3071:
  6122  000F4C  EFA9  F007         	goto	l3210
  6123  000F50                     u3070:
  6124  000F50  8026               	bsf	___flmul@bexp^0,0,c
  6125  000F52                     l3210:
  6126  000F52  5026               	movf	___flmul@bexp^0,w,c
  6127  000F54  B4D8               	btfsc	status,2,c
  6128  000F56  EFAF  F007         	goto	u3081
  6129  000F5A  EFB1  F007         	goto	u3080
  6130  000F5E                     u3081:
  6131  000F5E  EFC4  F007         	goto	l3218
  6132  000F62                     u3080:
  6133  000F62  2826               	incf	___flmul@bexp^0,w,c
  6134  000F64  A4D8               	btfss	status,2,c
  6135  000F66  EFB7  F007         	goto	u3091
  6136  000F6A  EFB9  F007         	goto	u3090
  6137  000F6E                     u3091:
  6138  000F6E  EFC1  F007         	goto	l3216
  6139  000F72                     u3090:
  6140  000F72  0E00               	movlw	0
  6141  000F74  6E14               	movwf	___flmul@b^0,c
  6142  000F76  0E00               	movlw	0
  6143  000F78  6E15               	movwf	(___flmul@b+1)^0,c
  6144  000F7A  0E00               	movlw	0
  6145  000F7C  6E16               	movwf	(___flmul@b+2)^0,c
  6146  000F7E  0E00               	movlw	0
  6147  000F80  6E17               	movwf	(___flmul@b+3)^0,c
  6148  000F82                     l3216:
  6149  000F82  8E16               	bsf	(___flmul@b+2)^0,7,c
  6150  000F84  EFCC  F007         	goto	l3220
  6151  000F88                     l3218:
  6152  000F88  0E00               	movlw	0
  6153  000F8A  6E14               	movwf	___flmul@b^0,c
  6154  000F8C  0E00               	movlw	0
  6155  000F8E  6E15               	movwf	(___flmul@b+1)^0,c
  6156  000F90  0E00               	movlw	0
  6157  000F92  6E16               	movwf	(___flmul@b+2)^0,c
  6158  000F94  0E00               	movlw	0
  6159  000F96  6E17               	movwf	(___flmul@b+3)^0,c
  6160  000F98                     l3220:
  6161  000F98  501B               	movf	(___flmul@a+3)^0,w,c
  6162  000F9A  0B80               	andlw	128
  6163  000F9C  1A20               	xorwf	___flmul@sign^0,f,c
  6164  000F9E  501B               	movf	(___flmul@a+3)^0,w,c
  6165  000FA0  241B               	addwf	(___flmul@a+3)^0,w,c
  6166  000FA2  6E25               	movwf	___flmul@aexp^0,c
  6167  000FA4  AE1A               	btfss	(___flmul@a+2)^0,7,c
  6168  000FA6  EFD7  F007         	goto	u3101
  6169  000FAA  EFD9  F007         	goto	u3100
  6170  000FAE                     u3101:
  6171  000FAE  EFDA  F007         	goto	l3228
  6172  000FB2                     u3100:
  6173  000FB2  8025               	bsf	___flmul@aexp^0,0,c
  6174  000FB4                     l3228:
  6175  000FB4  5025               	movf	___flmul@aexp^0,w,c
  6176  000FB6  B4D8               	btfsc	status,2,c
  6177  000FB8  EFE0  F007         	goto	u3111
  6178  000FBC  EFE2  F007         	goto	u3110
  6179  000FC0                     u3111:
  6180  000FC0  EFF5  F007         	goto	l3236
  6181  000FC4                     u3110:
  6182  000FC4  2825               	incf	___flmul@aexp^0,w,c
  6183  000FC6  A4D8               	btfss	status,2,c
  6184  000FC8  EFE8  F007         	goto	u3121
  6185  000FCC  EFEA  F007         	goto	u3120
  6186  000FD0                     u3121:
  6187  000FD0  EFF2  F007         	goto	l3234
  6188  000FD4                     u3120:
  6189  000FD4  0E00               	movlw	0
  6190  000FD6  6E18               	movwf	___flmul@a^0,c
  6191  000FD8  0E00               	movlw	0
  6192  000FDA  6E19               	movwf	(___flmul@a+1)^0,c
  6193  000FDC  0E00               	movlw	0
  6194  000FDE  6E1A               	movwf	(___flmul@a+2)^0,c
  6195  000FE0  0E00               	movlw	0
  6196  000FE2  6E1B               	movwf	(___flmul@a+3)^0,c
  6197  000FE4                     l3234:
  6198  000FE4  8E1A               	bsf	(___flmul@a+2)^0,7,c
  6199  000FE6  EFFD  F007         	goto	l934
  6200  000FEA                     l3236:
  6201  000FEA  0E00               	movlw	0
  6202  000FEC  6E18               	movwf	___flmul@a^0,c
  6203  000FEE  0E00               	movlw	0
  6204  000FF0  6E19               	movwf	(___flmul@a+1)^0,c
  6205  000FF2  0E00               	movlw	0
  6206  000FF4  6E1A               	movwf	(___flmul@a+2)^0,c
  6207  000FF6  0E00               	movlw	0
  6208  000FF8  6E1B               	movwf	(___flmul@a+3)^0,c
  6209  000FFA                     l934:
  6210  000FFA  5025               	movf	___flmul@aexp^0,w,c
  6211  000FFC  B4D8               	btfsc	status,2,c
  6212  000FFE  EF03  F008         	goto	u3131
  6213  001002  EF05  F008         	goto	u3130
  6214  001006                     u3131:
  6215  001006  EF0D  F008         	goto	l3240
  6216  00100A                     u3130:
  6217  00100A  5026               	movf	___flmul@bexp^0,w,c
  6218  00100C  A4D8               	btfss	status,2,c
  6219  00100E  EF0B  F008         	goto	u3141
  6220  001012  EF0D  F008         	goto	u3140
  6221  001016                     u3141:
  6222  001016  EF17  F008         	goto	l3244
  6223  00101A                     u3140:
  6224  00101A                     l3240:
  6225  00101A  0E00               	movlw	0
  6226  00101C  6E14               	movwf	?___flmul^0,c
  6227  00101E  0E00               	movlw	0
  6228  001020  6E15               	movwf	(?___flmul+1)^0,c
  6229  001022  0E00               	movlw	0
  6230  001024  6E16               	movwf	(?___flmul+2)^0,c
  6231  001026  0E00               	movlw	0
  6232  001028  6E17               	movwf	(?___flmul+3)^0,c
  6233  00102A  EFAF  F009         	goto	l938
  6234  00102E                     l3244:
  6235  00102E  501A               	movf	(___flmul@a+2)^0,w,c
  6236  001030  0214               	mulwf	___flmul@b^0,c
  6237  001032  CFF3 F02B          	movff	prodl,___flmul@temp
  6238  001036  CFF4 F02C          	movff	prodh,___flmul@temp+1
  6239  00103A  502B               	movf	___flmul@temp^0,w,c
  6240  00103C  6E21               	movwf	___flmul@grs^0,c
  6241  00103E  6A22               	clrf	(___flmul@grs+1)^0,c
  6242  001040  6A23               	clrf	(___flmul@grs+2)^0,c
  6243  001042  6A24               	clrf	(___flmul@grs+3)^0,c
  6244  001044  502C               	movf	(___flmul@temp+1)^0,w,c
  6245  001046  6E27               	movwf	___flmul@prod^0,c
  6246  001048  6A28               	clrf	(___flmul@prod+1)^0,c
  6247  00104A  6A29               	clrf	(___flmul@prod+2)^0,c
  6248  00104C  6A2A               	clrf	(___flmul@prod+3)^0,c
  6249  00104E  5019               	movf	(___flmul@a+1)^0,w,c
  6250  001050  0215               	mulwf	(___flmul@b+1)^0,c
  6251  001052  CFF3 F02B          	movff	prodl,___flmul@temp
  6252  001056  CFF4 F02C          	movff	prodh,___flmul@temp+1
  6253  00105A  502B               	movf	___flmul@temp^0,w,c
  6254  00105C  2621               	addwf	___flmul@grs^0,f,c
  6255  00105E  0E00               	movlw	0
  6256  001060  2222               	addwfc	(___flmul@grs+1)^0,f,c
  6257  001062  2223               	addwfc	(___flmul@grs+2)^0,f,c
  6258  001064  2224               	addwfc	(___flmul@grs+3)^0,f,c
  6259  001066  502C               	movf	(___flmul@temp+1)^0,w,c
  6260  001068  2627               	addwf	___flmul@prod^0,f,c
  6261  00106A  0E00               	movlw	0
  6262  00106C  2228               	addwfc	(___flmul@prod+1)^0,f,c
  6263  00106E  2229               	addwfc	(___flmul@prod+2)^0,f,c
  6264  001070  222A               	addwfc	(___flmul@prod+3)^0,f,c
  6265  001072  5018               	movf	___flmul@a^0,w,c
  6266  001074  0216               	mulwf	(___flmul@b+2)^0,c
  6267  001076  CFF3 F02B          	movff	prodl,___flmul@temp
  6268  00107A  CFF4 F02C          	movff	prodh,___flmul@temp+1
  6269  00107E  502B               	movf	___flmul@temp^0,w,c
  6270  001080  2621               	addwf	___flmul@grs^0,f,c
  6271  001082  0E00               	movlw	0
  6272  001084  2222               	addwfc	(___flmul@grs+1)^0,f,c
  6273  001086  2223               	addwfc	(___flmul@grs+2)^0,f,c
  6274  001088  2224               	addwfc	(___flmul@grs+3)^0,f,c
  6275  00108A  502C               	movf	(___flmul@temp+1)^0,w,c
  6276  00108C  2627               	addwf	___flmul@prod^0,f,c
  6277  00108E  0E00               	movlw	0
  6278  001090  2228               	addwfc	(___flmul@prod+1)^0,f,c
  6279  001092  2229               	addwfc	(___flmul@prod+2)^0,f,c
  6280  001094  222A               	addwfc	(___flmul@prod+3)^0,f,c
  6281  001096  C023  F024         	movff	___flmul@grs+2,___flmul@grs+3
  6282  00109A  C022  F023         	movff	___flmul@grs+1,___flmul@grs+2
  6283  00109E  C021  F022         	movff	___flmul@grs,___flmul@grs+1
  6284  0010A2  6A21               	clrf	___flmul@grs^0,c
  6285  0010A4  5018               	movf	___flmul@a^0,w,c
  6286  0010A6  0215               	mulwf	(___flmul@b+1)^0,c
  6287  0010A8  CFF3 F02B          	movff	prodl,___flmul@temp
  6288  0010AC  CFF4 F02C          	movff	prodh,___flmul@temp+1
  6289  0010B0  502B               	movf	___flmul@temp^0,w,c
  6290  0010B2  2621               	addwf	___flmul@grs^0,f,c
  6291  0010B4  502C               	movf	(___flmul@temp+1)^0,w,c
  6292  0010B6  2222               	addwfc	(___flmul@grs+1)^0,f,c
  6293  0010B8  0E00               	movlw	0
  6294  0010BA  2223               	addwfc	(___flmul@grs+2)^0,f,c
  6295  0010BC  0E00               	movlw	0
  6296  0010BE  2224               	addwfc	(___flmul@grs+3)^0,f,c
  6297  0010C0  5019               	movf	(___flmul@a+1)^0,w,c
  6298  0010C2  0214               	mulwf	___flmul@b^0,c
  6299  0010C4  CFF3 F02B          	movff	prodl,___flmul@temp
  6300  0010C8  CFF4 F02C          	movff	prodh,___flmul@temp+1
  6301  0010CC  502B               	movf	___flmul@temp^0,w,c
  6302  0010CE  2621               	addwf	___flmul@grs^0,f,c
  6303  0010D0  502C               	movf	(___flmul@temp+1)^0,w,c
  6304  0010D2  2222               	addwfc	(___flmul@grs+1)^0,f,c
  6305  0010D4  0E00               	movlw	0
  6306  0010D6  2223               	addwfc	(___flmul@grs+2)^0,f,c
  6307  0010D8  0E00               	movlw	0
  6308  0010DA  2224               	addwfc	(___flmul@grs+3)^0,f,c
  6309  0010DC  C023  F024         	movff	___flmul@grs+2,___flmul@grs+3
  6310  0010E0  C022  F023         	movff	___flmul@grs+1,___flmul@grs+2
  6311  0010E4  C021  F022         	movff	___flmul@grs,___flmul@grs+1
  6312  0010E8  6A21               	clrf	___flmul@grs^0,c
  6313  0010EA  5018               	movf	___flmul@a^0,w,c
  6314  0010EC  0214               	mulwf	___flmul@b^0,c
  6315  0010EE  CFF3 F02B          	movff	prodl,___flmul@temp
  6316  0010F2  CFF4 F02C          	movff	prodh,___flmul@temp+1
  6317  0010F6  502B               	movf	___flmul@temp^0,w,c
  6318  0010F8  2621               	addwf	___flmul@grs^0,f,c
  6319  0010FA  502C               	movf	(___flmul@temp+1)^0,w,c
  6320  0010FC  2222               	addwfc	(___flmul@grs+1)^0,f,c
  6321  0010FE  0E00               	movlw	0
  6322  001100  2223               	addwfc	(___flmul@grs+2)^0,f,c
  6323  001102  0E00               	movlw	0
  6324  001104  2224               	addwfc	(___flmul@grs+3)^0,f,c
  6325  001106  501A               	movf	(___flmul@a+2)^0,w,c
  6326  001108  0215               	mulwf	(___flmul@b+1)^0,c
  6327  00110A  CFF3 F02B          	movff	prodl,___flmul@temp
  6328  00110E  CFF4 F02C          	movff	prodh,___flmul@temp+1
  6329  001112  502B               	movf	___flmul@temp^0,w,c
  6330  001114  2627               	addwf	___flmul@prod^0,f,c
  6331  001116  502C               	movf	(___flmul@temp+1)^0,w,c
  6332  001118  2228               	addwfc	(___flmul@prod+1)^0,f,c
  6333  00111A  0E00               	movlw	0
  6334  00111C  2229               	addwfc	(___flmul@prod+2)^0,f,c
  6335  00111E  0E00               	movlw	0
  6336  001120  222A               	addwfc	(___flmul@prod+3)^0,f,c
  6337  001122  5019               	movf	(___flmul@a+1)^0,w,c
  6338  001124  0216               	mulwf	(___flmul@b+2)^0,c
  6339  001126  CFF3 F02B          	movff	prodl,___flmul@temp
  6340  00112A  CFF4 F02C          	movff	prodh,___flmul@temp+1
  6341  00112E  502B               	movf	___flmul@temp^0,w,c
  6342  001130  2627               	addwf	___flmul@prod^0,f,c
  6343  001132  502C               	movf	(___flmul@temp+1)^0,w,c
  6344  001134  2228               	addwfc	(___flmul@prod+1)^0,f,c
  6345  001136  0E00               	movlw	0
  6346  001138  2229               	addwfc	(___flmul@prod+2)^0,f,c
  6347  00113A  0E00               	movlw	0
  6348  00113C  222A               	addwfc	(___flmul@prod+3)^0,f,c
  6349  00113E  501A               	movf	(___flmul@a+2)^0,w,c
  6350  001140  0216               	mulwf	(___flmul@b+2)^0,c
  6351  001142  CFF3 F02B          	movff	prodl,___flmul@temp
  6352  001146  CFF4 F02C          	movff	prodh,___flmul@temp+1
  6353  00114A  502B               	movf	___flmul@temp^0,w,c
  6354  00114C  6E1C               	movwf	??___flmul^0,c
  6355  00114E  502C               	movf	(___flmul@temp+1)^0,w,c
  6356  001150  6E1D               	movwf	(??___flmul+1)^0,c
  6357  001152  6A1E               	clrf	(??___flmul+2)^0,c
  6358  001154  6A1F               	clrf	(??___flmul+3)^0,c
  6359  001156  C01E  F01F         	movff	??___flmul+2,??___flmul+3
  6360  00115A  C01D  F01E         	movff	??___flmul+1,??___flmul+2
  6361  00115E  C01C  F01D         	movff	??___flmul,??___flmul+1
  6362  001162  6A1C               	clrf	??___flmul^0,c
  6363  001164  501C               	movf	??___flmul^0,w,c
  6364  001166  2627               	addwf	___flmul@prod^0,f,c
  6365  001168  501D               	movf	(??___flmul+1)^0,w,c
  6366  00116A  2228               	addwfc	(___flmul@prod+1)^0,f,c
  6367  00116C  501E               	movf	(??___flmul+2)^0,w,c
  6368  00116E  2229               	addwfc	(___flmul@prod+2)^0,f,c
  6369  001170  501F               	movf	(??___flmul+3)^0,w,c
  6370  001172  222A               	addwfc	(___flmul@prod+3)^0,f,c
  6371  001174  C021  F01C         	movff	___flmul@grs,??___flmul
  6372  001178  C022  F01D         	movff	___flmul@grs+1,??___flmul+1
  6373  00117C  C023  F01E         	movff	___flmul@grs+2,??___flmul+2
  6374  001180  C024  F01F         	movff	___flmul@grs+3,??___flmul+3
  6375  001184  0E19               	movlw	25
  6376  001186  EFCA  F008         	goto	u3150
  6377  00118A                     u3155:
  6378  00118A  90D8               	bcf	status,0,c
  6379  00118C  321F               	rrcf	(??___flmul+3)^0,f,c
  6380  00118E  321E               	rrcf	(??___flmul+2)^0,f,c
  6381  001190  321D               	rrcf	(??___flmul+1)^0,f,c
  6382  001192  321C               	rrcf	??___flmul^0,f,c
  6383  001194                     u3150:
  6384  001194  2EE8               	decfsz	wreg,f,c
  6385  001196  EFC5  F008         	goto	u3155
  6386  00119A  501C               	movf	??___flmul^0,w,c
  6387  00119C  2627               	addwf	___flmul@prod^0,f,c
  6388  00119E  501D               	movf	(??___flmul+1)^0,w,c
  6389  0011A0  2228               	addwfc	(___flmul@prod+1)^0,f,c
  6390  0011A2  501E               	movf	(??___flmul+2)^0,w,c
  6391  0011A4  2229               	addwfc	(___flmul@prod+2)^0,f,c
  6392  0011A6  501F               	movf	(??___flmul+3)^0,w,c
  6393  0011A8  222A               	addwfc	(___flmul@prod+3)^0,f,c
  6394  0011AA  C023  F024         	movff	___flmul@grs+2,___flmul@grs+3
  6395  0011AE  C022  F023         	movff	___flmul@grs+1,___flmul@grs+2
  6396  0011B2  C021  F022         	movff	___flmul@grs,___flmul@grs+1
  6397  0011B6  6A21               	clrf	___flmul@grs^0,c
  6398  0011B8  5025               	movf	___flmul@aexp^0,w,c
  6399  0011BA  C026  F01C         	movff	___flmul@bexp,??___flmul
  6400  0011BE  6A1D               	clrf	(??___flmul+1)^0,c
  6401  0011C0  261C               	addwf	??___flmul^0,f,c
  6402  0011C2  0E00               	movlw	0
  6403  0011C4  221D               	addwfc	(??___flmul+1)^0,f,c
  6404  0011C6  0E82               	movlw	130
  6405  0011C8  241C               	addwf	??___flmul^0,w,c
  6406  0011CA  6E2B               	movwf	___flmul@temp^0,c
  6407  0011CC  0EFF               	movlw	255
  6408  0011CE  201D               	addwfc	(??___flmul+1)^0,w,c
  6409  0011D0  6E2C               	movwf	(___flmul@temp+1)^0,c
  6410  0011D2  EF00  F009         	goto	l3292
  6411  0011D6                     l3286:
  6412  0011D6  90D8               	bcf	status,0,c
  6413  0011D8  3627               	rlcf	___flmul@prod^0,f,c
  6414  0011DA  3628               	rlcf	(___flmul@prod+1)^0,f,c
  6415  0011DC  3629               	rlcf	(___flmul@prod+2)^0,f,c
  6416  0011DE  362A               	rlcf	(___flmul@prod+3)^0,f,c
  6417  0011E0  AE24               	btfss	(___flmul@grs+3)^0,7,c
  6418  0011E2  EFF5  F008         	goto	u3161
  6419  0011E6  EFF7  F008         	goto	u3160
  6420  0011EA                     u3161:
  6421  0011EA  EFF8  F008         	goto	l941
  6422  0011EE                     u3160:
  6423  0011EE  8027               	bsf	___flmul@prod^0,0,c
  6424  0011F0                     l941:
  6425  0011F0  90D8               	bcf	status,0,c
  6426  0011F2  3621               	rlcf	___flmul@grs^0,f,c
  6427  0011F4  3622               	rlcf	(___flmul@grs+1)^0,f,c
  6428  0011F6  3623               	rlcf	(___flmul@grs+2)^0,f,c
  6429  0011F8  3624               	rlcf	(___flmul@grs+3)^0,f,c
  6430  0011FA  062B               	decf	___flmul@temp^0,f,c
  6431  0011FC  A0D8               	btfss	status,0,c
  6432  0011FE  062C               	decf	(___flmul@temp+1)^0,f,c
  6433  001200                     l3292:
  6434  001200  AE29               	btfss	(___flmul@prod+2)^0,7,c
  6435  001202  EF05  F009         	goto	u3171
  6436  001206  EF07  F009         	goto	u3170
  6437  00120A                     u3171:
  6438  00120A  EFEB  F008         	goto	l3286
  6439  00120E                     u3170:
  6440  00120E  0E00               	movlw	0
  6441  001210  6E25               	movwf	___flmul@aexp^0,c
  6442  001212  AE24               	btfss	(___flmul@grs+3)^0,7,c
  6443  001214  EF0E  F009         	goto	u3181
  6444  001218  EF10  F009         	goto	u3180
  6445  00121C                     u3181:
  6446  00121C  EF34  F009         	goto	l943
  6447  001220                     u3180:
  6448  001220  0EFF               	movlw	255
  6449  001222  1421               	andwf	___flmul@grs^0,w,c
  6450  001224  6E1C               	movwf	??___flmul^0,c
  6451  001226  0EFF               	movlw	255
  6452  001228  1422               	andwf	(___flmul@grs+1)^0,w,c
  6453  00122A  6E1D               	movwf	(??___flmul+1)^0,c
  6454  00122C  0EFF               	movlw	255
  6455  00122E  1423               	andwf	(___flmul@grs+2)^0,w,c
  6456  001230  6E1E               	movwf	(??___flmul+2)^0,c
  6457  001232  0E7F               	movlw	127
  6458  001234  1424               	andwf	(___flmul@grs+3)^0,w,c
  6459  001236  6E1F               	movwf	(??___flmul+3)^0,c
  6460  001238  501C               	movf	??___flmul^0,w,c
  6461  00123A  101D               	iorwf	(??___flmul+1)^0,w,c
  6462  00123C  101E               	iorwf	(??___flmul+2)^0,w,c
  6463  00123E  101F               	iorwf	(??___flmul+3)^0,w,c
  6464  001240  B4D8               	btfsc	status,2,c
  6465  001242  EF25  F009         	goto	u3191
  6466  001246  EF27  F009         	goto	u3190
  6467  00124A                     u3191:
  6468  00124A  EF2B  F009         	goto	l944
  6469  00124E                     u3190:
  6470  00124E                     l3300:
  6471  00124E  0E01               	movlw	1
  6472  001250  6E25               	movwf	___flmul@aexp^0,c
  6473  001252  EF34  F009         	goto	l943
  6474  001256                     l944:
  6475  001256  A027               	btfss	___flmul@prod^0,0,c
  6476  001258  EF30  F009         	goto	u3201
  6477  00125C  EF32  F009         	goto	u3200
  6478  001260                     u3201:
  6479  001260  EF34  F009         	goto	l943
  6480  001264                     u3200:
  6481  001264  EF27  F009         	goto	l3300
  6482  001268                     l943:
  6483  001268  5025               	movf	___flmul@aexp^0,w,c
  6484  00126A  B4D8               	btfsc	status,2,c
  6485  00126C  EF3A  F009         	goto	u3211
  6486  001270  EF3C  F009         	goto	u3210
  6487  001274                     u3211:
  6488  001274  EF60  F009         	goto	l3312
  6489  001278                     u3210:
  6490  001278  0E01               	movlw	1
  6491  00127A  2627               	addwf	___flmul@prod^0,f,c
  6492  00127C  0E00               	movlw	0
  6493  00127E  2228               	addwfc	(___flmul@prod+1)^0,f,c
  6494  001280  2229               	addwfc	(___flmul@prod+2)^0,f,c
  6495  001282  222A               	addwfc	(___flmul@prod+3)^0,f,c
  6496  001284  A02A               	btfss	(___flmul@prod+3)^0,0,c
  6497  001286  EF47  F009         	goto	u3221
  6498  00128A  EF49  F009         	goto	u3220
  6499  00128E                     u3221:
  6500  00128E  EF60  F009         	goto	l3312
  6501  001292                     u3220:
  6502  001292  C027  F01C         	movff	___flmul@prod,??___flmul
  6503  001296  C028  F01D         	movff	___flmul@prod+1,??___flmul+1
  6504  00129A  C029  F01E         	movff	___flmul@prod+2,??___flmul+2
  6505  00129E  C02A  F01F         	movff	___flmul@prod+3,??___flmul+3
  6506  0012A2  341F               	rlcf	(??___flmul+3)^0,w,c
  6507  0012A4  321F               	rrcf	(??___flmul+3)^0,f,c
  6508  0012A6  321E               	rrcf	(??___flmul+2)^0,f,c
  6509  0012A8  321D               	rrcf	(??___flmul+1)^0,f,c
  6510  0012AA  321C               	rrcf	??___flmul^0,f,c
  6511  0012AC  C01C  F027         	movff	??___flmul,___flmul@prod
  6512  0012B0  C01D  F028         	movff	??___flmul+1,___flmul@prod+1
  6513  0012B4  C01E  F029         	movff	??___flmul+2,___flmul@prod+2
  6514  0012B8  C01F  F02A         	movff	??___flmul+3,___flmul@prod+3
  6515  0012BC  4A2B               	infsnz	___flmul@temp^0,f,c
  6516  0012BE  2A2C               	incf	(___flmul@temp+1)^0,f,c
  6517  0012C0                     l3312:
  6518  0012C0  BE2C               	btfsc	(___flmul@temp+1)^0,7,c
  6519  0012C2  EF6B  F009         	goto	u3231
  6520  0012C6  502C               	movf	(___flmul@temp+1)^0,w,c
  6521  0012C8  E108               	bnz	u3230
  6522  0012CA  282B               	incf	___flmul@temp^0,w,c
  6523  0012CC  A0D8               	btfss	status,0,c
  6524  0012CE  EF6B  F009         	goto	u3231
  6525  0012D2  EF6D  F009         	goto	u3230
  6526  0012D6                     u3231:
  6527  0012D6  EF77  F009         	goto	l3316
  6528  0012DA                     u3230:
  6529  0012DA  0E00               	movlw	0
  6530  0012DC  6E27               	movwf	___flmul@prod^0,c
  6531  0012DE  0E00               	movlw	0
  6532  0012E0  6E28               	movwf	(___flmul@prod+1)^0,c
  6533  0012E2  0E80               	movlw	128
  6534  0012E4  6E29               	movwf	(___flmul@prod+2)^0,c
  6535  0012E6  0E7F               	movlw	127
  6536  0012E8  6E2A               	movwf	(___flmul@prod+3)^0,c
  6537  0012EA  EFA5  F009         	goto	l3328
  6538  0012EE                     l3316:
  6539  0012EE  BE2C               	btfsc	(___flmul@temp+1)^0,7,c
  6540  0012F0  EF84  F009         	goto	u3240
  6541  0012F4  502C               	movf	(___flmul@temp+1)^0,w,c
  6542  0012F6  E106               	bnz	u3241
  6543  0012F8  042B               	decf	___flmul@temp^0,w,c
  6544  0012FA  B0D8               	btfsc	status,0,c
  6545  0012FC  EF82  F009         	goto	u3241
  6546  001300  EF84  F009         	goto	u3240
  6547  001304                     u3241:
  6548  001304  EF90  F009         	goto	l951
  6549  001308                     u3240:
  6550  001308  0E00               	movlw	0
  6551  00130A  6E27               	movwf	___flmul@prod^0,c
  6552  00130C  0E00               	movlw	0
  6553  00130E  6E28               	movwf	(___flmul@prod+1)^0,c
  6554  001310  0E00               	movlw	0
  6555  001312  6E29               	movwf	(___flmul@prod+2)^0,c
  6556  001314  0E00               	movlw	0
  6557  001316  6E2A               	movwf	(___flmul@prod+3)^0,c
  6558  001318  0E00               	movlw	0
  6559  00131A  6E20               	movwf	___flmul@sign^0,c
  6560  00131C  EFA5  F009         	goto	l3328
  6561  001320                     l951:
  6562  001320  C02B  F026         	movff	___flmul@temp,___flmul@bexp
  6563  001324  0EFF               	movlw	255
  6564  001326  1627               	andwf	___flmul@prod^0,f,c
  6565  001328  0EFF               	movlw	255
  6566  00132A  1628               	andwf	(___flmul@prod+1)^0,f,c
  6567  00132C  0E7F               	movlw	127
  6568  00132E  1629               	andwf	(___flmul@prod+2)^0,f,c
  6569  001330  0E00               	movlw	0
  6570  001332  162A               	andwf	(___flmul@prod+3)^0,f,c
  6571  001334  A026               	btfss	___flmul@bexp^0,0,c
  6572  001336  EF9F  F009         	goto	u3251
  6573  00133A  EFA1  F009         	goto	u3250
  6574  00133E                     u3251:
  6575  00133E  EFA2  F009         	goto	l3326
  6576  001342                     u3250:
  6577  001342  8E29               	bsf	(___flmul@prod+2)^0,7,c
  6578  001344                     l3326:
  6579  001344  90D8               	bcf	status,0,c
  6580  001346  3026               	rrcf	___flmul@bexp^0,w,c
  6581  001348  6E2A               	movwf	(___flmul@prod+3)^0,c
  6582  00134A                     l3328:
  6583  00134A  5020               	movf	___flmul@sign^0,w,c
  6584  00134C  122A               	iorwf	(___flmul@prod+3)^0,f,c
  6585  00134E  C027  F014         	movff	___flmul@prod,?___flmul
  6586  001352  C028  F015         	movff	___flmul@prod+1,?___flmul+1
  6587  001356  C029  F016         	movff	___flmul@prod+2,?___flmul+2
  6588  00135A  C02A  F017         	movff	___flmul@prod+3,?___flmul+3
  6589  00135E                     l938:
  6590  00135E  0012               	return		;funcret
  6591  001360                     __end_of___flmul:
  6592                           	callstack 0
  6593                           
  6594 ;; *************** function ___flge *****************
  6595 ;; Defined at:
  6596 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\flge.c"
  6597 ;; Parameters:    Size  Location     Type
  6598 ;;  ff1             4    0[COMRAM] unsigned char 
  6599 ;;  ff2             4    4[COMRAM] unsigned char 
  6600 ;; Auto vars:     Size  Location     Type
  6601 ;;		None
  6602 ;; Return value:  Size  Location     Type
  6603 ;;		None               void
  6604 ;; Registers used:
  6605 ;;		wreg, status,2, status,0
  6606 ;; Tracked objects:
  6607 ;;		On entry : 0/0
  6608 ;;		On exit  : 0/0
  6609 ;;		Unchanged: 0/0
  6610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6611 ;;      Params:         8       0       0       0       0       0       0       0       0
  6612 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6613 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6614 ;;      Totals:        12       0       0       0       0       0       0       0       0
  6615 ;;Total ram usage:       12 bytes
  6616 ;; Hardware stack levels used:    1
  6617 ;; This function calls:
  6618 ;;		Nothing
  6619 ;; This function is called by:
  6620 ;;		_activar_seguridad
  6621 ;; This function uses a non-reentrant model
  6622 ;;
  6623                           
  6624                           	psect	text29
  6625  002354                     __ptext29:
  6626                           	callstack 0
  6627  002354                     ___flge:
  6628                           	callstack 28
  6629  002354  0E00               	movlw	0
  6630  002356  1401               	andwf	___flge@ff1^0,w,c
  6631  002358  6E09               	movwf	??___flge^0,c
  6632  00235A  0E00               	movlw	0
  6633  00235C  1402               	andwf	(___flge@ff1+1)^0,w,c
  6634  00235E  6E0A               	movwf	(??___flge+1)^0,c
  6635  002360  0E80               	movlw	128
  6636  002362  1403               	andwf	(___flge@ff1+2)^0,w,c
  6637  002364  6E0B               	movwf	(??___flge+2)^0,c
  6638  002366  0E7F               	movlw	127
  6639  002368  1404               	andwf	(___flge@ff1+3)^0,w,c
  6640  00236A  6E0C               	movwf	(??___flge+3)^0,c
  6641  00236C  5009               	movf	??___flge^0,w,c
  6642  00236E  100A               	iorwf	(??___flge+1)^0,w,c
  6643  002370  100B               	iorwf	(??___flge+2)^0,w,c
  6644  002372  100C               	iorwf	(??___flge+3)^0,w,c
  6645  002374  A4D8               	btfss	status,2,c
  6646  002376  EFBF  F011         	goto	u3261
  6647  00237A  EFC1  F011         	goto	u3260
  6648  00237E                     u3261:
  6649  00237E  EFC9  F011         	goto	l3338
  6650  002382                     u3260:
  6651  002382  0E00               	movlw	0
  6652  002384  6E01               	movwf	___flge@ff1^0,c
  6653  002386  0E00               	movlw	0
  6654  002388  6E02               	movwf	(___flge@ff1+1)^0,c
  6655  00238A  0E00               	movlw	0
  6656  00238C  6E03               	movwf	(___flge@ff1+2)^0,c
  6657  00238E  0E00               	movlw	0
  6658  002390  6E04               	movwf	(___flge@ff1+3)^0,c
  6659  002392                     l3338:
  6660  002392  0E00               	movlw	0
  6661  002394  1405               	andwf	___flge@ff2^0,w,c
  6662  002396  6E09               	movwf	??___flge^0,c
  6663  002398  0E00               	movlw	0
  6664  00239A  1406               	andwf	(___flge@ff2+1)^0,w,c
  6665  00239C  6E0A               	movwf	(??___flge+1)^0,c
  6666  00239E  0E80               	movlw	128
  6667  0023A0  1407               	andwf	(___flge@ff2+2)^0,w,c
  6668  0023A2  6E0B               	movwf	(??___flge+2)^0,c
  6669  0023A4  0E7F               	movlw	127
  6670  0023A6  1408               	andwf	(___flge@ff2+3)^0,w,c
  6671  0023A8  6E0C               	movwf	(??___flge+3)^0,c
  6672  0023AA  5009               	movf	??___flge^0,w,c
  6673  0023AC  100A               	iorwf	(??___flge+1)^0,w,c
  6674  0023AE  100B               	iorwf	(??___flge+2)^0,w,c
  6675  0023B0  100C               	iorwf	(??___flge+3)^0,w,c
  6676  0023B2  A4D8               	btfss	status,2,c
  6677  0023B4  EFDE  F011         	goto	u3271
  6678  0023B8  EFE0  F011         	goto	u3270
  6679  0023BC                     u3271:
  6680  0023BC  EFE8  F011         	goto	l3342
  6681  0023C0                     u3270:
  6682  0023C0  0E00               	movlw	0
  6683  0023C2  6E05               	movwf	___flge@ff2^0,c
  6684  0023C4  0E00               	movlw	0
  6685  0023C6  6E06               	movwf	(___flge@ff2+1)^0,c
  6686  0023C8  0E00               	movlw	0
  6687  0023CA  6E07               	movwf	(___flge@ff2+2)^0,c
  6688  0023CC  0E00               	movlw	0
  6689  0023CE  6E08               	movwf	(___flge@ff2+3)^0,c
  6690  0023D0                     l3342:
  6691  0023D0  AE04               	btfss	(___flge@ff1+3)^0,7,c
  6692  0023D2  EFED  F011         	goto	u3281
  6693  0023D6  EFEF  F011         	goto	u3280
  6694  0023DA                     u3281:
  6695  0023DA  EFF8  F011         	goto	l3346
  6696  0023DE                     u3280:
  6697  0023DE  6C01               	negf	___flge@ff1^0,c
  6698  0023E0  1E02               	comf	(___flge@ff1+1)^0,f,c
  6699  0023E2  B0D8               	btfsc	status,0,c
  6700  0023E4  2A02               	incf	(___flge@ff1+1)^0,f,c
  6701  0023E6  1E03               	comf	(___flge@ff1+2)^0,f,c
  6702  0023E8  B0D8               	btfsc	status,0,c
  6703  0023EA  2A03               	incf	(___flge@ff1+2)^0,f,c
  6704  0023EC  0E80               	movlw	128
  6705  0023EE  5604               	subfwb	(___flge@ff1+3)^0,f,c
  6706  0023F0                     l3346:
  6707  0023F0  AE08               	btfss	(___flge@ff2+3)^0,7,c
  6708  0023F2  EFFD  F011         	goto	u3291
  6709  0023F6  EFFF  F011         	goto	u3290
  6710  0023FA                     u3291:
  6711  0023FA  EF08  F012         	goto	l585
  6712  0023FE                     u3290:
  6713  0023FE  6C05               	negf	___flge@ff2^0,c
  6714  002400  1E06               	comf	(___flge@ff2+1)^0,f,c
  6715  002402  B0D8               	btfsc	status,0,c
  6716  002404  2A06               	incf	(___flge@ff2+1)^0,f,c
  6717  002406  1E07               	comf	(___flge@ff2+2)^0,f,c
  6718  002408  B0D8               	btfsc	status,0,c
  6719  00240A  2A07               	incf	(___flge@ff2+2)^0,f,c
  6720  00240C  0E80               	movlw	128
  6721  00240E  5608               	subfwb	(___flge@ff2+3)^0,f,c
  6722  002410                     l585:
  6723  002410  0E00               	movlw	0
  6724  002412  1A01               	xorwf	___flge@ff1^0,f,c
  6725  002414  0E00               	movlw	0
  6726  002416  1A02               	xorwf	(___flge@ff1+1)^0,f,c
  6727  002418  0E00               	movlw	0
  6728  00241A  1A03               	xorwf	(___flge@ff1+2)^0,f,c
  6729  00241C  0E80               	movlw	128
  6730  00241E  1A04               	xorwf	(___flge@ff1+3)^0,f,c
  6731  002420  0E00               	movlw	0
  6732  002422  1A05               	xorwf	___flge@ff2^0,f,c
  6733  002424  0E00               	movlw	0
  6734  002426  1A06               	xorwf	(___flge@ff2+1)^0,f,c
  6735  002428  0E00               	movlw	0
  6736  00242A  1A07               	xorwf	(___flge@ff2+2)^0,f,c
  6737  00242C  0E80               	movlw	128
  6738  00242E  1A08               	xorwf	(___flge@ff2+3)^0,f,c
  6739  002430  5005               	movf	___flge@ff2^0,w,c
  6740  002432  5C01               	subwf	___flge@ff1^0,w,c
  6741  002434  5006               	movf	(___flge@ff2+1)^0,w,c
  6742  002436  5802               	subwfb	(___flge@ff1+1)^0,w,c
  6743  002438  5007               	movf	(___flge@ff2+2)^0,w,c
  6744  00243A  5803               	subwfb	(___flge@ff1+2)^0,w,c
  6745  00243C  5008               	movf	(___flge@ff2+3)^0,w,c
  6746  00243E  5804               	subwfb	(___flge@ff1+3)^0,w,c
  6747  002440  B0D8               	btfsc	status,0,c
  6748  002442  EF25  F012         	goto	u3301
  6749  002446  EF27  F012         	goto	u3300
  6750  00244A                     u3301:
  6751  00244A  EF2A  F012         	goto	l3352
  6752  00244E                     u3300:
  6753  00244E  90D8               	bcf	status,0,c
  6754  002450  EF2B  F012         	goto	l590
  6755  002454                     l3352:
  6756  002454  80D8               	bsf	status,0,c
  6757  002456                     l590:
  6758  002456  0012               	return		;funcret
  6759  002458                     __end_of___flge:
  6760                           	callstack 0
  6761                           
  6762 ;; *************** function _RTC_Read_Clock *****************
  6763 ;; Defined at:
  6764 ;;		line 64 in file "main.c"
  6765 ;; Parameters:    Size  Location     Type
  6766 ;;  read_clock_a    1    wreg     unsigned char 
  6767 ;; Auto vars:     Size  Location     Type
  6768 ;;  read_clock_a    1    3[COMRAM] unsigned char 
  6769 ;; Return value:  Size  Location     Type
  6770 ;;                  1    wreg      void 
  6771 ;; Registers used:
  6772 ;;		wreg, status,2, status,0, cstack
  6773 ;; Tracked objects:
  6774 ;;		On entry : 0/0
  6775 ;;		On exit  : 0/0
  6776 ;;		Unchanged: 0/0
  6777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6778 ;;      Params:         0       0       0       0       0       0       0       0       0
  6779 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6780 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6781 ;;      Totals:         2       0       0       0       0       0       0       0       0
  6782 ;;Total ram usage:        2 bytes
  6783 ;; Hardware stack levels used:    1
  6784 ;; Hardware stack levels required when called:    3
  6785 ;; This function calls:
  6786 ;;		_I2C_Read
  6787 ;;		_I2C_Repeated_Start
  6788 ;;		_I2C_Start
  6789 ;;		_I2C_Write
  6790 ;; This function is called by:
  6791 ;;		_activar_seguridad
  6792 ;; This function uses a non-reentrant model
  6793 ;;
  6794                           
  6795                           	psect	text30
  6796  002AE0                     __ptext30:
  6797                           	callstack 0
  6798  002AE0                     _RTC_Read_Clock:
  6799                           	callstack 25
  6800                           
  6801                           ;incstack = 0
  6802                           ;RTC_Read_Clock@read_clock_address stored from wreg
  6803  002AE0  6E04               	movwf	RTC_Read_Clock@read_clock_address^0,c
  6804  002AE2                     
  6805                           ;main.c: 65:     I2C_Start(0xD0);
  6806  002AE2  0ED0               	movlw	208
  6807  002AE4  ECF8  F016         	call	_I2C_Start
  6808                           
  6809                           ;main.c: 66:     I2C_Write(read_clock_address);
  6810  002AE8  5004               	movf	RTC_Read_Clock@read_clock_address^0,w,c
  6811  002AEA  EC4D  F017         	call	_I2C_Write
  6812                           
  6813                           ;main.c: 67:     I2C_Repeated_Start(0xD1);
  6814  002AEE  0ED1               	movlw	209
  6815  002AF0  EC0F  F017         	call	_I2C_Repeated_Start
  6816  002AF4                     
  6817                           ;main.c: 68:     sec = I2C_Read(0);
  6818  002AF4  0E00               	movlw	0
  6819  002AF6  EC34  F016         	call	_I2C_Read
  6820  002AFA  6E03               	movwf	??_RTC_Read_Clock^0,c
  6821  002AFC  5003               	movf	??_RTC_Read_Clock^0,w,c
  6822  002AFE  0100               	movlb	0	; () banked
  6823  002B00  6FC8               	movwf	_sec& (0+255),b
  6824  002B02  6BC9               	clrf	(_sec+1)& (0+255),b
  6825  002B04                     
  6826                           ; BSR set to: 0
  6827                           ;main.c: 69:     min = I2C_Read(0);
  6828  002B04  0E00               	movlw	0
  6829  002B06  EC34  F016         	call	_I2C_Read
  6830  002B0A  6E03               	movwf	??_RTC_Read_Clock^0,c
  6831  002B0C  5003               	movf	??_RTC_Read_Clock^0,w,c
  6832  002B0E  0100               	movlb	0	; () banked
  6833  002B10  6FC6               	movwf	_min& (0+255),b
  6834  002B12  6BC7               	clrf	(_min+1)& (0+255),b
  6835  002B14                     
  6836                           ; BSR set to: 0
  6837                           ;main.c: 70:     hour = I2C_Read(1);
  6838  002B14  0E01               	movlw	1
  6839  002B16  EC34  F016         	call	_I2C_Read
  6840  002B1A  6E03               	movwf	??_RTC_Read_Clock^0,c
  6841  002B1C  5003               	movf	??_RTC_Read_Clock^0,w,c
  6842  002B1E  0100               	movlb	0	; () banked
  6843  002B20  6FC4               	movwf	_hour& (0+255),b
  6844  002B22  6BC5               	clrf	(_hour+1)& (0+255),b
  6845  002B24                     
  6846                           ; BSR set to: 0
  6847  002B24  0012               	return		;funcret
  6848  002B26                     __end_of_RTC_Read_Clock:
  6849                           	callstack 0
  6850                           
  6851 ;; *************** function _I2C_Start *****************
  6852 ;; Defined at:
  6853 ;;		line 87 in file "./I2C_Master_File.h"
  6854 ;; Parameters:    Size  Location     Type
  6855 ;;  slave_write_    1    wreg     unsigned char 
  6856 ;; Auto vars:     Size  Location     Type
  6857 ;;  slave_write_    1    1[COMRAM] unsigned char 
  6858 ;; Return value:  Size  Location     Type
  6859 ;;                  1    wreg      unsigned char 
  6860 ;; Registers used:
  6861 ;;		wreg, status,2, cstack
  6862 ;; Tracked objects:
  6863 ;;		On entry : 0/0
  6864 ;;		On exit  : 0/0
  6865 ;;		Unchanged: 0/0
  6866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6867 ;;      Params:         0       0       0       0       0       0       0       0       0
  6868 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6869 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6870 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6871 ;;Total ram usage:        1 bytes
  6872 ;; Hardware stack levels used:    1
  6873 ;; Hardware stack levels required when called:    2
  6874 ;; This function calls:
  6875 ;;		_I2C_Write
  6876 ;; This function is called by:
  6877 ;;		_RTC_Read_Clock
  6878 ;; This function uses a non-reentrant model
  6879 ;;
  6880                           
  6881                           	psect	text31
  6882  002DF0                     __ptext31:
  6883                           	callstack 0
  6884  002DF0                     _I2C_Start:
  6885                           	callstack 25
  6886                           
  6887                           ; BSR set to: 0
  6888                           ;incstack = 0
  6889                           ;I2C_Start@slave_write_address stored from wreg
  6890  002DF0  6E02               	movwf	I2C_Start@slave_write_address^0,c
  6891  002DF2                     
  6892                           ;./I2C_Master_File.h: 87: char I2C_Start(char slave_write_address);./I2C_Master_File.h: 
      +                          88: {;./I2C_Master_File.h: 89:     SSPCON2bits.SEN=1;
  6893  002DF2  80C5               	bsf	197,0,c	;volatile
  6894  002DF4                     l164:
  6895  002DF4  B0C5               	btfsc	197,0,c	;volatile
  6896  002DF6  EFFF  F016         	goto	u2791
  6897  002DFA  EF01  F017         	goto	u2790
  6898  002DFE                     u2791:
  6899  002DFE  EFFA  F016         	goto	l164
  6900  002E02                     u2790:
  6901  002E02                     
  6902                           ;./I2C_Master_File.h: 91:  SSPIF=0;
  6903  002E02  969E               	bcf	3998,3,c	;volatile
  6904                           
  6905                           ;./I2C_Master_File.h: 92:     if(!SSPSTATbits.S)
  6906  002E04  B6C7               	btfsc	199,3,c	;volatile
  6907  002E06  EF07  F017         	goto	u2801
  6908  002E0A  EF09  F017         	goto	u2800
  6909  002E0E                     u2801:
  6910  002E0E  EF0B  F017         	goto	l2994
  6911  002E12                     u2800:
  6912  002E12  EF0E  F017         	goto	l168
  6913  002E16                     l2994:
  6914                           
  6915                           ;./I2C_Master_File.h: 94:     return (I2C_Write(slave_write_address));;	Return value of 
      +                          _I2C_Start is never used
  6916  002E16  5002               	movf	I2C_Start@slave_write_address^0,w,c
  6917  002E18  EC4D  F017         	call	_I2C_Write
  6918  002E1C                     l168:
  6919  002E1C  0012               	return		;funcret
  6920  002E1E                     __end_of_I2C_Start:
  6921                           	callstack 0
  6922                           
  6923 ;; *************** function _I2C_Repeated_Start *****************
  6924 ;; Defined at:
  6925 ;;		line 98 in file "./I2C_Master_File.h"
  6926 ;; Parameters:    Size  Location     Type
  6927 ;;  slave_read_a    1    wreg     unsigned char 
  6928 ;; Auto vars:     Size  Location     Type
  6929 ;;  slave_read_a    1    1[COMRAM] unsigned char 
  6930 ;; Return value:  Size  Location     Type
  6931 ;;                  1    wreg      unsigned char 
  6932 ;; Registers used:
  6933 ;;		wreg, status,2, cstack
  6934 ;; Tracked objects:
  6935 ;;		On entry : 0/0
  6936 ;;		On exit  : 0/0
  6937 ;;		Unchanged: 0/0
  6938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6939 ;;      Params:         0       0       0       0       0       0       0       0       0
  6940 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6941 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6942 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6943 ;;Total ram usage:        1 bytes
  6944 ;; Hardware stack levels used:    1
  6945 ;; Hardware stack levels required when called:    2
  6946 ;; This function calls:
  6947 ;;		_I2C_Write
  6948 ;; This function is called by:
  6949 ;;		_RTC_Read_Clock
  6950 ;; This function uses a non-reentrant model
  6951 ;;
  6952                           
  6953                           	psect	text32
  6954  002E1E                     __ptext32:
  6955                           	callstack 0
  6956  002E1E                     _I2C_Repeated_Start:
  6957                           	callstack 25
  6958                           
  6959                           ;incstack = 0
  6960                           ;I2C_Repeated_Start@slave_read_address stored from wreg
  6961  002E1E  6E02               	movwf	I2C_Repeated_Start@slave_read_address^0,c
  6962  002E20                     
  6963                           ;./I2C_Master_File.h: 98: char I2C_Repeated_Start(char slave_read_address);./I2C_Master_
      +                          File.h: 99: {;./I2C_Master_File.h: 100:     RSEN = 1;
  6964  002E20  82C5               	bsf	4037,1,c	;volatile
  6965  002E22                     l171:
  6966  002E22  B2C5               	btfsc	4037,1,c	;volatile
  6967  002E24  EF16  F017         	goto	u2811
  6968  002E28  EF18  F017         	goto	u2810
  6969  002E2C                     u2811:
  6970  002E2C  EF11  F017         	goto	l171
  6971  002E30                     u2810:
  6972  002E30                     
  6973                           ;./I2C_Master_File.h: 102:     SSPIF = 0;
  6974  002E30  969E               	bcf	3998,3,c	;volatile
  6975                           
  6976                           ;./I2C_Master_File.h: 103:  if(!SSPSTATbits.S)
  6977  002E32  B6C7               	btfsc	199,3,c	;volatile
  6978  002E34  EF1E  F017         	goto	u2821
  6979  002E38  EF20  F017         	goto	u2820
  6980  002E3C                     u2821:
  6981  002E3C  EF22  F017         	goto	l3002
  6982  002E40                     u2820:
  6983  002E40  EF25  F017         	goto	l175
  6984  002E44                     l3002:
  6985                           
  6986                           ;./I2C_Master_File.h: 105:     I2C_Write(slave_read_address);
  6987  002E44  5002               	movf	I2C_Repeated_Start@slave_read_address^0,w,c
  6988  002E46  EC4D  F017         	call	_I2C_Write
  6989  002E4A                     l175:
  6990  002E4A  0012               	return		;funcret
  6991  002E4C                     __end_of_I2C_Repeated_Start:
  6992                           	callstack 0
  6993                           
  6994 ;; *************** function _I2C_Write *****************
  6995 ;; Defined at:
  6996 ;;		line 120 in file "./I2C_Master_File.h"
  6997 ;; Parameters:    Size  Location     Type
  6998 ;;  data            1    wreg     unsigned char 
  6999 ;; Auto vars:     Size  Location     Type
  7000 ;;  data            1    0[COMRAM] unsigned char 
  7001 ;; Return value:  Size  Location     Type
  7002 ;;                  1    wreg      unsigned char 
  7003 ;; Registers used:
  7004 ;;		wreg, cstack
  7005 ;; Tracked objects:
  7006 ;;		On entry : 0/0
  7007 ;;		On exit  : 0/0
  7008 ;;		Unchanged: 0/0
  7009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7010 ;;      Params:         0       0       0       0       0       0       0       0       0
  7011 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7012 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7013 ;;      Totals:         1       0       0       0       0       0       0       0       0
  7014 ;;Total ram usage:        1 bytes
  7015 ;; Hardware stack levels used:    1
  7016 ;; Hardware stack levels required when called:    1
  7017 ;; This function calls:
  7018 ;;		_I2C_Ready
  7019 ;; This function is called by:
  7020 ;;		_I2C_Start
  7021 ;;		_I2C_Repeated_Start
  7022 ;;		_RTC_Read_Clock
  7023 ;;		_I2C_Start_Wait
  7024 ;; This function uses a non-reentrant model
  7025 ;;
  7026                           
  7027                           	psect	text33
  7028  002E9A                     __ptext33:
  7029                           	callstack 0
  7030  002E9A                     _I2C_Write:
  7031                           	callstack 26
  7032                           
  7033                           ;incstack = 0
  7034                           ;I2C_Write@data stored from wreg
  7035  002E9A  6E01               	movwf	I2C_Write@data^0,c
  7036  002E9C                     
  7037                           ;./I2C_Master_File.h: 120: char I2C_Write(unsigned char data);./I2C_Master_File.h: 121: 
      +                          {;./I2C_Master_File.h: 122:       SSPBUF = data;
  7038  002E9C  C001  FFC9         	movff	I2C_Write@data,4041	;volatile
  7039  002EA0                     
  7040                           ;./I2C_Master_File.h: 123:       I2C_Ready();
  7041  002EA0  EC99  F017         	call	_I2C_Ready	;wreg free
  7042  002EA4                     
  7043                           ;./I2C_Master_File.h: 124:       if (ACKSTAT)
  7044  002EA4  ACC5               	btfss	4037,6,c	;volatile
  7045  002EA6  EF57  F017         	goto	u2691
  7046  002EAA  EF59  F017         	goto	u2690
  7047  002EAE                     u2691:
  7048  002EAE  EF5C  F017         	goto	l2880
  7049  002EB2                     u2690:
  7050  002EB2                     
  7051                           ;./I2C_Master_File.h: 125:         return 1;
  7052  002EB2  0E01               	movlw	1
  7053  002EB4  EF5D  F017         	goto	l188
  7054  002EB8                     l2880:
  7055                           
  7056                           ;./I2C_Master_File.h: 127:         return 2;
  7057  002EB8  0E02               	movlw	2
  7058  002EBA                     l188:
  7059  002EBA  0012               	return		;funcret
  7060  002EBC                     __end_of_I2C_Write:
  7061                           	callstack 0
  7062                           
  7063 ;; *************** function _I2C_Read *****************
  7064 ;; Defined at:
  7065 ;;		line 31 in file "./I2C_Master_File.h"
  7066 ;; Parameters:    Size  Location     Type
  7067 ;;  flag            1    wreg     unsigned char 
  7068 ;; Auto vars:     Size  Location     Type
  7069 ;;  flag            1    0[COMRAM] unsigned char 
  7070 ;;  buffer          1    1[COMRAM] unsigned char 
  7071 ;; Return value:  Size  Location     Type
  7072 ;;                  1    wreg      unsigned char 
  7073 ;; Registers used:
  7074 ;;		wreg, status,2, cstack
  7075 ;; Tracked objects:
  7076 ;;		On entry : 0/0
  7077 ;;		On exit  : 0/0
  7078 ;;		Unchanged: 0/0
  7079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7080 ;;      Params:         0       0       0       0       0       0       0       0       0
  7081 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7082 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7083 ;;      Totals:         2       0       0       0       0       0       0       0       0
  7084 ;;Total ram usage:        2 bytes
  7085 ;; Hardware stack levels used:    1
  7086 ;; Hardware stack levels required when called:    1
  7087 ;; This function calls:
  7088 ;;		_I2C_Ack
  7089 ;;		_I2C_Nack
  7090 ;;		_I2C_Ready
  7091 ;; This function is called by:
  7092 ;;		_RTC_Read_Clock
  7093 ;; This function uses a non-reentrant model
  7094 ;;
  7095                           
  7096                           	psect	text34
  7097  002C68                     __ptext34:
  7098                           	callstack 0
  7099  002C68                     _I2C_Read:
  7100                           	callstack 26
  7101                           
  7102                           ;incstack = 0
  7103                           ;I2C_Read@flag stored from wreg
  7104  002C68  6E01               	movwf	I2C_Read@flag^0,c
  7105  002C6A                     
  7106                           ;./I2C_Master_File.h: 31: char I2C_Read(char flag);./I2C_Master_File.h: 33: {;./I2C_Mast
      +                          er_File.h: 34:         char buffer;;./I2C_Master_File.h: 35:         RCEN = 1;
  7107  002C6A  86C5               	bsf	4037,3,c	;volatile
  7108  002C6C                     l136:
  7109  002C6C  A0C7               	btfss	199,0,c	;volatile
  7110  002C6E  EF3B  F016         	goto	u2771
  7111  002C72  EF3D  F016         	goto	u2770
  7112  002C76                     u2771:
  7113  002C76  EF36  F016         	goto	l136
  7114  002C7A                     u2770:
  7115  002C7A                     
  7116                           ;./I2C_Master_File.h: 38:         buffer = SSPBUF;
  7117  002C7A  CFC9 F002          	movff	4041,I2C_Read@buffer	;volatile
  7118  002C7E                     
  7119                           ;./I2C_Master_File.h: 40:         if(flag==0)
  7120  002C7E  5001               	movf	I2C_Read@flag^0,w,c
  7121  002C80  A4D8               	btfss	status,2,c
  7122  002C82  EF45  F016         	goto	u2781
  7123  002C86  EF47  F016         	goto	u2780
  7124  002C8A                     u2781:
  7125  002C8A  EF4B  F016         	goto	l2984
  7126  002C8E                     u2780:
  7127  002C8E                     
  7128                           ;./I2C_Master_File.h: 41:             I2C_Ack();
  7129  002C8E  EC85  F017         	call	_I2C_Ack	;wreg free
  7130  002C92  EF4D  F016         	goto	l140
  7131  002C96                     l2984:
  7132                           
  7133                           ;./I2C_Master_File.h: 43:             I2C_Nack();
  7134  002C96  EC7B  F017         	call	_I2C_Nack	;wreg free
  7135  002C9A                     l140:
  7136                           
  7137                           ;./I2C_Master_File.h: 44:         I2C_Ready();
  7138  002C9A  EC99  F017         	call	_I2C_Ready	;wreg free
  7139  002C9E                     
  7140                           ;./I2C_Master_File.h: 45:         return(buffer);
  7141  002C9E  5002               	movf	I2C_Read@buffer^0,w,c
  7142  002CA0  0012               	return		;funcret
  7143  002CA2                     __end_of_I2C_Read:
  7144                           	callstack 0
  7145                           
  7146 ;; *************** function _I2C_Ready *****************
  7147 ;; Defined at:
  7148 ;;		line 62 in file "./I2C_Master_File.h"
  7149 ;; Parameters:    Size  Location     Type
  7150 ;;		None
  7151 ;; Auto vars:     Size  Location     Type
  7152 ;;		None
  7153 ;; Return value:  Size  Location     Type
  7154 ;;                  1    wreg      void 
  7155 ;; Registers used:
  7156 ;;		None
  7157 ;; Tracked objects:
  7158 ;;		On entry : 0/0
  7159 ;;		On exit  : 0/0
  7160 ;;		Unchanged: 0/0
  7161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7162 ;;      Params:         0       0       0       0       0       0       0       0       0
  7163 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7164 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7165 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7166 ;;Total ram usage:        0 bytes
  7167 ;; Hardware stack levels used:    1
  7168 ;; This function calls:
  7169 ;;		Nothing
  7170 ;; This function is called by:
  7171 ;;		_I2C_Read
  7172 ;;		_I2C_Write
  7173 ;; This function uses a non-reentrant model
  7174 ;;
  7175                           
  7176                           	psect	text35
  7177  002F32                     __ptext35:
  7178                           	callstack 0
  7179  002F32                     _I2C_Ready:
  7180                           	callstack 26
  7181  002F32                     l147:
  7182  002F32  A69E               	btfss	3998,3,c	;volatile
  7183  002F34  EF9E  F017         	goto	u2251
  7184  002F38  EFA0  F017         	goto	u2250
  7185  002F3C                     u2251:
  7186  002F3C  EF99  F017         	goto	l147
  7187  002F40                     u2250:
  7188  002F40                     
  7189                           ;./I2C_Master_File.h: 65:     SSPIF=0;
  7190  002F40  969E               	bcf	3998,3,c	;volatile
  7191  002F42  0012               	return		;funcret
  7192  002F44                     __end_of_I2C_Ready:
  7193                           	callstack 0
  7194                           
  7195 ;; *************** function _I2C_Nack *****************
  7196 ;; Defined at:
  7197 ;;		line 137 in file "./I2C_Master_File.h"
  7198 ;; Parameters:    Size  Location     Type
  7199 ;;		None
  7200 ;; Auto vars:     Size  Location     Type
  7201 ;;		None
  7202 ;; Return value:  Size  Location     Type
  7203 ;;                  1    wreg      void 
  7204 ;; Registers used:
  7205 ;;		None
  7206 ;; Tracked objects:
  7207 ;;		On entry : 0/0
  7208 ;;		On exit  : 0/0
  7209 ;;		Unchanged: 0/0
  7210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7211 ;;      Params:         0       0       0       0       0       0       0       0       0
  7212 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7213 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7214 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7215 ;;Total ram usage:        0 bytes
  7216 ;; Hardware stack levels used:    1
  7217 ;; This function calls:
  7218 ;;		Nothing
  7219 ;; This function is called by:
  7220 ;;		_I2C_Read
  7221 ;; This function uses a non-reentrant model
  7222 ;;
  7223                           
  7224                           	psect	text36
  7225  002EF6                     __ptext36:
  7226                           	callstack 0
  7227  002EF6                     _I2C_Nack:
  7228                           	callstack 26
  7229  002EF6                     
  7230                           ;./I2C_Master_File.h: 139:     ACKDT=1;
  7231  002EF6  8AC5               	bsf	4037,5,c	;volatile
  7232                           
  7233                           ;./I2C_Master_File.h: 140:  ACKEN=1;
  7234  002EF8  88C5               	bsf	4037,4,c	;volatile
  7235  002EFA                     l198:
  7236  002EFA  B8C5               	btfsc	4037,4,c	;volatile
  7237  002EFC  EF82  F017         	goto	u2681
  7238  002F00  EF84  F017         	goto	u2680
  7239  002F04                     u2681:
  7240  002F04  EF7D  F017         	goto	l198
  7241  002F08                     u2680:
  7242  002F08  0012               	return		;funcret
  7243  002F0A                     __end_of_I2C_Nack:
  7244                           	callstack 0
  7245                           
  7246 ;; *************** function _I2C_Ack *****************
  7247 ;; Defined at:
  7248 ;;		line 130 in file "./I2C_Master_File.h"
  7249 ;; Parameters:    Size  Location     Type
  7250 ;;		None
  7251 ;; Auto vars:     Size  Location     Type
  7252 ;;		None
  7253 ;; Return value:  Size  Location     Type
  7254 ;;                  1    wreg      void 
  7255 ;; Registers used:
  7256 ;;		None
  7257 ;; Tracked objects:
  7258 ;;		On entry : 0/0
  7259 ;;		On exit  : 0/0
  7260 ;;		Unchanged: 0/0
  7261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7262 ;;      Params:         0       0       0       0       0       0       0       0       0
  7263 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7264 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7265 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7266 ;;Total ram usage:        0 bytes
  7267 ;; Hardware stack levels used:    1
  7268 ;; This function calls:
  7269 ;;		Nothing
  7270 ;; This function is called by:
  7271 ;;		_I2C_Read
  7272 ;; This function uses a non-reentrant model
  7273 ;;
  7274                           
  7275                           	psect	text37
  7276  002F0A                     __ptext37:
  7277                           	callstack 0
  7278  002F0A                     _I2C_Ack:
  7279                           	callstack 26
  7280  002F0A                     
  7281                           ;./I2C_Master_File.h: 132:     ACKDT=0;
  7282  002F0A  9AC5               	bcf	4037,5,c	;volatile
  7283                           
  7284                           ;./I2C_Master_File.h: 133:  ACKEN=1;
  7285  002F0C  88C5               	bsf	4037,4,c	;volatile
  7286  002F0E                     l192:
  7287  002F0E  B8C5               	btfsc	4037,4,c	;volatile
  7288  002F10  EF8C  F017         	goto	u2671
  7289  002F14  EF8E  F017         	goto	u2670
  7290  002F18                     u2671:
  7291  002F18  EF87  F017         	goto	l192
  7292  002F1C                     u2670:
  7293  002F1C  0012               	return		;funcret
  7294  002F1E                     __end_of_I2C_Ack:
  7295                           	callstack 0
  7296                           
  7297 ;; *************** function _Lcd_Write_String *****************
  7298 ;; Defined at:
  7299 ;;		line 97 in file "./lcd.h"
  7300 ;; Parameters:    Size  Location     Type
  7301 ;;  a               2    4[COMRAM] PTR unsigned char 
  7302 ;;		 -> STR_10(8), STR_9(20), activar_seguridad@Temperatura(10), activar_seguridad@hours(10), 
  7303 ;;		 -> activar_seguridad@mins(10), activar_seguridad@secs(10), STR_4(13), STR_3(20), 
  7304 ;;		 -> STR_2(7), STR_1(21), 
  7305 ;; Auto vars:     Size  Location     Type
  7306 ;;  i               2    8[COMRAM] int 
  7307 ;; Return value:  Size  Location     Type
  7308 ;;                  1    wreg      void 
  7309 ;; Registers used:
  7310 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7311 ;; Tracked objects:
  7312 ;;		On entry : 0/0
  7313 ;;		On exit  : 0/0
  7314 ;;		Unchanged: 0/0
  7315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7316 ;;      Params:         2       0       0       0       0       0       0       0       0
  7317 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7318 ;;      Temps:          2       0       0       0       0       0       0       0       0
  7319 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7320 ;;Total ram usage:        6 bytes
  7321 ;; Hardware stack levels used:    1
  7322 ;; Hardware stack levels required when called:    2
  7323 ;; This function calls:
  7324 ;;		_Lcd_Write_Char
  7325 ;; This function is called by:
  7326 ;;		_activar_seguridad
  7327 ;;		_main
  7328 ;; This function uses a non-reentrant model
  7329 ;;
  7330                           
  7331                           	psect	text38
  7332  002776                     __ptext38:
  7333                           	callstack 0
  7334  002776                     _Lcd_Write_String:
  7335                           	callstack 26
  7336  002776                     
  7337                           ;./lcd.h: 97: void Lcd_Write_String(char *a);./lcd.h: 98: {;./lcd.h: 99:  int i;;./lcd.h
      +                          : 100:  for(i=0;a[i]!='\0';i++)
  7338  002776  0E00               	movlw	0
  7339  002778  6E0A               	movwf	(Lcd_Write_String@i+1)^0,c
  7340  00277A  0E00               	movlw	0
  7341  00277C  6E09               	movwf	Lcd_Write_String@i^0,c
  7342  00277E  EFDB  F013         	goto	l3064
  7343  002782                     l3060:
  7344                           
  7345                           ;./lcd.h: 101:     Lcd_Write_Char(a[i]);
  7346  002782  5009               	movf	Lcd_Write_String@i^0,w,c
  7347  002784  2405               	addwf	Lcd_Write_String@a^0,w,c
  7348  002786  6E07               	movwf	??_Lcd_Write_String^0,c
  7349  002788  500A               	movf	(Lcd_Write_String@i+1)^0,w,c
  7350  00278A  2006               	addwfc	(Lcd_Write_String@a+1)^0,w,c
  7351  00278C  6E08               	movwf	(??_Lcd_Write_String+1)^0,c
  7352  00278E  C007  FFF6         	movff	??_Lcd_Write_String,tblptrl
  7353  002792  C008  FFF7         	movff	??_Lcd_Write_String+1,tblptrh
  7354  002796  6AF8               	clrf	tblptru,c
  7355  002798  0E07               	movlw	(high __ramtop+-1)
  7356  00279A  64F7               	cpfsgt	tblptrh,c
  7357  00279C  D003               	bra	u2907
  7358  00279E  0008               	tblrd		*
  7359  0027A0  50F5               	movf	tablat,w,c
  7360  0027A2  D005               	bra	u2900
  7361  0027A4                     u2907:
  7362  0027A4  CFF6 FFE1          	movff	tblptrl,fsr1l
  7363  0027A8  CFF7 FFE2          	movff	tblptrh,fsr1h
  7364  0027AC  50E7               	movf	indf1,w,c
  7365  0027AE                     u2900:
  7366  0027AE  ECC1  F016         	call	_Lcd_Write_Char
  7367  0027B2  4A09               	infsnz	Lcd_Write_String@i^0,f,c
  7368  0027B4  2A0A               	incf	(Lcd_Write_String@i+1)^0,f,c
  7369  0027B6                     l3064:
  7370  0027B6  5009               	movf	Lcd_Write_String@i^0,w,c
  7371  0027B8  2405               	addwf	Lcd_Write_String@a^0,w,c
  7372  0027BA  6E07               	movwf	??_Lcd_Write_String^0,c
  7373  0027BC  500A               	movf	(Lcd_Write_String@i+1)^0,w,c
  7374  0027BE  2006               	addwfc	(Lcd_Write_String@a+1)^0,w,c
  7375  0027C0  6E08               	movwf	(??_Lcd_Write_String+1)^0,c
  7376  0027C2  C007  FFF6         	movff	??_Lcd_Write_String,tblptrl
  7377  0027C6  C008  FFF7         	movff	??_Lcd_Write_String+1,tblptrh
  7378  0027CA  6AF8               	clrf	tblptru,c
  7379  0027CC  0E07               	movlw	(high __ramtop+-1)
  7380  0027CE  64F7               	cpfsgt	tblptrh,c
  7381  0027D0  D003               	bra	u2917
  7382  0027D2  0008               	tblrd		*
  7383  0027D4  50F5               	movf	tablat,w,c
  7384  0027D6  D005               	bra	u2910
  7385  0027D8                     u2917:
  7386  0027D8  CFF6 FFE1          	movff	tblptrl,fsr1l
  7387  0027DC  CFF7 FFE2          	movff	tblptrh,fsr1h
  7388  0027E0  50E7               	movf	indf1,w,c
  7389  0027E2                     u2910:
  7390  0027E2  0900               	iorlw	0
  7391  0027E4  A4D8               	btfss	status,2,c
  7392  0027E6  EFF7  F013         	goto	u2921
  7393  0027EA  EFF9  F013         	goto	u2920
  7394  0027EE                     u2921:
  7395  0027EE  EFC1  F013         	goto	l3060
  7396  0027F2                     u2920:
  7397  0027F2  0012               	return		;funcret
  7398  0027F4                     __end_of_Lcd_Write_String:
  7399                           	callstack 0
  7400                           
  7401 ;; *************** function _Lcd_Write_Char *****************
  7402 ;; Defined at:
  7403 ;;		line 81 in file "./lcd.h"
  7404 ;; Parameters:    Size  Location     Type
  7405 ;;  a               1    wreg     unsigned char 
  7406 ;; Auto vars:     Size  Location     Type
  7407 ;;  a               1    3[COMRAM] unsigned char 
  7408 ;;  y               1    2[COMRAM] unsigned char 
  7409 ;;  temp            1    1[COMRAM] unsigned char 
  7410 ;; Return value:  Size  Location     Type
  7411 ;;                  1    wreg      void 
  7412 ;; Registers used:
  7413 ;;		wreg, status,2, status,0, cstack
  7414 ;; Tracked objects:
  7415 ;;		On entry : 0/0
  7416 ;;		On exit  : 0/0
  7417 ;;		Unchanged: 0/0
  7418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7419 ;;      Params:         0       0       0       0       0       0       0       0       0
  7420 ;;      Locals:         3       0       0       0       0       0       0       0       0
  7421 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7422 ;;      Totals:         3       0       0       0       0       0       0       0       0
  7423 ;;Total ram usage:        3 bytes
  7424 ;; Hardware stack levels used:    1
  7425 ;; Hardware stack levels required when called:    1
  7426 ;; This function calls:
  7427 ;;		_Lcd_Port
  7428 ;; This function is called by:
  7429 ;;		_Lcd_Write_String
  7430 ;;		_activar_seguridad
  7431 ;; This function uses a non-reentrant model
  7432 ;;
  7433                           
  7434                           	psect	text39
  7435  002D82                     __ptext39:
  7436                           	callstack 0
  7437  002D82                     _Lcd_Write_Char:
  7438                           	callstack 26
  7439                           
  7440                           ;incstack = 0
  7441                           ;Lcd_Write_Char@a stored from wreg
  7442  002D82  6E04               	movwf	Lcd_Write_Char@a^0,c
  7443  002D84                     
  7444                           ;./lcd.h: 81: void Lcd_Write_Char(char a);./lcd.h: 82: {;./lcd.h: 83:    char temp,y;;./
      +                          lcd.h: 84:    temp = a&0x0F;
  7445  002D84  5004               	movf	Lcd_Write_Char@a^0,w,c
  7446  002D86  0B0F               	andlw	15
  7447  002D88  6E02               	movwf	Lcd_Write_Char@temp^0,c
  7448                           
  7449                           ;./lcd.h: 85:    y = a&0xF0;
  7450  002D8A  5004               	movf	Lcd_Write_Char@a^0,w,c
  7451  002D8C  0BF0               	andlw	240
  7452  002D8E  6E03               	movwf	Lcd_Write_Char@y^0,c
  7453  002D90                     
  7454                           ;./lcd.h: 86:    PORTBbits.RB2 = 1;
  7455  002D90  8481               	bsf	129,2,c	;volatile
  7456  002D92                     
  7457                           ;./lcd.h: 87:    Lcd_Port(y>>4);
  7458  002D92  3803               	swapf	Lcd_Write_Char@y^0,w,c
  7459  002D94  0B0F               	andlw	15
  7460  002D96  ECC5  F014         	call	_Lcd_Port
  7461  002D9A                     
  7462                           ;./lcd.h: 88:    PORTBbits.RB3 = 1;
  7463  002D9A  8681               	bsf	129,3,c	;volatile
  7464  002D9C                     
  7465                           ;./lcd.h: 89:    _delay((unsigned long)((40)*(8000000/4000000.0)));
  7466  002D9C  0E1A               	movlw	26
  7467  002D9E                     u3897:
  7468  002D9E  2EE8               	decfsz	wreg,f,c
  7469  002DA0  D7FE               	bra	u3897
  7470  002DA2  D000               	nop2	
  7471  002DA4                     
  7472                           ;./lcd.h: 90:    PORTBbits.RB3 = 0;
  7473  002DA4  9681               	bcf	129,3,c	;volatile
  7474  002DA6                     
  7475                           ;./lcd.h: 91:    Lcd_Port(temp);
  7476  002DA6  5002               	movf	Lcd_Write_Char@temp^0,w,c
  7477  002DA8  ECC5  F014         	call	_Lcd_Port
  7478  002DAC                     
  7479                           ;./lcd.h: 92:    PORTBbits.RB3 = 1;
  7480  002DAC  8681               	bsf	129,3,c	;volatile
  7481  002DAE                     
  7482                           ;./lcd.h: 93:    _delay((unsigned long)((40)*(8000000/4000000.0)));
  7483  002DAE  0E1A               	movlw	26
  7484  002DB0                     u3907:
  7485  002DB0  2EE8               	decfsz	wreg,f,c
  7486  002DB2  D7FE               	bra	u3907
  7487  002DB4  D000               	nop2	
  7488  002DB6                     
  7489                           ;./lcd.h: 94:    PORTBbits.RB3 = 0;
  7490  002DB6  9681               	bcf	129,3,c	;volatile
  7491  002DB8  0012               	return		;funcret
  7492  002DBA                     __end_of_Lcd_Write_Char:
  7493                           	callstack 0
  7494                           
  7495 ;; *************** function _Lcd_Set_Cursor *****************
  7496 ;; Defined at:
  7497 ;;		line 41 in file "./lcd.h"
  7498 ;; Parameters:    Size  Location     Type
  7499 ;;  a               1    wreg     unsigned char 
  7500 ;;  b               1    3[COMRAM] unsigned char 
  7501 ;; Auto vars:     Size  Location     Type
  7502 ;;  a               1    4[COMRAM] unsigned char 
  7503 ;;  temp            1    7[COMRAM] unsigned char 
  7504 ;;  y               1    6[COMRAM] unsigned char 
  7505 ;;  z               1    5[COMRAM] unsigned char 
  7506 ;; Return value:  Size  Location     Type
  7507 ;;                  1    wreg      void 
  7508 ;; Registers used:
  7509 ;;		wreg, status,2, status,0, cstack
  7510 ;; Tracked objects:
  7511 ;;		On entry : 0/0
  7512 ;;		On exit  : 0/0
  7513 ;;		Unchanged: 0/0
  7514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7515 ;;      Params:         1       0       0       0       0       0       0       0       0
  7516 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7517 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7518 ;;      Totals:         5       0       0       0       0       0       0       0       0
  7519 ;;Total ram usage:        5 bytes
  7520 ;; Hardware stack levels used:    1
  7521 ;; Hardware stack levels required when called:    2
  7522 ;; This function calls:
  7523 ;;		_Lcd_Cmd
  7524 ;; This function is called by:
  7525 ;;		_activar_seguridad
  7526 ;;		_main
  7527 ;; This function uses a non-reentrant model
  7528 ;;
  7529                           
  7530                           	psect	text40
  7531  002864                     __ptext40:
  7532                           	callstack 0
  7533  002864                     _Lcd_Set_Cursor:
  7534                           	callstack 26
  7535                           
  7536                           ;incstack = 0
  7537                           ;Lcd_Set_Cursor@a stored from wreg
  7538  002864  6E05               	movwf	Lcd_Set_Cursor@a^0,c
  7539  002866                     
  7540                           ;./lcd.h: 41: void Lcd_Set_Cursor(char a, char b);./lcd.h: 42: {;./lcd.h: 43:  char temp
      +                          ,z,y;;./lcd.h: 44:  if(a == 1)
  7541  002866  0405               	decf	Lcd_Set_Cursor@a^0,w,c
  7542  002868  A4D8               	btfss	status,2,c
  7543  00286A  EF39  F014         	goto	u2881
  7544  00286E  EF3B  F014         	goto	u2880
  7545  002872                     u2881:
  7546  002872  EF4C  F014         	goto	l3050
  7547  002876                     u2880:
  7548  002876                     
  7549                           ;./lcd.h: 45:  {;./lcd.h: 46:    temp = 0x80 + b - 1;
  7550  002876  5004               	movf	Lcd_Set_Cursor@b^0,w,c
  7551  002878  0F7F               	addlw	127
  7552  00287A  6E08               	movwf	Lcd_Set_Cursor@temp^0,c
  7553                           
  7554                           ;./lcd.h: 47:   z = temp>>4;
  7555  00287C  3808               	swapf	Lcd_Set_Cursor@temp^0,w,c
  7556  00287E  0B0F               	andlw	15
  7557  002880  6E06               	movwf	Lcd_Set_Cursor@z^0,c
  7558                           
  7559                           ;./lcd.h: 48:   y = temp & 0x0F;
  7560  002882  5008               	movf	Lcd_Set_Cursor@temp^0,w,c
  7561  002884  0B0F               	andlw	15
  7562  002886  6E07               	movwf	Lcd_Set_Cursor@y^0,c
  7563  002888                     
  7564                           ;./lcd.h: 49:   Lcd_Cmd(z);
  7565  002888  5006               	movf	Lcd_Set_Cursor@z^0,w,c
  7566  00288A  EC5E  F017         	call	_Lcd_Cmd
  7567  00288E                     
  7568                           ;./lcd.h: 50:   Lcd_Cmd(y);
  7569  00288E  5007               	movf	Lcd_Set_Cursor@y^0,w,c
  7570  002890  EC5E  F017         	call	_Lcd_Cmd
  7571                           
  7572                           ;./lcd.h: 51:  }
  7573  002894  EF64  F014         	goto	l115
  7574  002898                     l3050:
  7575  002898  0E02               	movlw	2
  7576  00289A  1805               	xorwf	Lcd_Set_Cursor@a^0,w,c
  7577  00289C  A4D8               	btfss	status,2,c
  7578  00289E  EF53  F014         	goto	u2891
  7579  0028A2  EF55  F014         	goto	u2890
  7580  0028A6                     u2891:
  7581  0028A6  EF64  F014         	goto	l115
  7582  0028AA                     u2890:
  7583  0028AA                     
  7584                           ;./lcd.h: 53:  {;./lcd.h: 54:   temp = 0xC0 + b - 1;
  7585  0028AA  5004               	movf	Lcd_Set_Cursor@b^0,w,c
  7586  0028AC  0FBF               	addlw	191
  7587  0028AE  6E08               	movwf	Lcd_Set_Cursor@temp^0,c
  7588                           
  7589                           ;./lcd.h: 55:   z = temp>>4;
  7590  0028B0  3808               	swapf	Lcd_Set_Cursor@temp^0,w,c
  7591  0028B2  0B0F               	andlw	15
  7592  0028B4  6E06               	movwf	Lcd_Set_Cursor@z^0,c
  7593                           
  7594                           ;./lcd.h: 56:   y = temp & 0x0F;
  7595  0028B6  5008               	movf	Lcd_Set_Cursor@temp^0,w,c
  7596  0028B8  0B0F               	andlw	15
  7597  0028BA  6E07               	movwf	Lcd_Set_Cursor@y^0,c
  7598  0028BC                     
  7599                           ;./lcd.h: 57:   Lcd_Cmd(z);
  7600  0028BC  5006               	movf	Lcd_Set_Cursor@z^0,w,c
  7601  0028BE  EC5E  F017         	call	_Lcd_Cmd
  7602  0028C2                     
  7603                           ;./lcd.h: 58:   Lcd_Cmd(y);
  7604  0028C2  5007               	movf	Lcd_Set_Cursor@y^0,w,c
  7605  0028C4  EC5E  F017         	call	_Lcd_Cmd
  7606  0028C8                     l115:
  7607  0028C8  0012               	return		;funcret
  7608  0028CA                     __end_of_Lcd_Set_Cursor:
  7609                           	callstack 0
  7610                           
  7611 ;; *************** function _Lcd_Clear *****************
  7612 ;; Defined at:
  7613 ;;		line 35 in file "./lcd.h"
  7614 ;; Parameters:    Size  Location     Type
  7615 ;;		None
  7616 ;; Auto vars:     Size  Location     Type
  7617 ;;		None
  7618 ;; Return value:  Size  Location     Type
  7619 ;;                  2  108[None  ] int 
  7620 ;; Registers used:
  7621 ;;		wreg, status,2, cstack
  7622 ;; Tracked objects:
  7623 ;;		On entry : 0/0
  7624 ;;		On exit  : 0/0
  7625 ;;		Unchanged: 0/0
  7626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7627 ;;      Params:         0       0       0       0       0       0       0       0       0
  7628 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7629 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7630 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7631 ;;Total ram usage:        0 bytes
  7632 ;; Hardware stack levels used:    1
  7633 ;; Hardware stack levels required when called:    2
  7634 ;; This function calls:
  7635 ;;		_Lcd_Cmd
  7636 ;; This function is called by:
  7637 ;;		_activar_seguridad
  7638 ;;		_main
  7639 ;; This function uses a non-reentrant model
  7640 ;;
  7641                           
  7642                           	psect	text41
  7643  002F44                     __ptext41:
  7644                           	callstack 0
  7645  002F44                     _Lcd_Clear:
  7646                           	callstack 26
  7647  002F44                     
  7648                           ;./lcd.h: 37:  Lcd_Cmd(0);
  7649  002F44  0E00               	movlw	0
  7650  002F46  EC5E  F017         	call	_Lcd_Cmd
  7651                           
  7652                           ;./lcd.h: 38:  Lcd_Cmd(1);
  7653  002F4A  0E01               	movlw	1
  7654  002F4C  EC5E  F017         	call	_Lcd_Cmd
  7655  002F50  0012               	return		;funcret
  7656  002F52                     __end_of_Lcd_Clear:
  7657                           	callstack 0
  7658                           
  7659 ;; *************** function _Keypad_Key_Press *****************
  7660 ;; Defined at:
  7661 ;;		line 81 in file "main.c"
  7662 ;; Parameters:    Size  Location     Type
  7663 ;;		None
  7664 ;; Auto vars:     Size  Location     Type
  7665 ;;  keypad_deco    17    0[COMRAM] const unsigned char [17]
  7666 ;;  fila            2   19[COMRAM] unsigned int 
  7667 ;;  tec             2   17[COMRAM] unsigned int 
  7668 ;; Return value:  Size  Location     Type
  7669 ;;                  1    wreg      unsigned char 
  7670 ;; Registers used:
  7671 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  7672 ;; Tracked objects:
  7673 ;;		On entry : 0/0
  7674 ;;		On exit  : 0/0
  7675 ;;		Unchanged: 0/0
  7676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7677 ;;      Params:         0       0       0       0       0       0       0       0       0
  7678 ;;      Locals:        21       0       0       0       0       0       0       0       0
  7679 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7680 ;;      Totals:        21       0       0       0       0       0       0       0       0
  7681 ;;Total ram usage:       21 bytes
  7682 ;; Hardware stack levels used:    1
  7683 ;; This function calls:
  7684 ;;		Nothing
  7685 ;; This function is called by:
  7686 ;;		_activar_seguridad
  7687 ;; This function uses a non-reentrant model
  7688 ;;
  7689                           
  7690                           	psect	text42
  7691  0026C0                     __ptext42:
  7692                           	callstack 0
  7693  0026C0                     _Keypad_Key_Press:
  7694                           	callstack 28
  7695  0026C0                     
  7696                           ;main.c: 82:     const unsigned char keypad_deco[17] = {'7', '8', '9', '/', '4', '5', '6
      +                          ', '*', '1', '2', '3', '-', 13, '0', '=', '+', 0};
  7697  0026C0  0E01               	movlw	low Keypad_Key_Press@F3795
  7698  0026C2  6EF6               	movwf	tblptrl,c
  7699  0026C4                     	if	1	;There is more than 1 active tblptr byte
  7700  0026C4  0E08               	movlw	high Keypad_Key_Press@F3795
  7701  0026C6  6EF7               	movwf	tblptrh,c
  7702  0026C8                     	endif
  7703  0026C8                     	if	0	;There are less than 3 active tblptr bytes
  7704  0026C8                     	endif
  7705  0026C8  EE20  F001         	lfsr	2,Keypad_Key_Press@keypad_deco
  7706  0026CC  0E10               	movlw	16
  7707  0026CE                     u2940:
  7708  0026CE  0009               	tblrd		*+
  7709  0026D0  CFF5 FFDE          	movff	tablat,postinc2
  7710  0026D4  06E8               	decf	wreg,f,c
  7711  0026D6  E2FB               	bc	u2940
  7712  0026D8                     
  7713                           ;main.c: 83:     unsigned int tec = 0, fila;
  7714  0026D8  0E00               	movlw	0
  7715  0026DA  6E13               	movwf	(Keypad_Key_Press@tec+1)^0,c
  7716  0026DC  0E00               	movlw	0
  7717  0026DE  6E12               	movwf	Keypad_Key_Press@tec^0,c
  7718  0026E0                     
  7719                           ;main.c: 85:     for (fila = 0b00000001; fila < 0b00010000; fila <<= 1) {
  7720  0026E0  0E00               	movlw	0
  7721  0026E2  6E15               	movwf	(Keypad_Key_Press@fila+1)^0,c
  7722  0026E4  0E01               	movlw	1
  7723  0026E6  6E14               	movwf	Keypad_Key_Press@fila^0,c
  7724  0026E8                     l3116:
  7725                           
  7726                           ;main.c: 86:         LATD = fila << 4;
  7727  0026E8  3814               	swapf	Keypad_Key_Press@fila^0,w,c
  7728  0026EA  0BF0               	andlw	240
  7729  0026EC  6E8C               	movwf	140,c	;volatile
  7730  0026EE                     
  7731                           ;main.c: 87:         if (PORTDbits.RD0 == 1) break;
  7732  0026EE  A083               	btfss	131,0,c	;volatile
  7733  0026F0  EF7C  F013         	goto	u2951
  7734  0026F4  EF7E  F013         	goto	u2950
  7735  0026F8                     u2951:
  7736  0026F8  EF80  F013         	goto	l3122
  7737  0026FC                     u2950:
  7738  0026FC  EFB1  F013         	goto	l3144
  7739  002700                     l3122:
  7740                           
  7741                           ;main.c: 88:         tec++;
  7742  002700  4A12               	infsnz	Keypad_Key_Press@tec^0,f,c
  7743  002702  2A13               	incf	(Keypad_Key_Press@tec+1)^0,f,c
  7744  002704                     
  7745                           ;main.c: 89:         if (PORTDbits.RD1 == 1) break;
  7746  002704  A283               	btfss	131,1,c	;volatile
  7747  002706  EF87  F013         	goto	u2961
  7748  00270A  EF89  F013         	goto	u2960
  7749  00270E                     u2961:
  7750  00270E  EF8B  F013         	goto	l3128
  7751  002712                     u2960:
  7752  002712  EFB1  F013         	goto	l3144
  7753  002716                     l3128:
  7754                           
  7755                           ;main.c: 90:         tec++;
  7756  002716  4A12               	infsnz	Keypad_Key_Press@tec^0,f,c
  7757  002718  2A13               	incf	(Keypad_Key_Press@tec+1)^0,f,c
  7758  00271A                     
  7759                           ;main.c: 91:         if (PORTDbits.RD2 == 1) break;
  7760  00271A  A483               	btfss	131,2,c	;volatile
  7761  00271C  EF92  F013         	goto	u2971
  7762  002720  EF94  F013         	goto	u2970
  7763  002724                     u2971:
  7764  002724  EF96  F013         	goto	l3134
  7765  002728                     u2970:
  7766  002728  EFB1  F013         	goto	l3144
  7767  00272C                     l3134:
  7768                           
  7769                           ;main.c: 92:         tec++;
  7770  00272C  4A12               	infsnz	Keypad_Key_Press@tec^0,f,c
  7771  00272E  2A13               	incf	(Keypad_Key_Press@tec+1)^0,f,c
  7772  002730                     
  7773                           ;main.c: 93:         if (PORTDbits.RD3 == 1) break;
  7774  002730  A683               	btfss	131,3,c	;volatile
  7775  002732  EF9D  F013         	goto	u2981
  7776  002736  EF9F  F013         	goto	u2980
  7777  00273A                     u2981:
  7778  00273A  EFA1  F013         	goto	l3140
  7779  00273E                     u2980:
  7780  00273E  EFB1  F013         	goto	l3144
  7781  002742                     l3140:
  7782                           
  7783                           ;main.c: 94:         tec++;
  7784  002742  4A12               	infsnz	Keypad_Key_Press@tec^0,f,c
  7785  002744  2A13               	incf	(Keypad_Key_Press@tec+1)^0,f,c
  7786                           
  7787                           ;main.c: 95:     }
  7788  002746  90D8               	bcf	status,0,c
  7789  002748  3614               	rlcf	Keypad_Key_Press@fila^0,f,c
  7790  00274A  3615               	rlcf	(Keypad_Key_Press@fila+1)^0,f,c
  7791  00274C  5015               	movf	(Keypad_Key_Press@fila+1)^0,w,c
  7792  00274E  E109               	bnz	u2990
  7793  002750  0E10               	movlw	16
  7794  002752  5C14               	subwf	Keypad_Key_Press@fila^0,w,c
  7795  002754  A0D8               	btfss	status,0,c
  7796  002756  EFAF  F013         	goto	u2991
  7797  00275A  EFB1  F013         	goto	u2990
  7798  00275E                     u2991:
  7799  00275E  EF74  F013         	goto	l3116
  7800  002762                     u2990:
  7801  002762                     l3144:
  7802                           
  7803                           ;main.c: 96:     PORTD = 0x00;
  7804  002762  0E00               	movlw	0
  7805  002764  6E83               	movwf	131,c	;volatile
  7806  002766                     
  7807                           ;main.c: 97:     return keypad_deco[tec];
  7808  002766  0E01               	movlw	low Keypad_Key_Press@keypad_deco
  7809  002768  2412               	addwf	Keypad_Key_Press@tec^0,w,c
  7810  00276A  6ED9               	movwf	fsr2l,c
  7811  00276C  0E00               	movlw	high Keypad_Key_Press@keypad_deco
  7812  00276E  2013               	addwfc	(Keypad_Key_Press@tec+1)^0,w,c
  7813  002770  6EDA               	movwf	fsr2h,c
  7814  002772  50DF               	movf	indf2,w,c
  7815  002774  0012               	return		;funcret
  7816  002776                     __end_of_Keypad_Key_Press:
  7817                           	callstack 0
  7818                           
  7819 ;; *************** function _I2C_Stop *****************
  7820 ;; Defined at:
  7821 ;;		line 112 in file "./I2C_Master_File.h"
  7822 ;; Parameters:    Size  Location     Type
  7823 ;;		None
  7824 ;; Auto vars:     Size  Location     Type
  7825 ;;		None
  7826 ;; Return value:  Size  Location     Type
  7827 ;;                  1    wreg      unsigned char 
  7828 ;; Registers used:
  7829 ;;		wreg
  7830 ;; Tracked objects:
  7831 ;;		On entry : 0/0
  7832 ;;		On exit  : 0/0
  7833 ;;		Unchanged: 0/0
  7834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7835 ;;      Params:         0       0       0       0       0       0       0       0       0
  7836 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7837 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7838 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7839 ;;Total ram usage:        0 bytes
  7840 ;; Hardware stack levels used:    1
  7841 ;; This function calls:
  7842 ;;		Nothing
  7843 ;; This function is called by:
  7844 ;;		_activar_seguridad
  7845 ;;		_I2C_Start_Wait
  7846 ;; This function uses a non-reentrant model
  7847 ;;
  7848                           
  7849                           	psect	text43
  7850  002F1E                     __ptext43:
  7851                           	callstack 0
  7852  002F1E                     _I2C_Stop:
  7853                           	callstack 28
  7854  002F1E                     
  7855                           ;./I2C_Master_File.h: 114:     PEN = 1;
  7856  002F1E  84C5               	bsf	4037,2,c	;volatile
  7857  002F20                     l180:
  7858  002F20  B4C5               	btfsc	4037,2,c	;volatile
  7859  002F22  EF95  F017         	goto	u2931
  7860  002F26  EF97  F017         	goto	u2930
  7861  002F2A                     u2931:
  7862  002F2A  EF90  F017         	goto	l180
  7863  002F2E                     u2930:
  7864  002F2E                     
  7865                           ;./I2C_Master_File.h: 116:     if(!SSPSTATbits.P);
  7866  002F2E  50C7               	movf	199,w,c	;volatile
  7867  002F30  0012               	return		;funcret
  7868  002F32                     __end_of_I2C_Stop:
  7869                           	callstack 0
  7870                           
  7871 ;; *************** function _I2C_Init *****************
  7872 ;; Defined at:
  7873 ;;		line 48 in file "./I2C_Master_File.h"
  7874 ;; Parameters:    Size  Location     Type
  7875 ;;		None
  7876 ;; Auto vars:     Size  Location     Type
  7877 ;;		None
  7878 ;; Return value:  Size  Location     Type
  7879 ;;                  1    wreg      void 
  7880 ;; Registers used:
  7881 ;;		wreg, status,2
  7882 ;; Tracked objects:
  7883 ;;		On entry : 0/0
  7884 ;;		On exit  : 0/0
  7885 ;;		Unchanged: 0/0
  7886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7887 ;;      Params:         0       0       0       0       0       0       0       0       0
  7888 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7889 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7890 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7891 ;;Total ram usage:        0 bytes
  7892 ;; Hardware stack levels used:    1
  7893 ;; This function calls:
  7894 ;;		Nothing
  7895 ;; This function is called by:
  7896 ;;		_activar_seguridad
  7897 ;; This function uses a non-reentrant model
  7898 ;;
  7899                           
  7900                           	psect	text44
  7901  002EDC                     __ptext44:
  7902                           	callstack 0
  7903  002EDC                     _I2C_Init:
  7904                           	callstack 28
  7905  002EDC                     
  7906                           ;./I2C_Master_File.h: 50:     TRISB0=1;
  7907  002EDC  8093               	bsf	3987,0,c	;volatile
  7908                           
  7909                           ;./I2C_Master_File.h: 51:  TRISB1=1;
  7910  002EDE  8293               	bsf	3987,1,c	;volatile
  7911  002EE0                     
  7912                           ;./I2C_Master_File.h: 52:  SSPSTAT=80;
  7913  002EE0  0E50               	movlw	80
  7914  002EE2  6EC7               	movwf	199,c	;volatile
  7915                           
  7916                           ;./I2C_Master_File.h: 53:     SSPCON1=0x28;
  7917  002EE4  0E28               	movlw	40
  7918  002EE6  6EC6               	movwf	198,c	;volatile
  7919                           
  7920                           ;./I2C_Master_File.h: 55:  SSPCON2=0;
  7921  002EE8  0E00               	movlw	0
  7922  002EEA  6EC5               	movwf	197,c	;volatile
  7923                           
  7924                           ;./I2C_Master_File.h: 56:     SSPADD=((8000000/(4*100000))-1);
  7925  002EEC  0E13               	movlw	19
  7926  002EEE  6EC8               	movwf	200,c	;volatile
  7927  002EF0                     
  7928                           ;./I2C_Master_File.h: 57:     SSPIE=1;
  7929  002EF0  869D               	bsf	3997,3,c	;volatile
  7930  002EF2                     
  7931                           ;./I2C_Master_File.h: 58:     SSPIF=0;
  7932  002EF2  969E               	bcf	3998,3,c	;volatile
  7933  002EF4  0012               	return		;funcret
  7934  002EF6                     __end_of_I2C_Init:
  7935                           	callstack 0
  7936                           
  7937 ;; *************** function _Lcd_Init *****************
  7938 ;; Defined at:
  7939 ;;		line 62 in file "./lcd.h"
  7940 ;; Parameters:    Size  Location     Type
  7941 ;;		None
  7942 ;; Auto vars:     Size  Location     Type
  7943 ;;		None
  7944 ;; Return value:  Size  Location     Type
  7945 ;;                  1    wreg      void 
  7946 ;; Registers used:
  7947 ;;		wreg, status,2, cstack
  7948 ;; Tracked objects:
  7949 ;;		On entry : 0/0
  7950 ;;		On exit  : 0/0
  7951 ;;		Unchanged: 0/0
  7952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7953 ;;      Params:         0       0       0       0       0       0       0       0       0
  7954 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7955 ;;      Temps:          1       0       0       0       0       0       0       0       0
  7956 ;;      Totals:         1       0       0       0       0       0       0       0       0
  7957 ;;Total ram usage:        1 bytes
  7958 ;; Hardware stack levels used:    1
  7959 ;; Hardware stack levels required when called:    2
  7960 ;; This function calls:
  7961 ;;		_Lcd_Cmd
  7962 ;;		_Lcd_Port
  7963 ;; This function is called by:
  7964 ;;		_main
  7965 ;; This function uses a non-reentrant model
  7966 ;;
  7967                           
  7968                           	psect	text45
  7969  0027F4                     __ptext45:
  7970                           	callstack 0
  7971  0027F4                     _Lcd_Init:
  7972                           	callstack 28
  7973  0027F4                     
  7974                           ;./lcd.h: 64:   Lcd_Port(0x00);
  7975  0027F4  0E00               	movlw	0
  7976  0027F6  ECC5  F014         	call	_Lcd_Port
  7977  0027FA                     
  7978                           ;./lcd.h: 65:    _delay((unsigned long)((20)*(8000000/4000.0)));
  7979  0027FA  0E34               	movlw	52
  7980  0027FC  6E04               	movwf	??_Lcd_Init^0,c
  7981  0027FE  0EF2               	movlw	242
  7982  002800                     u3917:
  7983  002800  2EE8               	decfsz	wreg,f,c
  7984  002802  D7FE               	bra	u3917
  7985  002804  2E04               	decfsz	??_Lcd_Init^0,f,c
  7986  002806  D7FC               	bra	u3917
  7987  002808                     
  7988                           ;./lcd.h: 66:   Lcd_Cmd(0x03);
  7989  002808  0E03               	movlw	3
  7990  00280A  EC5E  F017         	call	_Lcd_Cmd
  7991  00280E                     
  7992                           ;./lcd.h: 67:  _delay((unsigned long)((5)*(8000000/4000.0)));
  7993  00280E  0E0D               	movlw	13
  7994  002810  6E04               	movwf	??_Lcd_Init^0,c
  7995  002812  0EFC               	movlw	252
  7996  002814                     u3927:
  7997  002814  2EE8               	decfsz	wreg,f,c
  7998  002816  D7FE               	bra	u3927
  7999  002818  2E04               	decfsz	??_Lcd_Init^0,f,c
  8000  00281A  D7FC               	bra	u3927
  8001  00281C                     
  8002                           ;./lcd.h: 68:   Lcd_Cmd(0x03);
  8003  00281C  0E03               	movlw	3
  8004  00281E  EC5E  F017         	call	_Lcd_Cmd
  8005  002822                     
  8006                           ;./lcd.h: 69:  _delay((unsigned long)((11)*(8000000/4000.0)));
  8007  002822  0E1D               	movlw	29
  8008  002824  6E04               	movwf	??_Lcd_Init^0,c
  8009  002826  0E91               	movlw	145
  8010  002828                     u3937:
  8011  002828  2EE8               	decfsz	wreg,f,c
  8012  00282A  D7FE               	bra	u3937
  8013  00282C  2E04               	decfsz	??_Lcd_Init^0,f,c
  8014  00282E  D7FC               	bra	u3937
  8015  002830  F000               	nop	
  8016  002832                     
  8017                           ;./lcd.h: 70:   Lcd_Cmd(0x03);
  8018  002832  0E03               	movlw	3
  8019  002834  EC5E  F017         	call	_Lcd_Cmd
  8020  002838                     
  8021                           ;./lcd.h: 72:   Lcd_Cmd(0x02);
  8022  002838  0E02               	movlw	2
  8023  00283A  EC5E  F017         	call	_Lcd_Cmd
  8024  00283E                     
  8025                           ;./lcd.h: 73:   Lcd_Cmd(0x02);
  8026  00283E  0E02               	movlw	2
  8027  002840  EC5E  F017         	call	_Lcd_Cmd
  8028  002844                     
  8029                           ;./lcd.h: 74:   Lcd_Cmd(0x08);
  8030  002844  0E08               	movlw	8
  8031  002846  EC5E  F017         	call	_Lcd_Cmd
  8032  00284A                     
  8033                           ;./lcd.h: 75:   Lcd_Cmd(0x00);
  8034  00284A  0E00               	movlw	0
  8035  00284C  EC5E  F017         	call	_Lcd_Cmd
  8036  002850                     
  8037                           ;./lcd.h: 76:   Lcd_Cmd(0x0C);
  8038  002850  0E0C               	movlw	12
  8039  002852  EC5E  F017         	call	_Lcd_Cmd
  8040  002856                     
  8041                           ;./lcd.h: 77:   Lcd_Cmd(0x00);
  8042  002856  0E00               	movlw	0
  8043  002858  EC5E  F017         	call	_Lcd_Cmd
  8044  00285C                     
  8045                           ;./lcd.h: 78:   Lcd_Cmd(0x06);
  8046  00285C  0E06               	movlw	6
  8047  00285E  EC5E  F017         	call	_Lcd_Cmd
  8048  002862  0012               	return		;funcret
  8049  002864                     __end_of_Lcd_Init:
  8050                           	callstack 0
  8051                           
  8052 ;; *************** function _Lcd_Cmd *****************
  8053 ;; Defined at:
  8054 ;;		line 26 in file "./lcd.h"
  8055 ;; Parameters:    Size  Location     Type
  8056 ;;  a               1    wreg     unsigned char 
  8057 ;; Auto vars:     Size  Location     Type
  8058 ;;  a               1    2[COMRAM] unsigned char 
  8059 ;; Return value:  Size  Location     Type
  8060 ;;                  1    wreg      void 
  8061 ;; Registers used:
  8062 ;;		wreg, status,2, cstack
  8063 ;; Tracked objects:
  8064 ;;		On entry : 0/0
  8065 ;;		On exit  : 0/0
  8066 ;;		Unchanged: 0/0
  8067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8068 ;;      Params:         0       0       0       0       0       0       0       0       0
  8069 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8070 ;;      Temps:          1       0       0       0       0       0       0       0       0
  8071 ;;      Totals:         2       0       0       0       0       0       0       0       0
  8072 ;;Total ram usage:        2 bytes
  8073 ;; Hardware stack levels used:    1
  8074 ;; Hardware stack levels required when called:    1
  8075 ;; This function calls:
  8076 ;;		_Lcd_Port
  8077 ;; This function is called by:
  8078 ;;		_Lcd_Clear
  8079 ;;		_Lcd_Set_Cursor
  8080 ;;		_Lcd_Init
  8081 ;;		_Lcd_Shift_Right
  8082 ;;		_Lcd_Shift_Left
  8083 ;; This function uses a non-reentrant model
  8084 ;;
  8085                           
  8086                           	psect	text46
  8087  002EBC                     __ptext46:
  8088                           	callstack 0
  8089  002EBC                     _Lcd_Cmd:
  8090                           	callstack 26
  8091                           
  8092                           ;incstack = 0
  8093                           ;Lcd_Cmd@a stored from wreg
  8094  002EBC  6E03               	movwf	Lcd_Cmd@a^0,c
  8095  002EBE                     
  8096                           ;./lcd.h: 26: void Lcd_Cmd(char a);./lcd.h: 27: {;./lcd.h: 28:  PORTBbits.RB2 = 0;
  8097  002EBE  9481               	bcf	129,2,c	;volatile
  8098  002EC0                     
  8099                           ;./lcd.h: 29:  Lcd_Port(a);
  8100  002EC0  5003               	movf	Lcd_Cmd@a^0,w,c
  8101  002EC2  ECC5  F014         	call	_Lcd_Port
  8102  002EC6                     
  8103                           ;./lcd.h: 30:  PORTBbits.RB3 = 1;
  8104  002EC6  8681               	bsf	129,3,c	;volatile
  8105  002EC8                     
  8106                           ;./lcd.h: 31:         _delay((unsigned long)((4)*(8000000/4000.0)));
  8107  002EC8  0E0B               	movlw	11
  8108  002ECA  6E02               	movwf	??_Lcd_Cmd^0,c
  8109  002ECC  0E62               	movlw	98
  8110  002ECE                     u3947:
  8111  002ECE  2EE8               	decfsz	wreg,f,c
  8112  002ED0  D7FE               	bra	u3947
  8113  002ED2  2E02               	decfsz	??_Lcd_Cmd^0,f,c
  8114  002ED4  D7FC               	bra	u3947
  8115  002ED6  D000               	nop2	
  8116  002ED8                     
  8117                           ;./lcd.h: 32:         PORTBbits.RB3 = 0;
  8118  002ED8  9681               	bcf	129,3,c	;volatile
  8119  002EDA  0012               	return		;funcret
  8120  002EDC                     __end_of_Lcd_Cmd:
  8121                           	callstack 0
  8122                           
  8123 ;; *************** function _Lcd_Port *****************
  8124 ;; Defined at:
  8125 ;;		line 4 in file "./lcd.h"
  8126 ;; Parameters:    Size  Location     Type
  8127 ;;  a               1    wreg     unsigned char 
  8128 ;; Auto vars:     Size  Location     Type
  8129 ;;  a               1    0[COMRAM] unsigned char 
  8130 ;; Return value:  Size  Location     Type
  8131 ;;                  1    wreg      void 
  8132 ;; Registers used:
  8133 ;;		wreg
  8134 ;; Tracked objects:
  8135 ;;		On entry : 0/0
  8136 ;;		On exit  : 0/0
  8137 ;;		Unchanged: 0/0
  8138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8139 ;;      Params:         0       0       0       0       0       0       0       0       0
  8140 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8141 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8142 ;;      Totals:         1       0       0       0       0       0       0       0       0
  8143 ;;Total ram usage:        1 bytes
  8144 ;; Hardware stack levels used:    1
  8145 ;; This function calls:
  8146 ;;		Nothing
  8147 ;; This function is called by:
  8148 ;;		_Lcd_Cmd
  8149 ;;		_Lcd_Init
  8150 ;;		_Lcd_Write_Char
  8151 ;; This function uses a non-reentrant model
  8152 ;;
  8153                           
  8154                           	psect	text47
  8155  00298A                     __ptext47:
  8156                           	callstack 0
  8157  00298A                     _Lcd_Port:
  8158                           	callstack 26
  8159                           
  8160                           ;incstack = 0
  8161                           ;Lcd_Port@a stored from wreg
  8162  00298A  6E01               	movwf	Lcd_Port@a^0,c
  8163  00298C                     
  8164                           ;./lcd.h: 4: void Lcd_Port(char a);./lcd.h: 5: {;./lcd.h: 6:  if(a & 1)
  8165  00298C  A001               	btfss	Lcd_Port@a^0,0,c
  8166  00298E  EFCB  F014         	goto	u2631
  8167  002992  EFCD  F014         	goto	u2630
  8168  002996                     u2631:
  8169  002996  EFD0  F014         	goto	l95
  8170  00299A                     u2630:
  8171  00299A                     
  8172                           ;./lcd.h: 7:   PORTBbits.RB4 = 1;
  8173  00299A  8881               	bsf	129,4,c	;volatile
  8174  00299C  EFD1  F014         	goto	l2852
  8175  0029A0                     l95:
  8176                           
  8177                           ;./lcd.h: 9:   PORTBbits.RB4 = 0;
  8178  0029A0  9881               	bcf	129,4,c	;volatile
  8179  0029A2                     l2852:
  8180                           
  8181                           ;./lcd.h: 11:  if(a & 2)
  8182  0029A2  A201               	btfss	Lcd_Port@a^0,1,c
  8183  0029A4  EFD6  F014         	goto	u2641
  8184  0029A8  EFD8  F014         	goto	u2640
  8185  0029AC                     u2641:
  8186  0029AC  EFDB  F014         	goto	l97
  8187  0029B0                     u2640:
  8188  0029B0                     
  8189                           ;./lcd.h: 12:   PORTBbits.RB5 = 1;
  8190  0029B0  8A81               	bsf	129,5,c	;volatile
  8191  0029B2  EFDC  F014         	goto	l2856
  8192  0029B6                     l97:
  8193                           
  8194                           ;./lcd.h: 14:   PORTBbits.RB5 = 0;
  8195  0029B6  9A81               	bcf	129,5,c	;volatile
  8196  0029B8                     l2856:
  8197                           
  8198                           ;./lcd.h: 16:  if(a & 4)
  8199  0029B8  A401               	btfss	Lcd_Port@a^0,2,c
  8200  0029BA  EFE1  F014         	goto	u2651
  8201  0029BE  EFE3  F014         	goto	u2650
  8202  0029C2                     u2651:
  8203  0029C2  EFE6  F014         	goto	l99
  8204  0029C6                     u2650:
  8205  0029C6                     
  8206                           ;./lcd.h: 17:   PORTBbits.RB6 = 1;
  8207  0029C6  8C81               	bsf	129,6,c	;volatile
  8208  0029C8  EFE7  F014         	goto	l2860
  8209  0029CC                     l99:
  8210                           
  8211                           ;./lcd.h: 19:   PORTBbits.RB6 = 0;
  8212  0029CC  9C81               	bcf	129,6,c	;volatile
  8213  0029CE                     l2860:
  8214                           
  8215                           ;./lcd.h: 21:  if(a & 8)
  8216  0029CE  A601               	btfss	Lcd_Port@a^0,3,c
  8217  0029D0  EFEC  F014         	goto	u2661
  8218  0029D4  EFEE  F014         	goto	u2660
  8219  0029D8                     u2661:
  8220  0029D8  EFF1  F014         	goto	l101
  8221  0029DC                     u2660:
  8222  0029DC                     
  8223                           ;./lcd.h: 22:   PORTBbits.RB7 = 1;
  8224  0029DC  8E81               	bsf	129,7,c	;volatile
  8225  0029DE  EFF2  F014         	goto	l103
  8226  0029E2                     l101:
  8227                           
  8228                           ;./lcd.h: 24:   PORTBbits.RB7 = 0;
  8229  0029E2  9E81               	bcf	129,7,c	;volatile
  8230  0029E4                     l103:
  8231  0029E4  0012               	return		;funcret
  8232  0029E6                     __end_of_Lcd_Port:
  8233                           	callstack 0
  8234                           
  8235 ;; *************** function _Keypad_Init *****************
  8236 ;; Defined at:
  8237 ;;		line 76 in file "main.c"
  8238 ;; Parameters:    Size  Location     Type
  8239 ;;		None
  8240 ;; Auto vars:     Size  Location     Type
  8241 ;;		None
  8242 ;; Return value:  Size  Location     Type
  8243 ;;                  1    wreg      void 
  8244 ;; Registers used:
  8245 ;;		wreg, status,2
  8246 ;; Tracked objects:
  8247 ;;		On entry : 0/0
  8248 ;;		On exit  : 0/0
  8249 ;;		Unchanged: 0/0
  8250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8251 ;;      Params:         0       0       0       0       0       0       0       0       0
  8252 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8253 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8254 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8255 ;;Total ram usage:        0 bytes
  8256 ;; Hardware stack levels used:    1
  8257 ;; This function calls:
  8258 ;;		Nothing
  8259 ;; This function is called by:
  8260 ;;		_main
  8261 ;; This function uses a non-reentrant model
  8262 ;;
  8263                           
  8264                           	psect	text48
  8265  002F5A                     __ptext48:
  8266                           	callstack 0
  8267  002F5A                     _Keypad_Init:
  8268                           	callstack 30
  8269  002F5A                     
  8270                           ;main.c: 77:     TRISD = 0B00001111;
  8271  002F5A  0E0F               	movlw	15
  8272  002F5C  6E95               	movwf	149,c	;volatile
  8273  002F5E  0012               	return		;funcret
  8274  002F60                     __end_of_Keypad_Init:
  8275                           	callstack 0
  8276                           
  8277                           	psect	rparam
  8278  0000                     
  8279                           	psect	idloc
  8280                           
  8281                           ;Config register IDLOC0 @ 0x200000
  8282                           ;	unspecified, using default values
  8283  200000                     	org	2097152
  8284  200000  FF                 	db	255
  8285                           
  8286                           ;Config register IDLOC1 @ 0x200001
  8287                           ;	unspecified, using default values
  8288  200001                     	org	2097153
  8289  200001  FF                 	db	255
  8290                           
  8291                           ;Config register IDLOC2 @ 0x200002
  8292                           ;	unspecified, using default values
  8293  200002                     	org	2097154
  8294  200002  FF                 	db	255
  8295                           
  8296                           ;Config register IDLOC3 @ 0x200003
  8297                           ;	unspecified, using default values
  8298  200003                     	org	2097155
  8299  200003  FF                 	db	255
  8300                           
  8301                           ;Config register IDLOC4 @ 0x200004
  8302                           ;	unspecified, using default values
  8303  200004                     	org	2097156
  8304  200004  FF                 	db	255
  8305                           
  8306                           ;Config register IDLOC5 @ 0x200005
  8307                           ;	unspecified, using default values
  8308  200005                     	org	2097157
  8309  200005  FF                 	db	255
  8310                           
  8311                           ;Config register IDLOC6 @ 0x200006
  8312                           ;	unspecified, using default values
  8313  200006                     	org	2097158
  8314  200006  FF                 	db	255
  8315                           
  8316                           ;Config register IDLOC7 @ 0x200007
  8317                           ;	unspecified, using default values
  8318  200007                     	org	2097159
  8319  200007  FF                 	db	255
  8320                           
  8321                           	psect	config
  8322                           
  8323                           ;Config register CONFIG1L @ 0x300000
  8324                           ;	unspecified, using default values
  8325                           ;	PLL Prescaler Selection bits
  8326                           ;	PLLDIV = 0x0, unprogrammed default
  8327                           ;	System Clock Postscaler Selection bits
  8328                           ;	CPUDIV = 0x0, unprogrammed default
  8329                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  8330                           ;	USBDIV = 0x0, unprogrammed default
  8331  300000                     	org	3145728
  8332  300000  00                 	db	0
  8333                           
  8334                           ;Config register CONFIG1H @ 0x300001
  8335                           ;	unspecified, using default values
  8336                           ;	Oscillator Selection bits
  8337                           ;	FOSC = 0x5, unprogrammed default
  8338                           ;	Fail-Safe Clock Monitor Enable bit
  8339                           ;	FCMEN = 0x0, unprogrammed default
  8340                           ;	Internal/External Oscillator Switchover bit
  8341                           ;	IESO = 0x0, unprogrammed default
  8342  300001                     	org	3145729
  8343  300001  05                 	db	5
  8344                           
  8345                           ;Config register CONFIG2L @ 0x300002
  8346                           ;	unspecified, using default values
  8347                           ;	Power-up Timer Enable bit
  8348                           ;	PWRT = 0x1, unprogrammed default
  8349                           ;	Brown-out Reset Enable bits
  8350                           ;	BOR = 0x3, unprogrammed default
  8351                           ;	Brown-out Reset Voltage bits
  8352                           ;	BORV = 0x3, unprogrammed default
  8353                           ;	USB Voltage Regulator Enable bit
  8354                           ;	VREGEN = 0x0, unprogrammed default
  8355  300002                     	org	3145730
  8356  300002  1F                 	db	31
  8357                           
  8358                           ;Config register CONFIG2H @ 0x300003
  8359                           ;	unspecified, using default values
  8360                           ;	Watchdog Timer Enable bit
  8361                           ;	WDT = 0x1, unprogrammed default
  8362                           ;	Watchdog Timer Postscale Select bits
  8363                           ;	WDTPS = 0xF, unprogrammed default
  8364  300003                     	org	3145731
  8365  300003  1F                 	db	31
  8366                           
  8367                           ; Padding undefined space
  8368  300004                     	org	3145732
  8369  300004  FF                 	db	255
  8370                           
  8371                           ;Config register CONFIG3H @ 0x300005
  8372                           ;	unspecified, using default values
  8373                           ;	CCP2 MUX bit
  8374                           ;	CCP2MX = 0x1, unprogrammed default
  8375                           ;	PORTB A/D Enable bit
  8376                           ;	PBADEN = 0x1, unprogrammed default
  8377                           ;	Low-Power Timer 1 Oscillator Enable bit
  8378                           ;	LPT1OSC = 0x0, unprogrammed default
  8379                           ;	MCLR Pin Enable bit
  8380                           ;	MCLRE = 0x1, unprogrammed default
  8381  300005                     	org	3145733
  8382  300005  83                 	db	131
  8383                           
  8384                           ;Config register CONFIG4L @ 0x300006
  8385                           ;	unspecified, using default values
  8386                           ;	Stack Full/Underflow Reset Enable bit
  8387                           ;	STVREN = 0x1, unprogrammed default
  8388                           ;	Single-Supply ICSP Enable bit
  8389                           ;	LVP = 0x1, unprogrammed default
  8390                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  8391                           ;	ICPRT = 0x0, unprogrammed default
  8392                           ;	Extended Instruction Set Enable bit
  8393                           ;	XINST = 0x0, unprogrammed default
  8394                           ;	Background Debugger Enable bit
  8395                           ;	DEBUG = 0x1, unprogrammed default
  8396  300006                     	org	3145734
  8397  300006  85                 	db	133
  8398                           
  8399                           ; Padding undefined space
  8400  300007                     	org	3145735
  8401  300007  FF                 	db	255
  8402                           
  8403                           ;Config register CONFIG5L @ 0x300008
  8404                           ;	unspecified, using default values
  8405                           ;	Code Protection bit
  8406                           ;	CP0 = 0x1, unprogrammed default
  8407                           ;	Code Protection bit
  8408                           ;	CP1 = 0x1, unprogrammed default
  8409                           ;	Code Protection bit
  8410                           ;	CP2 = 0x1, unprogrammed default
  8411                           ;	Code Protection bit
  8412                           ;	CP3 = 0x1, unprogrammed default
  8413  300008                     	org	3145736
  8414  300008  0F                 	db	15
  8415                           
  8416                           ;Config register CONFIG5H @ 0x300009
  8417                           ;	unspecified, using default values
  8418                           ;	Boot Block Code Protection bit
  8419                           ;	CPB = 0x1, unprogrammed default
  8420                           ;	Data EEPROM Code Protection bit
  8421                           ;	CPD = 0x1, unprogrammed default
  8422  300009                     	org	3145737
  8423  300009  C0                 	db	192
  8424                           
  8425                           ;Config register CONFIG6L @ 0x30000A
  8426                           ;	unspecified, using default values
  8427                           ;	Write Protection bit
  8428                           ;	WRT0 = 0x1, unprogrammed default
  8429                           ;	Write Protection bit
  8430                           ;	WRT1 = 0x1, unprogrammed default
  8431                           ;	Write Protection bit
  8432                           ;	WRT2 = 0x1, unprogrammed default
  8433                           ;	Write Protection bit
  8434                           ;	WRT3 = 0x1, unprogrammed default
  8435  30000A                     	org	3145738
  8436  30000A  0F                 	db	15
  8437                           
  8438                           ;Config register CONFIG6H @ 0x30000B
  8439                           ;	unspecified, using default values
  8440                           ;	Configuration Register Write Protection bit
  8441                           ;	WRTC = 0x1, unprogrammed default
  8442                           ;	Boot Block Write Protection bit
  8443                           ;	WRTB = 0x1, unprogrammed default
  8444                           ;	Data EEPROM Write Protection bit
  8445                           ;	WRTD = 0x1, unprogrammed default
  8446  30000B                     	org	3145739
  8447  30000B  E0                 	db	224
  8448                           
  8449                           ;Config register CONFIG7L @ 0x30000C
  8450                           ;	unspecified, using default values
  8451                           ;	Table Read Protection bit
  8452                           ;	EBTR0 = 0x1, unprogrammed default
  8453                           ;	Table Read Protection bit
  8454                           ;	EBTR1 = 0x1, unprogrammed default
  8455                           ;	Table Read Protection bit
  8456                           ;	EBTR2 = 0x1, unprogrammed default
  8457                           ;	Table Read Protection bit
  8458                           ;	EBTR3 = 0x1, unprogrammed default
  8459  30000C                     	org	3145740
  8460  30000C  0F                 	db	15
  8461                           
  8462                           ;Config register CONFIG7H @ 0x30000D
  8463                           ;	unspecified, using default values
  8464                           ;	Boot Block Table Read Protection bit
  8465                           ;	EBTRB = 0x1, unprogrammed default
  8466  30000D                     	org	3145741
  8467  30000D  40                 	db	64
  8468                           tosu	equ	0xFFF
  8469                           tosh	equ	0xFFE
  8470                           tosl	equ	0xFFD
  8471                           stkptr	equ	0xFFC
  8472                           pclatu	equ	0xFFB
  8473                           pclath	equ	0xFFA
  8474                           pcl	equ	0xFF9
  8475                           tblptru	equ	0xFF8
  8476                           tblptrh	equ	0xFF7
  8477                           tblptrl	equ	0xFF6
  8478                           tablat	equ	0xFF5
  8479                           prodh	equ	0xFF4
  8480                           prodl	equ	0xFF3
  8481                           indf0	equ	0xFEF
  8482                           postinc0	equ	0xFEE
  8483                           postdec0	equ	0xFED
  8484                           preinc0	equ	0xFEC
  8485                           plusw0	equ	0xFEB
  8486                           fsr0h	equ	0xFEA
  8487                           fsr0l	equ	0xFE9
  8488                           wreg	equ	0xFE8
  8489                           indf1	equ	0xFE7
  8490                           postinc1	equ	0xFE6
  8491                           postdec1	equ	0xFE5
  8492                           preinc1	equ	0xFE4
  8493                           plusw1	equ	0xFE3
  8494                           fsr1h	equ	0xFE2
  8495                           fsr1l	equ	0xFE1
  8496                           bsr	equ	0xFE0
  8497                           indf2	equ	0xFDF
  8498                           postinc2	equ	0xFDE
  8499                           postdec2	equ	0xFDD
  8500                           preinc2	equ	0xFDC
  8501                           plusw2	equ	0xFDB
  8502                           fsr2h	equ	0xFDA
  8503                           fsr2l	equ	0xFD9
  8504                           status	equ	0xFD8

Data Sizes:
    Strings     101
    Constant    17
    Data        46
    BSS         54
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160     90     151
    BANK1           256      0      39
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 10
		 -> activar_seguridad@Temperatura(BANK0[10]), activar_seguridad@hours(BANK0[10]), activar_seguridad@mins(BANK0[10]), activar_seguridad@secs(BANK0[10]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_8(CODE[6]), STR_7(CODE[9]), STR_6(CODE[4]), STR_5(CODE[4]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 9
		 -> STR_8(CODE[6]), STR_7(CODE[9]), STR_6(CODE[4]), STR_5(CODE[4]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_8(CODE[6]), STR_7(CODE[9]), STR_6(CODE[4]), STR_5(CODE[4]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 10
		 -> activar_seguridad@Temperatura(BANK0[10]), activar_seguridad@hours(BANK0[10]), activar_seguridad@mins(BANK0[10]), activar_seguridad@secs(BANK0[10]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S1244_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 10
		 -> activar_seguridad@Temperatura(BANK0[10]), activar_seguridad@hours(BANK0[10]), activar_seguridad@mins(BANK0[10]), activar_seguridad@secs(BANK0[10]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 10
		 -> activar_seguridad@Temperatura(BANK0[10]), activar_seguridad@hours(BANK0[10]), activar_seguridad@mins(BANK0[10]), activar_seguridad@secs(BANK0[10]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 4
		 -> aux_contrasenia(BANK0[4]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 21
		 -> STR_10(CODE[8]), STR_9(CODE[20]), activar_seguridad@Temperatura(BANK0[10]), activar_seguridad@hours(BANK0[10]), 
		 -> activar_seguridad@mins(BANK0[10]), activar_seguridad@secs(BANK0[10]), STR_4(CODE[13]), STR_3(CODE[20]), 
		 -> STR_2(CODE[7]), STR_1(CODE[21]), 


Critical Paths under _main in COMRAM

    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _ctoa->_fputc
    _atoi->_isspace
    ___xxtofl->_getCad
    ___flmul->___xxtofl
    _RTC_Read_Clock->_I2C_Read
    _RTC_Read_Clock->_I2C_Repeated_Start
    _RTC_Read_Clock->_I2C_Start
    _I2C_Start->_I2C_Write
    _I2C_Repeated_Start->_I2C_Write
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    _main->_securityHouse
    _securityHouse->_activar_seguridad
    _activar_seguridad->_sprintf
    _sprintf->_vfprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   27413
                        _Keypad_Init
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                      _securityHouse
 ---------------------------------------------------------------------------------
 (1) _securityHouse                                        2     0      2   24633
                                             88 BANK0      2     0      2
                  _activar_seguridad
 ---------------------------------------------------------------------------------
 (2) _activar_seguridad                                   66    66      0   24534
                                             22 BANK0     66    66      0
                           _I2C_Init
                           _I2C_Stop
                   _Keypad_Key_Press
                          _Lcd_Clear
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
                   _Lcd_Write_String
                     _RTC_Read_Clock
                             ___flge
                            ___flmul
                            ___fltol
                           ___xxtofl
                               _atoi
                             _getCad
                            _isdigit
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             16    10      6   15857
                                              6 BANK0     16    10      6
                            ___fltol (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             8     2      6   15046
                                             93 COMRAM     2     2      0
                                              0 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           44    38      6   14684
                                             66 COMRAM    27    21      6
                               _ctoa
                               _dtoa
                              _fputc
                               _xtoa
 ---------------------------------------------------------------------------------
 (6) _xtoa                                                39    28     11    5403
                                             27 COMRAM    39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (7) _toupper                                              8     6      2     412
                                              6 COMRAM     8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (8) _islower                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (7) _isupper                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (7) _isalpha                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _dtoa                                                36    26     10    5498
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (7) _pad                                                 11     5      6    3849
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (8) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) _fputs                                                7     3      4    1691
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (7) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (6) _ctoa                                                 8     5      3    1645
                                              9 COMRAM     8     5      3
                              _fputc
 ---------------------------------------------------------------------------------
 (9) _fputc                                                9     5      4    1290
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (10) _putch                                               1     1      0       0
 ---------------------------------------------------------------------------------
 (3) _getCad                                               5     3      2      22
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (3) _atoi                                                15    13      2    1610
                                              7 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (4) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              6     4      2     465
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     541
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     398
                                              5 COMRAM    14    10      4
                             _getCad (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4     305
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             25    17      8    1896
                                             19 COMRAM    25    17      8
                           ___xxtofl (ARG)
                             _getCad (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8     334
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (3) _RTC_Read_Clock                                       2     2      0     177
                                              2 COMRAM     2     2      0
                           _I2C_Read
                 _I2C_Repeated_Start
                          _I2C_Start
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (4) _I2C_Start                                            1     1      0      44
                                              1 COMRAM     1     1      0
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (4) _I2C_Repeated_Start                                   1     1      0      44
                                              1 COMRAM     1     1      0
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (4) _I2C_Write                                            1     1      0      22
                                              0 COMRAM     1     1      0
                          _I2C_Ready
 ---------------------------------------------------------------------------------
 (4) _I2C_Read                                             2     2      0      45
                                              0 COMRAM     2     2      0
                            _I2C_Ack
                           _I2C_Nack
                          _I2C_Ready
 ---------------------------------------------------------------------------------
 (5) _I2C_Ready                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C_Nack                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C_Ack                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write_String                                     6     4      2    1028
                                              4 COMRAM     6     4      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (4) _Lcd_Write_Char                                       3     3      0     178
                                              1 COMRAM     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Set_Cursor                                       5     4      1    1444
                                              3 COMRAM     5     4      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Keypad_Key_Press                                    21    21      0     120
                                              0 COMRAM    21    21      0
 ---------------------------------------------------------------------------------
 (3) _I2C_Stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             1     1      0     198
                                              3 COMRAM     1     1      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (4) _Lcd_Cmd                                              2     2      0     110
                                              1 COMRAM     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (5) _Lcd_Port                                             1     1      0      88
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Keypad_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Keypad_Init
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _securityHouse
     _activar_seguridad
       _I2C_Init
       _I2C_Stop
       _Keypad_Key_Press
       _Lcd_Clear
         _Lcd_Cmd
           _Lcd_Port
       _Lcd_Set_Cursor
         _Lcd_Cmd
           _Lcd_Port
       _Lcd_Write_Char
         _Lcd_Port
       _Lcd_Write_String
         _Lcd_Write_Char
           _Lcd_Port
       _RTC_Read_Clock
         _I2C_Read
           _I2C_Ack
           _I2C_Nack
           _I2C_Ready
         _I2C_Repeated_Start
           _I2C_Write
             _I2C_Ready
         _I2C_Start
           _I2C_Write
             _I2C_Ready
         _I2C_Write
           _I2C_Ready
       ___flge
       ___flmul
         ___xxtofl (ARG)
           _getCad (ARG)
         _getCad (ARG)
       ___fltol
       ___xxtofl
         _getCad (ARG)
       _atoi
         ___wmul
         _isdigit
         _isspace
       _getCad
       _isdigit
       _sprintf
         ___fltol (ARG)
         _vfprintf (ARG)
           _vfpfcnvrt
             _ctoa
               _fputc
                 _putch
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
               _toupper
                 _islower

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      27       7       15.2%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     5A      97       5       94.4%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     11D      20        0.0%
DATA                 0      0     11D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Mon Dec 14 00:51:27 2020

                  __size_of_I2C_Ready 0012                    __size_of_I2C_Start 002E  
                         _SSPSTATbits 000FC7                    __size_of_I2C_Write 0022  
                                  l95 29A0                                    l97 29B6  
                                  l99 29CC                   ___wmul@multiplicand 0003  
                                 l101 29E2                                   l103 29E4  
                                 l121 2DB8                                   l201 2F08  
                                 l106 2EDA                                   l115 28C8  
                                 l140 2C9A                                   l109 2F50  
                                 l141 2CA0                                   l118 2862  
                                 l150 2F42                                   l127 27F2  
                                 l231 2BAC                                   l303 0F34  
                                 l144 2EF4                                   l136 2C6C  
                                 l320 2E98                                   l138 2C7A  
                                 l234 2B24                                   l147 2F32  
                                 l171 2E22                                   l180 2F20  
                                 l164 2DF4                                   l237 2F5E  
                                 l149 2F40                                   l173 2E30  
                                 l309 2CD8                                   l182 2F2E  
                                 l166 2E02                                   l175 2E4A  
                                 l184 2F30                                   l248 2774  
                                 l192 2F0E                                   l168 2E1C  
                                 l434 20E8                                   l195 2F1C  
                                 l291 0E46                                   l283 0B36  
                                 l188 2EBA                                   l292 0E1E  
                                 l198 2EFA                                   l447 224C  
                                 l288 0DF4                                   l617 2352  
                                 l297 0E9E                                   l298 0E76  
                                 l590 2456                                   l585 2410  
                                 l941 11F0                                   l934 0FFA  
                                 l951 1320                                   l943 1268  
                                 l944 1256                                   l938 135E  
                                 l982 1D12                                   l975 1C7A  
                                 l978 1DD6                                   l989 1D6E  
                                 _PEN 007E2A                                   _abs 2BAE  
                     __end_of_I2C_Ack 2F1E                                   _pad 25FA  
                                 _min 00C6                                   _sec 00C8  
                                 wreg 000FE8                          ___flmul@aexp 0025  
                        ___flmul@bexp 0026                          ___flmul@sign 0020  
                        ___flmul@temp 002B                          ___flmul@prod 0027  
                        ___fltol@exp1 000A                                  l1022 1F60  
                                l1103 170A                                  l1025 2D80  
                                l1033 2ADE                                  l1105 1712  
                                l1202 25F8                                  l1210 2B68  
                                l1130 198C                                  l1019 1F58  
                                l1123 194A                                  l1043 2A8C  
                                ?_abs 0013                                  l1213 2F60  
                                l1151 1BBE                                  l1224 2980  
                                l1128 1984                                  l1081 26BE  
                                l1153 1C22                                  l1137 1A20  
                                l3002 2E44                                  l3010 2D4A  
                                l1170 2922                                  l1219 2DEE  
                                l1235 2D10                                  l1171 292A  
                                l3004 2E4A                                  l3100 2AF4  
                                l3020 2A8E                                  l1092 24BE  
                                l1076 2640                                  l1181 2C66  
                                l1229 2988                                  l3110 26E0  
                                l3102 2B04                                  l3014 2E74  
                                l3022 2A92                                  l1158 1668  
                                l1095 2500                                  l1175 2BE4  
                                l1079 2682                                  l3040 2F44  
                                l3104 2B14                                  l3016 2E90  
                                l3024 2AA6                                  l3032 28CA  
                                l1097 252E                                  l3130 271A  
                                l3122 2700                                  l3106 26C0  
                                l3050 2898                                  l3042 2866  
                                l3210 0F52                                  l3026 2AD4  
                                l1178 2BEC                                  l3034 28D2  
                                l1187 2D48                                  l3140 2742  
                                l3124 2704                                  l3116 26E8  
                                l3108 26D8                                  l3052 28AA  
                                l3044 2876                                  l3060 2782  
                                l3300 124E                                  l3220 0F98  
                                l3212 0F62                                  l3204 0F36  
                                l3028 2AD8                                  l3036 28E0  
                                l3070 2EF0                                  l3142 274C  
                                l3134 272C                                  l3118 26EE  
                                l3054 28BC                                  l3046 2888  
                                l3062 27B2                                  l3310 12BC  
                                l3230 0FC4                                  l3222 0F9E  
                                l3214 0F72                                  l3206 0F42  
                                l3038 2906                                  l3150 2A3C  
                                l3072 2EF2                                  l3136 2730  
                                l3128 2716                                  l3144 2762  
                                l3056 28C2                                  l3048 288E  
                                l3064 27B6                                  l3320 1324  
                                l3304 1278                                  l3312 12C0  
                                l3240 101A                                  l3232 0FD4  
                                l3224 0FA4                                  l3216 0F82  
                                l3208 0F50                                  l3400 1C26  
                                l2600 2092                                  l3152 2A4E  
                                l3066 2EDC                                  l3074 2F1E  
                                l3146 2766                                  l3058 2776  
                                l3330 134E                                  l3322 1334  
                                l3314 12DA                                  l3306 1284  
                                l3250 105A                                  l3234 0FE4  
                                l3226 0FB2                                  l3218 0F88  
                                l3402 1C36                                  l3170 1E0E  
                                l3162 1DD8                                  l3090 2BA6  
                                l3082 2B7C                                  l2530 2530  
                                l2602 2098                                  l2610 20EA  
                                l3154 2A56                                  l3068 2EE0  
                                l3340 23C0                                  l3324 1342  
                                l3316 12EE                                  l3308 1292  
                                l3260 10A4                                  l3252 1066  
                                l3244 102E                                  l3236 0FEA  
                                l3228 0FB4                                  l3420 1CFC  
                                l3412 1CB4                                  l3404 1C44  
                                l3180 1E62                                  l3172 1E42  
                                l3164 1DEC                                  l3084 2B9E  
                                l3076 2B6C                                  l2540 25B2  
                                l2532 2542                                  l2700 2492  
                                l2604 20A8                                  l2620 212E  
                                l2612 20EE                                  l3156 2A5E  
                                l3350 244E                                  l3342 23D0  
                                l3334 2354                                  l3326 1344  
                                l3318 1308                                  l3270 10F6  
                                l3262 10B0                                  l3254 107E  
                                l3246 103A                                  l3238 100A  
                                l3430 1D7C                                  l3422 1D08  
                                l3414 1CBC                                  l3406 1C8A  
                                l3190 1EDC                                  l3182 1E6A  
                                l3174 1E46                                  l3166 1DF0  
                                l3086 2BA2                                  l3078 2B74  
                                l2534 2554                                  l2710 24DE  
                                l2702 24A4                                  l2606 20C8  
                                l2630 2196                                  l2622 214E  
                                l2614 20FC                                  l2550 2B48  
                                l3158 2A7A                                  l3510 0A08  
                                l3502 09E4                                  l3352 2454  
                                l3344 23DE                                  l3336 2382  
                                l3328 134A                                  l3280 1174  
                                l3272 1106                                  l3264 10C0  
                                l3256 108A                                  l3248 1044  
                                l3440 1DC4                                  l3432 1D7E  
                                l3424 1D44                                  l3416 1CC8  
                                l3408 1CA0                                  l3184 1E72  
                                l3168 1DF4                                  l3088 2BA4  
                                l2536 255E                                  l2712 24E2  
                                l2640 220C                                  l2632 21C4  
                                l2624 216C                                  l2616 211C  
                                l2544 2B26                                  l2552 2DBA  
                                l2720 166A                                  l2800 19E0  
                                l3600 0C58                                  l3520 0A56  
                                l3504 09F6                                  l3098 2AE2  
                                l3346 23F0                                  l3338 2392  
                                l3290 11EE                                  l3282 11AA  
                                l3274 1122                                  l3266 10CC  
                                l3258 1096                                  l3370 22B8  
                                l3362 2278                                  l3442 1DC6  
                                l3434 1D82                                  l3426 1D50  
                                l3418 1CFA                                  l3194 1F18  
                                l3186 1EA4                                  l3178 1E4C  
                                l2538 257C                                  l2714 2510  
                                l2706 24B6                                  l2570 1F74  
                                l2642 222C                                  l2634 21E4  
                                l2626 2174                                  l2618 2120  
                                l2546 2B32                                  l2554 2DC6  
                                l2650 261E                                  l2730 16E4  
                                l2722 168A                                  l2562 2CDA  
                                l2810 1A54                                  l2802 19E8  
                                l3610 0C8E                                  l3602 0C62  
                                l3522 0A68                                  l3514 0A12  
                                l3506 09FA                                  l3450 0884  
                                l3700 280E                                  l3348 23FE  
                                l3292 1200                                  l3284 11B8  
                                l3276 112E                                  l3268 10DC  
                                l3380 22E8                                  l3372 22C6  
                                l3364 22A2                                  l3356 224E  
                                l3436 1DA6                                  l3428 1D5E  
                                l3196 1F2A                                  l2716 2522  
                                l2708 24CA                                  l2580 1FCA  
                                l2572 1F94                                  l2636 21F6  
                                l2628 2188                                  l2548 2B44  
                                l2556 2DCA                                  l2660 2664  
                                l2652 262C                                  l2740 1740  
                                l2732 16FE                                  l2724 16B2  
                                l2812 1A66                                  l2820 1AC6  
                                l2804 1A04                                  l2900 141A  
                                l3620 0CA2                                  l3612 0C9A  
                                l3604 0C6E                                  l3540 0AB4  
                                l3532 0A84                                  l3524 0A6C  
                                l3516 0A22                                  l3508 09FE  
                                l3452 0886                                  l3710 283E  
                                l3702 281C                                  l3294 120E  
                                l3286 11D6                                  l3278 114A  
                                l3390 2312                                  l3382 22F2  
                                l3366 22A4                                  l3358 2264  
                                l3438 1DB6                                  l3198 1F3C  
                                l2590 201E                                  l2582 1FD6  
                                l2574 1F98                                  l2566 1F62  
                                l2638 21FC                                  l2670 2BC8  
                                l2558 2DE2                                  l2662 2692  
                                l2654 2638                                  l2646 25FA  
                                l2750 17DE                                  l2742 1748  
                                l2734 171A                                  l2726 16D2  
                                l2830 1B5C                                  l2822 1AD6  
                                l2806 1A14                                  l2910 14E2  
                                l2902 143E                                  l3630 0CAC  
                                l3622 0CA4                                  l3614 0C9C  
                                l3606 0C78                                  l3542 0AC0  
                                l3534 0A94                                  l3526 0A70  
                                l3470 08F6                                  l3462 08D2  
                                l3454 0888                                  l3446 0878  
                                l3720 285C                                  l3712 2844  
                                l3704 2822                                  l3296 1212  
                                l3288 11E0                                  l3392 2322  
                                l3368 22B4                                  l2592 2030  
                                l2584 1FF4                                  l2576 1FA6  
                                l2568 1F66                                  l2664 26A6  
                                l2656 264C                                  l2648 260A  
                                l2760 189A                                  l2752 17E4  
                                l2744 1750                                  l2736 172C  
                                l2728 16E2                                  l2672 2D12  
                                l2680 292C                                  l2840 1BD4  
                                l2832 1B7A                                  l2824 1ADC  
                                l2816 1AA0                                  l2920 158A  
                                l2912 1506                                  l2904 1462  
                                l3640 0D82                                  l3632 0CB4  
                                l3624 0CA6                                  l3616 0C9E  
                                l3608 0C84                                  l3560 0B56  
                                l3536 0AA6                                  l3544 0ADE  
                                l3528 0A7A                                  l3480 093E  
                                l3472 0902                                  l3464 08E4  
                                l3456 088E                                  l3448 0880  
                                l3722 2F5A                                  l2850 299A  
                                l3714 284A                                  l3706 2832  
                                l2690 2F32                                  l3298 1220  
                                l3394 2332                                  l3378 22DE  
                                l2594 205E                                  l2586 1FFC  
                                l2578 1FC6                                  l2658 2660  
                                l2770 18EC                                  l2762 18B4  
                                l2746 1756                                  l2754 1848  
                                l2738 173A                                  l2842 1BE4  
                                l2834 1B94                                  l2826 1AE2  
                                l2818 1AB2                                  l2930 160C  
                                l2914 152A                                  l2906 14AA  
                                l3650 0DFE                                  l3642 0DB4  
                                l3634 0D3A                                  l3626 0CA8  
                                l3618 0CA0                                  l3570 0B9C  
                                l3562 0B6A                                  l3554 0B08  
                                l3546 0AEE                                  l3538 0AAA  
                                l3490 098C                                  l3474 090C  
                                l3466 08E8                                  l3458 089E  
                                l3730 2CB4                                  l2860 29CE  
                                l2852 29A2                                  l3716 2850  
                                l3708 2838                                  l3396 2342  
                                l3388 2306                                  l2692 2458  
                                l2596 207E                                  l2588 2010  
                                l2668 2BAE                                  l2772 18FE  
                                l2756 1862                                  l2764 18C4  
                                l2748 17D8                                  l2676 2C2C  
                                l2684 2962                                  l2844 1BFA  
                                l2836 1BAE                                  l2828 1B40  
                                l2916 1540                                  l2924 15C6  
                                l2940 1632                                  l3820 0F06  
                                l3644 0DD2                                  l3660 0E4C  
                                l3636 0D6C                                  l3628 0CAA  
                                l3580 0BAA                                  l3572 0B9E  
                                l3564 0B74                                  l3556 0B32  
                                l3548 0B00                                  l3492 0996  
                                l3484 0972                                  l3476 0912  
                                l3468 08EC                                  l3732 2CBC  
                                l3724 2CA2                                  l2862 29DC  
                                l2854 29B0                                  l2950 2EC0  
                                l3718 2856                                  l2870 2EA0  
                                l3822 2B90                                  l2694 246C  
                                l2598 2080                                  l2774 190A  
                                l2766 18D6                                  l2758 1880  
                                l2686 2974                                  l2838 1BCE  
                                l2790 19A2                                  l2782 194C  
                                l2942 1656                                  l2926 15EA  
                                l2934 1618                                  l2918 154E  
                                l3662 0E56                                  l3654 0E2C  
                                l3646 0DEE                                  l3638 0D76  
                                l3590 0BE0                                  l3582 0BAE  
                                l3574 0BA0                                  l3566 0B80  
                                l3558 0B3A                                  l3486 0984  
                                l3478 092E                                  l3726 2CA6  
                                l3750 2BFA                                  ?_pad 0011  
                                l2856 29B8                                  l2848 298C  
                                l2952 2EC6                                  l2960 2D90  
                                l2864 2F0A                                  l2880 2EB8  
                                l2872 2EA4                                  l3824 1E8E  
                                l2696 2478                                  l2776 1912  
                                l2768 18E6                                  l2792 19AA  
                                l2784 195C                                  l2936 1626  
                                l2928 15F8                                  l3680 0ED8  
                                l3656 0E3E                                  l3648 0DF6  
                                l3672 0EA0                                  l3592 0BE4  
                                l3584 0BB8                                  l3576 0BA2  
                                l3568 0B9A                                  l3496 09A0  
                                l3488 0988                                  l3728 2CB0  
                                l3752 2BFE                                  l2858 29C6  
                                l2954 2EC8                                  l2970 2DA6  
                                l2962 2D92                                  l2866 2EF6  
                                l2874 2EB2                                  l2698 2484  
                                l2778 1922                                  l2794 19CA  
                                l2786 195E                                  l2890 13A4  
                                l3682 0EE2                                  l3666 0E84  
                                l3594 0BFE                                  l3586 0BC4  
                                l3578 0BA6                                  l3674 0EBA  
                                l3498 09B0                                  l3754 2C02  
                                l3746 2BEE                                  l2956 2ED8  
                                l2948 2EBE                                  l2972 2DAC  
                                l2964 2D9A                                  l2980 2C7E  
                                l2868 2E9C                                  l2796 19D2  
                                l2788 1978                                  l2892 13A8  
                                l2884 1360                                  l3676 0EBE  
                                l3668 0E96                                  l3596 0C1C  
                                l3588 0BDA                                  l3756 2C0C  
                                l3748 2BF6                                  l3694 27F4  
                                l2974 2DAE                                  l2966 2D9C  
                                l2958 2D84                                  l2982 2C8E  
                                l2990 2DF2                                  l2798 19DA  
                                l2894 13CC                                  l2886 1384  
                                l3678 0ED2                                  l3598 0C3A  
                                l3758 2C18                                  l3696 27FA  
                                l2976 2DB6                                  l2968 2DA4  
                                l2984 2C96                                  l2896 13FE  
                                l2888 1392                                  l3688 0EF2  
                                l3698 2808                                  l2986 2C9E  
                                l2978 2C6A                                  l2994 2E16  
                                l2998 2E20                                  _ADON 007E10  
                                STR_1 0812                                  STR_2 0820  
                                STR_3 083B                                  STR_4 084F  
       __end_ofKeypad_Key_Press@F3795 0812                                  STR_5 0873  
                                STR_6 0861                                  STR_7 085C  
                                STR_8 086D                                  STR_9 0827  
                                u2000 1F74                                  u2001 1F70  
                                u2010 1FA6                                  u2011 1FA2  
                                u2100 2196                                  u2021 1FD0  
                                u2101 2192                                  u2030 1FF4  
                                u2110 21C4                                  u2031 1FF0  
                                u2111 21C0                                  u3000 1E0E  
                                u2040 201E                                  u2120 220C  
                                u2200 2C60                                  u3001 1E0A  
                                u2041 201A                                  u2121 2208  
                                u2201 2C5A                                  u3010 1E42  
                                u2050 205E                                  u2130 260A  
                                u2210 2C62                                  u3011 1E3E  
                                u2051 205A                                  u2131 2606  
                                u3100 0FB2                                  u3020 1E5E  
                                u2300 2510                                  u2060 20A8  
                                u2140 262C                                  u2220 295C  
                                u3101 0FAE                                  u3021 1E5A  
                                u2301 250C                                  u2061 20A4  
                                u2141 2628                                  u2221 2956  
                                u3110 0FC4                                  u3030 1F12  
                                u2070 20FC                                  u2150 2682  
                                u2310 169A                                  u2230 295E  
                                u3111 0FC0                                  u3031 1F0C  
                                u2071 20F8                                  u2151 267E  
                                u2311 1694                                  u3200 1264  
                                u3120 0FD4                                  u3040 1F14  
                                u2080 212E                                  u2160 2692  
                                u2400 189A                                  u2320 169C  
                                u2240 2974                                  _LATD 000F8C  
                                u3201 1260                                  u3121 0FD0  
                                u2081 212A                                  u2161 268E  
                                u2401 1896                                  u2241 2970  
                                u2250 2F40                                  u3210 1278  
                                u3130 100A                                  u3050 1F2A  
                                u2090 216C                                  u2170 2BC8  
                                u2410 18B4                                  u2330 16B2  
                                u2251 2F3C                                  u3211 1274  
                                u3131 1006                                  u3051 1F26  
                                u2091 2168                                  u2171 2BC4  
                                u2411 18B0                                  u2331 16AE  
                                u3300 244E                                  u3220 1292  
                                u3140 101A                                  u3060 1F3C  
                                u2260 246C                                  u2420 18C4  
                                u2340 16E2                                  u2180 2D42  
                                u2500 1A4E                                  u3301 244A  
                                u3221 128E                                  u3141 1016  
                                u3061 1F38                                  u2261 2468  
                                u2421 18C0                                  u2341 16DE  
                                u2181 2D3C                                  u2501 1A48  
                                u3230 12DA                                  u3150 1194  
                                u3070 0F50                                  u3310 2264  
                                u2270 2492                                  u2430 18D6  
                                u2350 16FE                                  u2190 2D44  
                                u2510 1A50                                  u3231 12D6  
                                u3071 0F4C                                  u3311 2260  
                                u2271 248E                                  u2431 18D2  
                                u2351 16FA                                  u3240 1308  
                                u3160 11EE                                  u3080 0F62  
                                u3320 2298                                  u3400 1CA0  
                                u2280 24B2                                  u2440 18E6  
                                u2360 172C                                  u2600 1BAE  
                                u2520 1A66                                  u3241 1304  
                                u3161 11EA                                  u3081 0F5E  
                                u3401 1C9C                                  u2281 24AE  
                                u2441 18E2                                  u2361 1728  
                                u2601 1BAA                                  u2521 1A62  
                                u3250 1342                                  u3170 120E  
                                u3090 0F72                                  u3330 22C6  
                                u3410 1CF6                                  u2290 2500  
                                u2450 18FE                                  u2370 173A  
                                u2610 1BBE                                  u2530 1A9A  
                                u3251 133E                                  u3171 120A  
                                u3155 118A                                  u3091 0F6E  
                                u3331 22C2                                  u3411 1CF2  
                                u2291 24FC                                  u2451 18FA  
                                u2371 1736                                  u2611 1BBA  
                                u2531 1A94                                  u3260 2382  
                                u3180 1220                                  u3340 22DA  
                                u3420 1D40                                  u2380 1862  
                                u2620 1BCE                                  u2540 1A9C  
                                u2460 195C                                  u2700 1384  
                                u3500 08CE                                  u3261 237E  
                                u3181 121C                                  u3341 22D6  
                                u3325 228E                                  u3421 1D3C  
                                u2381 185E                                  u2621 1BCA  
                                u2461 1958                                  u2701 1380  
                                u2630 299A                                  u3270 23C0  
                                u3190 124E                                  u3350 2302  
                                u3430 1D5E                                  u2390 1880  
                                u2550 1AB2                                  u2470 1978  
                                u2710 13CC                                  u3510 08E4  
                                u2631 2996                                  u3271 23BC  
                                u3191 124A                                  u3351 22FE  
                                u3431 1D5A                                  u2391 187C  
                                u2551 1AAE                                  u2471 1974  
                                u2711 13C8                                  u3511 08E0  
                                u2640 29B0                                  u2800 2E12  
                                u3280 23DE                                  u3360 2322  
                                u3440 1D6E                                  u1920 2542  
                                u2560 1B1A                                  u2480 19A2  
                                u2720 143E                                  u3600 0A22  
                                u3520 093E                                  u2641 29AC  
                                u2801 2E0E                                  u3281 23DA  
                                u3361 231E                                  u3441 1D6A  
                                u1921 253E                                  u2481 199E  
                                u2721 143A                                  u3601 0A1E  
                                u3521 093A                                  u2650 29C6  
                                u2810 2E30                                  u3290 23FE  
                                u3370 2332                                  u3450 1D7C  
                                u1930 2554                                  u2570 1B5C  
                                u2490 1A04                                  u2730 1462  
                                u3610 0A50                                  u3530 096C  
                                u2651 29C2                                  u2811 2E2C  
                                u3291 23FA                                  u3371 232E  
                                u3451 1D78                                  u1931 2550  
                                u2571 1B58                                  u2491 1A00  
                                u2731 145E                                  u3611 0A4A  
                                u3531 0966                                  u2660 29DC  
                                u2900 27AE                                  u2820 2E40  
                                u3460 1DB6                                  u3380 1C36  
                                u1940 257C                                  u2580 1B7A  
                                u2740 1506                                  u3700 0B6A  
                                u3620 0A52                                  u3540 096E  
                                u2661 29D8                                  u2821 2E3C  
                                u3461 1DB2                                  u3381 1C32  
                                u1941 2578                                  u2581 1B76  
                                u2565 1B08                                  u2741 1502  
                                u3701 0B66                                  u2910 27E2  
                                u2670 2F1C                                  u3470 1DC4  
                                u3390 1C44                                  u2830 2D7A  
                                u1950 25B2                                  u2590 1B94  
                                u2750 152A                                  u3710 0DB4  
                                u3630 0A68                                  u3550 0984  
                                u2671 2F18                                  u3471 1DC0  
                                u3391 1C40                                  u2831 2D74  
                                u1951 25AE                                  u2591 1B90  
                                u2751 1526                                  u3711 0DB0  
                                u3631 0A64                                  u3551 0980  
                                u2920 27F2                                  u2680 2F08  
                                u2840 2D7C                                  u1960 2B68  
                                u2760 15EA                                  u3720 0DD2  
                                u3640 0A94                                  u3560 09B0  
                                u3480 089E                                  u2921 27EE  
                                u2681 2F04                                  u1961 2B64  
                                u2761 15E6                                  u3721 0DCE  
                                u3641 0A90                                  u3561 09AC  
                                u3481 089A                                  u2930 2F2E  
                                u2770 2C7A                                  u2690 2EB2  
                                u2850 2AA6                                  u1970 2DE2  
                                u3730 0DEE                                  u3650 0AA6  
                                u3570 09DE                                  u3490 08CC  
                                u2931 2F2A                                  u2907 27A4  
                                u2771 2C76                                  u2691 2EAE  
                                u2851 2AA2                                  u1971 2DDE  
                                u3731 0DEA                                  u3651 0AA2  
                                u3571 09D8                                  u3491 08C6  
                                u2940 26CE                                  u2780 2C8E  
                                u2860 2AD4                                  u1980 2D0A  
                                u3740 0E1A                                  u3660 0AEE  
                                u3580 09E0                                  u2917 27D8  
                                u2781 2C8A                                  u2861 2AD0  
                                u1981 2D04                                  u3741 0E16  
                                u3661 0AEA                                  u2950 26FC  
                                u2790 2E02                                  u1990 2D0C  
                                u2870 2922                                  u3750 0E2C  
                                u3670 0B00                                  u3590 09F6  
                                u2951 26F8                                  u2791 2DFE  
                                u2871 291E                                  u3751 0E28  
                                u3671 0AFC                                  u3591 09F2  
                                u2960 2712                                  u2880 2876  
                                u3760 0E72                                  u3680 0B32  
                                u2961 270E                                  u2881 2872  
                                u3761 0E6E                                  u3681 0B2E  
                                u2970 2728                                  u2890 28AA  
                                u3770 0E84                                  u3690 0B56  
                                u2971 2724                                  u2891 28A6  
                                u3907 2DB0                                  u3771 0E80  
                                u3691 0B52                                  u2980 273E  
                                u3780 0EB6                                  _RCEN 007E2B  
                                u3917 2800                                  u2981 273A  
                                u3781 0EB2                                  u3837 2CA8  
                                u2990 2762                                  u3790 2CD8  
                                u3927 2814                                  u2991 275E  
                                u3847 091E                                  u3791 2CD4  
                                u3937 2828                                  u3857 0ACC  
                                u3947 2ECE                                  u3867 0B8C  
                                u3877 0BD0                                  u3887 0BF0  
                                u3897 2D9E                                  _RSEN 007E29  
                                abs@a 0013                     ?_Lcd_Write_String 0005  
                                _dbuf 00CC                                  _atoi 1DD8  
                                _ctoa 2458                                  _main 2BEE  
                                _dtoa 166A                       ?_RTC_Read_Clock 0001  
                                _hour 00C4                      __end_of_I2C_Nack 2F0A  
                                _prec 00BE                      __end_of_I2C_Init 2EF6  
                    __end_of_I2C_Read 2CA2                                  _nout 00BA  
                                pad@i 0018                                  pad@p 0015  
                                fsr1h 000FE2                                  fsr2h 000FDA  
                                indf1 000FE7                                  indf2 000FDF  
                                fsr1l 000FE1                                  pad@w 001A  
                                fsr2l 000FD9                                  _xtoa 194C  
                    __end_of_I2C_Stop 2F32                                  prodh 000FF4  
                                prodl 000FF3                                  start 0000  
                  ??_Lcd_Write_String 0007                       __end_of_Lcd_Cmd 2EDC  
                        ___param_bank 000000      RTC_Read_Clock@read_clock_address 0004  
                               ??_abs 0015                                 ??_pad 0017  
                       ___fltol@sign1 0009                       __end_of___aodiv 20EA  
                               ?_atoi 0008                                 ?_ctoa 000A  
                               ?_main 0001                                 ?_dtoa 001C  
                     __end_of___aomod 224E                                 _ACKEN 007E2C  
                               _ACKDT 007E2D                                 STR_10 0865  
                     __end_of___flmul 1360                       __end_of___fltol 2354  
                               ?_xtoa 001C                         ??_Keypad_Init 0001  
                        vfpfcnvrt@fmt 0045                          vfpfcnvrt@llu 0055  
                               _SPBRG 000FAF                                 _PORTD 000F83  
             __size_of_Lcd_Set_Cursor 0066                                 _TRISA 000F92  
                               _TRISB 000F93                                 _TRISD 000F95  
                               _SSPIE 007CEB                                 _SSPIF 007CF3  
                               _TXREG 000FAD                                 _flags 00C0  
                               _fputc 2530                       __end_of_isalpha 2C68  
                               _fputs 2B26                       __end_of_isdigit 2D82  
                               _tecla 00CB                     __end_of_I2C_Ready 2F44  
                               atoi@n 0015                                 pad@fp 0011  
                               atoi@s 0008                                 _width 00BC  
                               ctoa@c 000C                                 _putch 2F60  
                               ctoa@l 000E                                 ctoa@w 0010  
                               dtoa@d 001E                                 dtoa@i 003E  
                               dtoa@n 0036                                 dtoa@p 0030  
                               dtoa@s 0034                                 dtoa@w 0032  
                     __end_of_islower 2D12                       __end_of_isspace 2AE0  
                   __end_of_I2C_Start 2E1E                     __end_of_I2C_Write 2EBC  
                     __end_of_isupper 2D4A                                 tablat 000FF5  
                               status 000FD8                       __end_of_sprintf 2A8E  
                               xtoa@c 0041                                 xtoa@d 001E  
                               xtoa@i 003F                                 xtoa@n 0037  
                               xtoa@p 0033                                 xtoa@w 0035  
                               xtoa@x 0026                       __end_of_toupper 298A  
                   _activar_seguridad 0878                      __end_of_Lcd_Init 2864  
                        _toupper$1434 000D                      __end_of_Lcd_Port 29E6  
                  ?_activar_seguridad 0001                       __initialization 29E6  
               activar_seguridad@mins 008E                 activar_seguridad@secs 0084  
                        __end_of_atoi 1F62                          __end_of_ctoa 2530  
                        __end_of_main 2C2C                          __end_of_dtoa 194C  
                        __end_of_xtoa 1C24                    activar_seguridad@i 00B6  
                           ??_I2C_Ack 0001                   ??_activar_seguridad 0076  
                              ??_atoi 000A                                ??_ctoa 000D  
                              ??_main 0060                                ??_dtoa 0026  
                  __size_of_Lcd_Clear 000E                                ??_xtoa 0027  
                       __activetblptr 000002           Keypad_Key_Press@keypad_deco 0001  
                              _ADCON0 000FC2                                _ADCON1 000FC1  
                              _ADCON2 000FC0                                ?_fputc 0001  
                              ?_fputs 000A                                _ADRESH 000FC4  
                              ?_putch 0001                   __end_of_Keypad_Init 2F60  
           __end_of_activar_seguridad 0F36                             ??_Lcd_Cmd 0002  
             __size_of_Lcd_Write_Char 0038                                _SSPADD 000FC8  
                              _TRISB0 007C98                                _TRISB1 007C99  
                              _SSPBUF 000FC9                      __end_of___xxtofl 1DD8  
                        vfprintf@cfmt 005E                                ___flge 2354  
                           ??___aodiv 0011                             ??___aomod 0011  
                              ___wmul 2E74                 __end_of_securityHouse 2CDA  
                           ??___flmul 001C                             ??___fltol 0005  
                              _getCad 2B6A             __size_of_Keypad_Key_Press 00B6  
                              clear_0 2A2C                    _I2C_Repeated_Start 2E1E  
                              pad@buf 0013                                ctoa@fp 000A  
                              dtoa@fp 001C                                _strlen 2DBA  
                              fputc@c 0001                                fputs@c 000E  
                              fputs@i 000F                             ?_I2C_Nack 0001  
                              fputs@s 000A                             ??_isalpha 0003  
                           ??_isdigit 0003                             ?_I2C_Init 0001  
                           ?_I2C_Read 0001                             ?_I2C_Stop 0001  
                           ??_islower 0003                          __mediumconst 0000  
                           ??_isspace 0003                                tblptrh 000FF7  
                           ??_isupper 0003                                tblptrl 000FF6  
                              tblptru 000FF8                   ?_I2C_Repeated_Start 0001  
                              putch@c 0001                      __end_of_vfprintf 292C  
                           ??_sprintf 0060                                xtoa@fp 001C  
                           ??_toupper 0009                       Lcd_Set_Cursor@a 0005  
                     Lcd_Set_Cursor@b 0004                       Lcd_Set_Cursor@y 0007  
                     Lcd_Set_Cursor@z 0006                            ___flge@ff1 0001  
                          ___flge@ff2 0005                          ___xxtofl@arg 0010  
                        ___xxtofl@exp 000F                          ___xxtofl@val 0006  
                          __accesstop 0060               __end_of__initialization 2A32  
                   __end_of_Lcd_Clear 2F52                         ___rparam_used 000001  
                          ___fltol@f1 0001                activar_seguridad@i_760 00B2  
              activar_seguridad@i_761 00B4                  ??_I2C_Repeated_Start 0002  
                      __pcstackCOMRAM 0001                activar_seguridad@hours 0098  
                        __pidataBANK0 2F52                          __pidataBANK1 2E4C  
                       __end_of_fputc 25FA                         __end_of_fputs 2B6A  
                       __end_of_putch 2F62                        _Lcd_Set_Cursor 2864  
                          ??_I2C_Nack 0001                            ??_I2C_Init 0001  
                          ??_I2C_Read 0001                           _Keypad_Init 2F5A  
                          ??_I2C_Stop 0001                             ?_Lcd_Init 0001  
                           ?_Lcd_Port 0001                      ??_RTC_Read_Clock 0003  
                             ??_fputc 0005                               ??_fputs 000E  
                             ??_putch 0001                            __pbssBANK0 00BA  
          __size_of_activar_seguridad 06BE                          I2C_Read@flag 0001  
                             ?___flge 0001                        I2C_Read@buffer 0002  
                             ?___wmul 0001                               ?_getCad 0001  
                             _I2C_Ack 2F0A                               _ACKSTAT 007E2E  
           __size_of_Lcd_Write_String 007E                __end_of_Lcd_Set_Cursor 28CA  
                             ?_strlen 0001                             ?___xxtofl 0006  
                             _GO_DONE 007E11                            _buffer_TX2 0100  
                  __size_of_vfpfcnvrt 030A                            ??_Lcd_Init 0004  
                          ??_Lcd_Port 0001                               _SSPCON1 000FC6  
                             _SSPCON2 000FC5                               _SSPSTAT 000FC7  
                      _Lcd_Write_Char 2D82                               _Lcd_Cmd 2EBC  
               Keypad_Key_Press@F3795 0801                             _I2C_Ready 2F32  
                           _I2C_Start 2DF0                             _I2C_Write 2E9A  
                             __Hparam 0000                               __Lparam 0000  
                     __size_of___flge 0104                               ___aodiv 1F62  
                          _estado_dia 00F6                               ___aomod 20EA  
                             ___flmul 0F36                               ___fltol 224E  
                     __size_of___wmul 0026                       __size_of_getCad 0044  
                           ?_vfprintf 0060                      _Keypad_Key_Press 26C0  
                        __psmallconst 0800                               __pcinit 29E6  
                             __ramtop 0800                       ?_Lcd_Set_Cursor 0004  
                             __ptext0 2BEE                               __ptext1 2CA2  
                             __ptext2 0878                               __ptext3 2A3C  
                             __ptext4 28CA                               __ptext5 1360  
                             __ptext6 194C                               __ptext7 292C  
                             __ptext8 2CDA                               __ptext9 2D12  
                     __size_of_strlen 0036                          __size_of_abs 0040  
                        __size_of_pad 00C6                               _isalpha 2C2C  
                             _isdigit 2D4A                            ??___xxtofl 000A  
                             _islower 2CDA                               _isspace 2A8E  
                             _retardo 00F4                               _isupper 2D12  
                             atoi@neg 000E                               _sprintf 2A3C  
              __end_of_Lcd_Write_Char 2DBA                               _toupper 292C  
                end_of_initialization 2A32                               fputc@fp 0003  
                       __Lmediumconst 0000                               fputs@fp 000C  
                          ?_I2C_Ready 0001          activar_seguridad@temperatura 00AE  
                          ?_I2C_Start 0001                            ?_I2C_Write 0001  
                   __end_of_vfpfcnvrt 166A                             _RCSTAbits 000FAB  
                             postdec1 000FE5                               postdec2 000FDD  
                             postinc0 000FEE                               postinc1 000FE6  
                             postinc2 000FDE                       _aux_contrasenia 00EC  
                           Lcd_Port@a 0001                            ??_vfprintf 005E  
                             strlen@a 0003                               strlen@s 0001  
                           _PORTAbits 000F80                             _PORTBbits 000F81  
                           _PORTDbits 000F83                         ___xxtofl@sign 000E  
                           _TRISCbits 000F94                     __size_of_I2C_Nack 0014  
                   __size_of_I2C_Init 001A                     __size_of_I2C_Read 003A  
                   __size_of_I2C_Stop 0014                       ?_Lcd_Write_Char 0001  
                      _estado_teclado 00CA                     Lcd_Write_String@a 0005  
                   Lcd_Write_String@i 0009                           ___flmul@grs 0021  
                           _TXSTAbits 000FAC                             _Lcd_Clear 2F44  
                      __end_of___flge 2458                           vfpfcnvrt@ap 0047  
                         vfpfcnvrt@fp 0043                           vfpfcnvrt@ll 004D  
                      __end_of___wmul 2E9A                           _BAUDCONbits 000FB8  
                    _Lcd_Write_String 2776                        __end_of_getCad 2BAE  
                        ?_Keypad_Init 0001                        __end_of_strlen 2DF0  
                 start_initialization 29E6                           __end_of_abs 2BEE  
                         __end_of_pad 26C0  I2C_Repeated_Start@slave_read_address 0002  
              __size_of_securityHouse 0038                     __size_of_Lcd_Init 0070  
                   __size_of_Lcd_Port 005C                           ??_I2C_Ready 0001  
                         ??_I2C_Start 0002                           ??_I2C_Write 0001  
                         vfprintf@fmt 0062           __size_of_I2C_Repeated_Start 002E  
                          ?_Lcd_Clear 0001                              ??___flge 0009  
                            ??___wmul 0005                              ??_getCad 0003  
                         __pdataBANK0 00F0                           __pdataBANK1 0100  
                            ?_I2C_Ack 0001                       Lcd_Write_Char@a 0004  
                     Lcd_Write_Char@y 0003                              ??_strlen 0003  
                           ___flmul@a 0018                             ___flmul@b 0014  
                       __pcstackBANK0 0060                      ___aodiv@dividend 0001  
                   __size_of___xxtofl 01B4              __end_of_Keypad_Key_Press 2776  
                            ?_Lcd_Cmd 0001                             _atoi$1222 0010  
                           _atoi$1223 0014                             _atoi$1224 0012  
                           _dtoa$1337 002E                      ??_Lcd_Set_Cursor 0005  
                            ?___aodiv 0001                              ?___aomod 0001  
                    ___aodiv@quotient 0013                              ?___flmul 0014  
                            ?___fltol 0001                         _securityHouse 2CA2  
                           _buffer_TX 0115                     __size_of_vfprintf 0062  
                         __smallconst 0800                              _I2C_Nack 2EF6  
                            ?_isalpha 0001                              ?_isdigit 0001  
                            _I2C_Init 2EDC                              _I2C_Read 2C68  
                            _I2C_Stop 2F1E                              ?_islower 0001  
                            ?_isspace 0001                              ?_isupper 0001  
                Keypad_Key_Press@fila 0014                              ?_sprintf 0066  
                      __size_of_fputc 00CA                        __size_of_fputs 0044  
                            ?_toupper 0007                        __size_of_putch 0002  
                      ___wmul@product 0005               __size_of_RTC_Read_Clock 0046  
                            Lcd_Cmd@a 0003                           ??_Lcd_Clear 0004  
                      ?_securityHouse 00B8                             _vfpfcnvrt 1360  
                           _xtoa$1348 002F                             _xtoa$1349 0031  
                    __size_of_I2C_Ack 0014                     ___wmul@multiplier 0001  
                    ??_Lcd_Write_Char 0002                          _isspace$1240 0007  
                            _Lcd_Init 27F4                  __size_of_Keypad_Init 0006  
                            _Lcd_Port 298A                           _contrasenia 00F0  
                          vfpfcnvrt@c 005D                             copy_data0 29FA  
                           copy_data1 2A1A          I2C_Start@slave_write_address 0002  
            __end_of_Lcd_Write_String 27F4                      __size_of_Lcd_Cmd 0020  
                            __Hrparam 0000                            vfprintf@ap 0064  
                            __Lrparam 0000                            vfprintf@fp 0060  
                       I2C_Write@data 0001                      __size_of___aodiv 0188  
                    __size_of___aomod 0164                      __size_of___flmul 042A  
                    __size_of___fltol 0106                            ?_vfpfcnvrt 0043  
                     ___aodiv@divisor 0009                       ___aodiv@counter 0011  
                          sprintf@fmt 0068                              ___xxtofl 1C24  
                    __size_of_isalpha 003C                      __size_of_isdigit 0038  
                    __size_of_islower 0038                      __size_of_isspace 0052  
                            __ptext10 2C2C                              __ptext11 166A  
                            __ptext20 2F60                              __ptext12 25FA  
                            __ptext21 2B6A                              __ptext13 2DBA  
                            __ptext30 2AE0                              __ptext22 1DD8  
                            __ptext14 2B26                              __ptext31 2DF0  
                            __ptext23 2A8E                              __ptext15 2BAE  
                            __ptext40 2864                              __ptext32 2E1E  
                            __ptext24 2D4A                              __ptext16 20EA  
                            __ptext41 2F44                              __ptext33 2E9A  
                            __ptext25 2E74                              __ptext17 1F62  
                            __ptext42 26C0                              __ptext34 2C68  
                            __ptext26 1C24                              __ptext18 2458  
                            __ptext43 2F1E                              __ptext35 2F32  
                            __ptext27 224E                              __ptext19 2530  
                            __ptext44 2EDC                              __ptext36 2EF6  
                            __ptext28 0F36                              __ptext45 27F4  
                            __ptext37 2F0A                              __ptext29 2354  
                            __ptext46 2EBC                              __ptext38 2776  
                            __ptext47 298A                              __ptext39 2D82  
                            __ptext48 2F5A                      __size_of_isupper 0038  
                            _contador 00C2                      __size_of_sprintf 0052  
                    __size_of_toupper 005E                   Keypad_Key_Press@tec 0012  
                       __size_of_atoi 018A                         __size_of_ctoa 00D8  
                       __size_of_main 003E                         __size_of_dtoa 02E2  
                       __size_of_xtoa 02D8                           getCad@canal 0005  
                     ??_securityHouse 0060                              _vfprintf 28CA  
                    ___aomod@dividend 0001                              isalpha@c 0001  
                            isdigit@c 0001                    Lcd_Write_Char@temp 0002  
                           sprintf@ap 006E          activar_seguridad@Temperatura 007A  
                   ?_Keypad_Key_Press 0001                              islower@c 0001  
                            isspace@c 0001                    ??_Keypad_Key_Press 0001  
          __end_of_I2C_Repeated_Start 2E4C                              isupper@c 0001  
                      _RTC_Read_Clock 2AE0                       ___aomod@divisor 0009  
                         ??_vfpfcnvrt 0049                       ___aomod@counter 0011  
                  Lcd_Set_Cursor@temp 0008                              sprintf@f 0070  
                            sprintf@s 0066                    securityHouse@valor 00B8  
                            toupper@c 0007                           _SSPCON2bits 000FC5  
              _activar_seguridad$1687 00A2                          ___aodiv@sign 0012  
              __end_of_RTC_Read_Clock 2B26                 _activar_seguridad$710 00A8  
               _activar_seguridad$711 00AA                 _activar_seguridad$712 00AC  
               _activar_seguridad$706 00A6                          ___aomod@sign 0012  
